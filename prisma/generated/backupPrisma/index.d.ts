
/**
 * Client
**/

import * as runtime from './runtime';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : never : never
};


/**
 * Model Admin
 */

export type Admin = {
  id: string
  firebaseUid: string
  createdAt: Date
  username: string
}

/**
 * Model BodyArea
 */

export type BodyArea = {
  id: string
  createdAt: Date
  name: string
  altNames: string | null
  frontBack: BodyAreaFrontBack
  upperLower: BodyAreaUpperLower
}

/**
 * Model BodyAreaMoveScore
 */

export type BodyAreaMoveScore = {
  createdAt: Date
  moveId: string
  bodyAreaId: string
  score: number
}

/**
 * Model Equipment
 */

export type Equipment = {
  id: string
  createdAt: Date
  name: string
  altNames: string | null
  imageUrl: string | null
  loadAdjustable: boolean
}

/**
 * Model GymProfile
 */

export type GymProfile = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
  postcode: string | null
  bodyweightOnly: boolean
}

/**
 * Model LoggedWorkout
 */

export type LoggedWorkout = {
  id: string
  name: string
  summary: string | null
  description: string | null
  createdAt: Date
  completedOn: Date
  completedById: string
  notes: string | null
  videoUrl: string | null
  videoThumbUrl: string | null
  imageUrl: string | null
  duration: number | null
  workoutTypeId: string
  originalWorkoutId: string | null
  scheduledWorkoutId: string | null
  gymProfileId: string | null
  workoutProgramEnrolmentId: string | null
  workoutProgramWorkoutId: string | null
}

/**
 * Model Move
 */

export type Move = {
  id: string
  createdAt: Date
  archived: boolean
  createdById: string | null
  scope: MoveScope
  name: string
  searchTerms: string | null
  description: string | null
  demoVideoUrl: string | null
  demoVideoThumbUrl: string | null
  moveTypeId: string | null
  validRepTypes: WorkoutMoveRepType[]
}

/**
 * Model MoveProfile
 */

export type MoveProfile = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
}

/**
 * Model MoveType
 */

export type MoveType = {
  id: string
  createdAt: Date
  name: string
  description: string
  imageUrl: string
}

/**
 * Model ProgressJournal
 */

export type ProgressJournal = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
}

/**
 * Model ProgressJournalEntry
 */

export type ProgressJournalEntry = {
  id: string
  createdAt: Date
  notes: string | null
  voiceNoteUrl: string | null
  bodyweight: number | null
  moodScore: number | null
  energyScore: number | null
  stressScore: number | null
  motivationScore: number | null
  progressPhotoUrls: string[]
  progressJournalId: string
}

/**
 * Model ProgressJournalGoal
 */

export type ProgressJournalGoal = {
  id: string
  createdAt: Date
  name: string
  description: string | null
  deadline: Date | null
  completedDate: Date | null
  progressJournalId: string
}

/**
 * Model ProgressJournalGoalTag
 */

export type ProgressJournalGoalTag = {
  id: string
  createdAt: Date
  tag: string
  hexColor: string
  userId: string
}

/**
 * Model ScheduledWorkout
 */

export type ScheduledWorkout = {
  id: string
  createdAt: Date
  userId: string
  notes: string | null
  scheduledAt: Date
  workoutId: string | null
  loggedWorkoutId: string | null
  gymProfileId: string | null
}

/**
 * Model TrainerAccount
 */

export type TrainerAccount = {
  id: string
  createdAt: Date
  userId: string
}

/**
 * Model User
 */

export type User = {
  id: string
  firebaseUid: string
  createdAt: Date
  hasOnboarded: boolean
  userProfileScope: UserProfileScope
  avatarUrl: string | null
  introVideoUrl: string | null
  introVideoThumbUrl: string | null
  coverImageUrl: string | null
  displayName: string | null
  firstname: string | null
  lastname: string | null
  themePreference: ThemePreference
  bio: string | null
  tagline: string | null
  birthdate: Date | null
  gender: Gender | null
  height: number | null
  weight: number | null
  townCity: string | null
  countryCode: string | null
  instagramUrl: string | null
  tiktokUrl: string | null
  youtubeUrl: string | null
  snapUrl: string | null
  linkedinUrl: string | null
  unitSystem: UnitSystem
}

/**
 * Model UserBenchmark
 */

export type UserBenchmark = {
  id: string
  createdAt: Date
  createdById: string
  name: string
  description: string | null
  reps: number
  repType: WorkoutMoveRepType
  load: number | null
  loadUnit: LoadUnit
  distanceUnit: DistanceUnit
  scoreType: BenchmarkScoreType
  moveId: string
}

/**
 * Model UserBenchmarkEntry
 */

export type UserBenchmarkEntry = {
  id: string
  createdAt: Date
  score: number
  notes: string | null
  videoUrl: string | null
  imageUrl: string | null
  userBenchmarkId: string
}

/**
 * Model UserCollection
 */

export type UserCollection = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
}

/**
 * Model Workout
 */

export type Workout = {
  id: string
  createdAt: Date
  createdById: string | null
  name: string
  summary: string | null
  description: string | null
  demoVideoUrl: string | null
  demoVideoThumbUrl: string | null
  youtubeVideoUrl: string | null
  spotifyAudio: string | null
  imageUrl: string | null
  timecap: number | null
  builderData: Prisma.JsonValue | null
  difficultyLevel: number
  scope: ContentAccessScope
  workoutTypeId: string
}

/**
 * Model WorkoutGoal
 */

export type WorkoutGoal = {
  id: string
  createdAt: Date
  name: string
  description: string
  placeholderImageUrl: string | null
}

/**
 * Model WorkoutMove
 */

export type WorkoutMove = {
  id: string
  createdAt: Date
  sortPosition: number
  repType: WorkoutMoveRepType
  reps: number | null
  distanceUnit: DistanceUnit
  loadAmount: number | null
  loadUnit: LoadUnit
  duration: number | null
  description: string | null
  notes: string | null
  moveId: string
  selectedEquipmentId: string | null
  workoutSectionId: string
}

/**
 * Model WorkoutProgram
 */

export type WorkoutProgram = {
  id: string
  createdAt: Date
  name: string
  description: string | null
  imageUrl: string | null
  videoUrl: string | null
  videoThumbUrl: string | null
  youtubeVideoUrl: string | null
  scope: ContentAccessScope
  createdById: string
}

/**
 * Model WorkoutProgramEnrolment
 */

export type WorkoutProgramEnrolment = {
  id: string
  createdAt: Date
  startDate: Date | null
  workoutProgramId: string
  userId: string
}

/**
 * Model WorkoutProgramReview
 */

export type WorkoutProgramReview = {
  id: string
  createdAt: Date
  score: number
  comment: string | null
  workoutProgramId: string
  userId: string
}

/**
 * Model WorkoutProgramWorkout
 */

export type WorkoutProgramWorkout = {
  id: string
  createdAt: Date
  dayNumber: number
  notes: string | null
  workoutProgramId: string
  workoutId: string
}

/**
 * Model WorkoutSection
 */

export type WorkoutSection = {
  id: string
  createdAt: Date
  sortPosition: number
  notes: string | null
  timecap: number | null
  duration: number | null
  rounds: number
  workoutId: string | null
  loggedWorkoutId: string | null
}

/**
 * Model WorkoutType
 */

export type WorkoutType = {
  id: string
  createdAt: Date
  name: string
  subtitle: string
  description: string
  placeholderImageUrl: string
  scoreType: WorkoutScoreType
}


/**
 * Enums
 */

// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

export const BodyAreaFrontBack: {
  BACK: 'BACK',
  FRONT: 'FRONT',
  BOTH: 'BOTH'
};

export type BodyAreaFrontBack = (typeof BodyAreaFrontBack)[keyof typeof BodyAreaFrontBack]


export const BodyAreaUpperLower: {
  CORE: 'CORE',
  LOWER: 'LOWER',
  UPPER: 'UPPER'
};

export type BodyAreaUpperLower = (typeof BodyAreaUpperLower)[keyof typeof BodyAreaUpperLower]


export const MoveScope: {
  STANDARD: 'STANDARD',
  CUSTOM: 'CUSTOM'
};

export type MoveScope = (typeof MoveScope)[keyof typeof MoveScope]


export const WorkoutMoveRepType: {
  REPS: 'REPS',
  CALORIES: 'CALORIES',
  DISTANCE: 'DISTANCE',
  TIME: 'TIME'
};

export type WorkoutMoveRepType = (typeof WorkoutMoveRepType)[keyof typeof WorkoutMoveRepType]


export const UserProfileScope: {
  PRIVATE: 'PRIVATE',
  PUBLIC: 'PUBLIC'
};

export type UserProfileScope = (typeof UserProfileScope)[keyof typeof UserProfileScope]


export const ThemePreference: {
  DARK: 'DARK',
  LIGHT: 'LIGHT'
};

export type ThemePreference = (typeof ThemePreference)[keyof typeof ThemePreference]


export const Gender: {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  UNSPECIFIED: 'UNSPECIFIED'
};

export type Gender = (typeof Gender)[keyof typeof Gender]


export const UnitSystem: {
  IMPERIAL: 'IMPERIAL',
  METRIC: 'METRIC'
};

export type UnitSystem = (typeof UnitSystem)[keyof typeof UnitSystem]


export const LoadUnit: {
  KG: 'KG',
  LB: 'LB',
  BODYWEIGHTPERCENT: 'BODYWEIGHTPERCENT'
};

export type LoadUnit = (typeof LoadUnit)[keyof typeof LoadUnit]


export const DistanceUnit: {
  METRES: 'METRES',
  KILOMETRES: 'KILOMETRES',
  YARDS: 'YARDS',
  MILES: 'MILES'
};

export type DistanceUnit = (typeof DistanceUnit)[keyof typeof DistanceUnit]


export const BenchmarkScoreType: {
  LOAD: 'LOAD',
  REPS: 'REPS',
  TIME: 'TIME'
};

export type BenchmarkScoreType = (typeof BenchmarkScoreType)[keyof typeof BenchmarkScoreType]


export const ContentAccessScope: {
  OFFICIAL: 'OFFICIAL',
  PUBLIC: 'PUBLIC',
  GROUP: 'GROUP',
  PRIVATE: 'PRIVATE'
};

export type ContentAccessScope = (typeof ContentAccessScope)[keyof typeof ContentAccessScope]


export const WorkoutScoreType: {
  AMREPS: 'AMREPS',
  FORTIME: 'FORTIME',
  FORLOAD: 'FORLOAD'
};

export type WorkoutScoreType = (typeof WorkoutScoreType)[keyof typeof WorkoutScoreType]


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js (ORM replacement)
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admin.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js (ORM replacement)
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admin.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<any>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

  /**
   * Executes a raw query and returns the number of affected rows
   * @example
   * ```
   * // With parameters use prisma.executeRaw``, values will be escaped automatically
   * const result = await prisma.executeRaw`UPDATE User SET cool = ${true} WHERE id = ${1};`
   * // Or
   * const result = await prisma.executeRaw('UPDATE User SET cool = $1 WHERE id = $2 ;', true, 1)
  * ```
  * 
  * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  */
  $executeRaw < T = any > (query: string | TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a raw query and returns the SELECT data
   * @example
   * ```
   * // With parameters use prisma.queryRaw``, values will be escaped automatically
   * const result = await prisma.queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'ema.il'};`
   * // Or
   * const result = await prisma.queryRaw('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'ema.il')
  * ```
  * 
  * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  */
  $queryRaw < T = any > (query: string | TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>

      /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<GlobalReject>;

  /**
   * `prisma.bodyArea`: Exposes CRUD operations for the **BodyArea** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BodyAreas
    * const bodyAreas = await prisma.bodyArea.findMany()
    * ```
    */
  get bodyArea(): Prisma.BodyAreaDelegate<GlobalReject>;

  /**
   * `prisma.bodyAreaMoveScore`: Exposes CRUD operations for the **BodyAreaMoveScore** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BodyAreaMoveScores
    * const bodyAreaMoveScores = await prisma.bodyAreaMoveScore.findMany()
    * ```
    */
  get bodyAreaMoveScore(): Prisma.BodyAreaMoveScoreDelegate<GlobalReject>;

  /**
   * `prisma.equipment`: Exposes CRUD operations for the **Equipment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Equipment
    * const equipment = await prisma.equipment.findMany()
    * ```
    */
  get equipment(): Prisma.EquipmentDelegate<GlobalReject>;

  /**
   * `prisma.gymProfile`: Exposes CRUD operations for the **GymProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GymProfiles
    * const gymProfiles = await prisma.gymProfile.findMany()
    * ```
    */
  get gymProfile(): Prisma.GymProfileDelegate<GlobalReject>;

  /**
   * `prisma.loggedWorkout`: Exposes CRUD operations for the **LoggedWorkout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LoggedWorkouts
    * const loggedWorkouts = await prisma.loggedWorkout.findMany()
    * ```
    */
  get loggedWorkout(): Prisma.LoggedWorkoutDelegate<GlobalReject>;

  /**
   * `prisma.move`: Exposes CRUD operations for the **Move** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Moves
    * const moves = await prisma.move.findMany()
    * ```
    */
  get move(): Prisma.MoveDelegate<GlobalReject>;

  /**
   * `prisma.moveProfile`: Exposes CRUD operations for the **MoveProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MoveProfiles
    * const moveProfiles = await prisma.moveProfile.findMany()
    * ```
    */
  get moveProfile(): Prisma.MoveProfileDelegate<GlobalReject>;

  /**
   * `prisma.moveType`: Exposes CRUD operations for the **MoveType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MoveTypes
    * const moveTypes = await prisma.moveType.findMany()
    * ```
    */
  get moveType(): Prisma.MoveTypeDelegate<GlobalReject>;

  /**
   * `prisma.progressJournal`: Exposes CRUD operations for the **ProgressJournal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournals
    * const progressJournals = await prisma.progressJournal.findMany()
    * ```
    */
  get progressJournal(): Prisma.ProgressJournalDelegate<GlobalReject>;

  /**
   * `prisma.progressJournalEntry`: Exposes CRUD operations for the **ProgressJournalEntry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournalEntries
    * const progressJournalEntries = await prisma.progressJournalEntry.findMany()
    * ```
    */
  get progressJournalEntry(): Prisma.ProgressJournalEntryDelegate<GlobalReject>;

  /**
   * `prisma.progressJournalGoal`: Exposes CRUD operations for the **ProgressJournalGoal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournalGoals
    * const progressJournalGoals = await prisma.progressJournalGoal.findMany()
    * ```
    */
  get progressJournalGoal(): Prisma.ProgressJournalGoalDelegate<GlobalReject>;

  /**
   * `prisma.progressJournalGoalTag`: Exposes CRUD operations for the **ProgressJournalGoalTag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournalGoalTags
    * const progressJournalGoalTags = await prisma.progressJournalGoalTag.findMany()
    * ```
    */
  get progressJournalGoalTag(): Prisma.ProgressJournalGoalTagDelegate<GlobalReject>;

  /**
   * `prisma.scheduledWorkout`: Exposes CRUD operations for the **ScheduledWorkout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ScheduledWorkouts
    * const scheduledWorkouts = await prisma.scheduledWorkout.findMany()
    * ```
    */
  get scheduledWorkout(): Prisma.ScheduledWorkoutDelegate<GlobalReject>;

  /**
   * `prisma.trainerAccount`: Exposes CRUD operations for the **TrainerAccount** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TrainerAccounts
    * const trainerAccounts = await prisma.trainerAccount.findMany()
    * ```
    */
  get trainerAccount(): Prisma.TrainerAccountDelegate<GlobalReject>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<GlobalReject>;

  /**
   * `prisma.userBenchmark`: Exposes CRUD operations for the **UserBenchmark** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserBenchmarks
    * const userBenchmarks = await prisma.userBenchmark.findMany()
    * ```
    */
  get userBenchmark(): Prisma.UserBenchmarkDelegate<GlobalReject>;

  /**
   * `prisma.userBenchmarkEntry`: Exposes CRUD operations for the **UserBenchmarkEntry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserBenchmarkEntries
    * const userBenchmarkEntries = await prisma.userBenchmarkEntry.findMany()
    * ```
    */
  get userBenchmarkEntry(): Prisma.UserBenchmarkEntryDelegate<GlobalReject>;

  /**
   * `prisma.userCollection`: Exposes CRUD operations for the **UserCollection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserCollections
    * const userCollections = await prisma.userCollection.findMany()
    * ```
    */
  get userCollection(): Prisma.UserCollectionDelegate<GlobalReject>;

  /**
   * `prisma.workout`: Exposes CRUD operations for the **Workout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Workouts
    * const workouts = await prisma.workout.findMany()
    * ```
    */
  get workout(): Prisma.WorkoutDelegate<GlobalReject>;

  /**
   * `prisma.workoutGoal`: Exposes CRUD operations for the **WorkoutGoal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutGoals
    * const workoutGoals = await prisma.workoutGoal.findMany()
    * ```
    */
  get workoutGoal(): Prisma.WorkoutGoalDelegate<GlobalReject>;

  /**
   * `prisma.workoutMove`: Exposes CRUD operations for the **WorkoutMove** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutMoves
    * const workoutMoves = await prisma.workoutMove.findMany()
    * ```
    */
  get workoutMove(): Prisma.WorkoutMoveDelegate<GlobalReject>;

  /**
   * `prisma.workoutProgram`: Exposes CRUD operations for the **WorkoutProgram** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutPrograms
    * const workoutPrograms = await prisma.workoutProgram.findMany()
    * ```
    */
  get workoutProgram(): Prisma.WorkoutProgramDelegate<GlobalReject>;

  /**
   * `prisma.workoutProgramEnrolment`: Exposes CRUD operations for the **WorkoutProgramEnrolment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutProgramEnrolments
    * const workoutProgramEnrolments = await prisma.workoutProgramEnrolment.findMany()
    * ```
    */
  get workoutProgramEnrolment(): Prisma.WorkoutProgramEnrolmentDelegate<GlobalReject>;

  /**
   * `prisma.workoutProgramReview`: Exposes CRUD operations for the **WorkoutProgramReview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutProgramReviews
    * const workoutProgramReviews = await prisma.workoutProgramReview.findMany()
    * ```
    */
  get workoutProgramReview(): Prisma.WorkoutProgramReviewDelegate<GlobalReject>;

  /**
   * `prisma.workoutProgramWorkout`: Exposes CRUD operations for the **WorkoutProgramWorkout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutProgramWorkouts
    * const workoutProgramWorkouts = await prisma.workoutProgramWorkout.findMany()
    * ```
    */
  get workoutProgramWorkout(): Prisma.WorkoutProgramWorkoutDelegate<GlobalReject>;

  /**
   * `prisma.workoutSection`: Exposes CRUD operations for the **WorkoutSection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutSections
    * const workoutSections = await prisma.workoutSection.findMany()
    * ```
    */
  get workoutSection(): Prisma.WorkoutSectionDelegate<GlobalReject>;

  /**
   * `prisma.workoutType`: Exposes CRUD operations for the **WorkoutType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutTypes
    * const workoutTypes = await prisma.workoutType.findMany()
    * ```
    */
  get workoutType(): Prisma.WorkoutTypeDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  /**
   * Prisma Client JS version: 2.17.0
   * Query Engine version: 3c463ebd78b1d21d8fdacdd27899e280cf686223
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | null | JsonObject | JsonArray

  /**
   * Same as JsonObject, but allows undefined
   */
  export type InputJsonObject = {[Key in string]?: JsonValue}
 
  export interface InputJsonArray extends Array<JsonValue> {}
 
  export type InputJsonValue = undefined |  string | number | boolean | null | InputJsonObject | InputJsonArray
   type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Buffer
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  export type Union = any

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, 'avg' | 'sum' | 'count' | 'min' | 'max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    Admin: 'Admin',
    BodyArea: 'BodyArea',
    BodyAreaMoveScore: 'BodyAreaMoveScore',
    Equipment: 'Equipment',
    GymProfile: 'GymProfile',
    LoggedWorkout: 'LoggedWorkout',
    Move: 'Move',
    MoveProfile: 'MoveProfile',
    MoveType: 'MoveType',
    ProgressJournal: 'ProgressJournal',
    ProgressJournalEntry: 'ProgressJournalEntry',
    ProgressJournalGoal: 'ProgressJournalGoal',
    ProgressJournalGoalTag: 'ProgressJournalGoalTag',
    ScheduledWorkout: 'ScheduledWorkout',
    TrainerAccount: 'TrainerAccount',
    User: 'User',
    UserBenchmark: 'UserBenchmark',
    UserBenchmarkEntry: 'UserBenchmarkEntry',
    UserCollection: 'UserCollection',
    Workout: 'Workout',
    WorkoutGoal: 'WorkoutGoal',
    WorkoutMove: 'WorkoutMove',
    WorkoutProgram: 'WorkoutProgram',
    WorkoutProgramEnrolment: 'WorkoutProgramEnrolment',
    WorkoutProgramReview: 'WorkoutProgramReview',
    WorkoutProgramWorkout: 'WorkoutProgramWorkout',
    WorkoutSection: 'WorkoutSection',
    WorkoutType: 'WorkoutType'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends boolean
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     *  * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your prisma.schema file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined; 
  export type Datasource = {
    url?: string
  }


  /**
   * Model Admin
   */


  export type AggregateAdmin = {
    count: AdminCountAggregateOutputType | null
    min: AdminMinAggregateOutputType | null
    max: AdminMaxAggregateOutputType | null
  }

  export type AdminMinAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    username: string | null
  }

  export type AdminMaxAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    username: string | null
  }

  export type AdminCountAggregateOutputType = {
    id: number | null
    firebaseUid: number | null
    createdAt: number | null
    username: number | null
    _all: number
  }


  export type AdminMinAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    username?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    username?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    username?: true
    _all?: true
  }

  export type AdminAggregateArgs = {
    /**
     * Filter which Admin to aggregate.
    **/
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
    **/
    orderBy?: Enumerable<AdminOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
    [P in keyof T & keyof AggregateAdmin]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }



  export type AdminSelect = {
    id?: boolean
    firebaseUid?: boolean
    createdAt?: boolean
    username?: boolean
  }

  export type AdminGetPayload<
    S extends boolean | null | undefined | AdminArgs,
    U = keyof S
      > = S extends true
        ? Admin
    : S extends undefined
    ? never
    : S extends AdminArgs | AdminFindManyArgs
    ?'include' extends U
    ? Admin 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Admin ?Admin [P]
  : 
     never
  } 
    : Admin
  : Admin


  type AdminCountArgs = Merge<
    Omit<AdminFindManyArgs, 'select' | 'include'> & {
      select?: AdminCountAggregateInputType | true
    }
  >

  export interface AdminDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AdminFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, AdminFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Admin'> extends True ? CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>> : CheckSelect<T, Prisma__AdminClient<Admin | null >, Prisma__AdminClient<AdminGetPayload<T> | null >>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AdminFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, AdminFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Admin'> extends True ? CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>> : CheckSelect<T, Prisma__AdminClient<Admin | null >, Prisma__AdminClient<AdminGetPayload<T> | null >>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AdminFindManyArgs>(
      args?: SelectSubset<T, AdminFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Admin>>, PrismaPromise<Array<AdminGetPayload<T>>>>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
    **/
    create<T extends AdminCreateArgs>(
      args: SelectSubset<T, AdminCreateArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
    **/
    delete<T extends AdminDeleteArgs>(
      args: SelectSubset<T, AdminDeleteArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AdminUpdateArgs>(
      args: SelectSubset<T, AdminUpdateArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AdminDeleteManyArgs>(
      args?: SelectSubset<T, AdminDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AdminUpdateManyArgs>(
      args: SelectSubset<T, AdminUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
    **/
    upsert<T extends AdminUpsertArgs>(
      args: SelectSubset<T, AdminUpsertArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): PrismaPromise<GetAdminAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__AdminClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
    /**
     * Throw an Error if a Admin can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Admin to fetch.
    **/
    where: AdminWhereUniqueInput
  }


  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
    /**
     * Throw an Error if a Admin can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Admin to fetch.
    **/
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
    **/
    orderBy?: Enumerable<AdminOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
    **/
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
    **/
    distinct?: Enumerable<AdminScalarFieldEnum>
  }


  /**
   * Admin findMany
   */
  export type AdminFindManyArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
    /**
     * Filter, which Admins to fetch.
    **/
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
    **/
    orderBy?: Enumerable<AdminOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
    **/
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
    **/
    skip?: number
    distinct?: Enumerable<AdminScalarFieldEnum>
  }


  /**
   * Admin create
   */
  export type AdminCreateArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
    /**
     * The data needed to create a Admin.
    **/
    data: XOR<AdminUncheckedCreateInput, AdminCreateInput>
  }


  /**
   * Admin update
   */
  export type AdminUpdateArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
    /**
     * The data needed to update a Admin.
    **/
    data: XOR<AdminUncheckedUpdateInput, AdminUpdateInput>
    /**
     * Choose, which Admin to update.
    **/
    where: AdminWhereUniqueInput
  }


  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs = {
    data: XOR<AdminUncheckedUpdateManyInput, AdminUpdateManyMutationInput>
    where?: AdminWhereInput
  }


  /**
   * Admin upsert
   */
  export type AdminUpsertArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
    /**
     * The filter to search for the Admin to update in case it exists.
    **/
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
    **/
    create: XOR<AdminUncheckedCreateInput, AdminCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<AdminUncheckedUpdateInput, AdminUpdateInput>
  }


  /**
   * Admin delete
   */
  export type AdminDeleteArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
    /**
     * Filter which Admin to delete.
    **/
    where: AdminWhereUniqueInput
  }


  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs = {
    where?: AdminWhereInput
  }


  /**
   * Admin without action
   */
  export type AdminArgs = {
    /**
     * Select specific fields to fetch from the Admin
    **/
    select?: AdminSelect | null
  }



  /**
   * Model BodyArea
   */


  export type AggregateBodyArea = {
    count: BodyAreaCountAggregateOutputType | null
    min: BodyAreaMinAggregateOutputType | null
    max: BodyAreaMaxAggregateOutputType | null
  }

  export type BodyAreaMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    frontBack: BodyAreaFrontBack | null
    upperLower: BodyAreaUpperLower | null
  }

  export type BodyAreaMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    frontBack: BodyAreaFrontBack | null
    upperLower: BodyAreaUpperLower | null
  }

  export type BodyAreaCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    name: number | null
    altNames: number | null
    frontBack: number | null
    upperLower: number | null
    _all: number
  }


  export type BodyAreaMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    frontBack?: true
    upperLower?: true
  }

  export type BodyAreaMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    frontBack?: true
    upperLower?: true
  }

  export type BodyAreaCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    frontBack?: true
    upperLower?: true
    _all?: true
  }

  export type BodyAreaAggregateArgs = {
    /**
     * Filter which BodyArea to aggregate.
    **/
    where?: BodyAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreas to fetch.
    **/
    orderBy?: Enumerable<BodyAreaOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: BodyAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreas from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreas.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BodyAreas
    **/
    count?: true | BodyAreaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: BodyAreaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: BodyAreaMaxAggregateInputType
  }

  export type GetBodyAreaAggregateType<T extends BodyAreaAggregateArgs> = {
    [P in keyof T & keyof AggregateBodyArea]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBodyArea[P]>
      : GetScalarType<T[P], AggregateBodyArea[P]>
  }



  export type BodyAreaSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    altNames?: boolean
    bodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
    frontBack?: boolean
    upperLower?: boolean
  }

  export type BodyAreaInclude = {
    bodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
  }

  export type BodyAreaGetPayload<
    S extends boolean | null | undefined | BodyAreaArgs,
    U = keyof S
      > = S extends true
        ? BodyArea
    : S extends undefined
    ? never
    : S extends BodyAreaArgs | BodyAreaFindManyArgs
    ?'include' extends U
    ? BodyArea  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'bodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof BodyArea ?BodyArea [P]
  : 
          P extends 'bodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['select'][P]>>  : never
  } 
    : BodyArea
  : BodyArea


  type BodyAreaCountArgs = Merge<
    Omit<BodyAreaFindManyArgs, 'select' | 'include'> & {
      select?: BodyAreaCountAggregateInputType | true
    }
  >

  export interface BodyAreaDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one BodyArea that matches the filter.
     * @param {BodyAreaFindUniqueArgs} args - Arguments to find a BodyArea
     * @example
     * // Get one BodyArea
     * const bodyArea = await prisma.bodyArea.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends BodyAreaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, BodyAreaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'BodyArea'> extends True ? CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaClient<BodyArea | null >, Prisma__BodyAreaClient<BodyAreaGetPayload<T> | null >>

    /**
     * Find the first BodyArea that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaFindFirstArgs} args - Arguments to find a BodyArea
     * @example
     * // Get one BodyArea
     * const bodyArea = await prisma.bodyArea.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends BodyAreaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, BodyAreaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'BodyArea'> extends True ? CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaClient<BodyArea | null >, Prisma__BodyAreaClient<BodyAreaGetPayload<T> | null >>

    /**
     * Find zero or more BodyAreas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BodyAreas
     * const bodyAreas = await prisma.bodyArea.findMany()
     * 
     * // Get first 10 BodyAreas
     * const bodyAreas = await prisma.bodyArea.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bodyAreaWithIdOnly = await prisma.bodyArea.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends BodyAreaFindManyArgs>(
      args?: SelectSubset<T, BodyAreaFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<BodyArea>>, PrismaPromise<Array<BodyAreaGetPayload<T>>>>

    /**
     * Create a BodyArea.
     * @param {BodyAreaCreateArgs} args - Arguments to create a BodyArea.
     * @example
     * // Create one BodyArea
     * const BodyArea = await prisma.bodyArea.create({
     *   data: {
     *     // ... data to create a BodyArea
     *   }
     * })
     * 
    **/
    create<T extends BodyAreaCreateArgs>(
      args: SelectSubset<T, BodyAreaCreateArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Delete a BodyArea.
     * @param {BodyAreaDeleteArgs} args - Arguments to delete one BodyArea.
     * @example
     * // Delete one BodyArea
     * const BodyArea = await prisma.bodyArea.delete({
     *   where: {
     *     // ... filter to delete one BodyArea
     *   }
     * })
     * 
    **/
    delete<T extends BodyAreaDeleteArgs>(
      args: SelectSubset<T, BodyAreaDeleteArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Update one BodyArea.
     * @param {BodyAreaUpdateArgs} args - Arguments to update one BodyArea.
     * @example
     * // Update one BodyArea
     * const bodyArea = await prisma.bodyArea.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends BodyAreaUpdateArgs>(
      args: SelectSubset<T, BodyAreaUpdateArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Delete zero or more BodyAreas.
     * @param {BodyAreaDeleteManyArgs} args - Arguments to filter BodyAreas to delete.
     * @example
     * // Delete a few BodyAreas
     * const { count } = await prisma.bodyArea.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends BodyAreaDeleteManyArgs>(
      args?: SelectSubset<T, BodyAreaDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more BodyAreas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BodyAreas
     * const bodyArea = await prisma.bodyArea.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends BodyAreaUpdateManyArgs>(
      args: SelectSubset<T, BodyAreaUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one BodyArea.
     * @param {BodyAreaUpsertArgs} args - Arguments to update or create a BodyArea.
     * @example
     * // Update or create a BodyArea
     * const bodyArea = await prisma.bodyArea.upsert({
     *   create: {
     *     // ... data to create a BodyArea
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BodyArea we want to update
     *   }
     * })
    **/
    upsert<T extends BodyAreaUpsertArgs>(
      args: SelectSubset<T, BodyAreaUpsertArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Count the number of BodyAreas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaCountArgs} args - Arguments to filter BodyAreas to count.
     * @example
     * // Count the number of BodyAreas
     * const count = await prisma.bodyArea.count({
     *   where: {
     *     // ... the filter for the BodyAreas we want to count
     *   }
     * })
    **/
    count<T extends BodyAreaCountArgs>(
      args?: Subset<T, BodyAreaCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BodyAreaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BodyArea.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BodyAreaAggregateArgs>(args: Subset<T, BodyAreaAggregateArgs>): PrismaPromise<GetBodyAreaAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for BodyArea.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__BodyAreaClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    bodyAreaMoveScores<T extends BodyAreaMoveScoreFindManyArgs = {}>(args?: Subset<T, BodyAreaMoveScoreFindManyArgs>): CheckSelect<T, PrismaPromise<Array<BodyAreaMoveScore>>, PrismaPromise<Array<BodyAreaMoveScoreGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * BodyArea findUnique
   */
  export type BodyAreaFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
    /**
     * Throw an Error if a BodyArea can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyArea to fetch.
    **/
    where: BodyAreaWhereUniqueInput
  }


  /**
   * BodyArea findFirst
   */
  export type BodyAreaFindFirstArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
    /**
     * Throw an Error if a BodyArea can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyArea to fetch.
    **/
    where?: BodyAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreas to fetch.
    **/
    orderBy?: Enumerable<BodyAreaOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BodyAreas.
    **/
    cursor?: BodyAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreas from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreas.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BodyAreas.
    **/
    distinct?: Enumerable<BodyAreaScalarFieldEnum>
  }


  /**
   * BodyArea findMany
   */
  export type BodyAreaFindManyArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
    /**
     * Filter, which BodyAreas to fetch.
    **/
    where?: BodyAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreas to fetch.
    **/
    orderBy?: Enumerable<BodyAreaOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BodyAreas.
    **/
    cursor?: BodyAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreas from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreas.
    **/
    skip?: number
    distinct?: Enumerable<BodyAreaScalarFieldEnum>
  }


  /**
   * BodyArea create
   */
  export type BodyAreaCreateArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
    /**
     * The data needed to create a BodyArea.
    **/
    data: XOR<BodyAreaUncheckedCreateInput, BodyAreaCreateInput>
  }


  /**
   * BodyArea update
   */
  export type BodyAreaUpdateArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
    /**
     * The data needed to update a BodyArea.
    **/
    data: XOR<BodyAreaUncheckedUpdateInput, BodyAreaUpdateInput>
    /**
     * Choose, which BodyArea to update.
    **/
    where: BodyAreaWhereUniqueInput
  }


  /**
   * BodyArea updateMany
   */
  export type BodyAreaUpdateManyArgs = {
    data: XOR<BodyAreaUncheckedUpdateManyInput, BodyAreaUpdateManyMutationInput>
    where?: BodyAreaWhereInput
  }


  /**
   * BodyArea upsert
   */
  export type BodyAreaUpsertArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
    /**
     * The filter to search for the BodyArea to update in case it exists.
    **/
    where: BodyAreaWhereUniqueInput
    /**
     * In case the BodyArea found by the `where` argument doesn't exist, create a new BodyArea with this data.
    **/
    create: XOR<BodyAreaUncheckedCreateInput, BodyAreaCreateInput>
    /**
     * In case the BodyArea was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<BodyAreaUncheckedUpdateInput, BodyAreaUpdateInput>
  }


  /**
   * BodyArea delete
   */
  export type BodyAreaDeleteArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
    /**
     * Filter which BodyArea to delete.
    **/
    where: BodyAreaWhereUniqueInput
  }


  /**
   * BodyArea deleteMany
   */
  export type BodyAreaDeleteManyArgs = {
    where?: BodyAreaWhereInput
  }


  /**
   * BodyArea without action
   */
  export type BodyAreaArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaInclude | null
  }



  /**
   * Model BodyAreaMoveScore
   */


  export type AggregateBodyAreaMoveScore = {
    count: BodyAreaMoveScoreCountAggregateOutputType | null
    avg: BodyAreaMoveScoreAvgAggregateOutputType | null
    sum: BodyAreaMoveScoreSumAggregateOutputType | null
    min: BodyAreaMoveScoreMinAggregateOutputType | null
    max: BodyAreaMoveScoreMaxAggregateOutputType | null
  }

  export type BodyAreaMoveScoreAvgAggregateOutputType = {
    score: number
  }

  export type BodyAreaMoveScoreSumAggregateOutputType = {
    score: number
  }

  export type BodyAreaMoveScoreMinAggregateOutputType = {
    createdAt: Date | null
    moveId: string | null
    bodyAreaId: string | null
    score: number
  }

  export type BodyAreaMoveScoreMaxAggregateOutputType = {
    createdAt: Date | null
    moveId: string | null
    bodyAreaId: string | null
    score: number
  }

  export type BodyAreaMoveScoreCountAggregateOutputType = {
    createdAt: number | null
    moveId: number | null
    bodyAreaId: number | null
    score: number
    _all: number
  }


  export type BodyAreaMoveScoreAvgAggregateInputType = {
    score?: true
  }

  export type BodyAreaMoveScoreSumAggregateInputType = {
    score?: true
  }

  export type BodyAreaMoveScoreMinAggregateInputType = {
    createdAt?: true
    moveId?: true
    bodyAreaId?: true
    score?: true
  }

  export type BodyAreaMoveScoreMaxAggregateInputType = {
    createdAt?: true
    moveId?: true
    bodyAreaId?: true
    score?: true
  }

  export type BodyAreaMoveScoreCountAggregateInputType = {
    createdAt?: true
    moveId?: true
    bodyAreaId?: true
    score?: true
    _all?: true
  }

  export type BodyAreaMoveScoreAggregateArgs = {
    /**
     * Filter which BodyAreaMoveScore to aggregate.
    **/
    where?: BodyAreaMoveScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreaMoveScores to fetch.
    **/
    orderBy?: Enumerable<BodyAreaMoveScoreOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: BodyAreaMoveScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreaMoveScores from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreaMoveScores.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BodyAreaMoveScores
    **/
    count?: true | BodyAreaMoveScoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: BodyAreaMoveScoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: BodyAreaMoveScoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: BodyAreaMoveScoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: BodyAreaMoveScoreMaxAggregateInputType
  }

  export type GetBodyAreaMoveScoreAggregateType<T extends BodyAreaMoveScoreAggregateArgs> = {
    [P in keyof T & keyof AggregateBodyAreaMoveScore]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBodyAreaMoveScore[P]>
      : GetScalarType<T[P], AggregateBodyAreaMoveScore[P]>
  }



  export type BodyAreaMoveScoreSelect = {
    createdAt?: boolean
    move?: boolean | MoveArgs
    moveId?: boolean
    bodyArea?: boolean | BodyAreaArgs
    bodyAreaId?: boolean
    score?: boolean
  }

  export type BodyAreaMoveScoreInclude = {
    move?: boolean | MoveArgs
    bodyArea?: boolean | BodyAreaArgs
  }

  export type BodyAreaMoveScoreGetPayload<
    S extends boolean | null | undefined | BodyAreaMoveScoreArgs,
    U = keyof S
      > = S extends true
        ? BodyAreaMoveScore
    : S extends undefined
    ? never
    : S extends BodyAreaMoveScoreArgs | BodyAreaMoveScoreFindManyArgs
    ?'include' extends U
    ? BodyAreaMoveScore  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'move'
        ? MoveGetPayload<S['include'][P]> :
        P extends 'bodyArea'
        ? BodyAreaGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof BodyAreaMoveScore ?BodyAreaMoveScore [P]
  : 
          P extends 'move'
        ? MoveGetPayload<S['select'][P]> :
        P extends 'bodyArea'
        ? BodyAreaGetPayload<S['select'][P]> : never
  } 
    : BodyAreaMoveScore
  : BodyAreaMoveScore


  type BodyAreaMoveScoreCountArgs = Merge<
    Omit<BodyAreaMoveScoreFindManyArgs, 'select' | 'include'> & {
      select?: BodyAreaMoveScoreCountAggregateInputType | true
    }
  >

  export interface BodyAreaMoveScoreDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one BodyAreaMoveScore that matches the filter.
     * @param {BodyAreaMoveScoreFindUniqueArgs} args - Arguments to find a BodyAreaMoveScore
     * @example
     * // Get one BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends BodyAreaMoveScoreFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, BodyAreaMoveScoreFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'BodyAreaMoveScore'> extends True ? CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore | null >, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T> | null >>

    /**
     * Find the first BodyAreaMoveScore that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreFindFirstArgs} args - Arguments to find a BodyAreaMoveScore
     * @example
     * // Get one BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends BodyAreaMoveScoreFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, BodyAreaMoveScoreFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'BodyAreaMoveScore'> extends True ? CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore | null >, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T> | null >>

    /**
     * Find zero or more BodyAreaMoveScores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BodyAreaMoveScores
     * const bodyAreaMoveScores = await prisma.bodyAreaMoveScore.findMany()
     * 
     * // Get first 10 BodyAreaMoveScores
     * const bodyAreaMoveScores = await prisma.bodyAreaMoveScore.findMany({ take: 10 })
     * 
     * // Only select the `createdAt`
     * const bodyAreaMoveScoreWithCreatedAtOnly = await prisma.bodyAreaMoveScore.findMany({ select: { createdAt: true } })
     * 
    **/
    findMany<T extends BodyAreaMoveScoreFindManyArgs>(
      args?: SelectSubset<T, BodyAreaMoveScoreFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<BodyAreaMoveScore>>, PrismaPromise<Array<BodyAreaMoveScoreGetPayload<T>>>>

    /**
     * Create a BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreCreateArgs} args - Arguments to create a BodyAreaMoveScore.
     * @example
     * // Create one BodyAreaMoveScore
     * const BodyAreaMoveScore = await prisma.bodyAreaMoveScore.create({
     *   data: {
     *     // ... data to create a BodyAreaMoveScore
     *   }
     * })
     * 
    **/
    create<T extends BodyAreaMoveScoreCreateArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreCreateArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Delete a BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreDeleteArgs} args - Arguments to delete one BodyAreaMoveScore.
     * @example
     * // Delete one BodyAreaMoveScore
     * const BodyAreaMoveScore = await prisma.bodyAreaMoveScore.delete({
     *   where: {
     *     // ... filter to delete one BodyAreaMoveScore
     *   }
     * })
     * 
    **/
    delete<T extends BodyAreaMoveScoreDeleteArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreDeleteArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Update one BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreUpdateArgs} args - Arguments to update one BodyAreaMoveScore.
     * @example
     * // Update one BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends BodyAreaMoveScoreUpdateArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreUpdateArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Delete zero or more BodyAreaMoveScores.
     * @param {BodyAreaMoveScoreDeleteManyArgs} args - Arguments to filter BodyAreaMoveScores to delete.
     * @example
     * // Delete a few BodyAreaMoveScores
     * const { count } = await prisma.bodyAreaMoveScore.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends BodyAreaMoveScoreDeleteManyArgs>(
      args?: SelectSubset<T, BodyAreaMoveScoreDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more BodyAreaMoveScores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BodyAreaMoveScores
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends BodyAreaMoveScoreUpdateManyArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreUpsertArgs} args - Arguments to update or create a BodyAreaMoveScore.
     * @example
     * // Update or create a BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.upsert({
     *   create: {
     *     // ... data to create a BodyAreaMoveScore
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BodyAreaMoveScore we want to update
     *   }
     * })
    **/
    upsert<T extends BodyAreaMoveScoreUpsertArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreUpsertArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Count the number of BodyAreaMoveScores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreCountArgs} args - Arguments to filter BodyAreaMoveScores to count.
     * @example
     * // Count the number of BodyAreaMoveScores
     * const count = await prisma.bodyAreaMoveScore.count({
     *   where: {
     *     // ... the filter for the BodyAreaMoveScores we want to count
     *   }
     * })
    **/
    count<T extends BodyAreaMoveScoreCountArgs>(
      args?: Subset<T, BodyAreaMoveScoreCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BodyAreaMoveScoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BodyAreaMoveScore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BodyAreaMoveScoreAggregateArgs>(args: Subset<T, BodyAreaMoveScoreAggregateArgs>): PrismaPromise<GetBodyAreaMoveScoreAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for BodyAreaMoveScore.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__BodyAreaMoveScoreClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    move<T extends MoveArgs = {}>(args?: Subset<T, MoveArgs>): CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>;

    bodyArea<T extends BodyAreaArgs = {}>(args?: Subset<T, BodyAreaArgs>): CheckSelect<T, Prisma__BodyAreaClient<BodyArea | null >, Prisma__BodyAreaClient<BodyAreaGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * BodyAreaMoveScore findUnique
   */
  export type BodyAreaMoveScoreFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Throw an Error if a BodyAreaMoveScore can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyAreaMoveScore to fetch.
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
  }


  /**
   * BodyAreaMoveScore findFirst
   */
  export type BodyAreaMoveScoreFindFirstArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Throw an Error if a BodyAreaMoveScore can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyAreaMoveScore to fetch.
    **/
    where?: BodyAreaMoveScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreaMoveScores to fetch.
    **/
    orderBy?: Enumerable<BodyAreaMoveScoreOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BodyAreaMoveScores.
    **/
    cursor?: BodyAreaMoveScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreaMoveScores from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreaMoveScores.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BodyAreaMoveScores.
    **/
    distinct?: Enumerable<BodyAreaMoveScoreScalarFieldEnum>
  }


  /**
   * BodyAreaMoveScore findMany
   */
  export type BodyAreaMoveScoreFindManyArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Filter, which BodyAreaMoveScores to fetch.
    **/
    where?: BodyAreaMoveScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreaMoveScores to fetch.
    **/
    orderBy?: Enumerable<BodyAreaMoveScoreOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BodyAreaMoveScores.
    **/
    cursor?: BodyAreaMoveScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreaMoveScores from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreaMoveScores.
    **/
    skip?: number
    distinct?: Enumerable<BodyAreaMoveScoreScalarFieldEnum>
  }


  /**
   * BodyAreaMoveScore create
   */
  export type BodyAreaMoveScoreCreateArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * The data needed to create a BodyAreaMoveScore.
    **/
    data: XOR<BodyAreaMoveScoreUncheckedCreateInput, BodyAreaMoveScoreCreateInput>
  }


  /**
   * BodyAreaMoveScore update
   */
  export type BodyAreaMoveScoreUpdateArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * The data needed to update a BodyAreaMoveScore.
    **/
    data: XOR<BodyAreaMoveScoreUncheckedUpdateInput, BodyAreaMoveScoreUpdateInput>
    /**
     * Choose, which BodyAreaMoveScore to update.
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
  }


  /**
   * BodyAreaMoveScore updateMany
   */
  export type BodyAreaMoveScoreUpdateManyArgs = {
    data: XOR<BodyAreaMoveScoreUncheckedUpdateManyInput, BodyAreaMoveScoreUpdateManyMutationInput>
    where?: BodyAreaMoveScoreWhereInput
  }


  /**
   * BodyAreaMoveScore upsert
   */
  export type BodyAreaMoveScoreUpsertArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * The filter to search for the BodyAreaMoveScore to update in case it exists.
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
    /**
     * In case the BodyAreaMoveScore found by the `where` argument doesn't exist, create a new BodyAreaMoveScore with this data.
    **/
    create: XOR<BodyAreaMoveScoreUncheckedCreateInput, BodyAreaMoveScoreCreateInput>
    /**
     * In case the BodyAreaMoveScore was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<BodyAreaMoveScoreUncheckedUpdateInput, BodyAreaMoveScoreUpdateInput>
  }


  /**
   * BodyAreaMoveScore delete
   */
  export type BodyAreaMoveScoreDeleteArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Filter which BodyAreaMoveScore to delete.
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
  }


  /**
   * BodyAreaMoveScore deleteMany
   */
  export type BodyAreaMoveScoreDeleteManyArgs = {
    where?: BodyAreaMoveScoreWhereInput
  }


  /**
   * BodyAreaMoveScore without action
   */
  export type BodyAreaMoveScoreArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: BodyAreaMoveScoreInclude | null
  }



  /**
   * Model Equipment
   */


  export type AggregateEquipment = {
    count: EquipmentCountAggregateOutputType | null
    min: EquipmentMinAggregateOutputType | null
    max: EquipmentMaxAggregateOutputType | null
  }

  export type EquipmentMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    imageUrl: string | null
    loadAdjustable: boolean | null
  }

  export type EquipmentMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    imageUrl: string | null
    loadAdjustable: boolean | null
  }

  export type EquipmentCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    name: number | null
    altNames: number | null
    imageUrl: number | null
    loadAdjustable: number | null
    _all: number
  }


  export type EquipmentMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    imageUrl?: true
    loadAdjustable?: true
  }

  export type EquipmentMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    imageUrl?: true
    loadAdjustable?: true
  }

  export type EquipmentCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    imageUrl?: true
    loadAdjustable?: true
    _all?: true
  }

  export type EquipmentAggregateArgs = {
    /**
     * Filter which Equipment to aggregate.
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
    **/
    orderBy?: Enumerable<EquipmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Equipment
    **/
    count?: true | EquipmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: EquipmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: EquipmentMaxAggregateInputType
  }

  export type GetEquipmentAggregateType<T extends EquipmentAggregateArgs> = {
    [P in keyof T & keyof AggregateEquipment]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipment[P]>
      : GetScalarType<T[P], AggregateEquipment[P]>
  }



  export type EquipmentSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    altNames?: boolean
    imageUrl?: boolean
    loadAdjustable?: boolean
    requiredForMoves?: boolean | MoveFindManyArgs
    selectableForMoves?: boolean | MoveFindManyArgs
    workoutMoves?: boolean | WorkoutMoveFindManyArgs
    gymProfiles?: boolean | GymProfileFindManyArgs
    userBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type EquipmentInclude = {
    requiredForMoves?: boolean | MoveFindManyArgs
    selectableForMoves?: boolean | MoveFindManyArgs
    workoutMoves?: boolean | WorkoutMoveFindManyArgs
    gymProfiles?: boolean | GymProfileFindManyArgs
    userBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type EquipmentGetPayload<
    S extends boolean | null | undefined | EquipmentArgs,
    U = keyof S
      > = S extends true
        ? Equipment
    : S extends undefined
    ? never
    : S extends EquipmentArgs | EquipmentFindManyArgs
    ?'include' extends U
    ? Equipment  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'requiredForMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  :
        P extends 'selectableForMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  :
        P extends 'workoutMoves'
        ? Array < WorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'gymProfiles'
        ? Array < GymProfileGetPayload<S['include'][P]>>  :
        P extends 'userBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Equipment ?Equipment [P]
  : 
          P extends 'requiredForMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  :
        P extends 'selectableForMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  :
        P extends 'workoutMoves'
        ? Array < WorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'gymProfiles'
        ? Array < GymProfileGetPayload<S['select'][P]>>  :
        P extends 'userBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['select'][P]>>  : never
  } 
    : Equipment
  : Equipment


  type EquipmentCountArgs = Merge<
    Omit<EquipmentFindManyArgs, 'select' | 'include'> & {
      select?: EquipmentCountAggregateInputType | true
    }
  >

  export interface EquipmentDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Equipment that matches the filter.
     * @param {EquipmentFindUniqueArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EquipmentFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, EquipmentFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Equipment'> extends True ? CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>> : CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>

    /**
     * Find the first Equipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentFindFirstArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EquipmentFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, EquipmentFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Equipment'> extends True ? CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>> : CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>

    /**
     * Find zero or more Equipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Equipment
     * const equipment = await prisma.equipment.findMany()
     * 
     * // Get first 10 Equipment
     * const equipment = await prisma.equipment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipmentWithIdOnly = await prisma.equipment.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EquipmentFindManyArgs>(
      args?: SelectSubset<T, EquipmentFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>

    /**
     * Create a Equipment.
     * @param {EquipmentCreateArgs} args - Arguments to create a Equipment.
     * @example
     * // Create one Equipment
     * const Equipment = await prisma.equipment.create({
     *   data: {
     *     // ... data to create a Equipment
     *   }
     * })
     * 
    **/
    create<T extends EquipmentCreateArgs>(
      args: SelectSubset<T, EquipmentCreateArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Delete a Equipment.
     * @param {EquipmentDeleteArgs} args - Arguments to delete one Equipment.
     * @example
     * // Delete one Equipment
     * const Equipment = await prisma.equipment.delete({
     *   where: {
     *     // ... filter to delete one Equipment
     *   }
     * })
     * 
    **/
    delete<T extends EquipmentDeleteArgs>(
      args: SelectSubset<T, EquipmentDeleteArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Update one Equipment.
     * @param {EquipmentUpdateArgs} args - Arguments to update one Equipment.
     * @example
     * // Update one Equipment
     * const equipment = await prisma.equipment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EquipmentUpdateArgs>(
      args: SelectSubset<T, EquipmentUpdateArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Delete zero or more Equipment.
     * @param {EquipmentDeleteManyArgs} args - Arguments to filter Equipment to delete.
     * @example
     * // Delete a few Equipment
     * const { count } = await prisma.equipment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EquipmentDeleteManyArgs>(
      args?: SelectSubset<T, EquipmentDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Equipment
     * const equipment = await prisma.equipment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EquipmentUpdateManyArgs>(
      args: SelectSubset<T, EquipmentUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Equipment.
     * @param {EquipmentUpsertArgs} args - Arguments to update or create a Equipment.
     * @example
     * // Update or create a Equipment
     * const equipment = await prisma.equipment.upsert({
     *   create: {
     *     // ... data to create a Equipment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Equipment we want to update
     *   }
     * })
    **/
    upsert<T extends EquipmentUpsertArgs>(
      args: SelectSubset<T, EquipmentUpsertArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Count the number of Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentCountArgs} args - Arguments to filter Equipment to count.
     * @example
     * // Count the number of Equipment
     * const count = await prisma.equipment.count({
     *   where: {
     *     // ... the filter for the Equipment we want to count
     *   }
     * })
    **/
    count<T extends EquipmentCountArgs>(
      args?: Subset<T, EquipmentCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipmentAggregateArgs>(args: Subset<T, EquipmentAggregateArgs>): PrismaPromise<GetEquipmentAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Equipment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__EquipmentClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    requiredForMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    selectableForMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    workoutMoves<T extends WorkoutMoveFindManyArgs = {}>(args?: Subset<T, WorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>;

    gymProfiles<T extends GymProfileFindManyArgs = {}>(args?: Subset<T, GymProfileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<GymProfile>>, PrismaPromise<Array<GymProfileGetPayload<T>>>>;

    userBenchmarks<T extends UserBenchmarkFindManyArgs = {}>(args?: Subset<T, UserBenchmarkFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Equipment findUnique
   */
  export type EquipmentFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
    /**
     * Throw an Error if a Equipment can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Equipment to fetch.
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment findFirst
   */
  export type EquipmentFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
    /**
     * Throw an Error if a Equipment can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Equipment to fetch.
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
    **/
    orderBy?: Enumerable<EquipmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipment.
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipment.
    **/
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * Equipment findMany
   */
  export type EquipmentFindManyArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
    /**
     * Filter, which Equipment to fetch.
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
    **/
    orderBy?: Enumerable<EquipmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Equipment.
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
    **/
    skip?: number
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * Equipment create
   */
  export type EquipmentCreateArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
    /**
     * The data needed to create a Equipment.
    **/
    data: XOR<EquipmentUncheckedCreateInput, EquipmentCreateInput>
  }


  /**
   * Equipment update
   */
  export type EquipmentUpdateArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
    /**
     * The data needed to update a Equipment.
    **/
    data: XOR<EquipmentUncheckedUpdateInput, EquipmentUpdateInput>
    /**
     * Choose, which Equipment to update.
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment updateMany
   */
  export type EquipmentUpdateManyArgs = {
    data: XOR<EquipmentUncheckedUpdateManyInput, EquipmentUpdateManyMutationInput>
    where?: EquipmentWhereInput
  }


  /**
   * Equipment upsert
   */
  export type EquipmentUpsertArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
    /**
     * The filter to search for the Equipment to update in case it exists.
    **/
    where: EquipmentWhereUniqueInput
    /**
     * In case the Equipment found by the `where` argument doesn't exist, create a new Equipment with this data.
    **/
    create: XOR<EquipmentUncheckedCreateInput, EquipmentCreateInput>
    /**
     * In case the Equipment was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<EquipmentUncheckedUpdateInput, EquipmentUpdateInput>
  }


  /**
   * Equipment delete
   */
  export type EquipmentDeleteArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
    /**
     * Filter which Equipment to delete.
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment deleteMany
   */
  export type EquipmentDeleteManyArgs = {
    where?: EquipmentWhereInput
  }


  /**
   * Equipment without action
   */
  export type EquipmentArgs = {
    /**
     * Select specific fields to fetch from the Equipment
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: EquipmentInclude | null
  }



  /**
   * Model GymProfile
   */


  export type AggregateGymProfile = {
    count: GymProfileCountAggregateOutputType | null
    min: GymProfileMinAggregateOutputType | null
    max: GymProfileMaxAggregateOutputType | null
  }

  export type GymProfileMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
    postcode: string | null
    bodyweightOnly: boolean | null
  }

  export type GymProfileMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
    postcode: string | null
    bodyweightOnly: boolean | null
  }

  export type GymProfileCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    userId: number | null
    name: number | null
    description: number | null
    postcode: number | null
    bodyweightOnly: number | null
    _all: number
  }


  export type GymProfileMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    postcode?: true
    bodyweightOnly?: true
  }

  export type GymProfileMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    postcode?: true
    bodyweightOnly?: true
  }

  export type GymProfileCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    postcode?: true
    bodyweightOnly?: true
    _all?: true
  }

  export type GymProfileAggregateArgs = {
    /**
     * Filter which GymProfile to aggregate.
    **/
    where?: GymProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GymProfiles to fetch.
    **/
    orderBy?: Enumerable<GymProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: GymProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GymProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GymProfiles.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GymProfiles
    **/
    count?: true | GymProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: GymProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: GymProfileMaxAggregateInputType
  }

  export type GetGymProfileAggregateType<T extends GymProfileAggregateArgs> = {
    [P in keyof T & keyof AggregateGymProfile]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGymProfile[P]>
      : GetScalarType<T[P], AggregateGymProfile[P]>
  }



  export type GymProfileSelect = {
    id?: boolean
    createdAt?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    postcode?: boolean
    bodyweightOnly?: boolean
    availableEquipments?: boolean | EquipmentFindManyArgs
    scheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type GymProfileInclude = {
    user?: boolean | UserArgs
    availableEquipments?: boolean | EquipmentFindManyArgs
    scheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type GymProfileGetPayload<
    S extends boolean | null | undefined | GymProfileArgs,
    U = keyof S
      > = S extends true
        ? GymProfile
    : S extends undefined
    ? never
    : S extends GymProfileArgs | GymProfileFindManyArgs
    ?'include' extends U
    ? GymProfile  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? UserGetPayload<S['include'][P]> :
        P extends 'availableEquipments'
        ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'scheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof GymProfile ?GymProfile [P]
  : 
          P extends 'user'
        ? UserGetPayload<S['select'][P]> :
        P extends 'availableEquipments'
        ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'scheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : GymProfile
  : GymProfile


  type GymProfileCountArgs = Merge<
    Omit<GymProfileFindManyArgs, 'select' | 'include'> & {
      select?: GymProfileCountAggregateInputType | true
    }
  >

  export interface GymProfileDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one GymProfile that matches the filter.
     * @param {GymProfileFindUniqueArgs} args - Arguments to find a GymProfile
     * @example
     * // Get one GymProfile
     * const gymProfile = await prisma.gymProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends GymProfileFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, GymProfileFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'GymProfile'> extends True ? CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>> : CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>

    /**
     * Find the first GymProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileFindFirstArgs} args - Arguments to find a GymProfile
     * @example
     * // Get one GymProfile
     * const gymProfile = await prisma.gymProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends GymProfileFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, GymProfileFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'GymProfile'> extends True ? CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>> : CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>

    /**
     * Find zero or more GymProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GymProfiles
     * const gymProfiles = await prisma.gymProfile.findMany()
     * 
     * // Get first 10 GymProfiles
     * const gymProfiles = await prisma.gymProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gymProfileWithIdOnly = await prisma.gymProfile.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends GymProfileFindManyArgs>(
      args?: SelectSubset<T, GymProfileFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<GymProfile>>, PrismaPromise<Array<GymProfileGetPayload<T>>>>

    /**
     * Create a GymProfile.
     * @param {GymProfileCreateArgs} args - Arguments to create a GymProfile.
     * @example
     * // Create one GymProfile
     * const GymProfile = await prisma.gymProfile.create({
     *   data: {
     *     // ... data to create a GymProfile
     *   }
     * })
     * 
    **/
    create<T extends GymProfileCreateArgs>(
      args: SelectSubset<T, GymProfileCreateArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Delete a GymProfile.
     * @param {GymProfileDeleteArgs} args - Arguments to delete one GymProfile.
     * @example
     * // Delete one GymProfile
     * const GymProfile = await prisma.gymProfile.delete({
     *   where: {
     *     // ... filter to delete one GymProfile
     *   }
     * })
     * 
    **/
    delete<T extends GymProfileDeleteArgs>(
      args: SelectSubset<T, GymProfileDeleteArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Update one GymProfile.
     * @param {GymProfileUpdateArgs} args - Arguments to update one GymProfile.
     * @example
     * // Update one GymProfile
     * const gymProfile = await prisma.gymProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends GymProfileUpdateArgs>(
      args: SelectSubset<T, GymProfileUpdateArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Delete zero or more GymProfiles.
     * @param {GymProfileDeleteManyArgs} args - Arguments to filter GymProfiles to delete.
     * @example
     * // Delete a few GymProfiles
     * const { count } = await prisma.gymProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends GymProfileDeleteManyArgs>(
      args?: SelectSubset<T, GymProfileDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more GymProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GymProfiles
     * const gymProfile = await prisma.gymProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends GymProfileUpdateManyArgs>(
      args: SelectSubset<T, GymProfileUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one GymProfile.
     * @param {GymProfileUpsertArgs} args - Arguments to update or create a GymProfile.
     * @example
     * // Update or create a GymProfile
     * const gymProfile = await prisma.gymProfile.upsert({
     *   create: {
     *     // ... data to create a GymProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GymProfile we want to update
     *   }
     * })
    **/
    upsert<T extends GymProfileUpsertArgs>(
      args: SelectSubset<T, GymProfileUpsertArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Count the number of GymProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileCountArgs} args - Arguments to filter GymProfiles to count.
     * @example
     * // Count the number of GymProfiles
     * const count = await prisma.gymProfile.count({
     *   where: {
     *     // ... the filter for the GymProfiles we want to count
     *   }
     * })
    **/
    count<T extends GymProfileCountArgs>(
      args?: Subset<T, GymProfileCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GymProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GymProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GymProfileAggregateArgs>(args: Subset<T, GymProfileAggregateArgs>): PrismaPromise<GetGymProfileAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for GymProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__GymProfileClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    availableEquipments<T extends EquipmentFindManyArgs = {}>(args?: Subset<T, EquipmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>;

    scheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    loggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * GymProfile findUnique
   */
  export type GymProfileFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
    /**
     * Throw an Error if a GymProfile can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which GymProfile to fetch.
    **/
    where: GymProfileWhereUniqueInput
  }


  /**
   * GymProfile findFirst
   */
  export type GymProfileFindFirstArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
    /**
     * Throw an Error if a GymProfile can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which GymProfile to fetch.
    **/
    where?: GymProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GymProfiles to fetch.
    **/
    orderBy?: Enumerable<GymProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GymProfiles.
    **/
    cursor?: GymProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GymProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GymProfiles.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GymProfiles.
    **/
    distinct?: Enumerable<GymProfileScalarFieldEnum>
  }


  /**
   * GymProfile findMany
   */
  export type GymProfileFindManyArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
    /**
     * Filter, which GymProfiles to fetch.
    **/
    where?: GymProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GymProfiles to fetch.
    **/
    orderBy?: Enumerable<GymProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GymProfiles.
    **/
    cursor?: GymProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GymProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GymProfiles.
    **/
    skip?: number
    distinct?: Enumerable<GymProfileScalarFieldEnum>
  }


  /**
   * GymProfile create
   */
  export type GymProfileCreateArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
    /**
     * The data needed to create a GymProfile.
    **/
    data: XOR<GymProfileUncheckedCreateInput, GymProfileCreateInput>
  }


  /**
   * GymProfile update
   */
  export type GymProfileUpdateArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
    /**
     * The data needed to update a GymProfile.
    **/
    data: XOR<GymProfileUncheckedUpdateInput, GymProfileUpdateInput>
    /**
     * Choose, which GymProfile to update.
    **/
    where: GymProfileWhereUniqueInput
  }


  /**
   * GymProfile updateMany
   */
  export type GymProfileUpdateManyArgs = {
    data: XOR<GymProfileUncheckedUpdateManyInput, GymProfileUpdateManyMutationInput>
    where?: GymProfileWhereInput
  }


  /**
   * GymProfile upsert
   */
  export type GymProfileUpsertArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
    /**
     * The filter to search for the GymProfile to update in case it exists.
    **/
    where: GymProfileWhereUniqueInput
    /**
     * In case the GymProfile found by the `where` argument doesn't exist, create a new GymProfile with this data.
    **/
    create: XOR<GymProfileUncheckedCreateInput, GymProfileCreateInput>
    /**
     * In case the GymProfile was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<GymProfileUncheckedUpdateInput, GymProfileUpdateInput>
  }


  /**
   * GymProfile delete
   */
  export type GymProfileDeleteArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
    /**
     * Filter which GymProfile to delete.
    **/
    where: GymProfileWhereUniqueInput
  }


  /**
   * GymProfile deleteMany
   */
  export type GymProfileDeleteManyArgs = {
    where?: GymProfileWhereInput
  }


  /**
   * GymProfile without action
   */
  export type GymProfileArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: GymProfileInclude | null
  }



  /**
   * Model LoggedWorkout
   */


  export type AggregateLoggedWorkout = {
    count: LoggedWorkoutCountAggregateOutputType | null
    avg: LoggedWorkoutAvgAggregateOutputType | null
    sum: LoggedWorkoutSumAggregateOutputType | null
    min: LoggedWorkoutMinAggregateOutputType | null
    max: LoggedWorkoutMaxAggregateOutputType | null
  }

  export type LoggedWorkoutAvgAggregateOutputType = {
    duration: number | null
  }

  export type LoggedWorkoutSumAggregateOutputType = {
    duration: number | null
  }

  export type LoggedWorkoutMinAggregateOutputType = {
    id: string | null
    name: string | null
    summary: string | null
    description: string | null
    createdAt: Date | null
    completedOn: Date | null
    completedById: string | null
    notes: string | null
    videoUrl: string | null
    videoThumbUrl: string | null
    imageUrl: string | null
    duration: number | null
    workoutTypeId: string | null
    originalWorkoutId: string | null
    scheduledWorkoutId: string | null
    gymProfileId: string | null
    workoutProgramEnrolmentId: string | null
    workoutProgramWorkoutId: string | null
  }

  export type LoggedWorkoutMaxAggregateOutputType = {
    id: string | null
    name: string | null
    summary: string | null
    description: string | null
    createdAt: Date | null
    completedOn: Date | null
    completedById: string | null
    notes: string | null
    videoUrl: string | null
    videoThumbUrl: string | null
    imageUrl: string | null
    duration: number | null
    workoutTypeId: string | null
    originalWorkoutId: string | null
    scheduledWorkoutId: string | null
    gymProfileId: string | null
    workoutProgramEnrolmentId: string | null
    workoutProgramWorkoutId: string | null
  }

  export type LoggedWorkoutCountAggregateOutputType = {
    id: number | null
    name: number | null
    summary: number | null
    description: number | null
    createdAt: number | null
    completedOn: number | null
    completedById: number | null
    notes: number | null
    videoUrl: number | null
    videoThumbUrl: number | null
    imageUrl: number | null
    duration: number | null
    workoutTypeId: number | null
    originalWorkoutId: number | null
    scheduledWorkoutId: number | null
    gymProfileId: number | null
    workoutProgramEnrolmentId: number | null
    workoutProgramWorkoutId: number | null
    _all: number
  }


  export type LoggedWorkoutAvgAggregateInputType = {
    duration?: true
  }

  export type LoggedWorkoutSumAggregateInputType = {
    duration?: true
  }

  export type LoggedWorkoutMinAggregateInputType = {
    id?: true
    name?: true
    summary?: true
    description?: true
    createdAt?: true
    completedOn?: true
    completedById?: true
    notes?: true
    videoUrl?: true
    videoThumbUrl?: true
    imageUrl?: true
    duration?: true
    workoutTypeId?: true
    originalWorkoutId?: true
    scheduledWorkoutId?: true
    gymProfileId?: true
    workoutProgramEnrolmentId?: true
    workoutProgramWorkoutId?: true
  }

  export type LoggedWorkoutMaxAggregateInputType = {
    id?: true
    name?: true
    summary?: true
    description?: true
    createdAt?: true
    completedOn?: true
    completedById?: true
    notes?: true
    videoUrl?: true
    videoThumbUrl?: true
    imageUrl?: true
    duration?: true
    workoutTypeId?: true
    originalWorkoutId?: true
    scheduledWorkoutId?: true
    gymProfileId?: true
    workoutProgramEnrolmentId?: true
    workoutProgramWorkoutId?: true
  }

  export type LoggedWorkoutCountAggregateInputType = {
    id?: true
    name?: true
    summary?: true
    description?: true
    createdAt?: true
    completedOn?: true
    completedById?: true
    notes?: true
    videoUrl?: true
    videoThumbUrl?: true
    imageUrl?: true
    duration?: true
    workoutTypeId?: true
    originalWorkoutId?: true
    scheduledWorkoutId?: true
    gymProfileId?: true
    workoutProgramEnrolmentId?: true
    workoutProgramWorkoutId?: true
    _all?: true
  }

  export type LoggedWorkoutAggregateArgs = {
    /**
     * Filter which LoggedWorkout to aggregate.
    **/
    where?: LoggedWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkouts to fetch.
    **/
    orderBy?: Enumerable<LoggedWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: LoggedWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LoggedWorkouts
    **/
    count?: true | LoggedWorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: LoggedWorkoutAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: LoggedWorkoutSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: LoggedWorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: LoggedWorkoutMaxAggregateInputType
  }

  export type GetLoggedWorkoutAggregateType<T extends LoggedWorkoutAggregateArgs> = {
    [P in keyof T & keyof AggregateLoggedWorkout]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoggedWorkout[P]>
      : GetScalarType<T[P], AggregateLoggedWorkout[P]>
  }



  export type LoggedWorkoutSelect = {
    id?: boolean
    name?: boolean
    summary?: boolean
    description?: boolean
    createdAt?: boolean
    completedOn?: boolean
    completedBy?: boolean | UserArgs
    completedById?: boolean
    notes?: boolean
    videoUrl?: boolean
    videoThumbUrl?: boolean
    imageUrl?: boolean
    duration?: boolean
    workoutType?: boolean | WorkoutTypeArgs
    workoutTypeId?: boolean
    workoutSections?: boolean | WorkoutSectionFindManyArgs
    originalWorkout?: boolean | WorkoutArgs
    originalWorkoutId?: boolean
    scheduledWorkout?: boolean | ScheduledWorkoutArgs
    scheduledWorkoutId?: boolean
    gymProfile?: boolean | GymProfileArgs
    gymProfileId?: boolean
    workoutProgramEnrolment?: boolean | WorkoutProgramEnrolmentArgs
    workoutProgramEnrolmentId?: boolean
    workoutProgramWorkout?: boolean | WorkoutProgramWorkoutArgs
    workoutProgramWorkoutId?: boolean
  }

  export type LoggedWorkoutInclude = {
    completedBy?: boolean | UserArgs
    workoutType?: boolean | WorkoutTypeArgs
    workoutSections?: boolean | WorkoutSectionFindManyArgs
    originalWorkout?: boolean | WorkoutArgs
    scheduledWorkout?: boolean | ScheduledWorkoutArgs
    gymProfile?: boolean | GymProfileArgs
    workoutProgramEnrolment?: boolean | WorkoutProgramEnrolmentArgs
    workoutProgramWorkout?: boolean | WorkoutProgramWorkoutArgs
  }

  export type LoggedWorkoutGetPayload<
    S extends boolean | null | undefined | LoggedWorkoutArgs,
    U = keyof S
      > = S extends true
        ? LoggedWorkout
    : S extends undefined
    ? never
    : S extends LoggedWorkoutArgs | LoggedWorkoutFindManyArgs
    ?'include' extends U
    ? LoggedWorkout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'completedBy'
        ? UserGetPayload<S['include'][P]> :
        P extends 'workoutType'
        ? WorkoutTypeGetPayload<S['include'][P]> :
        P extends 'workoutSections'
        ? Array < WorkoutSectionGetPayload<S['include'][P]>>  :
        P extends 'originalWorkout'
        ? WorkoutGetPayload<S['include'][P]> | null :
        P extends 'scheduledWorkout'
        ? ScheduledWorkoutGetPayload<S['include'][P]> | null :
        P extends 'gymProfile'
        ? GymProfileGetPayload<S['include'][P]> | null :
        P extends 'workoutProgramEnrolment'
        ? WorkoutProgramEnrolmentGetPayload<S['include'][P]> | null :
        P extends 'workoutProgramWorkout'
        ? WorkoutProgramWorkoutGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof LoggedWorkout ?LoggedWorkout [P]
  : 
          P extends 'completedBy'
        ? UserGetPayload<S['select'][P]> :
        P extends 'workoutType'
        ? WorkoutTypeGetPayload<S['select'][P]> :
        P extends 'workoutSections'
        ? Array < WorkoutSectionGetPayload<S['select'][P]>>  :
        P extends 'originalWorkout'
        ? WorkoutGetPayload<S['select'][P]> | null :
        P extends 'scheduledWorkout'
        ? ScheduledWorkoutGetPayload<S['select'][P]> | null :
        P extends 'gymProfile'
        ? GymProfileGetPayload<S['select'][P]> | null :
        P extends 'workoutProgramEnrolment'
        ? WorkoutProgramEnrolmentGetPayload<S['select'][P]> | null :
        P extends 'workoutProgramWorkout'
        ? WorkoutProgramWorkoutGetPayload<S['select'][P]> | null : never
  } 
    : LoggedWorkout
  : LoggedWorkout


  type LoggedWorkoutCountArgs = Merge<
    Omit<LoggedWorkoutFindManyArgs, 'select' | 'include'> & {
      select?: LoggedWorkoutCountAggregateInputType | true
    }
  >

  export interface LoggedWorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one LoggedWorkout that matches the filter.
     * @param {LoggedWorkoutFindUniqueArgs} args - Arguments to find a LoggedWorkout
     * @example
     * // Get one LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LoggedWorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, LoggedWorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'LoggedWorkout'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>

    /**
     * Find the first LoggedWorkout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutFindFirstArgs} args - Arguments to find a LoggedWorkout
     * @example
     * // Get one LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LoggedWorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, LoggedWorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'LoggedWorkout'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>

    /**
     * Find zero or more LoggedWorkouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LoggedWorkouts
     * const loggedWorkouts = await prisma.loggedWorkout.findMany()
     * 
     * // Get first 10 LoggedWorkouts
     * const loggedWorkouts = await prisma.loggedWorkout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loggedWorkoutWithIdOnly = await prisma.loggedWorkout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LoggedWorkoutFindManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>

    /**
     * Create a LoggedWorkout.
     * @param {LoggedWorkoutCreateArgs} args - Arguments to create a LoggedWorkout.
     * @example
     * // Create one LoggedWorkout
     * const LoggedWorkout = await prisma.loggedWorkout.create({
     *   data: {
     *     // ... data to create a LoggedWorkout
     *   }
     * })
     * 
    **/
    create<T extends LoggedWorkoutCreateArgs>(
      args: SelectSubset<T, LoggedWorkoutCreateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Delete a LoggedWorkout.
     * @param {LoggedWorkoutDeleteArgs} args - Arguments to delete one LoggedWorkout.
     * @example
     * // Delete one LoggedWorkout
     * const LoggedWorkout = await prisma.loggedWorkout.delete({
     *   where: {
     *     // ... filter to delete one LoggedWorkout
     *   }
     * })
     * 
    **/
    delete<T extends LoggedWorkoutDeleteArgs>(
      args: SelectSubset<T, LoggedWorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Update one LoggedWorkout.
     * @param {LoggedWorkoutUpdateArgs} args - Arguments to update one LoggedWorkout.
     * @example
     * // Update one LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LoggedWorkoutUpdateArgs>(
      args: SelectSubset<T, LoggedWorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Delete zero or more LoggedWorkouts.
     * @param {LoggedWorkoutDeleteManyArgs} args - Arguments to filter LoggedWorkouts to delete.
     * @example
     * // Delete a few LoggedWorkouts
     * const { count } = await prisma.loggedWorkout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LoggedWorkoutDeleteManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more LoggedWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LoggedWorkouts
     * const loggedWorkout = await prisma.loggedWorkout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LoggedWorkoutUpdateManyArgs>(
      args: SelectSubset<T, LoggedWorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one LoggedWorkout.
     * @param {LoggedWorkoutUpsertArgs} args - Arguments to update or create a LoggedWorkout.
     * @example
     * // Update or create a LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.upsert({
     *   create: {
     *     // ... data to create a LoggedWorkout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LoggedWorkout we want to update
     *   }
     * })
    **/
    upsert<T extends LoggedWorkoutUpsertArgs>(
      args: SelectSubset<T, LoggedWorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Count the number of LoggedWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutCountArgs} args - Arguments to filter LoggedWorkouts to count.
     * @example
     * // Count the number of LoggedWorkouts
     * const count = await prisma.loggedWorkout.count({
     *   where: {
     *     // ... the filter for the LoggedWorkouts we want to count
     *   }
     * })
    **/
    count<T extends LoggedWorkoutCountArgs>(
      args?: Subset<T, LoggedWorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoggedWorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LoggedWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoggedWorkoutAggregateArgs>(args: Subset<T, LoggedWorkoutAggregateArgs>): PrismaPromise<GetLoggedWorkoutAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for LoggedWorkout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__LoggedWorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    completedBy<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    workoutType<T extends WorkoutTypeArgs = {}>(args?: Subset<T, WorkoutTypeArgs>): CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType | null >, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T> | null >>;

    workoutSections<T extends WorkoutSectionFindManyArgs = {}>(args?: Subset<T, WorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSection>>, PrismaPromise<Array<WorkoutSectionGetPayload<T>>>>;

    originalWorkout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    scheduledWorkout<T extends ScheduledWorkoutArgs = {}>(args?: Subset<T, ScheduledWorkoutArgs>): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout | null >, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T> | null >>;

    gymProfile<T extends GymProfileArgs = {}>(args?: Subset<T, GymProfileArgs>): CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>;

    workoutProgramEnrolment<T extends WorkoutProgramEnrolmentArgs = {}>(args?: Subset<T, WorkoutProgramEnrolmentArgs>): CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment | null >, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T> | null >>;

    workoutProgramWorkout<T extends WorkoutProgramWorkoutArgs = {}>(args?: Subset<T, WorkoutProgramWorkoutArgs>): CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout | null >, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * LoggedWorkout findUnique
   */
  export type LoggedWorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Throw an Error if a LoggedWorkout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkout to fetch.
    **/
    where: LoggedWorkoutWhereUniqueInput
  }


  /**
   * LoggedWorkout findFirst
   */
  export type LoggedWorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Throw an Error if a LoggedWorkout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkout to fetch.
    **/
    where?: LoggedWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkouts to fetch.
    **/
    orderBy?: Enumerable<LoggedWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LoggedWorkouts.
    **/
    cursor?: LoggedWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LoggedWorkouts.
    **/
    distinct?: Enumerable<LoggedWorkoutScalarFieldEnum>
  }


  /**
   * LoggedWorkout findMany
   */
  export type LoggedWorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Filter, which LoggedWorkouts to fetch.
    **/
    where?: LoggedWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkouts to fetch.
    **/
    orderBy?: Enumerable<LoggedWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LoggedWorkouts.
    **/
    cursor?: LoggedWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkouts.
    **/
    skip?: number
    distinct?: Enumerable<LoggedWorkoutScalarFieldEnum>
  }


  /**
   * LoggedWorkout create
   */
  export type LoggedWorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * The data needed to create a LoggedWorkout.
    **/
    data: XOR<LoggedWorkoutUncheckedCreateInput, LoggedWorkoutCreateInput>
  }


  /**
   * LoggedWorkout update
   */
  export type LoggedWorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * The data needed to update a LoggedWorkout.
    **/
    data: XOR<LoggedWorkoutUncheckedUpdateInput, LoggedWorkoutUpdateInput>
    /**
     * Choose, which LoggedWorkout to update.
    **/
    where: LoggedWorkoutWhereUniqueInput
  }


  /**
   * LoggedWorkout updateMany
   */
  export type LoggedWorkoutUpdateManyArgs = {
    data: XOR<LoggedWorkoutUncheckedUpdateManyInput, LoggedWorkoutUpdateManyMutationInput>
    where?: LoggedWorkoutWhereInput
  }


  /**
   * LoggedWorkout upsert
   */
  export type LoggedWorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * The filter to search for the LoggedWorkout to update in case it exists.
    **/
    where: LoggedWorkoutWhereUniqueInput
    /**
     * In case the LoggedWorkout found by the `where` argument doesn't exist, create a new LoggedWorkout with this data.
    **/
    create: XOR<LoggedWorkoutUncheckedCreateInput, LoggedWorkoutCreateInput>
    /**
     * In case the LoggedWorkout was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<LoggedWorkoutUncheckedUpdateInput, LoggedWorkoutUpdateInput>
  }


  /**
   * LoggedWorkout delete
   */
  export type LoggedWorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Filter which LoggedWorkout to delete.
    **/
    where: LoggedWorkoutWhereUniqueInput
  }


  /**
   * LoggedWorkout deleteMany
   */
  export type LoggedWorkoutDeleteManyArgs = {
    where?: LoggedWorkoutWhereInput
  }


  /**
   * LoggedWorkout without action
   */
  export type LoggedWorkoutArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: LoggedWorkoutInclude | null
  }



  /**
   * Model Move
   */


  export type AggregateMove = {
    count: MoveCountAggregateOutputType | null
    min: MoveMinAggregateOutputType | null
    max: MoveMaxAggregateOutputType | null
  }

  export type MoveMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    createdById: string | null
    scope: MoveScope | null
    name: string | null
    searchTerms: string | null
    description: string | null
    demoVideoUrl: string | null
    demoVideoThumbUrl: string | null
    moveTypeId: string | null
  }

  export type MoveMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    createdById: string | null
    scope: MoveScope | null
    name: string | null
    searchTerms: string | null
    description: string | null
    demoVideoUrl: string | null
    demoVideoThumbUrl: string | null
    moveTypeId: string | null
  }

  export type MoveCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    archived: number | null
    createdById: number | null
    scope: number | null
    name: number | null
    searchTerms: number | null
    description: number | null
    demoVideoUrl: number | null
    demoVideoThumbUrl: number | null
    moveTypeId: number | null
    validRepTypes: number | null
    _all: number
  }


  export type MoveMinAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    createdById?: true
    scope?: true
    name?: true
    searchTerms?: true
    description?: true
    demoVideoUrl?: true
    demoVideoThumbUrl?: true
    moveTypeId?: true
  }

  export type MoveMaxAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    createdById?: true
    scope?: true
    name?: true
    searchTerms?: true
    description?: true
    demoVideoUrl?: true
    demoVideoThumbUrl?: true
    moveTypeId?: true
  }

  export type MoveCountAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    createdById?: true
    scope?: true
    name?: true
    searchTerms?: true
    description?: true
    demoVideoUrl?: true
    demoVideoThumbUrl?: true
    moveTypeId?: true
    validRepTypes?: true
    _all?: true
  }

  export type MoveAggregateArgs = {
    /**
     * Filter which Move to aggregate.
    **/
    where?: MoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moves to fetch.
    **/
    orderBy?: Enumerable<MoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: MoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moves from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moves.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Moves
    **/
    count?: true | MoveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: MoveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: MoveMaxAggregateInputType
  }

  export type GetMoveAggregateType<T extends MoveAggregateArgs> = {
    [P in keyof T & keyof AggregateMove]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMove[P]>
      : GetScalarType<T[P], AggregateMove[P]>
  }



  export type MoveSelect = {
    id?: boolean
    createdAt?: boolean
    archived?: boolean
    createdBy?: boolean | UserArgs
    createdById?: boolean
    scope?: boolean
    name?: boolean
    searchTerms?: boolean
    description?: boolean
    demoVideoUrl?: boolean
    demoVideoThumbUrl?: boolean
    moveType?: boolean | MoveTypeArgs
    moveTypeId?: boolean
    validRepTypes?: boolean
    requiredEquipments?: boolean | EquipmentFindManyArgs
    selectableEquipments?: boolean | EquipmentFindManyArgs
    requiredForMoveProfiles?: boolean | MoveProfileFindManyArgs
    excludedForMoveProfiles?: boolean | MoveProfileFindManyArgs
    workoutMoves?: boolean | WorkoutMoveFindManyArgs
    bodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
    userBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type MoveInclude = {
    createdBy?: boolean | UserArgs
    moveType?: boolean | MoveTypeArgs
    requiredEquipments?: boolean | EquipmentFindManyArgs
    selectableEquipments?: boolean | EquipmentFindManyArgs
    requiredForMoveProfiles?: boolean | MoveProfileFindManyArgs
    excludedForMoveProfiles?: boolean | MoveProfileFindManyArgs
    workoutMoves?: boolean | WorkoutMoveFindManyArgs
    bodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
    userBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type MoveGetPayload<
    S extends boolean | null | undefined | MoveArgs,
    U = keyof S
      > = S extends true
        ? Move
    : S extends undefined
    ? never
    : S extends MoveArgs | MoveFindManyArgs
    ?'include' extends U
    ? Move  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'createdBy'
        ? UserGetPayload<S['include'][P]> | null :
        P extends 'moveType'
        ? MoveTypeGetPayload<S['include'][P]> | null :
        P extends 'requiredEquipments'
        ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'selectableEquipments'
        ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'requiredForMoveProfiles'
        ? Array < MoveProfileGetPayload<S['include'][P]>>  :
        P extends 'excludedForMoveProfiles'
        ? Array < MoveProfileGetPayload<S['include'][P]>>  :
        P extends 'workoutMoves'
        ? Array < WorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'bodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['include'][P]>>  :
        P extends 'userBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Move ?Move [P]
  : 
          P extends 'createdBy'
        ? UserGetPayload<S['select'][P]> | null :
        P extends 'moveType'
        ? MoveTypeGetPayload<S['select'][P]> | null :
        P extends 'requiredEquipments'
        ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'selectableEquipments'
        ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'requiredForMoveProfiles'
        ? Array < MoveProfileGetPayload<S['select'][P]>>  :
        P extends 'excludedForMoveProfiles'
        ? Array < MoveProfileGetPayload<S['select'][P]>>  :
        P extends 'workoutMoves'
        ? Array < WorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'bodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['select'][P]>>  :
        P extends 'userBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['select'][P]>>  : never
  } 
    : Move
  : Move


  type MoveCountArgs = Merge<
    Omit<MoveFindManyArgs, 'select' | 'include'> & {
      select?: MoveCountAggregateInputType | true
    }
  >

  export interface MoveDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Move that matches the filter.
     * @param {MoveFindUniqueArgs} args - Arguments to find a Move
     * @example
     * // Get one Move
     * const move = await prisma.move.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MoveFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, MoveFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Move'> extends True ? CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>> : CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>

    /**
     * Find the first Move that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveFindFirstArgs} args - Arguments to find a Move
     * @example
     * // Get one Move
     * const move = await prisma.move.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MoveFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, MoveFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Move'> extends True ? CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>> : CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>

    /**
     * Find zero or more Moves that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Moves
     * const moves = await prisma.move.findMany()
     * 
     * // Get first 10 Moves
     * const moves = await prisma.move.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const moveWithIdOnly = await prisma.move.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MoveFindManyArgs>(
      args?: SelectSubset<T, MoveFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>

    /**
     * Create a Move.
     * @param {MoveCreateArgs} args - Arguments to create a Move.
     * @example
     * // Create one Move
     * const Move = await prisma.move.create({
     *   data: {
     *     // ... data to create a Move
     *   }
     * })
     * 
    **/
    create<T extends MoveCreateArgs>(
      args: SelectSubset<T, MoveCreateArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Delete a Move.
     * @param {MoveDeleteArgs} args - Arguments to delete one Move.
     * @example
     * // Delete one Move
     * const Move = await prisma.move.delete({
     *   where: {
     *     // ... filter to delete one Move
     *   }
     * })
     * 
    **/
    delete<T extends MoveDeleteArgs>(
      args: SelectSubset<T, MoveDeleteArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Update one Move.
     * @param {MoveUpdateArgs} args - Arguments to update one Move.
     * @example
     * // Update one Move
     * const move = await prisma.move.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MoveUpdateArgs>(
      args: SelectSubset<T, MoveUpdateArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Delete zero or more Moves.
     * @param {MoveDeleteManyArgs} args - Arguments to filter Moves to delete.
     * @example
     * // Delete a few Moves
     * const { count } = await prisma.move.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MoveDeleteManyArgs>(
      args?: SelectSubset<T, MoveDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Moves
     * const move = await prisma.move.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MoveUpdateManyArgs>(
      args: SelectSubset<T, MoveUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Move.
     * @param {MoveUpsertArgs} args - Arguments to update or create a Move.
     * @example
     * // Update or create a Move
     * const move = await prisma.move.upsert({
     *   create: {
     *     // ... data to create a Move
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Move we want to update
     *   }
     * })
    **/
    upsert<T extends MoveUpsertArgs>(
      args: SelectSubset<T, MoveUpsertArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Count the number of Moves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveCountArgs} args - Arguments to filter Moves to count.
     * @example
     * // Count the number of Moves
     * const count = await prisma.move.count({
     *   where: {
     *     // ... the filter for the Moves we want to count
     *   }
     * })
    **/
    count<T extends MoveCountArgs>(
      args?: Subset<T, MoveCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MoveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Move.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MoveAggregateArgs>(args: Subset<T, MoveAggregateArgs>): PrismaPromise<GetMoveAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Move.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__MoveClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    createdBy<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    moveType<T extends MoveTypeArgs = {}>(args?: Subset<T, MoveTypeArgs>): CheckSelect<T, Prisma__MoveTypeClient<MoveType | null >, Prisma__MoveTypeClient<MoveTypeGetPayload<T> | null >>;

    requiredEquipments<T extends EquipmentFindManyArgs = {}>(args?: Subset<T, EquipmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>;

    selectableEquipments<T extends EquipmentFindManyArgs = {}>(args?: Subset<T, EquipmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>;

    requiredForMoveProfiles<T extends MoveProfileFindManyArgs = {}>(args?: Subset<T, MoveProfileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<MoveProfile>>, PrismaPromise<Array<MoveProfileGetPayload<T>>>>;

    excludedForMoveProfiles<T extends MoveProfileFindManyArgs = {}>(args?: Subset<T, MoveProfileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<MoveProfile>>, PrismaPromise<Array<MoveProfileGetPayload<T>>>>;

    workoutMoves<T extends WorkoutMoveFindManyArgs = {}>(args?: Subset<T, WorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>;

    bodyAreaMoveScores<T extends BodyAreaMoveScoreFindManyArgs = {}>(args?: Subset<T, BodyAreaMoveScoreFindManyArgs>): CheckSelect<T, PrismaPromise<Array<BodyAreaMoveScore>>, PrismaPromise<Array<BodyAreaMoveScoreGetPayload<T>>>>;

    userBenchmarks<T extends UserBenchmarkFindManyArgs = {}>(args?: Subset<T, UserBenchmarkFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Move findUnique
   */
  export type MoveFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
    /**
     * Throw an Error if a Move can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Move to fetch.
    **/
    where: MoveWhereUniqueInput
  }


  /**
   * Move findFirst
   */
  export type MoveFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
    /**
     * Throw an Error if a Move can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Move to fetch.
    **/
    where?: MoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moves to fetch.
    **/
    orderBy?: Enumerable<MoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Moves.
    **/
    cursor?: MoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moves from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moves.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Moves.
    **/
    distinct?: Enumerable<MoveScalarFieldEnum>
  }


  /**
   * Move findMany
   */
  export type MoveFindManyArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
    /**
     * Filter, which Moves to fetch.
    **/
    where?: MoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moves to fetch.
    **/
    orderBy?: Enumerable<MoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Moves.
    **/
    cursor?: MoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moves from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moves.
    **/
    skip?: number
    distinct?: Enumerable<MoveScalarFieldEnum>
  }


  /**
   * Move create
   */
  export type MoveCreateArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
    /**
     * The data needed to create a Move.
    **/
    data: XOR<MoveUncheckedCreateInput, MoveCreateInput>
  }


  /**
   * Move update
   */
  export type MoveUpdateArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
    /**
     * The data needed to update a Move.
    **/
    data: XOR<MoveUncheckedUpdateInput, MoveUpdateInput>
    /**
     * Choose, which Move to update.
    **/
    where: MoveWhereUniqueInput
  }


  /**
   * Move updateMany
   */
  export type MoveUpdateManyArgs = {
    data: XOR<MoveUncheckedUpdateManyInput, MoveUpdateManyMutationInput>
    where?: MoveWhereInput
  }


  /**
   * Move upsert
   */
  export type MoveUpsertArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
    /**
     * The filter to search for the Move to update in case it exists.
    **/
    where: MoveWhereUniqueInput
    /**
     * In case the Move found by the `where` argument doesn't exist, create a new Move with this data.
    **/
    create: XOR<MoveUncheckedCreateInput, MoveCreateInput>
    /**
     * In case the Move was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<MoveUncheckedUpdateInput, MoveUpdateInput>
  }


  /**
   * Move delete
   */
  export type MoveDeleteArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
    /**
     * Filter which Move to delete.
    **/
    where: MoveWhereUniqueInput
  }


  /**
   * Move deleteMany
   */
  export type MoveDeleteManyArgs = {
    where?: MoveWhereInput
  }


  /**
   * Move without action
   */
  export type MoveArgs = {
    /**
     * Select specific fields to fetch from the Move
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveInclude | null
  }



  /**
   * Model MoveProfile
   */


  export type AggregateMoveProfile = {
    count: MoveProfileCountAggregateOutputType | null
    min: MoveProfileMinAggregateOutputType | null
    max: MoveProfileMaxAggregateOutputType | null
  }

  export type MoveProfileMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type MoveProfileMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type MoveProfileCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    userId: number | null
    name: number | null
    description: number | null
    _all: number
  }


  export type MoveProfileMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type MoveProfileMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type MoveProfileCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    _all?: true
  }

  export type MoveProfileAggregateArgs = {
    /**
     * Filter which MoveProfile to aggregate.
    **/
    where?: MoveProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveProfiles to fetch.
    **/
    orderBy?: Enumerable<MoveProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: MoveProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveProfiles.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MoveProfiles
    **/
    count?: true | MoveProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: MoveProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: MoveProfileMaxAggregateInputType
  }

  export type GetMoveProfileAggregateType<T extends MoveProfileAggregateArgs> = {
    [P in keyof T & keyof AggregateMoveProfile]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMoveProfile[P]>
      : GetScalarType<T[P], AggregateMoveProfile[P]>
  }



  export type MoveProfileSelect = {
    id?: boolean
    createdAt?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    requiredMoves?: boolean | MoveFindManyArgs
    excludedMoves?: boolean | MoveFindManyArgs
  }

  export type MoveProfileInclude = {
    user?: boolean | UserArgs
    requiredMoves?: boolean | MoveFindManyArgs
    excludedMoves?: boolean | MoveFindManyArgs
  }

  export type MoveProfileGetPayload<
    S extends boolean | null | undefined | MoveProfileArgs,
    U = keyof S
      > = S extends true
        ? MoveProfile
    : S extends undefined
    ? never
    : S extends MoveProfileArgs | MoveProfileFindManyArgs
    ?'include' extends U
    ? MoveProfile  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? UserGetPayload<S['include'][P]> :
        P extends 'requiredMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  :
        P extends 'excludedMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof MoveProfile ?MoveProfile [P]
  : 
          P extends 'user'
        ? UserGetPayload<S['select'][P]> :
        P extends 'requiredMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  :
        P extends 'excludedMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  : never
  } 
    : MoveProfile
  : MoveProfile


  type MoveProfileCountArgs = Merge<
    Omit<MoveProfileFindManyArgs, 'select' | 'include'> & {
      select?: MoveProfileCountAggregateInputType | true
    }
  >

  export interface MoveProfileDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one MoveProfile that matches the filter.
     * @param {MoveProfileFindUniqueArgs} args - Arguments to find a MoveProfile
     * @example
     * // Get one MoveProfile
     * const moveProfile = await prisma.moveProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MoveProfileFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, MoveProfileFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'MoveProfile'> extends True ? CheckSelect<T, Prisma__MoveProfileClient<MoveProfile>, Prisma__MoveProfileClient<MoveProfileGetPayload<T>>> : CheckSelect<T, Prisma__MoveProfileClient<MoveProfile | null >, Prisma__MoveProfileClient<MoveProfileGetPayload<T> | null >>

    /**
     * Find the first MoveProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveProfileFindFirstArgs} args - Arguments to find a MoveProfile
     * @example
     * // Get one MoveProfile
     * const moveProfile = await prisma.moveProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MoveProfileFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, MoveProfileFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'MoveProfile'> extends True ? CheckSelect<T, Prisma__MoveProfileClient<MoveProfile>, Prisma__MoveProfileClient<MoveProfileGetPayload<T>>> : CheckSelect<T, Prisma__MoveProfileClient<MoveProfile | null >, Prisma__MoveProfileClient<MoveProfileGetPayload<T> | null >>

    /**
     * Find zero or more MoveProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveProfileFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MoveProfiles
     * const moveProfiles = await prisma.moveProfile.findMany()
     * 
     * // Get first 10 MoveProfiles
     * const moveProfiles = await prisma.moveProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const moveProfileWithIdOnly = await prisma.moveProfile.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MoveProfileFindManyArgs>(
      args?: SelectSubset<T, MoveProfileFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<MoveProfile>>, PrismaPromise<Array<MoveProfileGetPayload<T>>>>

    /**
     * Create a MoveProfile.
     * @param {MoveProfileCreateArgs} args - Arguments to create a MoveProfile.
     * @example
     * // Create one MoveProfile
     * const MoveProfile = await prisma.moveProfile.create({
     *   data: {
     *     // ... data to create a MoveProfile
     *   }
     * })
     * 
    **/
    create<T extends MoveProfileCreateArgs>(
      args: SelectSubset<T, MoveProfileCreateArgs>
    ): CheckSelect<T, Prisma__MoveProfileClient<MoveProfile>, Prisma__MoveProfileClient<MoveProfileGetPayload<T>>>

    /**
     * Delete a MoveProfile.
     * @param {MoveProfileDeleteArgs} args - Arguments to delete one MoveProfile.
     * @example
     * // Delete one MoveProfile
     * const MoveProfile = await prisma.moveProfile.delete({
     *   where: {
     *     // ... filter to delete one MoveProfile
     *   }
     * })
     * 
    **/
    delete<T extends MoveProfileDeleteArgs>(
      args: SelectSubset<T, MoveProfileDeleteArgs>
    ): CheckSelect<T, Prisma__MoveProfileClient<MoveProfile>, Prisma__MoveProfileClient<MoveProfileGetPayload<T>>>

    /**
     * Update one MoveProfile.
     * @param {MoveProfileUpdateArgs} args - Arguments to update one MoveProfile.
     * @example
     * // Update one MoveProfile
     * const moveProfile = await prisma.moveProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MoveProfileUpdateArgs>(
      args: SelectSubset<T, MoveProfileUpdateArgs>
    ): CheckSelect<T, Prisma__MoveProfileClient<MoveProfile>, Prisma__MoveProfileClient<MoveProfileGetPayload<T>>>

    /**
     * Delete zero or more MoveProfiles.
     * @param {MoveProfileDeleteManyArgs} args - Arguments to filter MoveProfiles to delete.
     * @example
     * // Delete a few MoveProfiles
     * const { count } = await prisma.moveProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MoveProfileDeleteManyArgs>(
      args?: SelectSubset<T, MoveProfileDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more MoveProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MoveProfiles
     * const moveProfile = await prisma.moveProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MoveProfileUpdateManyArgs>(
      args: SelectSubset<T, MoveProfileUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one MoveProfile.
     * @param {MoveProfileUpsertArgs} args - Arguments to update or create a MoveProfile.
     * @example
     * // Update or create a MoveProfile
     * const moveProfile = await prisma.moveProfile.upsert({
     *   create: {
     *     // ... data to create a MoveProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MoveProfile we want to update
     *   }
     * })
    **/
    upsert<T extends MoveProfileUpsertArgs>(
      args: SelectSubset<T, MoveProfileUpsertArgs>
    ): CheckSelect<T, Prisma__MoveProfileClient<MoveProfile>, Prisma__MoveProfileClient<MoveProfileGetPayload<T>>>

    /**
     * Count the number of MoveProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveProfileCountArgs} args - Arguments to filter MoveProfiles to count.
     * @example
     * // Count the number of MoveProfiles
     * const count = await prisma.moveProfile.count({
     *   where: {
     *     // ... the filter for the MoveProfiles we want to count
     *   }
     * })
    **/
    count<T extends MoveProfileCountArgs>(
      args?: Subset<T, MoveProfileCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MoveProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MoveProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MoveProfileAggregateArgs>(args: Subset<T, MoveProfileAggregateArgs>): PrismaPromise<GetMoveProfileAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for MoveProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__MoveProfileClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    requiredMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    excludedMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * MoveProfile findUnique
   */
  export type MoveProfileFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
    /**
     * Throw an Error if a MoveProfile can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which MoveProfile to fetch.
    **/
    where: MoveProfileWhereUniqueInput
  }


  /**
   * MoveProfile findFirst
   */
  export type MoveProfileFindFirstArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
    /**
     * Throw an Error if a MoveProfile can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which MoveProfile to fetch.
    **/
    where?: MoveProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveProfiles to fetch.
    **/
    orderBy?: Enumerable<MoveProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MoveProfiles.
    **/
    cursor?: MoveProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveProfiles.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MoveProfiles.
    **/
    distinct?: Enumerable<MoveProfileScalarFieldEnum>
  }


  /**
   * MoveProfile findMany
   */
  export type MoveProfileFindManyArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
    /**
     * Filter, which MoveProfiles to fetch.
    **/
    where?: MoveProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveProfiles to fetch.
    **/
    orderBy?: Enumerable<MoveProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MoveProfiles.
    **/
    cursor?: MoveProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveProfiles.
    **/
    skip?: number
    distinct?: Enumerable<MoveProfileScalarFieldEnum>
  }


  /**
   * MoveProfile create
   */
  export type MoveProfileCreateArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
    /**
     * The data needed to create a MoveProfile.
    **/
    data: XOR<MoveProfileUncheckedCreateInput, MoveProfileCreateInput>
  }


  /**
   * MoveProfile update
   */
  export type MoveProfileUpdateArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
    /**
     * The data needed to update a MoveProfile.
    **/
    data: XOR<MoveProfileUncheckedUpdateInput, MoveProfileUpdateInput>
    /**
     * Choose, which MoveProfile to update.
    **/
    where: MoveProfileWhereUniqueInput
  }


  /**
   * MoveProfile updateMany
   */
  export type MoveProfileUpdateManyArgs = {
    data: XOR<MoveProfileUncheckedUpdateManyInput, MoveProfileUpdateManyMutationInput>
    where?: MoveProfileWhereInput
  }


  /**
   * MoveProfile upsert
   */
  export type MoveProfileUpsertArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
    /**
     * The filter to search for the MoveProfile to update in case it exists.
    **/
    where: MoveProfileWhereUniqueInput
    /**
     * In case the MoveProfile found by the `where` argument doesn't exist, create a new MoveProfile with this data.
    **/
    create: XOR<MoveProfileUncheckedCreateInput, MoveProfileCreateInput>
    /**
     * In case the MoveProfile was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<MoveProfileUncheckedUpdateInput, MoveProfileUpdateInput>
  }


  /**
   * MoveProfile delete
   */
  export type MoveProfileDeleteArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
    /**
     * Filter which MoveProfile to delete.
    **/
    where: MoveProfileWhereUniqueInput
  }


  /**
   * MoveProfile deleteMany
   */
  export type MoveProfileDeleteManyArgs = {
    where?: MoveProfileWhereInput
  }


  /**
   * MoveProfile without action
   */
  export type MoveProfileArgs = {
    /**
     * Select specific fields to fetch from the MoveProfile
    **/
    select?: MoveProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveProfileInclude | null
  }



  /**
   * Model MoveType
   */


  export type AggregateMoveType = {
    count: MoveTypeCountAggregateOutputType | null
    min: MoveTypeMinAggregateOutputType | null
    max: MoveTypeMaxAggregateOutputType | null
  }

  export type MoveTypeMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    imageUrl: string | null
  }

  export type MoveTypeMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    imageUrl: string | null
  }

  export type MoveTypeCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    name: number | null
    description: number | null
    imageUrl: number | null
    _all: number
  }


  export type MoveTypeMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUrl?: true
  }

  export type MoveTypeMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUrl?: true
  }

  export type MoveTypeCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUrl?: true
    _all?: true
  }

  export type MoveTypeAggregateArgs = {
    /**
     * Filter which MoveType to aggregate.
    **/
    where?: MoveTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveTypes to fetch.
    **/
    orderBy?: Enumerable<MoveTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: MoveTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveTypes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveTypes.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MoveTypes
    **/
    count?: true | MoveTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: MoveTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: MoveTypeMaxAggregateInputType
  }

  export type GetMoveTypeAggregateType<T extends MoveTypeAggregateArgs> = {
    [P in keyof T & keyof AggregateMoveType]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMoveType[P]>
      : GetScalarType<T[P], AggregateMoveType[P]>
  }



  export type MoveTypeSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    description?: boolean
    imageUrl?: boolean
    moves?: boolean | MoveFindManyArgs
  }

  export type MoveTypeInclude = {
    moves?: boolean | MoveFindManyArgs
  }

  export type MoveTypeGetPayload<
    S extends boolean | null | undefined | MoveTypeArgs,
    U = keyof S
      > = S extends true
        ? MoveType
    : S extends undefined
    ? never
    : S extends MoveTypeArgs | MoveTypeFindManyArgs
    ?'include' extends U
    ? MoveType  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'moves'
        ? Array < MoveGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof MoveType ?MoveType [P]
  : 
          P extends 'moves'
        ? Array < MoveGetPayload<S['select'][P]>>  : never
  } 
    : MoveType
  : MoveType


  type MoveTypeCountArgs = Merge<
    Omit<MoveTypeFindManyArgs, 'select' | 'include'> & {
      select?: MoveTypeCountAggregateInputType | true
    }
  >

  export interface MoveTypeDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one MoveType that matches the filter.
     * @param {MoveTypeFindUniqueArgs} args - Arguments to find a MoveType
     * @example
     * // Get one MoveType
     * const moveType = await prisma.moveType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MoveTypeFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, MoveTypeFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'MoveType'> extends True ? CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>> : CheckSelect<T, Prisma__MoveTypeClient<MoveType | null >, Prisma__MoveTypeClient<MoveTypeGetPayload<T> | null >>

    /**
     * Find the first MoveType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeFindFirstArgs} args - Arguments to find a MoveType
     * @example
     * // Get one MoveType
     * const moveType = await prisma.moveType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MoveTypeFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, MoveTypeFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'MoveType'> extends True ? CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>> : CheckSelect<T, Prisma__MoveTypeClient<MoveType | null >, Prisma__MoveTypeClient<MoveTypeGetPayload<T> | null >>

    /**
     * Find zero or more MoveTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MoveTypes
     * const moveTypes = await prisma.moveType.findMany()
     * 
     * // Get first 10 MoveTypes
     * const moveTypes = await prisma.moveType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const moveTypeWithIdOnly = await prisma.moveType.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MoveTypeFindManyArgs>(
      args?: SelectSubset<T, MoveTypeFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<MoveType>>, PrismaPromise<Array<MoveTypeGetPayload<T>>>>

    /**
     * Create a MoveType.
     * @param {MoveTypeCreateArgs} args - Arguments to create a MoveType.
     * @example
     * // Create one MoveType
     * const MoveType = await prisma.moveType.create({
     *   data: {
     *     // ... data to create a MoveType
     *   }
     * })
     * 
    **/
    create<T extends MoveTypeCreateArgs>(
      args: SelectSubset<T, MoveTypeCreateArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Delete a MoveType.
     * @param {MoveTypeDeleteArgs} args - Arguments to delete one MoveType.
     * @example
     * // Delete one MoveType
     * const MoveType = await prisma.moveType.delete({
     *   where: {
     *     // ... filter to delete one MoveType
     *   }
     * })
     * 
    **/
    delete<T extends MoveTypeDeleteArgs>(
      args: SelectSubset<T, MoveTypeDeleteArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Update one MoveType.
     * @param {MoveTypeUpdateArgs} args - Arguments to update one MoveType.
     * @example
     * // Update one MoveType
     * const moveType = await prisma.moveType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MoveTypeUpdateArgs>(
      args: SelectSubset<T, MoveTypeUpdateArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Delete zero or more MoveTypes.
     * @param {MoveTypeDeleteManyArgs} args - Arguments to filter MoveTypes to delete.
     * @example
     * // Delete a few MoveTypes
     * const { count } = await prisma.moveType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MoveTypeDeleteManyArgs>(
      args?: SelectSubset<T, MoveTypeDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more MoveTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MoveTypes
     * const moveType = await prisma.moveType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MoveTypeUpdateManyArgs>(
      args: SelectSubset<T, MoveTypeUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one MoveType.
     * @param {MoveTypeUpsertArgs} args - Arguments to update or create a MoveType.
     * @example
     * // Update or create a MoveType
     * const moveType = await prisma.moveType.upsert({
     *   create: {
     *     // ... data to create a MoveType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MoveType we want to update
     *   }
     * })
    **/
    upsert<T extends MoveTypeUpsertArgs>(
      args: SelectSubset<T, MoveTypeUpsertArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Count the number of MoveTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeCountArgs} args - Arguments to filter MoveTypes to count.
     * @example
     * // Count the number of MoveTypes
     * const count = await prisma.moveType.count({
     *   where: {
     *     // ... the filter for the MoveTypes we want to count
     *   }
     * })
    **/
    count<T extends MoveTypeCountArgs>(
      args?: Subset<T, MoveTypeCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MoveTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MoveType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MoveTypeAggregateArgs>(args: Subset<T, MoveTypeAggregateArgs>): PrismaPromise<GetMoveTypeAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for MoveType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__MoveTypeClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    moves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * MoveType findUnique
   */
  export type MoveTypeFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
    /**
     * Throw an Error if a MoveType can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which MoveType to fetch.
    **/
    where: MoveTypeWhereUniqueInput
  }


  /**
   * MoveType findFirst
   */
  export type MoveTypeFindFirstArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
    /**
     * Throw an Error if a MoveType can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which MoveType to fetch.
    **/
    where?: MoveTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveTypes to fetch.
    **/
    orderBy?: Enumerable<MoveTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MoveTypes.
    **/
    cursor?: MoveTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveTypes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveTypes.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MoveTypes.
    **/
    distinct?: Enumerable<MoveTypeScalarFieldEnum>
  }


  /**
   * MoveType findMany
   */
  export type MoveTypeFindManyArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
    /**
     * Filter, which MoveTypes to fetch.
    **/
    where?: MoveTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveTypes to fetch.
    **/
    orderBy?: Enumerable<MoveTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MoveTypes.
    **/
    cursor?: MoveTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveTypes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveTypes.
    **/
    skip?: number
    distinct?: Enumerable<MoveTypeScalarFieldEnum>
  }


  /**
   * MoveType create
   */
  export type MoveTypeCreateArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
    /**
     * The data needed to create a MoveType.
    **/
    data: XOR<MoveTypeUncheckedCreateInput, MoveTypeCreateInput>
  }


  /**
   * MoveType update
   */
  export type MoveTypeUpdateArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
    /**
     * The data needed to update a MoveType.
    **/
    data: XOR<MoveTypeUncheckedUpdateInput, MoveTypeUpdateInput>
    /**
     * Choose, which MoveType to update.
    **/
    where: MoveTypeWhereUniqueInput
  }


  /**
   * MoveType updateMany
   */
  export type MoveTypeUpdateManyArgs = {
    data: XOR<MoveTypeUncheckedUpdateManyInput, MoveTypeUpdateManyMutationInput>
    where?: MoveTypeWhereInput
  }


  /**
   * MoveType upsert
   */
  export type MoveTypeUpsertArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
    /**
     * The filter to search for the MoveType to update in case it exists.
    **/
    where: MoveTypeWhereUniqueInput
    /**
     * In case the MoveType found by the `where` argument doesn't exist, create a new MoveType with this data.
    **/
    create: XOR<MoveTypeUncheckedCreateInput, MoveTypeCreateInput>
    /**
     * In case the MoveType was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<MoveTypeUncheckedUpdateInput, MoveTypeUpdateInput>
  }


  /**
   * MoveType delete
   */
  export type MoveTypeDeleteArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
    /**
     * Filter which MoveType to delete.
    **/
    where: MoveTypeWhereUniqueInput
  }


  /**
   * MoveType deleteMany
   */
  export type MoveTypeDeleteManyArgs = {
    where?: MoveTypeWhereInput
  }


  /**
   * MoveType without action
   */
  export type MoveTypeArgs = {
    /**
     * Select specific fields to fetch from the MoveType
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: MoveTypeInclude | null
  }



  /**
   * Model ProgressJournal
   */


  export type AggregateProgressJournal = {
    count: ProgressJournalCountAggregateOutputType | null
    min: ProgressJournalMinAggregateOutputType | null
    max: ProgressJournalMaxAggregateOutputType | null
  }

  export type ProgressJournalMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type ProgressJournalMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type ProgressJournalCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    userId: number | null
    name: number | null
    description: number | null
    _all: number
  }


  export type ProgressJournalMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type ProgressJournalMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type ProgressJournalCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    _all?: true
  }

  export type ProgressJournalAggregateArgs = {
    /**
     * Filter which ProgressJournal to aggregate.
    **/
    where?: ProgressJournalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournals to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ProgressJournalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournals.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournals
    **/
    count?: true | ProgressJournalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ProgressJournalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ProgressJournalMaxAggregateInputType
  }

  export type GetProgressJournalAggregateType<T extends ProgressJournalAggregateArgs> = {
    [P in keyof T & keyof AggregateProgressJournal]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournal[P]>
      : GetScalarType<T[P], AggregateProgressJournal[P]>
  }



  export type ProgressJournalSelect = {
    id?: boolean
    createdAt?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    progressJournalEntries?: boolean | ProgressJournalEntryFindManyArgs
    progressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalInclude = {
    user?: boolean | UserArgs
    progressJournalEntries?: boolean | ProgressJournalEntryFindManyArgs
    progressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalGetPayload<
    S extends boolean | null | undefined | ProgressJournalArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournal
    : S extends undefined
    ? never
    : S extends ProgressJournalArgs | ProgressJournalFindManyArgs
    ?'include' extends U
    ? ProgressJournal  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? UserGetPayload<S['include'][P]> :
        P extends 'progressJournalEntries'
        ? Array < ProgressJournalEntryGetPayload<S['include'][P]>>  :
        P extends 'progressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournal ?ProgressJournal [P]
  : 
          P extends 'user'
        ? UserGetPayload<S['select'][P]> :
        P extends 'progressJournalEntries'
        ? Array < ProgressJournalEntryGetPayload<S['select'][P]>>  :
        P extends 'progressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['select'][P]>>  : never
  } 
    : ProgressJournal
  : ProgressJournal


  type ProgressJournalCountArgs = Merge<
    Omit<ProgressJournalFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalCountAggregateInputType | true
    }
  >

  export interface ProgressJournalDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournal that matches the filter.
     * @param {ProgressJournalFindUniqueArgs} args - Arguments to find a ProgressJournal
     * @example
     * // Get one ProgressJournal
     * const progressJournal = await prisma.progressJournal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournal'> extends True ? CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>

    /**
     * Find the first ProgressJournal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalFindFirstArgs} args - Arguments to find a ProgressJournal
     * @example
     * // Get one ProgressJournal
     * const progressJournal = await prisma.progressJournal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournal'> extends True ? CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournals
     * const progressJournals = await prisma.progressJournal.findMany()
     * 
     * // Get first 10 ProgressJournals
     * const progressJournals = await prisma.progressJournal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalWithIdOnly = await prisma.progressJournal.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournal>>, PrismaPromise<Array<ProgressJournalGetPayload<T>>>>

    /**
     * Create a ProgressJournal.
     * @param {ProgressJournalCreateArgs} args - Arguments to create a ProgressJournal.
     * @example
     * // Create one ProgressJournal
     * const ProgressJournal = await prisma.progressJournal.create({
     *   data: {
     *     // ... data to create a ProgressJournal
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalCreateArgs>(
      args: SelectSubset<T, ProgressJournalCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Delete a ProgressJournal.
     * @param {ProgressJournalDeleteArgs} args - Arguments to delete one ProgressJournal.
     * @example
     * // Delete one ProgressJournal
     * const ProgressJournal = await prisma.progressJournal.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournal
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalDeleteArgs>(
      args: SelectSubset<T, ProgressJournalDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Update one ProgressJournal.
     * @param {ProgressJournalUpdateArgs} args - Arguments to update one ProgressJournal.
     * @example
     * // Update one ProgressJournal
     * const progressJournal = await prisma.progressJournal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalUpdateArgs>(
      args: SelectSubset<T, ProgressJournalUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournals.
     * @param {ProgressJournalDeleteManyArgs} args - Arguments to filter ProgressJournals to delete.
     * @example
     * // Delete a few ProgressJournals
     * const { count } = await prisma.progressJournal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournals
     * const progressJournal = await prisma.progressJournal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournal.
     * @param {ProgressJournalUpsertArgs} args - Arguments to update or create a ProgressJournal.
     * @example
     * // Update or create a ProgressJournal
     * const progressJournal = await prisma.progressJournal.upsert({
     *   create: {
     *     // ... data to create a ProgressJournal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournal we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalUpsertArgs>(
      args: SelectSubset<T, ProgressJournalUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Count the number of ProgressJournals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalCountArgs} args - Arguments to filter ProgressJournals to count.
     * @example
     * // Count the number of ProgressJournals
     * const count = await prisma.progressJournal.count({
     *   where: {
     *     // ... the filter for the ProgressJournals we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalCountArgs>(
      args?: Subset<T, ProgressJournalCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalAggregateArgs>(args: Subset<T, ProgressJournalAggregateArgs>): PrismaPromise<GetProgressJournalAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    progressJournalEntries<T extends ProgressJournalEntryFindManyArgs = {}>(args?: Subset<T, ProgressJournalEntryFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalEntry>>, PrismaPromise<Array<ProgressJournalEntryGetPayload<T>>>>;

    progressJournalGoals<T extends ProgressJournalGoalFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoal>>, PrismaPromise<Array<ProgressJournalGoalGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournal findUnique
   */
  export type ProgressJournalFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
    /**
     * Throw an Error if a ProgressJournal can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournal to fetch.
    **/
    where: ProgressJournalWhereUniqueInput
  }


  /**
   * ProgressJournal findFirst
   */
  export type ProgressJournalFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
    /**
     * Throw an Error if a ProgressJournal can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournal to fetch.
    **/
    where?: ProgressJournalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournals to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournals.
    **/
    cursor?: ProgressJournalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournals.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournals.
    **/
    distinct?: Enumerable<ProgressJournalScalarFieldEnum>
  }


  /**
   * ProgressJournal findMany
   */
  export type ProgressJournalFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
    /**
     * Filter, which ProgressJournals to fetch.
    **/
    where?: ProgressJournalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournals to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournals.
    **/
    cursor?: ProgressJournalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournals.
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalScalarFieldEnum>
  }


  /**
   * ProgressJournal create
   */
  export type ProgressJournalCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
    /**
     * The data needed to create a ProgressJournal.
    **/
    data: XOR<ProgressJournalUncheckedCreateInput, ProgressJournalCreateInput>
  }


  /**
   * ProgressJournal update
   */
  export type ProgressJournalUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
    /**
     * The data needed to update a ProgressJournal.
    **/
    data: XOR<ProgressJournalUncheckedUpdateInput, ProgressJournalUpdateInput>
    /**
     * Choose, which ProgressJournal to update.
    **/
    where: ProgressJournalWhereUniqueInput
  }


  /**
   * ProgressJournal updateMany
   */
  export type ProgressJournalUpdateManyArgs = {
    data: XOR<ProgressJournalUncheckedUpdateManyInput, ProgressJournalUpdateManyMutationInput>
    where?: ProgressJournalWhereInput
  }


  /**
   * ProgressJournal upsert
   */
  export type ProgressJournalUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
    /**
     * The filter to search for the ProgressJournal to update in case it exists.
    **/
    where: ProgressJournalWhereUniqueInput
    /**
     * In case the ProgressJournal found by the `where` argument doesn't exist, create a new ProgressJournal with this data.
    **/
    create: XOR<ProgressJournalUncheckedCreateInput, ProgressJournalCreateInput>
    /**
     * In case the ProgressJournal was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ProgressJournalUncheckedUpdateInput, ProgressJournalUpdateInput>
  }


  /**
   * ProgressJournal delete
   */
  export type ProgressJournalDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
    /**
     * Filter which ProgressJournal to delete.
    **/
    where: ProgressJournalWhereUniqueInput
  }


  /**
   * ProgressJournal deleteMany
   */
  export type ProgressJournalDeleteManyArgs = {
    where?: ProgressJournalWhereInput
  }


  /**
   * ProgressJournal without action
   */
  export type ProgressJournalArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalInclude | null
  }



  /**
   * Model ProgressJournalEntry
   */


  export type AggregateProgressJournalEntry = {
    count: ProgressJournalEntryCountAggregateOutputType | null
    avg: ProgressJournalEntryAvgAggregateOutputType | null
    sum: ProgressJournalEntrySumAggregateOutputType | null
    min: ProgressJournalEntryMinAggregateOutputType | null
    max: ProgressJournalEntryMaxAggregateOutputType | null
  }

  export type ProgressJournalEntryAvgAggregateOutputType = {
    bodyweight: number | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
  }

  export type ProgressJournalEntrySumAggregateOutputType = {
    bodyweight: number | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
  }

  export type ProgressJournalEntryMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    notes: string | null
    voiceNoteUrl: string | null
    bodyweight: number | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
    progressJournalId: string | null
  }

  export type ProgressJournalEntryMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    notes: string | null
    voiceNoteUrl: string | null
    bodyweight: number | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
    progressJournalId: string | null
  }

  export type ProgressJournalEntryCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    notes: number | null
    voiceNoteUrl: number | null
    bodyweight: number | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
    progressPhotoUrls: number | null
    progressJournalId: number | null
    _all: number
  }


  export type ProgressJournalEntryAvgAggregateInputType = {
    bodyweight?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
  }

  export type ProgressJournalEntrySumAggregateInputType = {
    bodyweight?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
  }

  export type ProgressJournalEntryMinAggregateInputType = {
    id?: true
    createdAt?: true
    notes?: true
    voiceNoteUrl?: true
    bodyweight?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
    progressJournalId?: true
  }

  export type ProgressJournalEntryMaxAggregateInputType = {
    id?: true
    createdAt?: true
    notes?: true
    voiceNoteUrl?: true
    bodyweight?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
    progressJournalId?: true
  }

  export type ProgressJournalEntryCountAggregateInputType = {
    id?: true
    createdAt?: true
    notes?: true
    voiceNoteUrl?: true
    bodyweight?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
    progressPhotoUrls?: true
    progressJournalId?: true
    _all?: true
  }

  export type ProgressJournalEntryAggregateArgs = {
    /**
     * Filter which ProgressJournalEntry to aggregate.
    **/
    where?: ProgressJournalEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalEntries to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ProgressJournalEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalEntries from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalEntries.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournalEntries
    **/
    count?: true | ProgressJournalEntryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: ProgressJournalEntryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: ProgressJournalEntrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ProgressJournalEntryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ProgressJournalEntryMaxAggregateInputType
  }

  export type GetProgressJournalEntryAggregateType<T extends ProgressJournalEntryAggregateArgs> = {
    [P in keyof T & keyof AggregateProgressJournalEntry]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournalEntry[P]>
      : GetScalarType<T[P], AggregateProgressJournalEntry[P]>
  }



  export type ProgressJournalEntrySelect = {
    id?: boolean
    createdAt?: boolean
    notes?: boolean
    voiceNoteUrl?: boolean
    bodyweight?: boolean
    moodScore?: boolean
    energyScore?: boolean
    stressScore?: boolean
    motivationScore?: boolean
    progressPhotoUrls?: boolean
    progressJournal?: boolean | ProgressJournalArgs
    progressJournalId?: boolean
  }

  export type ProgressJournalEntryInclude = {
    progressJournal?: boolean | ProgressJournalArgs
  }

  export type ProgressJournalEntryGetPayload<
    S extends boolean | null | undefined | ProgressJournalEntryArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournalEntry
    : S extends undefined
    ? never
    : S extends ProgressJournalEntryArgs | ProgressJournalEntryFindManyArgs
    ?'include' extends U
    ? ProgressJournalEntry  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'progressJournal'
        ? ProgressJournalGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournalEntry ?ProgressJournalEntry [P]
  : 
          P extends 'progressJournal'
        ? ProgressJournalGetPayload<S['select'][P]> : never
  } 
    : ProgressJournalEntry
  : ProgressJournalEntry


  type ProgressJournalEntryCountArgs = Merge<
    Omit<ProgressJournalEntryFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalEntryCountAggregateInputType | true
    }
  >

  export interface ProgressJournalEntryDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournalEntry that matches the filter.
     * @param {ProgressJournalEntryFindUniqueArgs} args - Arguments to find a ProgressJournalEntry
     * @example
     * // Get one ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalEntryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalEntryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournalEntry'> extends True ? CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry | null >, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T> | null >>

    /**
     * Find the first ProgressJournalEntry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryFindFirstArgs} args - Arguments to find a ProgressJournalEntry
     * @example
     * // Get one ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalEntryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalEntryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournalEntry'> extends True ? CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry | null >, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournalEntries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournalEntries
     * const progressJournalEntries = await prisma.progressJournalEntry.findMany()
     * 
     * // Get first 10 ProgressJournalEntries
     * const progressJournalEntries = await prisma.progressJournalEntry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalEntryWithIdOnly = await prisma.progressJournalEntry.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalEntryFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalEntryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournalEntry>>, PrismaPromise<Array<ProgressJournalEntryGetPayload<T>>>>

    /**
     * Create a ProgressJournalEntry.
     * @param {ProgressJournalEntryCreateArgs} args - Arguments to create a ProgressJournalEntry.
     * @example
     * // Create one ProgressJournalEntry
     * const ProgressJournalEntry = await prisma.progressJournalEntry.create({
     *   data: {
     *     // ... data to create a ProgressJournalEntry
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalEntryCreateArgs>(
      args: SelectSubset<T, ProgressJournalEntryCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Delete a ProgressJournalEntry.
     * @param {ProgressJournalEntryDeleteArgs} args - Arguments to delete one ProgressJournalEntry.
     * @example
     * // Delete one ProgressJournalEntry
     * const ProgressJournalEntry = await prisma.progressJournalEntry.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournalEntry
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalEntryDeleteArgs>(
      args: SelectSubset<T, ProgressJournalEntryDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Update one ProgressJournalEntry.
     * @param {ProgressJournalEntryUpdateArgs} args - Arguments to update one ProgressJournalEntry.
     * @example
     * // Update one ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalEntryUpdateArgs>(
      args: SelectSubset<T, ProgressJournalEntryUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournalEntries.
     * @param {ProgressJournalEntryDeleteManyArgs} args - Arguments to filter ProgressJournalEntries to delete.
     * @example
     * // Delete a few ProgressJournalEntries
     * const { count } = await prisma.progressJournalEntry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalEntryDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalEntryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournalEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournalEntries
     * const progressJournalEntry = await prisma.progressJournalEntry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalEntryUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalEntryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournalEntry.
     * @param {ProgressJournalEntryUpsertArgs} args - Arguments to update or create a ProgressJournalEntry.
     * @example
     * // Update or create a ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.upsert({
     *   create: {
     *     // ... data to create a ProgressJournalEntry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournalEntry we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalEntryUpsertArgs>(
      args: SelectSubset<T, ProgressJournalEntryUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Count the number of ProgressJournalEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryCountArgs} args - Arguments to filter ProgressJournalEntries to count.
     * @example
     * // Count the number of ProgressJournalEntries
     * const count = await prisma.progressJournalEntry.count({
     *   where: {
     *     // ... the filter for the ProgressJournalEntries we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalEntryCountArgs>(
      args?: Subset<T, ProgressJournalEntryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalEntryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournalEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalEntryAggregateArgs>(args: Subset<T, ProgressJournalEntryAggregateArgs>): PrismaPromise<GetProgressJournalEntryAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournalEntry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalEntryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    progressJournal<T extends ProgressJournalArgs = {}>(args?: Subset<T, ProgressJournalArgs>): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournalEntry findUnique
   */
  export type ProgressJournalEntryFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Throw an Error if a ProgressJournalEntry can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalEntry to fetch.
    **/
    where: ProgressJournalEntryWhereUniqueInput
  }


  /**
   * ProgressJournalEntry findFirst
   */
  export type ProgressJournalEntryFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Throw an Error if a ProgressJournalEntry can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalEntry to fetch.
    **/
    where?: ProgressJournalEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalEntries to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournalEntries.
    **/
    cursor?: ProgressJournalEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalEntries from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalEntries.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournalEntries.
    **/
    distinct?: Enumerable<ProgressJournalEntryScalarFieldEnum>
  }


  /**
   * ProgressJournalEntry findMany
   */
  export type ProgressJournalEntryFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Filter, which ProgressJournalEntries to fetch.
    **/
    where?: ProgressJournalEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalEntries to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournalEntries.
    **/
    cursor?: ProgressJournalEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalEntries from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalEntries.
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalEntryScalarFieldEnum>
  }


  /**
   * ProgressJournalEntry create
   */
  export type ProgressJournalEntryCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * The data needed to create a ProgressJournalEntry.
    **/
    data: XOR<ProgressJournalEntryUncheckedCreateInput, ProgressJournalEntryCreateInput>
  }


  /**
   * ProgressJournalEntry update
   */
  export type ProgressJournalEntryUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * The data needed to update a ProgressJournalEntry.
    **/
    data: XOR<ProgressJournalEntryUncheckedUpdateInput, ProgressJournalEntryUpdateInput>
    /**
     * Choose, which ProgressJournalEntry to update.
    **/
    where: ProgressJournalEntryWhereUniqueInput
  }


  /**
   * ProgressJournalEntry updateMany
   */
  export type ProgressJournalEntryUpdateManyArgs = {
    data: XOR<ProgressJournalEntryUncheckedUpdateManyInput, ProgressJournalEntryUpdateManyMutationInput>
    where?: ProgressJournalEntryWhereInput
  }


  /**
   * ProgressJournalEntry upsert
   */
  export type ProgressJournalEntryUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * The filter to search for the ProgressJournalEntry to update in case it exists.
    **/
    where: ProgressJournalEntryWhereUniqueInput
    /**
     * In case the ProgressJournalEntry found by the `where` argument doesn't exist, create a new ProgressJournalEntry with this data.
    **/
    create: XOR<ProgressJournalEntryUncheckedCreateInput, ProgressJournalEntryCreateInput>
    /**
     * In case the ProgressJournalEntry was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ProgressJournalEntryUncheckedUpdateInput, ProgressJournalEntryUpdateInput>
  }


  /**
   * ProgressJournalEntry delete
   */
  export type ProgressJournalEntryDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Filter which ProgressJournalEntry to delete.
    **/
    where: ProgressJournalEntryWhereUniqueInput
  }


  /**
   * ProgressJournalEntry deleteMany
   */
  export type ProgressJournalEntryDeleteManyArgs = {
    where?: ProgressJournalEntryWhereInput
  }


  /**
   * ProgressJournalEntry without action
   */
  export type ProgressJournalEntryArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalEntryInclude | null
  }



  /**
   * Model ProgressJournalGoal
   */


  export type AggregateProgressJournalGoal = {
    count: ProgressJournalGoalCountAggregateOutputType | null
    min: ProgressJournalGoalMinAggregateOutputType | null
    max: ProgressJournalGoalMaxAggregateOutputType | null
  }

  export type ProgressJournalGoalMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    deadline: Date | null
    completedDate: Date | null
    progressJournalId: string | null
  }

  export type ProgressJournalGoalMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    deadline: Date | null
    completedDate: Date | null
    progressJournalId: string | null
  }

  export type ProgressJournalGoalCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    name: number | null
    description: number | null
    deadline: number | null
    completedDate: number | null
    progressJournalId: number | null
    _all: number
  }


  export type ProgressJournalGoalMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    deadline?: true
    completedDate?: true
    progressJournalId?: true
  }

  export type ProgressJournalGoalMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    deadline?: true
    completedDate?: true
    progressJournalId?: true
  }

  export type ProgressJournalGoalCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    deadline?: true
    completedDate?: true
    progressJournalId?: true
    _all?: true
  }

  export type ProgressJournalGoalAggregateArgs = {
    /**
     * Filter which ProgressJournalGoal to aggregate.
    **/
    where?: ProgressJournalGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoals to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ProgressJournalGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoals.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournalGoals
    **/
    count?: true | ProgressJournalGoalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ProgressJournalGoalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ProgressJournalGoalMaxAggregateInputType
  }

  export type GetProgressJournalGoalAggregateType<T extends ProgressJournalGoalAggregateArgs> = {
    [P in keyof T & keyof AggregateProgressJournalGoal]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournalGoal[P]>
      : GetScalarType<T[P], AggregateProgressJournalGoal[P]>
  }



  export type ProgressJournalGoalSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    description?: boolean
    deadline?: boolean
    completedDate?: boolean
    progressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
    progressJournal?: boolean | ProgressJournalArgs
    progressJournalId?: boolean
  }

  export type ProgressJournalGoalInclude = {
    progressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
    progressJournal?: boolean | ProgressJournalArgs
  }

  export type ProgressJournalGoalGetPayload<
    S extends boolean | null | undefined | ProgressJournalGoalArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournalGoal
    : S extends undefined
    ? never
    : S extends ProgressJournalGoalArgs | ProgressJournalGoalFindManyArgs
    ?'include' extends U
    ? ProgressJournalGoal  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'progressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['include'][P]>>  :
        P extends 'progressJournal'
        ? ProgressJournalGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournalGoal ?ProgressJournalGoal [P]
  : 
          P extends 'progressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['select'][P]>>  :
        P extends 'progressJournal'
        ? ProgressJournalGetPayload<S['select'][P]> : never
  } 
    : ProgressJournalGoal
  : ProgressJournalGoal


  type ProgressJournalGoalCountArgs = Merge<
    Omit<ProgressJournalGoalFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalGoalCountAggregateInputType | true
    }
  >

  export interface ProgressJournalGoalDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournalGoal that matches the filter.
     * @param {ProgressJournalGoalFindUniqueArgs} args - Arguments to find a ProgressJournalGoal
     * @example
     * // Get one ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalGoalFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalGoalFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournalGoal'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal | null >, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T> | null >>

    /**
     * Find the first ProgressJournalGoal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalFindFirstArgs} args - Arguments to find a ProgressJournalGoal
     * @example
     * // Get one ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalGoalFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalGoalFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournalGoal'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal | null >, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournalGoals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournalGoals
     * const progressJournalGoals = await prisma.progressJournalGoal.findMany()
     * 
     * // Get first 10 ProgressJournalGoals
     * const progressJournalGoals = await prisma.progressJournalGoal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalGoalWithIdOnly = await prisma.progressJournalGoal.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalGoalFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoal>>, PrismaPromise<Array<ProgressJournalGoalGetPayload<T>>>>

    /**
     * Create a ProgressJournalGoal.
     * @param {ProgressJournalGoalCreateArgs} args - Arguments to create a ProgressJournalGoal.
     * @example
     * // Create one ProgressJournalGoal
     * const ProgressJournalGoal = await prisma.progressJournalGoal.create({
     *   data: {
     *     // ... data to create a ProgressJournalGoal
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalGoalCreateArgs>(
      args: SelectSubset<T, ProgressJournalGoalCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Delete a ProgressJournalGoal.
     * @param {ProgressJournalGoalDeleteArgs} args - Arguments to delete one ProgressJournalGoal.
     * @example
     * // Delete one ProgressJournalGoal
     * const ProgressJournalGoal = await prisma.progressJournalGoal.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournalGoal
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalGoalDeleteArgs>(
      args: SelectSubset<T, ProgressJournalGoalDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Update one ProgressJournalGoal.
     * @param {ProgressJournalGoalUpdateArgs} args - Arguments to update one ProgressJournalGoal.
     * @example
     * // Update one ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalGoalUpdateArgs>(
      args: SelectSubset<T, ProgressJournalGoalUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournalGoals.
     * @param {ProgressJournalGoalDeleteManyArgs} args - Arguments to filter ProgressJournalGoals to delete.
     * @example
     * // Delete a few ProgressJournalGoals
     * const { count } = await prisma.progressJournalGoal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalGoalDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournalGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournalGoals
     * const progressJournalGoal = await prisma.progressJournalGoal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalGoalUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalGoalUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournalGoal.
     * @param {ProgressJournalGoalUpsertArgs} args - Arguments to update or create a ProgressJournalGoal.
     * @example
     * // Update or create a ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.upsert({
     *   create: {
     *     // ... data to create a ProgressJournalGoal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournalGoal we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalGoalUpsertArgs>(
      args: SelectSubset<T, ProgressJournalGoalUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Count the number of ProgressJournalGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalCountArgs} args - Arguments to filter ProgressJournalGoals to count.
     * @example
     * // Count the number of ProgressJournalGoals
     * const count = await prisma.progressJournalGoal.count({
     *   where: {
     *     // ... the filter for the ProgressJournalGoals we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalGoalCountArgs>(
      args?: Subset<T, ProgressJournalGoalCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalGoalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournalGoal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalGoalAggregateArgs>(args: Subset<T, ProgressJournalGoalAggregateArgs>): PrismaPromise<GetProgressJournalGoalAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournalGoal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalGoalClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    progressJournalGoalTags<T extends ProgressJournalGoalTagFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalTagFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoalTag>>, PrismaPromise<Array<ProgressJournalGoalTagGetPayload<T>>>>;

    progressJournal<T extends ProgressJournalArgs = {}>(args?: Subset<T, ProgressJournalArgs>): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournalGoal findUnique
   */
  export type ProgressJournalGoalFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Throw an Error if a ProgressJournalGoal can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoal to fetch.
    **/
    where: ProgressJournalGoalWhereUniqueInput
  }


  /**
   * ProgressJournalGoal findFirst
   */
  export type ProgressJournalGoalFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Throw an Error if a ProgressJournalGoal can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoal to fetch.
    **/
    where?: ProgressJournalGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoals to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournalGoals.
    **/
    cursor?: ProgressJournalGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoals.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournalGoals.
    **/
    distinct?: Enumerable<ProgressJournalGoalScalarFieldEnum>
  }


  /**
   * ProgressJournalGoal findMany
   */
  export type ProgressJournalGoalFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Filter, which ProgressJournalGoals to fetch.
    **/
    where?: ProgressJournalGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoals to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournalGoals.
    **/
    cursor?: ProgressJournalGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoals.
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalGoalScalarFieldEnum>
  }


  /**
   * ProgressJournalGoal create
   */
  export type ProgressJournalGoalCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * The data needed to create a ProgressJournalGoal.
    **/
    data: XOR<ProgressJournalGoalUncheckedCreateInput, ProgressJournalGoalCreateInput>
  }


  /**
   * ProgressJournalGoal update
   */
  export type ProgressJournalGoalUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * The data needed to update a ProgressJournalGoal.
    **/
    data: XOR<ProgressJournalGoalUncheckedUpdateInput, ProgressJournalGoalUpdateInput>
    /**
     * Choose, which ProgressJournalGoal to update.
    **/
    where: ProgressJournalGoalWhereUniqueInput
  }


  /**
   * ProgressJournalGoal updateMany
   */
  export type ProgressJournalGoalUpdateManyArgs = {
    data: XOR<ProgressJournalGoalUncheckedUpdateManyInput, ProgressJournalGoalUpdateManyMutationInput>
    where?: ProgressJournalGoalWhereInput
  }


  /**
   * ProgressJournalGoal upsert
   */
  export type ProgressJournalGoalUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * The filter to search for the ProgressJournalGoal to update in case it exists.
    **/
    where: ProgressJournalGoalWhereUniqueInput
    /**
     * In case the ProgressJournalGoal found by the `where` argument doesn't exist, create a new ProgressJournalGoal with this data.
    **/
    create: XOR<ProgressJournalGoalUncheckedCreateInput, ProgressJournalGoalCreateInput>
    /**
     * In case the ProgressJournalGoal was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ProgressJournalGoalUncheckedUpdateInput, ProgressJournalGoalUpdateInput>
  }


  /**
   * ProgressJournalGoal delete
   */
  export type ProgressJournalGoalDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Filter which ProgressJournalGoal to delete.
    **/
    where: ProgressJournalGoalWhereUniqueInput
  }


  /**
   * ProgressJournalGoal deleteMany
   */
  export type ProgressJournalGoalDeleteManyArgs = {
    where?: ProgressJournalGoalWhereInput
  }


  /**
   * ProgressJournalGoal without action
   */
  export type ProgressJournalGoalArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalInclude | null
  }



  /**
   * Model ProgressJournalGoalTag
   */


  export type AggregateProgressJournalGoalTag = {
    count: ProgressJournalGoalTagCountAggregateOutputType | null
    min: ProgressJournalGoalTagMinAggregateOutputType | null
    max: ProgressJournalGoalTagMaxAggregateOutputType | null
  }

  export type ProgressJournalGoalTagMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    tag: string | null
    hexColor: string | null
    userId: string | null
  }

  export type ProgressJournalGoalTagMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    tag: string | null
    hexColor: string | null
    userId: string | null
  }

  export type ProgressJournalGoalTagCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    tag: number | null
    hexColor: number | null
    userId: number | null
    _all: number
  }


  export type ProgressJournalGoalTagMinAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    hexColor?: true
    userId?: true
  }

  export type ProgressJournalGoalTagMaxAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    hexColor?: true
    userId?: true
  }

  export type ProgressJournalGoalTagCountAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    hexColor?: true
    userId?: true
    _all?: true
  }

  export type ProgressJournalGoalTagAggregateArgs = {
    /**
     * Filter which ProgressJournalGoalTag to aggregate.
    **/
    where?: ProgressJournalGoalTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoalTags to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalGoalTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ProgressJournalGoalTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoalTags from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoalTags.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournalGoalTags
    **/
    count?: true | ProgressJournalGoalTagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ProgressJournalGoalTagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ProgressJournalGoalTagMaxAggregateInputType
  }

  export type GetProgressJournalGoalTagAggregateType<T extends ProgressJournalGoalTagAggregateArgs> = {
    [P in keyof T & keyof AggregateProgressJournalGoalTag]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournalGoalTag[P]>
      : GetScalarType<T[P], AggregateProgressJournalGoalTag[P]>
  }



  export type ProgressJournalGoalTagSelect = {
    id?: boolean
    createdAt?: boolean
    tag?: boolean
    hexColor?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    progressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalGoalTagInclude = {
    user?: boolean | UserArgs
    progressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalGoalTagGetPayload<
    S extends boolean | null | undefined | ProgressJournalGoalTagArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournalGoalTag
    : S extends undefined
    ? never
    : S extends ProgressJournalGoalTagArgs | ProgressJournalGoalTagFindManyArgs
    ?'include' extends U
    ? ProgressJournalGoalTag  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? UserGetPayload<S['include'][P]> :
        P extends 'progressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournalGoalTag ?ProgressJournalGoalTag [P]
  : 
          P extends 'user'
        ? UserGetPayload<S['select'][P]> :
        P extends 'progressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['select'][P]>>  : never
  } 
    : ProgressJournalGoalTag
  : ProgressJournalGoalTag


  type ProgressJournalGoalTagCountArgs = Merge<
    Omit<ProgressJournalGoalTagFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalGoalTagCountAggregateInputType | true
    }
  >

  export interface ProgressJournalGoalTagDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournalGoalTag that matches the filter.
     * @param {ProgressJournalGoalTagFindUniqueArgs} args - Arguments to find a ProgressJournalGoalTag
     * @example
     * // Get one ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalGoalTagFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalGoalTagFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournalGoalTag'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag | null >, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T> | null >>

    /**
     * Find the first ProgressJournalGoalTag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagFindFirstArgs} args - Arguments to find a ProgressJournalGoalTag
     * @example
     * // Get one ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalGoalTagFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalGoalTagFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournalGoalTag'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag | null >, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournalGoalTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournalGoalTags
     * const progressJournalGoalTags = await prisma.progressJournalGoalTag.findMany()
     * 
     * // Get first 10 ProgressJournalGoalTags
     * const progressJournalGoalTags = await prisma.progressJournalGoalTag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalGoalTagWithIdOnly = await prisma.progressJournalGoalTag.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalGoalTagFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalTagFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoalTag>>, PrismaPromise<Array<ProgressJournalGoalTagGetPayload<T>>>>

    /**
     * Create a ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagCreateArgs} args - Arguments to create a ProgressJournalGoalTag.
     * @example
     * // Create one ProgressJournalGoalTag
     * const ProgressJournalGoalTag = await prisma.progressJournalGoalTag.create({
     *   data: {
     *     // ... data to create a ProgressJournalGoalTag
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalGoalTagCreateArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Delete a ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagDeleteArgs} args - Arguments to delete one ProgressJournalGoalTag.
     * @example
     * // Delete one ProgressJournalGoalTag
     * const ProgressJournalGoalTag = await prisma.progressJournalGoalTag.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournalGoalTag
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalGoalTagDeleteArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Update one ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagUpdateArgs} args - Arguments to update one ProgressJournalGoalTag.
     * @example
     * // Update one ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalGoalTagUpdateArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournalGoalTags.
     * @param {ProgressJournalGoalTagDeleteManyArgs} args - Arguments to filter ProgressJournalGoalTags to delete.
     * @example
     * // Delete a few ProgressJournalGoalTags
     * const { count } = await prisma.progressJournalGoalTag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalGoalTagDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalTagDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournalGoalTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournalGoalTags
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalGoalTagUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagUpsertArgs} args - Arguments to update or create a ProgressJournalGoalTag.
     * @example
     * // Update or create a ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.upsert({
     *   create: {
     *     // ... data to create a ProgressJournalGoalTag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournalGoalTag we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalGoalTagUpsertArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Count the number of ProgressJournalGoalTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagCountArgs} args - Arguments to filter ProgressJournalGoalTags to count.
     * @example
     * // Count the number of ProgressJournalGoalTags
     * const count = await prisma.progressJournalGoalTag.count({
     *   where: {
     *     // ... the filter for the ProgressJournalGoalTags we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalGoalTagCountArgs>(
      args?: Subset<T, ProgressJournalGoalTagCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalGoalTagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournalGoalTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalGoalTagAggregateArgs>(args: Subset<T, ProgressJournalGoalTagAggregateArgs>): PrismaPromise<GetProgressJournalGoalTagAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournalGoalTag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalGoalTagClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    progressJournalGoals<T extends ProgressJournalGoalFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoal>>, PrismaPromise<Array<ProgressJournalGoalGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournalGoalTag findUnique
   */
  export type ProgressJournalGoalTagFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Throw an Error if a ProgressJournalGoalTag can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoalTag to fetch.
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
  }


  /**
   * ProgressJournalGoalTag findFirst
   */
  export type ProgressJournalGoalTagFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Throw an Error if a ProgressJournalGoalTag can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoalTag to fetch.
    **/
    where?: ProgressJournalGoalTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoalTags to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalGoalTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournalGoalTags.
    **/
    cursor?: ProgressJournalGoalTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoalTags from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoalTags.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournalGoalTags.
    **/
    distinct?: Enumerable<ProgressJournalGoalTagScalarFieldEnum>
  }


  /**
   * ProgressJournalGoalTag findMany
   */
  export type ProgressJournalGoalTagFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Filter, which ProgressJournalGoalTags to fetch.
    **/
    where?: ProgressJournalGoalTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoalTags to fetch.
    **/
    orderBy?: Enumerable<ProgressJournalGoalTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournalGoalTags.
    **/
    cursor?: ProgressJournalGoalTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoalTags from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoalTags.
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalGoalTagScalarFieldEnum>
  }


  /**
   * ProgressJournalGoalTag create
   */
  export type ProgressJournalGoalTagCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * The data needed to create a ProgressJournalGoalTag.
    **/
    data: XOR<ProgressJournalGoalTagUncheckedCreateInput, ProgressJournalGoalTagCreateInput>
  }


  /**
   * ProgressJournalGoalTag update
   */
  export type ProgressJournalGoalTagUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * The data needed to update a ProgressJournalGoalTag.
    **/
    data: XOR<ProgressJournalGoalTagUncheckedUpdateInput, ProgressJournalGoalTagUpdateInput>
    /**
     * Choose, which ProgressJournalGoalTag to update.
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
  }


  /**
   * ProgressJournalGoalTag updateMany
   */
  export type ProgressJournalGoalTagUpdateManyArgs = {
    data: XOR<ProgressJournalGoalTagUncheckedUpdateManyInput, ProgressJournalGoalTagUpdateManyMutationInput>
    where?: ProgressJournalGoalTagWhereInput
  }


  /**
   * ProgressJournalGoalTag upsert
   */
  export type ProgressJournalGoalTagUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * The filter to search for the ProgressJournalGoalTag to update in case it exists.
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
    /**
     * In case the ProgressJournalGoalTag found by the `where` argument doesn't exist, create a new ProgressJournalGoalTag with this data.
    **/
    create: XOR<ProgressJournalGoalTagUncheckedCreateInput, ProgressJournalGoalTagCreateInput>
    /**
     * In case the ProgressJournalGoalTag was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ProgressJournalGoalTagUncheckedUpdateInput, ProgressJournalGoalTagUpdateInput>
  }


  /**
   * ProgressJournalGoalTag delete
   */
  export type ProgressJournalGoalTagDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Filter which ProgressJournalGoalTag to delete.
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
  }


  /**
   * ProgressJournalGoalTag deleteMany
   */
  export type ProgressJournalGoalTagDeleteManyArgs = {
    where?: ProgressJournalGoalTagWhereInput
  }


  /**
   * ProgressJournalGoalTag without action
   */
  export type ProgressJournalGoalTagArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProgressJournalGoalTagInclude | null
  }



  /**
   * Model ScheduledWorkout
   */


  export type AggregateScheduledWorkout = {
    count: ScheduledWorkoutCountAggregateOutputType | null
    min: ScheduledWorkoutMinAggregateOutputType | null
    max: ScheduledWorkoutMaxAggregateOutputType | null
  }

  export type ScheduledWorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    notes: string | null
    scheduledAt: Date | null
    workoutId: string | null
    loggedWorkoutId: string | null
    gymProfileId: string | null
  }

  export type ScheduledWorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    notes: string | null
    scheduledAt: Date | null
    workoutId: string | null
    loggedWorkoutId: string | null
    gymProfileId: string | null
  }

  export type ScheduledWorkoutCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    userId: number | null
    notes: number | null
    scheduledAt: number | null
    workoutId: number | null
    loggedWorkoutId: number | null
    gymProfileId: number | null
    _all: number
  }


  export type ScheduledWorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    notes?: true
    scheduledAt?: true
    workoutId?: true
    loggedWorkoutId?: true
    gymProfileId?: true
  }

  export type ScheduledWorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    notes?: true
    scheduledAt?: true
    workoutId?: true
    loggedWorkoutId?: true
    gymProfileId?: true
  }

  export type ScheduledWorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    notes?: true
    scheduledAt?: true
    workoutId?: true
    loggedWorkoutId?: true
    gymProfileId?: true
    _all?: true
  }

  export type ScheduledWorkoutAggregateArgs = {
    /**
     * Filter which ScheduledWorkout to aggregate.
    **/
    where?: ScheduledWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScheduledWorkouts to fetch.
    **/
    orderBy?: Enumerable<ScheduledWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ScheduledWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScheduledWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScheduledWorkouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ScheduledWorkouts
    **/
    count?: true | ScheduledWorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ScheduledWorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ScheduledWorkoutMaxAggregateInputType
  }

  export type GetScheduledWorkoutAggregateType<T extends ScheduledWorkoutAggregateArgs> = {
    [P in keyof T & keyof AggregateScheduledWorkout]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScheduledWorkout[P]>
      : GetScalarType<T[P], AggregateScheduledWorkout[P]>
  }



  export type ScheduledWorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    notes?: boolean
    scheduledAt?: boolean
    workout?: boolean | WorkoutArgs
    workoutId?: boolean
    loggedWorkout?: boolean | LoggedWorkoutArgs
    loggedWorkoutId?: boolean
    gymProfile?: boolean | GymProfileArgs
    gymProfileId?: boolean
  }

  export type ScheduledWorkoutInclude = {
    user?: boolean | UserArgs
    workout?: boolean | WorkoutArgs
    loggedWorkout?: boolean | LoggedWorkoutArgs
    gymProfile?: boolean | GymProfileArgs
  }

  export type ScheduledWorkoutGetPayload<
    S extends boolean | null | undefined | ScheduledWorkoutArgs,
    U = keyof S
      > = S extends true
        ? ScheduledWorkout
    : S extends undefined
    ? never
    : S extends ScheduledWorkoutArgs | ScheduledWorkoutFindManyArgs
    ?'include' extends U
    ? ScheduledWorkout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? UserGetPayload<S['include'][P]> :
        P extends 'workout'
        ? WorkoutGetPayload<S['include'][P]> | null :
        P extends 'loggedWorkout'
        ? LoggedWorkoutGetPayload<S['include'][P]> | null :
        P extends 'gymProfile'
        ? GymProfileGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ScheduledWorkout ?ScheduledWorkout [P]
  : 
          P extends 'user'
        ? UserGetPayload<S['select'][P]> :
        P extends 'workout'
        ? WorkoutGetPayload<S['select'][P]> | null :
        P extends 'loggedWorkout'
        ? LoggedWorkoutGetPayload<S['select'][P]> | null :
        P extends 'gymProfile'
        ? GymProfileGetPayload<S['select'][P]> | null : never
  } 
    : ScheduledWorkout
  : ScheduledWorkout


  type ScheduledWorkoutCountArgs = Merge<
    Omit<ScheduledWorkoutFindManyArgs, 'select' | 'include'> & {
      select?: ScheduledWorkoutCountAggregateInputType | true
    }
  >

  export interface ScheduledWorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ScheduledWorkout that matches the filter.
     * @param {ScheduledWorkoutFindUniqueArgs} args - Arguments to find a ScheduledWorkout
     * @example
     * // Get one ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ScheduledWorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ScheduledWorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ScheduledWorkout'> extends True ? CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout | null >, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T> | null >>

    /**
     * Find the first ScheduledWorkout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutFindFirstArgs} args - Arguments to find a ScheduledWorkout
     * @example
     * // Get one ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ScheduledWorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ScheduledWorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ScheduledWorkout'> extends True ? CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout | null >, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T> | null >>

    /**
     * Find zero or more ScheduledWorkouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ScheduledWorkouts
     * const scheduledWorkouts = await prisma.scheduledWorkout.findMany()
     * 
     * // Get first 10 ScheduledWorkouts
     * const scheduledWorkouts = await prisma.scheduledWorkout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scheduledWorkoutWithIdOnly = await prisma.scheduledWorkout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ScheduledWorkoutFindManyArgs>(
      args?: SelectSubset<T, ScheduledWorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>

    /**
     * Create a ScheduledWorkout.
     * @param {ScheduledWorkoutCreateArgs} args - Arguments to create a ScheduledWorkout.
     * @example
     * // Create one ScheduledWorkout
     * const ScheduledWorkout = await prisma.scheduledWorkout.create({
     *   data: {
     *     // ... data to create a ScheduledWorkout
     *   }
     * })
     * 
    **/
    create<T extends ScheduledWorkoutCreateArgs>(
      args: SelectSubset<T, ScheduledWorkoutCreateArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Delete a ScheduledWorkout.
     * @param {ScheduledWorkoutDeleteArgs} args - Arguments to delete one ScheduledWorkout.
     * @example
     * // Delete one ScheduledWorkout
     * const ScheduledWorkout = await prisma.scheduledWorkout.delete({
     *   where: {
     *     // ... filter to delete one ScheduledWorkout
     *   }
     * })
     * 
    **/
    delete<T extends ScheduledWorkoutDeleteArgs>(
      args: SelectSubset<T, ScheduledWorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Update one ScheduledWorkout.
     * @param {ScheduledWorkoutUpdateArgs} args - Arguments to update one ScheduledWorkout.
     * @example
     * // Update one ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ScheduledWorkoutUpdateArgs>(
      args: SelectSubset<T, ScheduledWorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Delete zero or more ScheduledWorkouts.
     * @param {ScheduledWorkoutDeleteManyArgs} args - Arguments to filter ScheduledWorkouts to delete.
     * @example
     * // Delete a few ScheduledWorkouts
     * const { count } = await prisma.scheduledWorkout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ScheduledWorkoutDeleteManyArgs>(
      args?: SelectSubset<T, ScheduledWorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ScheduledWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ScheduledWorkouts
     * const scheduledWorkout = await prisma.scheduledWorkout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ScheduledWorkoutUpdateManyArgs>(
      args: SelectSubset<T, ScheduledWorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ScheduledWorkout.
     * @param {ScheduledWorkoutUpsertArgs} args - Arguments to update or create a ScheduledWorkout.
     * @example
     * // Update or create a ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.upsert({
     *   create: {
     *     // ... data to create a ScheduledWorkout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ScheduledWorkout we want to update
     *   }
     * })
    **/
    upsert<T extends ScheduledWorkoutUpsertArgs>(
      args: SelectSubset<T, ScheduledWorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Count the number of ScheduledWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutCountArgs} args - Arguments to filter ScheduledWorkouts to count.
     * @example
     * // Count the number of ScheduledWorkouts
     * const count = await prisma.scheduledWorkout.count({
     *   where: {
     *     // ... the filter for the ScheduledWorkouts we want to count
     *   }
     * })
    **/
    count<T extends ScheduledWorkoutCountArgs>(
      args?: Subset<T, ScheduledWorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScheduledWorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ScheduledWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScheduledWorkoutAggregateArgs>(args: Subset<T, ScheduledWorkoutAggregateArgs>): PrismaPromise<GetScheduledWorkoutAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ScheduledWorkout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ScheduledWorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    loggedWorkout<T extends LoggedWorkoutArgs = {}>(args?: Subset<T, LoggedWorkoutArgs>): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>;

    gymProfile<T extends GymProfileArgs = {}>(args?: Subset<T, GymProfileArgs>): CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ScheduledWorkout findUnique
   */
  export type ScheduledWorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Throw an Error if a ScheduledWorkout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ScheduledWorkout to fetch.
    **/
    where: ScheduledWorkoutWhereUniqueInput
  }


  /**
   * ScheduledWorkout findFirst
   */
  export type ScheduledWorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Throw an Error if a ScheduledWorkout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ScheduledWorkout to fetch.
    **/
    where?: ScheduledWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScheduledWorkouts to fetch.
    **/
    orderBy?: Enumerable<ScheduledWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScheduledWorkouts.
    **/
    cursor?: ScheduledWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScheduledWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScheduledWorkouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScheduledWorkouts.
    **/
    distinct?: Enumerable<ScheduledWorkoutScalarFieldEnum>
  }


  /**
   * ScheduledWorkout findMany
   */
  export type ScheduledWorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Filter, which ScheduledWorkouts to fetch.
    **/
    where?: ScheduledWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScheduledWorkouts to fetch.
    **/
    orderBy?: Enumerable<ScheduledWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ScheduledWorkouts.
    **/
    cursor?: ScheduledWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScheduledWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScheduledWorkouts.
    **/
    skip?: number
    distinct?: Enumerable<ScheduledWorkoutScalarFieldEnum>
  }


  /**
   * ScheduledWorkout create
   */
  export type ScheduledWorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * The data needed to create a ScheduledWorkout.
    **/
    data: XOR<ScheduledWorkoutUncheckedCreateInput, ScheduledWorkoutCreateInput>
  }


  /**
   * ScheduledWorkout update
   */
  export type ScheduledWorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * The data needed to update a ScheduledWorkout.
    **/
    data: XOR<ScheduledWorkoutUncheckedUpdateInput, ScheduledWorkoutUpdateInput>
    /**
     * Choose, which ScheduledWorkout to update.
    **/
    where: ScheduledWorkoutWhereUniqueInput
  }


  /**
   * ScheduledWorkout updateMany
   */
  export type ScheduledWorkoutUpdateManyArgs = {
    data: XOR<ScheduledWorkoutUncheckedUpdateManyInput, ScheduledWorkoutUpdateManyMutationInput>
    where?: ScheduledWorkoutWhereInput
  }


  /**
   * ScheduledWorkout upsert
   */
  export type ScheduledWorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * The filter to search for the ScheduledWorkout to update in case it exists.
    **/
    where: ScheduledWorkoutWhereUniqueInput
    /**
     * In case the ScheduledWorkout found by the `where` argument doesn't exist, create a new ScheduledWorkout with this data.
    **/
    create: XOR<ScheduledWorkoutUncheckedCreateInput, ScheduledWorkoutCreateInput>
    /**
     * In case the ScheduledWorkout was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ScheduledWorkoutUncheckedUpdateInput, ScheduledWorkoutUpdateInput>
  }


  /**
   * ScheduledWorkout delete
   */
  export type ScheduledWorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Filter which ScheduledWorkout to delete.
    **/
    where: ScheduledWorkoutWhereUniqueInput
  }


  /**
   * ScheduledWorkout deleteMany
   */
  export type ScheduledWorkoutDeleteManyArgs = {
    where?: ScheduledWorkoutWhereInput
  }


  /**
   * ScheduledWorkout without action
   */
  export type ScheduledWorkoutArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ScheduledWorkoutInclude | null
  }



  /**
   * Model TrainerAccount
   */


  export type AggregateTrainerAccount = {
    count: TrainerAccountCountAggregateOutputType | null
    min: TrainerAccountMinAggregateOutputType | null
    max: TrainerAccountMaxAggregateOutputType | null
  }

  export type TrainerAccountMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
  }

  export type TrainerAccountMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
  }

  export type TrainerAccountCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    userId: number | null
    _all: number
  }


  export type TrainerAccountMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
  }

  export type TrainerAccountMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
  }

  export type TrainerAccountCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    _all?: true
  }

  export type TrainerAccountAggregateArgs = {
    /**
     * Filter which TrainerAccount to aggregate.
    **/
    where?: TrainerAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrainerAccounts to fetch.
    **/
    orderBy?: Enumerable<TrainerAccountOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: TrainerAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrainerAccounts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrainerAccounts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TrainerAccounts
    **/
    count?: true | TrainerAccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: TrainerAccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: TrainerAccountMaxAggregateInputType
  }

  export type GetTrainerAccountAggregateType<T extends TrainerAccountAggregateArgs> = {
    [P in keyof T & keyof AggregateTrainerAccount]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrainerAccount[P]>
      : GetScalarType<T[P], AggregateTrainerAccount[P]>
  }



  export type TrainerAccountSelect = {
    id?: boolean
    createdAt?: boolean
    user?: boolean | UserArgs
    userId?: boolean
  }

  export type TrainerAccountInclude = {
    user?: boolean | UserArgs
  }

  export type TrainerAccountGetPayload<
    S extends boolean | null | undefined | TrainerAccountArgs,
    U = keyof S
      > = S extends true
        ? TrainerAccount
    : S extends undefined
    ? never
    : S extends TrainerAccountArgs | TrainerAccountFindManyArgs
    ?'include' extends U
    ? TrainerAccount  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? UserGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof TrainerAccount ?TrainerAccount [P]
  : 
          P extends 'user'
        ? UserGetPayload<S['select'][P]> : never
  } 
    : TrainerAccount
  : TrainerAccount


  type TrainerAccountCountArgs = Merge<
    Omit<TrainerAccountFindManyArgs, 'select' | 'include'> & {
      select?: TrainerAccountCountAggregateInputType | true
    }
  >

  export interface TrainerAccountDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TrainerAccount that matches the filter.
     * @param {TrainerAccountFindUniqueArgs} args - Arguments to find a TrainerAccount
     * @example
     * // Get one TrainerAccount
     * const trainerAccount = await prisma.trainerAccount.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TrainerAccountFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TrainerAccountFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TrainerAccount'> extends True ? CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount>, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T>>> : CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount | null >, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T> | null >>

    /**
     * Find the first TrainerAccount that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainerAccountFindFirstArgs} args - Arguments to find a TrainerAccount
     * @example
     * // Get one TrainerAccount
     * const trainerAccount = await prisma.trainerAccount.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TrainerAccountFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TrainerAccountFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TrainerAccount'> extends True ? CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount>, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T>>> : CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount | null >, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T> | null >>

    /**
     * Find zero or more TrainerAccounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainerAccountFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TrainerAccounts
     * const trainerAccounts = await prisma.trainerAccount.findMany()
     * 
     * // Get first 10 TrainerAccounts
     * const trainerAccounts = await prisma.trainerAccount.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const trainerAccountWithIdOnly = await prisma.trainerAccount.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TrainerAccountFindManyArgs>(
      args?: SelectSubset<T, TrainerAccountFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TrainerAccount>>, PrismaPromise<Array<TrainerAccountGetPayload<T>>>>

    /**
     * Create a TrainerAccount.
     * @param {TrainerAccountCreateArgs} args - Arguments to create a TrainerAccount.
     * @example
     * // Create one TrainerAccount
     * const TrainerAccount = await prisma.trainerAccount.create({
     *   data: {
     *     // ... data to create a TrainerAccount
     *   }
     * })
     * 
    **/
    create<T extends TrainerAccountCreateArgs>(
      args: SelectSubset<T, TrainerAccountCreateArgs>
    ): CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount>, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T>>>

    /**
     * Delete a TrainerAccount.
     * @param {TrainerAccountDeleteArgs} args - Arguments to delete one TrainerAccount.
     * @example
     * // Delete one TrainerAccount
     * const TrainerAccount = await prisma.trainerAccount.delete({
     *   where: {
     *     // ... filter to delete one TrainerAccount
     *   }
     * })
     * 
    **/
    delete<T extends TrainerAccountDeleteArgs>(
      args: SelectSubset<T, TrainerAccountDeleteArgs>
    ): CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount>, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T>>>

    /**
     * Update one TrainerAccount.
     * @param {TrainerAccountUpdateArgs} args - Arguments to update one TrainerAccount.
     * @example
     * // Update one TrainerAccount
     * const trainerAccount = await prisma.trainerAccount.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TrainerAccountUpdateArgs>(
      args: SelectSubset<T, TrainerAccountUpdateArgs>
    ): CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount>, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T>>>

    /**
     * Delete zero or more TrainerAccounts.
     * @param {TrainerAccountDeleteManyArgs} args - Arguments to filter TrainerAccounts to delete.
     * @example
     * // Delete a few TrainerAccounts
     * const { count } = await prisma.trainerAccount.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TrainerAccountDeleteManyArgs>(
      args?: SelectSubset<T, TrainerAccountDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TrainerAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainerAccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TrainerAccounts
     * const trainerAccount = await prisma.trainerAccount.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TrainerAccountUpdateManyArgs>(
      args: SelectSubset<T, TrainerAccountUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TrainerAccount.
     * @param {TrainerAccountUpsertArgs} args - Arguments to update or create a TrainerAccount.
     * @example
     * // Update or create a TrainerAccount
     * const trainerAccount = await prisma.trainerAccount.upsert({
     *   create: {
     *     // ... data to create a TrainerAccount
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TrainerAccount we want to update
     *   }
     * })
    **/
    upsert<T extends TrainerAccountUpsertArgs>(
      args: SelectSubset<T, TrainerAccountUpsertArgs>
    ): CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount>, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T>>>

    /**
     * Count the number of TrainerAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainerAccountCountArgs} args - Arguments to filter TrainerAccounts to count.
     * @example
     * // Count the number of TrainerAccounts
     * const count = await prisma.trainerAccount.count({
     *   where: {
     *     // ... the filter for the TrainerAccounts we want to count
     *   }
     * })
    **/
    count<T extends TrainerAccountCountArgs>(
      args?: Subset<T, TrainerAccountCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrainerAccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TrainerAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainerAccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrainerAccountAggregateArgs>(args: Subset<T, TrainerAccountAggregateArgs>): PrismaPromise<GetTrainerAccountAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for TrainerAccount.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TrainerAccountClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TrainerAccount findUnique
   */
  export type TrainerAccountFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
    /**
     * Throw an Error if a TrainerAccount can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TrainerAccount to fetch.
    **/
    where: TrainerAccountWhereUniqueInput
  }


  /**
   * TrainerAccount findFirst
   */
  export type TrainerAccountFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
    /**
     * Throw an Error if a TrainerAccount can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TrainerAccount to fetch.
    **/
    where?: TrainerAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrainerAccounts to fetch.
    **/
    orderBy?: Enumerable<TrainerAccountOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrainerAccounts.
    **/
    cursor?: TrainerAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrainerAccounts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrainerAccounts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrainerAccounts.
    **/
    distinct?: Enumerable<TrainerAccountScalarFieldEnum>
  }


  /**
   * TrainerAccount findMany
   */
  export type TrainerAccountFindManyArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
    /**
     * Filter, which TrainerAccounts to fetch.
    **/
    where?: TrainerAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrainerAccounts to fetch.
    **/
    orderBy?: Enumerable<TrainerAccountOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TrainerAccounts.
    **/
    cursor?: TrainerAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrainerAccounts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrainerAccounts.
    **/
    skip?: number
    distinct?: Enumerable<TrainerAccountScalarFieldEnum>
  }


  /**
   * TrainerAccount create
   */
  export type TrainerAccountCreateArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
    /**
     * The data needed to create a TrainerAccount.
    **/
    data: XOR<TrainerAccountUncheckedCreateInput, TrainerAccountCreateInput>
  }


  /**
   * TrainerAccount update
   */
  export type TrainerAccountUpdateArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
    /**
     * The data needed to update a TrainerAccount.
    **/
    data: XOR<TrainerAccountUncheckedUpdateInput, TrainerAccountUpdateInput>
    /**
     * Choose, which TrainerAccount to update.
    **/
    where: TrainerAccountWhereUniqueInput
  }


  /**
   * TrainerAccount updateMany
   */
  export type TrainerAccountUpdateManyArgs = {
    data: XOR<TrainerAccountUncheckedUpdateManyInput, TrainerAccountUpdateManyMutationInput>
    where?: TrainerAccountWhereInput
  }


  /**
   * TrainerAccount upsert
   */
  export type TrainerAccountUpsertArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
    /**
     * The filter to search for the TrainerAccount to update in case it exists.
    **/
    where: TrainerAccountWhereUniqueInput
    /**
     * In case the TrainerAccount found by the `where` argument doesn't exist, create a new TrainerAccount with this data.
    **/
    create: XOR<TrainerAccountUncheckedCreateInput, TrainerAccountCreateInput>
    /**
     * In case the TrainerAccount was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<TrainerAccountUncheckedUpdateInput, TrainerAccountUpdateInput>
  }


  /**
   * TrainerAccount delete
   */
  export type TrainerAccountDeleteArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
    /**
     * Filter which TrainerAccount to delete.
    **/
    where: TrainerAccountWhereUniqueInput
  }


  /**
   * TrainerAccount deleteMany
   */
  export type TrainerAccountDeleteManyArgs = {
    where?: TrainerAccountWhereInput
  }


  /**
   * TrainerAccount without action
   */
  export type TrainerAccountArgs = {
    /**
     * Select specific fields to fetch from the TrainerAccount
    **/
    select?: TrainerAccountSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TrainerAccountInclude | null
  }



  /**
   * Model User
   */


  export type AggregateUser = {
    count: UserCountAggregateOutputType | null
    avg: UserAvgAggregateOutputType | null
    sum: UserSumAggregateOutputType | null
    min: UserMinAggregateOutputType | null
    max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    height: number | null
    weight: number | null
  }

  export type UserSumAggregateOutputType = {
    height: number | null
    weight: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    hasOnboarded: boolean | null
    userProfileScope: UserProfileScope | null
    avatarUrl: string | null
    introVideoUrl: string | null
    introVideoThumbUrl: string | null
    coverImageUrl: string | null
    displayName: string | null
    firstname: string | null
    lastname: string | null
    themePreference: ThemePreference | null
    bio: string | null
    tagline: string | null
    birthdate: Date | null
    gender: Gender | null
    height: number | null
    weight: number | null
    townCity: string | null
    countryCode: string | null
    instagramUrl: string | null
    tiktokUrl: string | null
    youtubeUrl: string | null
    snapUrl: string | null
    linkedinUrl: string | null
    unitSystem: UnitSystem | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    hasOnboarded: boolean | null
    userProfileScope: UserProfileScope | null
    avatarUrl: string | null
    introVideoUrl: string | null
    introVideoThumbUrl: string | null
    coverImageUrl: string | null
    displayName: string | null
    firstname: string | null
    lastname: string | null
    themePreference: ThemePreference | null
    bio: string | null
    tagline: string | null
    birthdate: Date | null
    gender: Gender | null
    height: number | null
    weight: number | null
    townCity: string | null
    countryCode: string | null
    instagramUrl: string | null
    tiktokUrl: string | null
    youtubeUrl: string | null
    snapUrl: string | null
    linkedinUrl: string | null
    unitSystem: UnitSystem | null
  }

  export type UserCountAggregateOutputType = {
    id: number | null
    firebaseUid: number | null
    createdAt: number | null
    hasOnboarded: number | null
    userProfileScope: number | null
    avatarUrl: number | null
    introVideoUrl: number | null
    introVideoThumbUrl: number | null
    coverImageUrl: number | null
    displayName: number | null
    firstname: number | null
    lastname: number | null
    themePreference: number | null
    bio: number | null
    tagline: number | null
    birthdate: number | null
    gender: number | null
    height: number | null
    weight: number | null
    townCity: number | null
    countryCode: number | null
    instagramUrl: number | null
    tiktokUrl: number | null
    youtubeUrl: number | null
    snapUrl: number | null
    linkedinUrl: number | null
    unitSystem: number | null
    _all: number
  }


  export type UserAvgAggregateInputType = {
    height?: true
    weight?: true
  }

  export type UserSumAggregateInputType = {
    height?: true
    weight?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    hasOnboarded?: true
    userProfileScope?: true
    avatarUrl?: true
    introVideoUrl?: true
    introVideoThumbUrl?: true
    coverImageUrl?: true
    displayName?: true
    firstname?: true
    lastname?: true
    themePreference?: true
    bio?: true
    tagline?: true
    birthdate?: true
    gender?: true
    height?: true
    weight?: true
    townCity?: true
    countryCode?: true
    instagramUrl?: true
    tiktokUrl?: true
    youtubeUrl?: true
    snapUrl?: true
    linkedinUrl?: true
    unitSystem?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    hasOnboarded?: true
    userProfileScope?: true
    avatarUrl?: true
    introVideoUrl?: true
    introVideoThumbUrl?: true
    coverImageUrl?: true
    displayName?: true
    firstname?: true
    lastname?: true
    themePreference?: true
    bio?: true
    tagline?: true
    birthdate?: true
    gender?: true
    height?: true
    weight?: true
    townCity?: true
    countryCode?: true
    instagramUrl?: true
    tiktokUrl?: true
    youtubeUrl?: true
    snapUrl?: true
    linkedinUrl?: true
    unitSystem?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    hasOnboarded?: true
    userProfileScope?: true
    avatarUrl?: true
    introVideoUrl?: true
    introVideoThumbUrl?: true
    coverImageUrl?: true
    displayName?: true
    firstname?: true
    lastname?: true
    themePreference?: true
    bio?: true
    tagline?: true
    birthdate?: true
    gender?: true
    height?: true
    weight?: true
    townCity?: true
    countryCode?: true
    instagramUrl?: true
    tiktokUrl?: true
    youtubeUrl?: true
    snapUrl?: true
    linkedinUrl?: true
    unitSystem?: true
    _all?: true
  }

  export type UserAggregateArgs = {
    /**
     * Filter which User to aggregate.
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
    [P in keyof T & keyof AggregateUser]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }



  export type UserSelect = {
    id?: boolean
    firebaseUid?: boolean
    createdAt?: boolean
    hasOnboarded?: boolean
    userProfileScope?: boolean
    avatarUrl?: boolean
    introVideoUrl?: boolean
    introVideoThumbUrl?: boolean
    coverImageUrl?: boolean
    displayName?: boolean
    firstname?: boolean
    lastname?: boolean
    themePreference?: boolean
    bio?: boolean
    tagline?: boolean
    birthdate?: boolean
    gender?: boolean
    height?: boolean
    weight?: boolean
    townCity?: boolean
    countryCode?: boolean
    instagramUrl?: boolean
    tiktokUrl?: boolean
    youtubeUrl?: boolean
    snapUrl?: boolean
    linkedinUrl?: boolean
    unitSystem?: boolean
    followedBy?: boolean | UserFindManyArgs
    following?: boolean | UserFindManyArgs
    customMoves?: boolean | MoveFindManyArgs
    workouts?: boolean | WorkoutFindManyArgs
    scheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    gymProfiles?: boolean | GymProfileFindManyArgs
    moveProfiles?: boolean | MoveProfileFindManyArgs
    workoutPrograms?: boolean | WorkoutProgramFindManyArgs
    workoutProgramEnrolments?: boolean | WorkoutProgramEnrolmentFindManyArgs
    workoutProgramReviews?: boolean | WorkoutProgramReviewFindManyArgs
    userBenchmarks?: boolean | UserBenchmarkFindManyArgs
    collections?: boolean | UserCollectionFindManyArgs
    trainerAccount?: boolean | TrainerAccountArgs
    progressJournals?: boolean | ProgressJournalFindManyArgs
    progressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
  }

  export type UserInclude = {
    followedBy?: boolean | UserFindManyArgs
    following?: boolean | UserFindManyArgs
    customMoves?: boolean | MoveFindManyArgs
    workouts?: boolean | WorkoutFindManyArgs
    scheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    gymProfiles?: boolean | GymProfileFindManyArgs
    moveProfiles?: boolean | MoveProfileFindManyArgs
    workoutPrograms?: boolean | WorkoutProgramFindManyArgs
    workoutProgramEnrolments?: boolean | WorkoutProgramEnrolmentFindManyArgs
    workoutProgramReviews?: boolean | WorkoutProgramReviewFindManyArgs
    userBenchmarks?: boolean | UserBenchmarkFindManyArgs
    collections?: boolean | UserCollectionFindManyArgs
    trainerAccount?: boolean | TrainerAccountArgs
    progressJournals?: boolean | ProgressJournalFindManyArgs
    progressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
  }

  export type UserGetPayload<
    S extends boolean | null | undefined | UserArgs,
    U = keyof S
      > = S extends true
        ? User
    : S extends undefined
    ? never
    : S extends UserArgs | UserFindManyArgs
    ?'include' extends U
    ? User  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'followedBy'
        ? Array < UserGetPayload<S['include'][P]>>  :
        P extends 'following'
        ? Array < UserGetPayload<S['include'][P]>>  :
        P extends 'customMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  :
        P extends 'workouts'
        ? Array < WorkoutGetPayload<S['include'][P]>>  :
        P extends 'scheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  :
        P extends 'gymProfiles'
        ? Array < GymProfileGetPayload<S['include'][P]>>  :
        P extends 'moveProfiles'
        ? Array < MoveProfileGetPayload<S['include'][P]>>  :
        P extends 'workoutPrograms'
        ? Array < WorkoutProgramGetPayload<S['include'][P]>>  :
        P extends 'workoutProgramEnrolments'
        ? Array < WorkoutProgramEnrolmentGetPayload<S['include'][P]>>  :
        P extends 'workoutProgramReviews'
        ? Array < WorkoutProgramReviewGetPayload<S['include'][P]>>  :
        P extends 'userBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['include'][P]>>  :
        P extends 'collections'
        ? Array < UserCollectionGetPayload<S['include'][P]>>  :
        P extends 'trainerAccount'
        ? TrainerAccountGetPayload<S['include'][P]> | null :
        P extends 'progressJournals'
        ? Array < ProgressJournalGetPayload<S['include'][P]>>  :
        P extends 'progressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof User ?User [P]
  : 
          P extends 'followedBy'
        ? Array < UserGetPayload<S['select'][P]>>  :
        P extends 'following'
        ? Array < UserGetPayload<S['select'][P]>>  :
        P extends 'customMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  :
        P extends 'workouts'
        ? Array < WorkoutGetPayload<S['select'][P]>>  :
        P extends 'scheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  :
        P extends 'gymProfiles'
        ? Array < GymProfileGetPayload<S['select'][P]>>  :
        P extends 'moveProfiles'
        ? Array < MoveProfileGetPayload<S['select'][P]>>  :
        P extends 'workoutPrograms'
        ? Array < WorkoutProgramGetPayload<S['select'][P]>>  :
        P extends 'workoutProgramEnrolments'
        ? Array < WorkoutProgramEnrolmentGetPayload<S['select'][P]>>  :
        P extends 'workoutProgramReviews'
        ? Array < WorkoutProgramReviewGetPayload<S['select'][P]>>  :
        P extends 'userBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['select'][P]>>  :
        P extends 'collections'
        ? Array < UserCollectionGetPayload<S['select'][P]>>  :
        P extends 'trainerAccount'
        ? TrainerAccountGetPayload<S['select'][P]> | null :
        P extends 'progressJournals'
        ? Array < ProgressJournalGetPayload<S['select'][P]>>  :
        P extends 'progressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['select'][P]>>  : never
  } 
    : User
  : User


  type UserCountArgs = Merge<
    Omit<UserFindManyArgs, 'select' | 'include'> & {
      select?: UserCountAggregateInputType | true
    }
  >

  export interface UserDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'User'> extends True ? CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>> : CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'User'> extends True ? CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>> : CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs>(
      args?: SelectSubset<T, UserFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs>(
      args: SelectSubset<T, UserCreateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs>(
      args: SelectSubset<T, UserDeleteArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs>(
      args: SelectSubset<T, UserUpdateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs>(
      args?: SelectSubset<T, UserDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs>(
      args: SelectSubset<T, UserUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs>(
      args: SelectSubset<T, UserUpsertArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): PrismaPromise<GetUserAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    followedBy<T extends UserFindManyArgs = {}>(args?: Subset<T, UserFindManyArgs>): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>;

    following<T extends UserFindManyArgs = {}>(args?: Subset<T, UserFindManyArgs>): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>;

    customMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    workouts<T extends WorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>;

    scheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    loggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    gymProfiles<T extends GymProfileFindManyArgs = {}>(args?: Subset<T, GymProfileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<GymProfile>>, PrismaPromise<Array<GymProfileGetPayload<T>>>>;

    moveProfiles<T extends MoveProfileFindManyArgs = {}>(args?: Subset<T, MoveProfileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<MoveProfile>>, PrismaPromise<Array<MoveProfileGetPayload<T>>>>;

    workoutPrograms<T extends WorkoutProgramFindManyArgs = {}>(args?: Subset<T, WorkoutProgramFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgram>>, PrismaPromise<Array<WorkoutProgramGetPayload<T>>>>;

    workoutProgramEnrolments<T extends WorkoutProgramEnrolmentFindManyArgs = {}>(args?: Subset<T, WorkoutProgramEnrolmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgramEnrolment>>, PrismaPromise<Array<WorkoutProgramEnrolmentGetPayload<T>>>>;

    workoutProgramReviews<T extends WorkoutProgramReviewFindManyArgs = {}>(args?: Subset<T, WorkoutProgramReviewFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgramReview>>, PrismaPromise<Array<WorkoutProgramReviewGetPayload<T>>>>;

    userBenchmarks<T extends UserBenchmarkFindManyArgs = {}>(args?: Subset<T, UserBenchmarkFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>;

    collections<T extends UserCollectionFindManyArgs = {}>(args?: Subset<T, UserCollectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserCollection>>, PrismaPromise<Array<UserCollectionGetPayload<T>>>>;

    trainerAccount<T extends TrainerAccountArgs = {}>(args?: Subset<T, TrainerAccountArgs>): CheckSelect<T, Prisma__TrainerAccountClient<TrainerAccount | null >, Prisma__TrainerAccountClient<TrainerAccountGetPayload<T> | null >>;

    progressJournals<T extends ProgressJournalFindManyArgs = {}>(args?: Subset<T, ProgressJournalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournal>>, PrismaPromise<Array<ProgressJournalGetPayload<T>>>>;

    progressJournalGoalTags<T extends ProgressJournalGoalTagFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalTagFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoalTag>>, PrismaPromise<Array<ProgressJournalGoalTagGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * User findUnique
   */
  export type UserFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Throw an Error if a User can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which User to fetch.
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User findFirst
   */
  export type UserFindFirstArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Throw an Error if a User can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which User to fetch.
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
    **/
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User findMany
   */
  export type UserFindManyArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Filter, which Users to fetch.
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
    **/
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User create
   */
  export type UserCreateArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * The data needed to create a User.
    **/
    data: XOR<UserUncheckedCreateInput, UserCreateInput>
  }


  /**
   * User update
   */
  export type UserUpdateArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * The data needed to update a User.
    **/
    data: XOR<UserUncheckedUpdateInput, UserUpdateInput>
    /**
     * Choose, which User to update.
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs = {
    data: XOR<UserUncheckedUpdateManyInput, UserUpdateManyMutationInput>
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * The filter to search for the User to update in case it exists.
    **/
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
    **/
    create: XOR<UserUncheckedCreateInput, UserCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<UserUncheckedUpdateInput, UserUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Filter which User to delete.
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs = {
    where?: UserWhereInput
  }


  /**
   * User without action
   */
  export type UserArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
  }



  /**
   * Model UserBenchmark
   */


  export type AggregateUserBenchmark = {
    count: UserBenchmarkCountAggregateOutputType | null
    avg: UserBenchmarkAvgAggregateOutputType | null
    sum: UserBenchmarkSumAggregateOutputType | null
    min: UserBenchmarkMinAggregateOutputType | null
    max: UserBenchmarkMaxAggregateOutputType | null
  }

  export type UserBenchmarkAvgAggregateOutputType = {
    reps: number
    load: number | null
  }

  export type UserBenchmarkSumAggregateOutputType = {
    reps: number
    load: number | null
  }

  export type UserBenchmarkMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    createdById: string | null
    name: string | null
    description: string | null
    reps: number
    repType: WorkoutMoveRepType | null
    load: number | null
    loadUnit: LoadUnit | null
    distanceUnit: DistanceUnit | null
    scoreType: BenchmarkScoreType | null
    moveId: string | null
  }

  export type UserBenchmarkMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    createdById: string | null
    name: string | null
    description: string | null
    reps: number
    repType: WorkoutMoveRepType | null
    load: number | null
    loadUnit: LoadUnit | null
    distanceUnit: DistanceUnit | null
    scoreType: BenchmarkScoreType | null
    moveId: string | null
  }

  export type UserBenchmarkCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    createdById: number | null
    name: number | null
    description: number | null
    reps: number
    repType: number | null
    load: number | null
    loadUnit: number | null
    distanceUnit: number | null
    scoreType: number | null
    moveId: number | null
    _all: number
  }


  export type UserBenchmarkAvgAggregateInputType = {
    reps?: true
    load?: true
  }

  export type UserBenchmarkSumAggregateInputType = {
    reps?: true
    load?: true
  }

  export type UserBenchmarkMinAggregateInputType = {
    id?: true
    createdAt?: true
    createdById?: true
    name?: true
    description?: true
    reps?: true
    repType?: true
    load?: true
    loadUnit?: true
    distanceUnit?: true
    scoreType?: true
    moveId?: true
  }

  export type UserBenchmarkMaxAggregateInputType = {
    id?: true
    createdAt?: true
    createdById?: true
    name?: true
    description?: true
    reps?: true
    repType?: true
    load?: true
    loadUnit?: true
    distanceUnit?: true
    scoreType?: true
    moveId?: true
  }

  export type UserBenchmarkCountAggregateInputType = {
    id?: true
    createdAt?: true
    createdById?: true
    name?: true
    description?: true
    reps?: true
    repType?: true
    load?: true
    loadUnit?: true
    distanceUnit?: true
    scoreType?: true
    moveId?: true
    _all?: true
  }

  export type UserBenchmarkAggregateArgs = {
    /**
     * Filter which UserBenchmark to aggregate.
    **/
    where?: UserBenchmarkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarks to fetch.
    **/
    orderBy?: Enumerable<UserBenchmarkOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: UserBenchmarkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarks from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarks.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserBenchmarks
    **/
    count?: true | UserBenchmarkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: UserBenchmarkAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: UserBenchmarkSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: UserBenchmarkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: UserBenchmarkMaxAggregateInputType
  }

  export type GetUserBenchmarkAggregateType<T extends UserBenchmarkAggregateArgs> = {
    [P in keyof T & keyof AggregateUserBenchmark]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserBenchmark[P]>
      : GetScalarType<T[P], AggregateUserBenchmark[P]>
  }



  export type UserBenchmarkSelect = {
    id?: boolean
    createdAt?: boolean
    createdBy?: boolean | UserArgs
    createdById?: boolean
    name?: boolean
    description?: boolean
    reps?: boolean
    repType?: boolean
    load?: boolean
    loadUnit?: boolean
    distanceUnit?: boolean
    scoreType?: boolean
    equipment?: boolean | EquipmentFindManyArgs
    move?: boolean | MoveArgs
    moveId?: boolean
    entries?: boolean | UserBenchmarkEntryFindManyArgs
  }

  export type UserBenchmarkInclude = {
    createdBy?: boolean | UserArgs
    equipment?: boolean | EquipmentFindManyArgs
    move?: boolean | MoveArgs
    entries?: boolean | UserBenchmarkEntryFindManyArgs
  }

  export type UserBenchmarkGetPayload<
    S extends boolean | null | undefined | UserBenchmarkArgs,
    U = keyof S
      > = S extends true
        ? UserBenchmark
    : S extends undefined
    ? never
    : S extends UserBenchmarkArgs | UserBenchmarkFindManyArgs
    ?'include' extends U
    ? UserBenchmark  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'createdBy'
        ? UserGetPayload<S['include'][P]> :
        P extends 'equipment'
        ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'move'
        ? MoveGetPayload<S['include'][P]> :
        P extends 'entries'
        ? Array < UserBenchmarkEntryGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UserBenchmark ?UserBenchmark [P]
  : 
          P extends 'createdBy'
        ? UserGetPayload<S['select'][P]> :
        P extends 'equipment'
        ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'move'
        ? MoveGetPayload<S['select'][P]> :
        P extends 'entries'
        ? Array < UserBenchmarkEntryGetPayload<S['select'][P]>>  : never
  } 
    : UserBenchmark
  : UserBenchmark


  type UserBenchmarkCountArgs = Merge<
    Omit<UserBenchmarkFindManyArgs, 'select' | 'include'> & {
      select?: UserBenchmarkCountAggregateInputType | true
    }
  >

  export interface UserBenchmarkDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one UserBenchmark that matches the filter.
     * @param {UserBenchmarkFindUniqueArgs} args - Arguments to find a UserBenchmark
     * @example
     * // Get one UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserBenchmarkFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserBenchmarkFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserBenchmark'> extends True ? CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark | null >, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T> | null >>

    /**
     * Find the first UserBenchmark that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkFindFirstArgs} args - Arguments to find a UserBenchmark
     * @example
     * // Get one UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserBenchmarkFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserBenchmarkFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserBenchmark'> extends True ? CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark | null >, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T> | null >>

    /**
     * Find zero or more UserBenchmarks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserBenchmarks
     * const userBenchmarks = await prisma.userBenchmark.findMany()
     * 
     * // Get first 10 UserBenchmarks
     * const userBenchmarks = await prisma.userBenchmark.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userBenchmarkWithIdOnly = await prisma.userBenchmark.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserBenchmarkFindManyArgs>(
      args?: SelectSubset<T, UserBenchmarkFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>

    /**
     * Create a UserBenchmark.
     * @param {UserBenchmarkCreateArgs} args - Arguments to create a UserBenchmark.
     * @example
     * // Create one UserBenchmark
     * const UserBenchmark = await prisma.userBenchmark.create({
     *   data: {
     *     // ... data to create a UserBenchmark
     *   }
     * })
     * 
    **/
    create<T extends UserBenchmarkCreateArgs>(
      args: SelectSubset<T, UserBenchmarkCreateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Delete a UserBenchmark.
     * @param {UserBenchmarkDeleteArgs} args - Arguments to delete one UserBenchmark.
     * @example
     * // Delete one UserBenchmark
     * const UserBenchmark = await prisma.userBenchmark.delete({
     *   where: {
     *     // ... filter to delete one UserBenchmark
     *   }
     * })
     * 
    **/
    delete<T extends UserBenchmarkDeleteArgs>(
      args: SelectSubset<T, UserBenchmarkDeleteArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Update one UserBenchmark.
     * @param {UserBenchmarkUpdateArgs} args - Arguments to update one UserBenchmark.
     * @example
     * // Update one UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserBenchmarkUpdateArgs>(
      args: SelectSubset<T, UserBenchmarkUpdateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Delete zero or more UserBenchmarks.
     * @param {UserBenchmarkDeleteManyArgs} args - Arguments to filter UserBenchmarks to delete.
     * @example
     * // Delete a few UserBenchmarks
     * const { count } = await prisma.userBenchmark.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserBenchmarkDeleteManyArgs>(
      args?: SelectSubset<T, UserBenchmarkDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserBenchmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserBenchmarks
     * const userBenchmark = await prisma.userBenchmark.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserBenchmarkUpdateManyArgs>(
      args: SelectSubset<T, UserBenchmarkUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserBenchmark.
     * @param {UserBenchmarkUpsertArgs} args - Arguments to update or create a UserBenchmark.
     * @example
     * // Update or create a UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.upsert({
     *   create: {
     *     // ... data to create a UserBenchmark
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserBenchmark we want to update
     *   }
     * })
    **/
    upsert<T extends UserBenchmarkUpsertArgs>(
      args: SelectSubset<T, UserBenchmarkUpsertArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Count the number of UserBenchmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkCountArgs} args - Arguments to filter UserBenchmarks to count.
     * @example
     * // Count the number of UserBenchmarks
     * const count = await prisma.userBenchmark.count({
     *   where: {
     *     // ... the filter for the UserBenchmarks we want to count
     *   }
     * })
    **/
    count<T extends UserBenchmarkCountArgs>(
      args?: Subset<T, UserBenchmarkCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserBenchmarkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserBenchmark.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserBenchmarkAggregateArgs>(args: Subset<T, UserBenchmarkAggregateArgs>): PrismaPromise<GetUserBenchmarkAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for UserBenchmark.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserBenchmarkClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    createdBy<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    equipment<T extends EquipmentFindManyArgs = {}>(args?: Subset<T, EquipmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>;

    move<T extends MoveArgs = {}>(args?: Subset<T, MoveArgs>): CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>;

    entries<T extends UserBenchmarkEntryFindManyArgs = {}>(args?: Subset<T, UserBenchmarkEntryFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmarkEntry>>, PrismaPromise<Array<UserBenchmarkEntryGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * UserBenchmark findUnique
   */
  export type UserBenchmarkFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Throw an Error if a UserBenchmark can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmark to fetch.
    **/
    where: UserBenchmarkWhereUniqueInput
  }


  /**
   * UserBenchmark findFirst
   */
  export type UserBenchmarkFindFirstArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Throw an Error if a UserBenchmark can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmark to fetch.
    **/
    where?: UserBenchmarkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarks to fetch.
    **/
    orderBy?: Enumerable<UserBenchmarkOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserBenchmarks.
    **/
    cursor?: UserBenchmarkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarks from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarks.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserBenchmarks.
    **/
    distinct?: Enumerable<UserBenchmarkScalarFieldEnum>
  }


  /**
   * UserBenchmark findMany
   */
  export type UserBenchmarkFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Filter, which UserBenchmarks to fetch.
    **/
    where?: UserBenchmarkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarks to fetch.
    **/
    orderBy?: Enumerable<UserBenchmarkOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserBenchmarks.
    **/
    cursor?: UserBenchmarkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarks from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarks.
    **/
    skip?: number
    distinct?: Enumerable<UserBenchmarkScalarFieldEnum>
  }


  /**
   * UserBenchmark create
   */
  export type UserBenchmarkCreateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
    /**
     * The data needed to create a UserBenchmark.
    **/
    data: XOR<UserBenchmarkUncheckedCreateInput, UserBenchmarkCreateInput>
  }


  /**
   * UserBenchmark update
   */
  export type UserBenchmarkUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
    /**
     * The data needed to update a UserBenchmark.
    **/
    data: XOR<UserBenchmarkUncheckedUpdateInput, UserBenchmarkUpdateInput>
    /**
     * Choose, which UserBenchmark to update.
    **/
    where: UserBenchmarkWhereUniqueInput
  }


  /**
   * UserBenchmark updateMany
   */
  export type UserBenchmarkUpdateManyArgs = {
    data: XOR<UserBenchmarkUncheckedUpdateManyInput, UserBenchmarkUpdateManyMutationInput>
    where?: UserBenchmarkWhereInput
  }


  /**
   * UserBenchmark upsert
   */
  export type UserBenchmarkUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
    /**
     * The filter to search for the UserBenchmark to update in case it exists.
    **/
    where: UserBenchmarkWhereUniqueInput
    /**
     * In case the UserBenchmark found by the `where` argument doesn't exist, create a new UserBenchmark with this data.
    **/
    create: XOR<UserBenchmarkUncheckedCreateInput, UserBenchmarkCreateInput>
    /**
     * In case the UserBenchmark was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<UserBenchmarkUncheckedUpdateInput, UserBenchmarkUpdateInput>
  }


  /**
   * UserBenchmark delete
   */
  export type UserBenchmarkDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Filter which UserBenchmark to delete.
    **/
    where: UserBenchmarkWhereUniqueInput
  }


  /**
   * UserBenchmark deleteMany
   */
  export type UserBenchmarkDeleteManyArgs = {
    where?: UserBenchmarkWhereInput
  }


  /**
   * UserBenchmark without action
   */
  export type UserBenchmarkArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkInclude | null
  }



  /**
   * Model UserBenchmarkEntry
   */


  export type AggregateUserBenchmarkEntry = {
    count: UserBenchmarkEntryCountAggregateOutputType | null
    avg: UserBenchmarkEntryAvgAggregateOutputType | null
    sum: UserBenchmarkEntrySumAggregateOutputType | null
    min: UserBenchmarkEntryMinAggregateOutputType | null
    max: UserBenchmarkEntryMaxAggregateOutputType | null
  }

  export type UserBenchmarkEntryAvgAggregateOutputType = {
    score: number
  }

  export type UserBenchmarkEntrySumAggregateOutputType = {
    score: number
  }

  export type UserBenchmarkEntryMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    score: number
    notes: string | null
    videoUrl: string | null
    imageUrl: string | null
    userBenchmarkId: string | null
  }

  export type UserBenchmarkEntryMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    score: number
    notes: string | null
    videoUrl: string | null
    imageUrl: string | null
    userBenchmarkId: string | null
  }

  export type UserBenchmarkEntryCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    score: number
    notes: number | null
    videoUrl: number | null
    imageUrl: number | null
    userBenchmarkId: number | null
    _all: number
  }


  export type UserBenchmarkEntryAvgAggregateInputType = {
    score?: true
  }

  export type UserBenchmarkEntrySumAggregateInputType = {
    score?: true
  }

  export type UserBenchmarkEntryMinAggregateInputType = {
    id?: true
    createdAt?: true
    score?: true
    notes?: true
    videoUrl?: true
    imageUrl?: true
    userBenchmarkId?: true
  }

  export type UserBenchmarkEntryMaxAggregateInputType = {
    id?: true
    createdAt?: true
    score?: true
    notes?: true
    videoUrl?: true
    imageUrl?: true
    userBenchmarkId?: true
  }

  export type UserBenchmarkEntryCountAggregateInputType = {
    id?: true
    createdAt?: true
    score?: true
    notes?: true
    videoUrl?: true
    imageUrl?: true
    userBenchmarkId?: true
    _all?: true
  }

  export type UserBenchmarkEntryAggregateArgs = {
    /**
     * Filter which UserBenchmarkEntry to aggregate.
    **/
    where?: UserBenchmarkEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkEntries to fetch.
    **/
    orderBy?: Enumerable<UserBenchmarkEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: UserBenchmarkEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkEntries from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkEntries.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserBenchmarkEntries
    **/
    count?: true | UserBenchmarkEntryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: UserBenchmarkEntryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: UserBenchmarkEntrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: UserBenchmarkEntryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: UserBenchmarkEntryMaxAggregateInputType
  }

  export type GetUserBenchmarkEntryAggregateType<T extends UserBenchmarkEntryAggregateArgs> = {
    [P in keyof T & keyof AggregateUserBenchmarkEntry]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserBenchmarkEntry[P]>
      : GetScalarType<T[P], AggregateUserBenchmarkEntry[P]>
  }



  export type UserBenchmarkEntrySelect = {
    id?: boolean
    createdAt?: boolean
    score?: boolean
    notes?: boolean
    videoUrl?: boolean
    imageUrl?: boolean
    userBenchmark?: boolean | UserBenchmarkArgs
    userBenchmarkId?: boolean
  }

  export type UserBenchmarkEntryInclude = {
    userBenchmark?: boolean | UserBenchmarkArgs
  }

  export type UserBenchmarkEntryGetPayload<
    S extends boolean | null | undefined | UserBenchmarkEntryArgs,
    U = keyof S
      > = S extends true
        ? UserBenchmarkEntry
    : S extends undefined
    ? never
    : S extends UserBenchmarkEntryArgs | UserBenchmarkEntryFindManyArgs
    ?'include' extends U
    ? UserBenchmarkEntry  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'userBenchmark'
        ? UserBenchmarkGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UserBenchmarkEntry ?UserBenchmarkEntry [P]
  : 
          P extends 'userBenchmark'
        ? UserBenchmarkGetPayload<S['select'][P]> : never
  } 
    : UserBenchmarkEntry
  : UserBenchmarkEntry


  type UserBenchmarkEntryCountArgs = Merge<
    Omit<UserBenchmarkEntryFindManyArgs, 'select' | 'include'> & {
      select?: UserBenchmarkEntryCountAggregateInputType | true
    }
  >

  export interface UserBenchmarkEntryDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one UserBenchmarkEntry that matches the filter.
     * @param {UserBenchmarkEntryFindUniqueArgs} args - Arguments to find a UserBenchmarkEntry
     * @example
     * // Get one UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserBenchmarkEntryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserBenchmarkEntryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserBenchmarkEntry'> extends True ? CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry | null >, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T> | null >>

    /**
     * Find the first UserBenchmarkEntry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryFindFirstArgs} args - Arguments to find a UserBenchmarkEntry
     * @example
     * // Get one UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserBenchmarkEntryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserBenchmarkEntryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserBenchmarkEntry'> extends True ? CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry | null >, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T> | null >>

    /**
     * Find zero or more UserBenchmarkEntries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserBenchmarkEntries
     * const userBenchmarkEntries = await prisma.userBenchmarkEntry.findMany()
     * 
     * // Get first 10 UserBenchmarkEntries
     * const userBenchmarkEntries = await prisma.userBenchmarkEntry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userBenchmarkEntryWithIdOnly = await prisma.userBenchmarkEntry.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserBenchmarkEntryFindManyArgs>(
      args?: SelectSubset<T, UserBenchmarkEntryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<UserBenchmarkEntry>>, PrismaPromise<Array<UserBenchmarkEntryGetPayload<T>>>>

    /**
     * Create a UserBenchmarkEntry.
     * @param {UserBenchmarkEntryCreateArgs} args - Arguments to create a UserBenchmarkEntry.
     * @example
     * // Create one UserBenchmarkEntry
     * const UserBenchmarkEntry = await prisma.userBenchmarkEntry.create({
     *   data: {
     *     // ... data to create a UserBenchmarkEntry
     *   }
     * })
     * 
    **/
    create<T extends UserBenchmarkEntryCreateArgs>(
      args: SelectSubset<T, UserBenchmarkEntryCreateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Delete a UserBenchmarkEntry.
     * @param {UserBenchmarkEntryDeleteArgs} args - Arguments to delete one UserBenchmarkEntry.
     * @example
     * // Delete one UserBenchmarkEntry
     * const UserBenchmarkEntry = await prisma.userBenchmarkEntry.delete({
     *   where: {
     *     // ... filter to delete one UserBenchmarkEntry
     *   }
     * })
     * 
    **/
    delete<T extends UserBenchmarkEntryDeleteArgs>(
      args: SelectSubset<T, UserBenchmarkEntryDeleteArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Update one UserBenchmarkEntry.
     * @param {UserBenchmarkEntryUpdateArgs} args - Arguments to update one UserBenchmarkEntry.
     * @example
     * // Update one UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserBenchmarkEntryUpdateArgs>(
      args: SelectSubset<T, UserBenchmarkEntryUpdateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Delete zero or more UserBenchmarkEntries.
     * @param {UserBenchmarkEntryDeleteManyArgs} args - Arguments to filter UserBenchmarkEntries to delete.
     * @example
     * // Delete a few UserBenchmarkEntries
     * const { count } = await prisma.userBenchmarkEntry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserBenchmarkEntryDeleteManyArgs>(
      args?: SelectSubset<T, UserBenchmarkEntryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserBenchmarkEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserBenchmarkEntries
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserBenchmarkEntryUpdateManyArgs>(
      args: SelectSubset<T, UserBenchmarkEntryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserBenchmarkEntry.
     * @param {UserBenchmarkEntryUpsertArgs} args - Arguments to update or create a UserBenchmarkEntry.
     * @example
     * // Update or create a UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.upsert({
     *   create: {
     *     // ... data to create a UserBenchmarkEntry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserBenchmarkEntry we want to update
     *   }
     * })
    **/
    upsert<T extends UserBenchmarkEntryUpsertArgs>(
      args: SelectSubset<T, UserBenchmarkEntryUpsertArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Count the number of UserBenchmarkEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryCountArgs} args - Arguments to filter UserBenchmarkEntries to count.
     * @example
     * // Count the number of UserBenchmarkEntries
     * const count = await prisma.userBenchmarkEntry.count({
     *   where: {
     *     // ... the filter for the UserBenchmarkEntries we want to count
     *   }
     * })
    **/
    count<T extends UserBenchmarkEntryCountArgs>(
      args?: Subset<T, UserBenchmarkEntryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserBenchmarkEntryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserBenchmarkEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserBenchmarkEntryAggregateArgs>(args: Subset<T, UserBenchmarkEntryAggregateArgs>): PrismaPromise<GetUserBenchmarkEntryAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for UserBenchmarkEntry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserBenchmarkEntryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    userBenchmark<T extends UserBenchmarkArgs = {}>(args?: Subset<T, UserBenchmarkArgs>): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark | null >, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * UserBenchmarkEntry findUnique
   */
  export type UserBenchmarkEntryFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Throw an Error if a UserBenchmarkEntry can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmarkEntry to fetch.
    **/
    where: UserBenchmarkEntryWhereUniqueInput
  }


  /**
   * UserBenchmarkEntry findFirst
   */
  export type UserBenchmarkEntryFindFirstArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Throw an Error if a UserBenchmarkEntry can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmarkEntry to fetch.
    **/
    where?: UserBenchmarkEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkEntries to fetch.
    **/
    orderBy?: Enumerable<UserBenchmarkEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserBenchmarkEntries.
    **/
    cursor?: UserBenchmarkEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkEntries from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkEntries.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserBenchmarkEntries.
    **/
    distinct?: Enumerable<UserBenchmarkEntryScalarFieldEnum>
  }


  /**
   * UserBenchmarkEntry findMany
   */
  export type UserBenchmarkEntryFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Filter, which UserBenchmarkEntries to fetch.
    **/
    where?: UserBenchmarkEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkEntries to fetch.
    **/
    orderBy?: Enumerable<UserBenchmarkEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserBenchmarkEntries.
    **/
    cursor?: UserBenchmarkEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkEntries from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkEntries.
    **/
    skip?: number
    distinct?: Enumerable<UserBenchmarkEntryScalarFieldEnum>
  }


  /**
   * UserBenchmarkEntry create
   */
  export type UserBenchmarkEntryCreateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * The data needed to create a UserBenchmarkEntry.
    **/
    data: XOR<UserBenchmarkEntryUncheckedCreateInput, UserBenchmarkEntryCreateInput>
  }


  /**
   * UserBenchmarkEntry update
   */
  export type UserBenchmarkEntryUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * The data needed to update a UserBenchmarkEntry.
    **/
    data: XOR<UserBenchmarkEntryUncheckedUpdateInput, UserBenchmarkEntryUpdateInput>
    /**
     * Choose, which UserBenchmarkEntry to update.
    **/
    where: UserBenchmarkEntryWhereUniqueInput
  }


  /**
   * UserBenchmarkEntry updateMany
   */
  export type UserBenchmarkEntryUpdateManyArgs = {
    data: XOR<UserBenchmarkEntryUncheckedUpdateManyInput, UserBenchmarkEntryUpdateManyMutationInput>
    where?: UserBenchmarkEntryWhereInput
  }


  /**
   * UserBenchmarkEntry upsert
   */
  export type UserBenchmarkEntryUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * The filter to search for the UserBenchmarkEntry to update in case it exists.
    **/
    where: UserBenchmarkEntryWhereUniqueInput
    /**
     * In case the UserBenchmarkEntry found by the `where` argument doesn't exist, create a new UserBenchmarkEntry with this data.
    **/
    create: XOR<UserBenchmarkEntryUncheckedCreateInput, UserBenchmarkEntryCreateInput>
    /**
     * In case the UserBenchmarkEntry was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<UserBenchmarkEntryUncheckedUpdateInput, UserBenchmarkEntryUpdateInput>
  }


  /**
   * UserBenchmarkEntry delete
   */
  export type UserBenchmarkEntryDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Filter which UserBenchmarkEntry to delete.
    **/
    where: UserBenchmarkEntryWhereUniqueInput
  }


  /**
   * UserBenchmarkEntry deleteMany
   */
  export type UserBenchmarkEntryDeleteManyArgs = {
    where?: UserBenchmarkEntryWhereInput
  }


  /**
   * UserBenchmarkEntry without action
   */
  export type UserBenchmarkEntryArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserBenchmarkEntryInclude | null
  }



  /**
   * Model UserCollection
   */


  export type AggregateUserCollection = {
    count: UserCollectionCountAggregateOutputType | null
    min: UserCollectionMinAggregateOutputType | null
    max: UserCollectionMaxAggregateOutputType | null
  }

  export type UserCollectionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type UserCollectionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type UserCollectionCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    userId: number | null
    name: number | null
    description: number | null
    _all: number
  }


  export type UserCollectionMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type UserCollectionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type UserCollectionCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    _all?: true
  }

  export type UserCollectionAggregateArgs = {
    /**
     * Filter which UserCollection to aggregate.
    **/
    where?: UserCollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCollections to fetch.
    **/
    orderBy?: Enumerable<UserCollectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: UserCollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCollections from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCollections.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserCollections
    **/
    count?: true | UserCollectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: UserCollectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: UserCollectionMaxAggregateInputType
  }

  export type GetUserCollectionAggregateType<T extends UserCollectionAggregateArgs> = {
    [P in keyof T & keyof AggregateUserCollection]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserCollection[P]>
      : GetScalarType<T[P], AggregateUserCollection[P]>
  }



  export type UserCollectionSelect = {
    id?: boolean
    createdAt?: boolean
    owner?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    workouts?: boolean | WorkoutFindManyArgs
    workoutPrograms?: boolean | WorkoutProgramFindManyArgs
  }

  export type UserCollectionInclude = {
    owner?: boolean | UserArgs
    workouts?: boolean | WorkoutFindManyArgs
    workoutPrograms?: boolean | WorkoutProgramFindManyArgs
  }

  export type UserCollectionGetPayload<
    S extends boolean | null | undefined | UserCollectionArgs,
    U = keyof S
      > = S extends true
        ? UserCollection
    : S extends undefined
    ? never
    : S extends UserCollectionArgs | UserCollectionFindManyArgs
    ?'include' extends U
    ? UserCollection  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'owner'
        ? UserGetPayload<S['include'][P]> :
        P extends 'workouts'
        ? Array < WorkoutGetPayload<S['include'][P]>>  :
        P extends 'workoutPrograms'
        ? Array < WorkoutProgramGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UserCollection ?UserCollection [P]
  : 
          P extends 'owner'
        ? UserGetPayload<S['select'][P]> :
        P extends 'workouts'
        ? Array < WorkoutGetPayload<S['select'][P]>>  :
        P extends 'workoutPrograms'
        ? Array < WorkoutProgramGetPayload<S['select'][P]>>  : never
  } 
    : UserCollection
  : UserCollection


  type UserCollectionCountArgs = Merge<
    Omit<UserCollectionFindManyArgs, 'select' | 'include'> & {
      select?: UserCollectionCountAggregateInputType | true
    }
  >

  export interface UserCollectionDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one UserCollection that matches the filter.
     * @param {UserCollectionFindUniqueArgs} args - Arguments to find a UserCollection
     * @example
     * // Get one UserCollection
     * const userCollection = await prisma.userCollection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserCollectionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserCollectionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserCollection'> extends True ? CheckSelect<T, Prisma__UserCollectionClient<UserCollection>, Prisma__UserCollectionClient<UserCollectionGetPayload<T>>> : CheckSelect<T, Prisma__UserCollectionClient<UserCollection | null >, Prisma__UserCollectionClient<UserCollectionGetPayload<T> | null >>

    /**
     * Find the first UserCollection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCollectionFindFirstArgs} args - Arguments to find a UserCollection
     * @example
     * // Get one UserCollection
     * const userCollection = await prisma.userCollection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserCollectionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserCollectionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserCollection'> extends True ? CheckSelect<T, Prisma__UserCollectionClient<UserCollection>, Prisma__UserCollectionClient<UserCollectionGetPayload<T>>> : CheckSelect<T, Prisma__UserCollectionClient<UserCollection | null >, Prisma__UserCollectionClient<UserCollectionGetPayload<T> | null >>

    /**
     * Find zero or more UserCollections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCollectionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserCollections
     * const userCollections = await prisma.userCollection.findMany()
     * 
     * // Get first 10 UserCollections
     * const userCollections = await prisma.userCollection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userCollectionWithIdOnly = await prisma.userCollection.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserCollectionFindManyArgs>(
      args?: SelectSubset<T, UserCollectionFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<UserCollection>>, PrismaPromise<Array<UserCollectionGetPayload<T>>>>

    /**
     * Create a UserCollection.
     * @param {UserCollectionCreateArgs} args - Arguments to create a UserCollection.
     * @example
     * // Create one UserCollection
     * const UserCollection = await prisma.userCollection.create({
     *   data: {
     *     // ... data to create a UserCollection
     *   }
     * })
     * 
    **/
    create<T extends UserCollectionCreateArgs>(
      args: SelectSubset<T, UserCollectionCreateArgs>
    ): CheckSelect<T, Prisma__UserCollectionClient<UserCollection>, Prisma__UserCollectionClient<UserCollectionGetPayload<T>>>

    /**
     * Delete a UserCollection.
     * @param {UserCollectionDeleteArgs} args - Arguments to delete one UserCollection.
     * @example
     * // Delete one UserCollection
     * const UserCollection = await prisma.userCollection.delete({
     *   where: {
     *     // ... filter to delete one UserCollection
     *   }
     * })
     * 
    **/
    delete<T extends UserCollectionDeleteArgs>(
      args: SelectSubset<T, UserCollectionDeleteArgs>
    ): CheckSelect<T, Prisma__UserCollectionClient<UserCollection>, Prisma__UserCollectionClient<UserCollectionGetPayload<T>>>

    /**
     * Update one UserCollection.
     * @param {UserCollectionUpdateArgs} args - Arguments to update one UserCollection.
     * @example
     * // Update one UserCollection
     * const userCollection = await prisma.userCollection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserCollectionUpdateArgs>(
      args: SelectSubset<T, UserCollectionUpdateArgs>
    ): CheckSelect<T, Prisma__UserCollectionClient<UserCollection>, Prisma__UserCollectionClient<UserCollectionGetPayload<T>>>

    /**
     * Delete zero or more UserCollections.
     * @param {UserCollectionDeleteManyArgs} args - Arguments to filter UserCollections to delete.
     * @example
     * // Delete a few UserCollections
     * const { count } = await prisma.userCollection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserCollectionDeleteManyArgs>(
      args?: SelectSubset<T, UserCollectionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserCollections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCollectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserCollections
     * const userCollection = await prisma.userCollection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserCollectionUpdateManyArgs>(
      args: SelectSubset<T, UserCollectionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserCollection.
     * @param {UserCollectionUpsertArgs} args - Arguments to update or create a UserCollection.
     * @example
     * // Update or create a UserCollection
     * const userCollection = await prisma.userCollection.upsert({
     *   create: {
     *     // ... data to create a UserCollection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserCollection we want to update
     *   }
     * })
    **/
    upsert<T extends UserCollectionUpsertArgs>(
      args: SelectSubset<T, UserCollectionUpsertArgs>
    ): CheckSelect<T, Prisma__UserCollectionClient<UserCollection>, Prisma__UserCollectionClient<UserCollectionGetPayload<T>>>

    /**
     * Count the number of UserCollections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCollectionCountArgs} args - Arguments to filter UserCollections to count.
     * @example
     * // Count the number of UserCollections
     * const count = await prisma.userCollection.count({
     *   where: {
     *     // ... the filter for the UserCollections we want to count
     *   }
     * })
    **/
    count<T extends UserCollectionCountArgs>(
      args?: Subset<T, UserCollectionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCollectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserCollection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCollectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserCollectionAggregateArgs>(args: Subset<T, UserCollectionAggregateArgs>): PrismaPromise<GetUserCollectionAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for UserCollection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserCollectionClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    owner<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    workouts<T extends WorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>;

    workoutPrograms<T extends WorkoutProgramFindManyArgs = {}>(args?: Subset<T, WorkoutProgramFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgram>>, PrismaPromise<Array<WorkoutProgramGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * UserCollection findUnique
   */
  export type UserCollectionFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
    /**
     * Throw an Error if a UserCollection can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserCollection to fetch.
    **/
    where: UserCollectionWhereUniqueInput
  }


  /**
   * UserCollection findFirst
   */
  export type UserCollectionFindFirstArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
    /**
     * Throw an Error if a UserCollection can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserCollection to fetch.
    **/
    where?: UserCollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCollections to fetch.
    **/
    orderBy?: Enumerable<UserCollectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserCollections.
    **/
    cursor?: UserCollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCollections from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCollections.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserCollections.
    **/
    distinct?: Enumerable<UserCollectionScalarFieldEnum>
  }


  /**
   * UserCollection findMany
   */
  export type UserCollectionFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
    /**
     * Filter, which UserCollections to fetch.
    **/
    where?: UserCollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCollections to fetch.
    **/
    orderBy?: Enumerable<UserCollectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserCollections.
    **/
    cursor?: UserCollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCollections from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCollections.
    **/
    skip?: number
    distinct?: Enumerable<UserCollectionScalarFieldEnum>
  }


  /**
   * UserCollection create
   */
  export type UserCollectionCreateArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
    /**
     * The data needed to create a UserCollection.
    **/
    data: XOR<UserCollectionUncheckedCreateInput, UserCollectionCreateInput>
  }


  /**
   * UserCollection update
   */
  export type UserCollectionUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
    /**
     * The data needed to update a UserCollection.
    **/
    data: XOR<UserCollectionUncheckedUpdateInput, UserCollectionUpdateInput>
    /**
     * Choose, which UserCollection to update.
    **/
    where: UserCollectionWhereUniqueInput
  }


  /**
   * UserCollection updateMany
   */
  export type UserCollectionUpdateManyArgs = {
    data: XOR<UserCollectionUncheckedUpdateManyInput, UserCollectionUpdateManyMutationInput>
    where?: UserCollectionWhereInput
  }


  /**
   * UserCollection upsert
   */
  export type UserCollectionUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
    /**
     * The filter to search for the UserCollection to update in case it exists.
    **/
    where: UserCollectionWhereUniqueInput
    /**
     * In case the UserCollection found by the `where` argument doesn't exist, create a new UserCollection with this data.
    **/
    create: XOR<UserCollectionUncheckedCreateInput, UserCollectionCreateInput>
    /**
     * In case the UserCollection was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<UserCollectionUncheckedUpdateInput, UserCollectionUpdateInput>
  }


  /**
   * UserCollection delete
   */
  export type UserCollectionDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
    /**
     * Filter which UserCollection to delete.
    **/
    where: UserCollectionWhereUniqueInput
  }


  /**
   * UserCollection deleteMany
   */
  export type UserCollectionDeleteManyArgs = {
    where?: UserCollectionWhereInput
  }


  /**
   * UserCollection without action
   */
  export type UserCollectionArgs = {
    /**
     * Select specific fields to fetch from the UserCollection
    **/
    select?: UserCollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserCollectionInclude | null
  }



  /**
   * Model Workout
   */


  export type AggregateWorkout = {
    count: WorkoutCountAggregateOutputType | null
    avg: WorkoutAvgAggregateOutputType | null
    sum: WorkoutSumAggregateOutputType | null
    min: WorkoutMinAggregateOutputType | null
    max: WorkoutMaxAggregateOutputType | null
  }

  export type WorkoutAvgAggregateOutputType = {
    timecap: number | null
    difficultyLevel: number
  }

  export type WorkoutSumAggregateOutputType = {
    timecap: number | null
    difficultyLevel: number
  }

  export type WorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    createdById: string | null
    name: string | null
    summary: string | null
    description: string | null
    demoVideoUrl: string | null
    demoVideoThumbUrl: string | null
    youtubeVideoUrl: string | null
    spotifyAudio: string | null
    imageUrl: string | null
    timecap: number | null
    difficultyLevel: number
    scope: ContentAccessScope | null
    workoutTypeId: string | null
  }

  export type WorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    createdById: string | null
    name: string | null
    summary: string | null
    description: string | null
    demoVideoUrl: string | null
    demoVideoThumbUrl: string | null
    youtubeVideoUrl: string | null
    spotifyAudio: string | null
    imageUrl: string | null
    timecap: number | null
    difficultyLevel: number
    scope: ContentAccessScope | null
    workoutTypeId: string | null
  }

  export type WorkoutCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    createdById: number | null
    name: number | null
    summary: number | null
    description: number | null
    demoVideoUrl: number | null
    demoVideoThumbUrl: number | null
    youtubeVideoUrl: number | null
    spotifyAudio: number | null
    imageUrl: number | null
    timecap: number | null
    builderData: number | null
    difficultyLevel: number
    scope: number | null
    workoutTypeId: number | null
    _all: number
  }


  export type WorkoutAvgAggregateInputType = {
    timecap?: true
    difficultyLevel?: true
  }

  export type WorkoutSumAggregateInputType = {
    timecap?: true
    difficultyLevel?: true
  }

  export type WorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    createdById?: true
    name?: true
    summary?: true
    description?: true
    demoVideoUrl?: true
    demoVideoThumbUrl?: true
    youtubeVideoUrl?: true
    spotifyAudio?: true
    imageUrl?: true
    timecap?: true
    difficultyLevel?: true
    scope?: true
    workoutTypeId?: true
  }

  export type WorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    createdById?: true
    name?: true
    summary?: true
    description?: true
    demoVideoUrl?: true
    demoVideoThumbUrl?: true
    youtubeVideoUrl?: true
    spotifyAudio?: true
    imageUrl?: true
    timecap?: true
    difficultyLevel?: true
    scope?: true
    workoutTypeId?: true
  }

  export type WorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    createdById?: true
    name?: true
    summary?: true
    description?: true
    demoVideoUrl?: true
    demoVideoThumbUrl?: true
    youtubeVideoUrl?: true
    spotifyAudio?: true
    imageUrl?: true
    timecap?: true
    builderData?: true
    difficultyLevel?: true
    scope?: true
    workoutTypeId?: true
    _all?: true
  }

  export type WorkoutAggregateArgs = {
    /**
     * Filter which Workout to aggregate.
    **/
    where?: WorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workouts to fetch.
    **/
    orderBy?: Enumerable<WorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Workouts
    **/
    count?: true | WorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WorkoutAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WorkoutSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutMaxAggregateInputType
  }

  export type GetWorkoutAggregateType<T extends WorkoutAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkout]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkout[P]>
      : GetScalarType<T[P], AggregateWorkout[P]>
  }



  export type WorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    createdBy?: boolean | UserArgs
    createdById?: boolean
    name?: boolean
    summary?: boolean
    description?: boolean
    demoVideoUrl?: boolean
    demoVideoThumbUrl?: boolean
    youtubeVideoUrl?: boolean
    spotifyAudio?: boolean
    imageUrl?: boolean
    timecap?: boolean
    builderData?: boolean
    difficultyLevel?: boolean
    scope?: boolean
    workoutType?: boolean | WorkoutTypeArgs
    workoutTypeId?: boolean
    workoutSections?: boolean | WorkoutSectionFindManyArgs
    scheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    workoutProgramWorkouts?: boolean | WorkoutProgramWorkoutFindManyArgs
    userCollections?: boolean | UserCollectionFindManyArgs
  }

  export type WorkoutInclude = {
    createdBy?: boolean | UserArgs
    workoutType?: boolean | WorkoutTypeArgs
    workoutSections?: boolean | WorkoutSectionFindManyArgs
    scheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    workoutProgramWorkouts?: boolean | WorkoutProgramWorkoutFindManyArgs
    userCollections?: boolean | UserCollectionFindManyArgs
  }

  export type WorkoutGetPayload<
    S extends boolean | null | undefined | WorkoutArgs,
    U = keyof S
      > = S extends true
        ? Workout
    : S extends undefined
    ? never
    : S extends WorkoutArgs | WorkoutFindManyArgs
    ?'include' extends U
    ? Workout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'createdBy'
        ? UserGetPayload<S['include'][P]> | null :
        P extends 'workoutType'
        ? WorkoutTypeGetPayload<S['include'][P]> :
        P extends 'workoutSections'
        ? Array < WorkoutSectionGetPayload<S['include'][P]>>  :
        P extends 'scheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  :
        P extends 'workoutProgramWorkouts'
        ? Array < WorkoutProgramWorkoutGetPayload<S['include'][P]>>  :
        P extends 'userCollections'
        ? Array < UserCollectionGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Workout ?Workout [P]
  : 
          P extends 'createdBy'
        ? UserGetPayload<S['select'][P]> | null :
        P extends 'workoutType'
        ? WorkoutTypeGetPayload<S['select'][P]> :
        P extends 'workoutSections'
        ? Array < WorkoutSectionGetPayload<S['select'][P]>>  :
        P extends 'scheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  :
        P extends 'workoutProgramWorkouts'
        ? Array < WorkoutProgramWorkoutGetPayload<S['select'][P]>>  :
        P extends 'userCollections'
        ? Array < UserCollectionGetPayload<S['select'][P]>>  : never
  } 
    : Workout
  : Workout


  type WorkoutCountArgs = Merge<
    Omit<WorkoutFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutCountAggregateInputType | true
    }
  >

  export interface WorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Workout that matches the filter.
     * @param {WorkoutFindUniqueArgs} args - Arguments to find a Workout
     * @example
     * // Get one Workout
     * const workout = await prisma.workout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Workout'> extends True ? CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>

    /**
     * Find the first Workout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutFindFirstArgs} args - Arguments to find a Workout
     * @example
     * // Get one Workout
     * const workout = await prisma.workout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Workout'> extends True ? CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>

    /**
     * Find zero or more Workouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Workouts
     * const workouts = await prisma.workout.findMany()
     * 
     * // Get first 10 Workouts
     * const workouts = await prisma.workout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutWithIdOnly = await prisma.workout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutFindManyArgs>(
      args?: SelectSubset<T, WorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>

    /**
     * Create a Workout.
     * @param {WorkoutCreateArgs} args - Arguments to create a Workout.
     * @example
     * // Create one Workout
     * const Workout = await prisma.workout.create({
     *   data: {
     *     // ... data to create a Workout
     *   }
     * })
     * 
    **/
    create<T extends WorkoutCreateArgs>(
      args: SelectSubset<T, WorkoutCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Delete a Workout.
     * @param {WorkoutDeleteArgs} args - Arguments to delete one Workout.
     * @example
     * // Delete one Workout
     * const Workout = await prisma.workout.delete({
     *   where: {
     *     // ... filter to delete one Workout
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutDeleteArgs>(
      args: SelectSubset<T, WorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Update one Workout.
     * @param {WorkoutUpdateArgs} args - Arguments to update one Workout.
     * @example
     * // Update one Workout
     * const workout = await prisma.workout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutUpdateArgs>(
      args: SelectSubset<T, WorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Delete zero or more Workouts.
     * @param {WorkoutDeleteManyArgs} args - Arguments to filter Workouts to delete.
     * @example
     * // Delete a few Workouts
     * const { count } = await prisma.workout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Workouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Workouts
     * const workout = await prisma.workout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutUpdateManyArgs>(
      args: SelectSubset<T, WorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Workout.
     * @param {WorkoutUpsertArgs} args - Arguments to update or create a Workout.
     * @example
     * // Update or create a Workout
     * const workout = await prisma.workout.upsert({
     *   create: {
     *     // ... data to create a Workout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Workout we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutUpsertArgs>(
      args: SelectSubset<T, WorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Count the number of Workouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutCountArgs} args - Arguments to filter Workouts to count.
     * @example
     * // Count the number of Workouts
     * const count = await prisma.workout.count({
     *   where: {
     *     // ... the filter for the Workouts we want to count
     *   }
     * })
    **/
    count<T extends WorkoutCountArgs>(
      args?: Subset<T, WorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Workout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutAggregateArgs>(args: Subset<T, WorkoutAggregateArgs>): PrismaPromise<GetWorkoutAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Workout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    createdBy<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    workoutType<T extends WorkoutTypeArgs = {}>(args?: Subset<T, WorkoutTypeArgs>): CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType | null >, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T> | null >>;

    workoutSections<T extends WorkoutSectionFindManyArgs = {}>(args?: Subset<T, WorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSection>>, PrismaPromise<Array<WorkoutSectionGetPayload<T>>>>;

    scheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    loggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    workoutProgramWorkouts<T extends WorkoutProgramWorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutProgramWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgramWorkout>>, PrismaPromise<Array<WorkoutProgramWorkoutGetPayload<T>>>>;

    userCollections<T extends UserCollectionFindManyArgs = {}>(args?: Subset<T, UserCollectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserCollection>>, PrismaPromise<Array<UserCollectionGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Workout findUnique
   */
  export type WorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
    /**
     * Throw an Error if a Workout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Workout to fetch.
    **/
    where: WorkoutWhereUniqueInput
  }


  /**
   * Workout findFirst
   */
  export type WorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
    /**
     * Throw an Error if a Workout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Workout to fetch.
    **/
    where?: WorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workouts to fetch.
    **/
    orderBy?: Enumerable<WorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Workouts.
    **/
    cursor?: WorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Workouts.
    **/
    distinct?: Enumerable<WorkoutScalarFieldEnum>
  }


  /**
   * Workout findMany
   */
  export type WorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
    /**
     * Filter, which Workouts to fetch.
    **/
    where?: WorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workouts to fetch.
    **/
    orderBy?: Enumerable<WorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Workouts.
    **/
    cursor?: WorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workouts.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutScalarFieldEnum>
  }


  /**
   * Workout create
   */
  export type WorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
    /**
     * The data needed to create a Workout.
    **/
    data: XOR<WorkoutUncheckedCreateInput, WorkoutCreateInput>
  }


  /**
   * Workout update
   */
  export type WorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
    /**
     * The data needed to update a Workout.
    **/
    data: XOR<WorkoutUncheckedUpdateInput, WorkoutUpdateInput>
    /**
     * Choose, which Workout to update.
    **/
    where: WorkoutWhereUniqueInput
  }


  /**
   * Workout updateMany
   */
  export type WorkoutUpdateManyArgs = {
    data: XOR<WorkoutUncheckedUpdateManyInput, WorkoutUpdateManyMutationInput>
    where?: WorkoutWhereInput
  }


  /**
   * Workout upsert
   */
  export type WorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
    /**
     * The filter to search for the Workout to update in case it exists.
    **/
    where: WorkoutWhereUniqueInput
    /**
     * In case the Workout found by the `where` argument doesn't exist, create a new Workout with this data.
    **/
    create: XOR<WorkoutUncheckedCreateInput, WorkoutCreateInput>
    /**
     * In case the Workout was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutUncheckedUpdateInput, WorkoutUpdateInput>
  }


  /**
   * Workout delete
   */
  export type WorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
    /**
     * Filter which Workout to delete.
    **/
    where: WorkoutWhereUniqueInput
  }


  /**
   * Workout deleteMany
   */
  export type WorkoutDeleteManyArgs = {
    where?: WorkoutWhereInput
  }


  /**
   * Workout without action
   */
  export type WorkoutArgs = {
    /**
     * Select specific fields to fetch from the Workout
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutInclude | null
  }



  /**
   * Model WorkoutGoal
   */


  export type AggregateWorkoutGoal = {
    count: WorkoutGoalCountAggregateOutputType | null
    min: WorkoutGoalMinAggregateOutputType | null
    max: WorkoutGoalMaxAggregateOutputType | null
  }

  export type WorkoutGoalMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    placeholderImageUrl: string | null
  }

  export type WorkoutGoalMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    placeholderImageUrl: string | null
  }

  export type WorkoutGoalCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    name: number | null
    description: number | null
    placeholderImageUrl: number | null
    _all: number
  }


  export type WorkoutGoalMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    placeholderImageUrl?: true
  }

  export type WorkoutGoalMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    placeholderImageUrl?: true
  }

  export type WorkoutGoalCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    placeholderImageUrl?: true
    _all?: true
  }

  export type WorkoutGoalAggregateArgs = {
    /**
     * Filter which WorkoutGoal to aggregate.
    **/
    where?: WorkoutGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutGoals to fetch.
    **/
    orderBy?: Enumerable<WorkoutGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutGoals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutGoals.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutGoals
    **/
    count?: true | WorkoutGoalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutGoalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutGoalMaxAggregateInputType
  }

  export type GetWorkoutGoalAggregateType<T extends WorkoutGoalAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutGoal]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutGoal[P]>
      : GetScalarType<T[P], AggregateWorkoutGoal[P]>
  }



  export type WorkoutGoalSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    description?: boolean
    placeholderImageUrl?: boolean
    workoutPrograms?: boolean | WorkoutProgramFindManyArgs
  }

  export type WorkoutGoalInclude = {
    workoutPrograms?: boolean | WorkoutProgramFindManyArgs
  }

  export type WorkoutGoalGetPayload<
    S extends boolean | null | undefined | WorkoutGoalArgs,
    U = keyof S
      > = S extends true
        ? WorkoutGoal
    : S extends undefined
    ? never
    : S extends WorkoutGoalArgs | WorkoutGoalFindManyArgs
    ?'include' extends U
    ? WorkoutGoal  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'workoutPrograms'
        ? Array < WorkoutProgramGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutGoal ?WorkoutGoal [P]
  : 
          P extends 'workoutPrograms'
        ? Array < WorkoutProgramGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutGoal
  : WorkoutGoal


  type WorkoutGoalCountArgs = Merge<
    Omit<WorkoutGoalFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutGoalCountAggregateInputType | true
    }
  >

  export interface WorkoutGoalDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutGoal that matches the filter.
     * @param {WorkoutGoalFindUniqueArgs} args - Arguments to find a WorkoutGoal
     * @example
     * // Get one WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutGoalFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutGoalFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutGoal'> extends True ? CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal | null >, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T> | null >>

    /**
     * Find the first WorkoutGoal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalFindFirstArgs} args - Arguments to find a WorkoutGoal
     * @example
     * // Get one WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutGoalFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutGoalFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutGoal'> extends True ? CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal | null >, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutGoals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutGoals
     * const workoutGoals = await prisma.workoutGoal.findMany()
     * 
     * // Get first 10 WorkoutGoals
     * const workoutGoals = await prisma.workoutGoal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutGoalWithIdOnly = await prisma.workoutGoal.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutGoalFindManyArgs>(
      args?: SelectSubset<T, WorkoutGoalFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutGoal>>, PrismaPromise<Array<WorkoutGoalGetPayload<T>>>>

    /**
     * Create a WorkoutGoal.
     * @param {WorkoutGoalCreateArgs} args - Arguments to create a WorkoutGoal.
     * @example
     * // Create one WorkoutGoal
     * const WorkoutGoal = await prisma.workoutGoal.create({
     *   data: {
     *     // ... data to create a WorkoutGoal
     *   }
     * })
     * 
    **/
    create<T extends WorkoutGoalCreateArgs>(
      args: SelectSubset<T, WorkoutGoalCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Delete a WorkoutGoal.
     * @param {WorkoutGoalDeleteArgs} args - Arguments to delete one WorkoutGoal.
     * @example
     * // Delete one WorkoutGoal
     * const WorkoutGoal = await prisma.workoutGoal.delete({
     *   where: {
     *     // ... filter to delete one WorkoutGoal
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutGoalDeleteArgs>(
      args: SelectSubset<T, WorkoutGoalDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Update one WorkoutGoal.
     * @param {WorkoutGoalUpdateArgs} args - Arguments to update one WorkoutGoal.
     * @example
     * // Update one WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutGoalUpdateArgs>(
      args: SelectSubset<T, WorkoutGoalUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Delete zero or more WorkoutGoals.
     * @param {WorkoutGoalDeleteManyArgs} args - Arguments to filter WorkoutGoals to delete.
     * @example
     * // Delete a few WorkoutGoals
     * const { count } = await prisma.workoutGoal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutGoalDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutGoalDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutGoals
     * const workoutGoal = await prisma.workoutGoal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutGoalUpdateManyArgs>(
      args: SelectSubset<T, WorkoutGoalUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutGoal.
     * @param {WorkoutGoalUpsertArgs} args - Arguments to update or create a WorkoutGoal.
     * @example
     * // Update or create a WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.upsert({
     *   create: {
     *     // ... data to create a WorkoutGoal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutGoal we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutGoalUpsertArgs>(
      args: SelectSubset<T, WorkoutGoalUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Count the number of WorkoutGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalCountArgs} args - Arguments to filter WorkoutGoals to count.
     * @example
     * // Count the number of WorkoutGoals
     * const count = await prisma.workoutGoal.count({
     *   where: {
     *     // ... the filter for the WorkoutGoals we want to count
     *   }
     * })
    **/
    count<T extends WorkoutGoalCountArgs>(
      args?: Subset<T, WorkoutGoalCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutGoalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutGoal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutGoalAggregateArgs>(args: Subset<T, WorkoutGoalAggregateArgs>): PrismaPromise<GetWorkoutGoalAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutGoal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutGoalClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    workoutPrograms<T extends WorkoutProgramFindManyArgs = {}>(args?: Subset<T, WorkoutProgramFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgram>>, PrismaPromise<Array<WorkoutProgramGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutGoal findUnique
   */
  export type WorkoutGoalFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Throw an Error if a WorkoutGoal can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutGoal to fetch.
    **/
    where: WorkoutGoalWhereUniqueInput
  }


  /**
   * WorkoutGoal findFirst
   */
  export type WorkoutGoalFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Throw an Error if a WorkoutGoal can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutGoal to fetch.
    **/
    where?: WorkoutGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutGoals to fetch.
    **/
    orderBy?: Enumerable<WorkoutGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutGoals.
    **/
    cursor?: WorkoutGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutGoals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutGoals.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutGoals.
    **/
    distinct?: Enumerable<WorkoutGoalScalarFieldEnum>
  }


  /**
   * WorkoutGoal findMany
   */
  export type WorkoutGoalFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Filter, which WorkoutGoals to fetch.
    **/
    where?: WorkoutGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutGoals to fetch.
    **/
    orderBy?: Enumerable<WorkoutGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutGoals.
    **/
    cursor?: WorkoutGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutGoals from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutGoals.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutGoalScalarFieldEnum>
  }


  /**
   * WorkoutGoal create
   */
  export type WorkoutGoalCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
    /**
     * The data needed to create a WorkoutGoal.
    **/
    data: XOR<WorkoutGoalUncheckedCreateInput, WorkoutGoalCreateInput>
  }


  /**
   * WorkoutGoal update
   */
  export type WorkoutGoalUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
    /**
     * The data needed to update a WorkoutGoal.
    **/
    data: XOR<WorkoutGoalUncheckedUpdateInput, WorkoutGoalUpdateInput>
    /**
     * Choose, which WorkoutGoal to update.
    **/
    where: WorkoutGoalWhereUniqueInput
  }


  /**
   * WorkoutGoal updateMany
   */
  export type WorkoutGoalUpdateManyArgs = {
    data: XOR<WorkoutGoalUncheckedUpdateManyInput, WorkoutGoalUpdateManyMutationInput>
    where?: WorkoutGoalWhereInput
  }


  /**
   * WorkoutGoal upsert
   */
  export type WorkoutGoalUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
    /**
     * The filter to search for the WorkoutGoal to update in case it exists.
    **/
    where: WorkoutGoalWhereUniqueInput
    /**
     * In case the WorkoutGoal found by the `where` argument doesn't exist, create a new WorkoutGoal with this data.
    **/
    create: XOR<WorkoutGoalUncheckedCreateInput, WorkoutGoalCreateInput>
    /**
     * In case the WorkoutGoal was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutGoalUncheckedUpdateInput, WorkoutGoalUpdateInput>
  }


  /**
   * WorkoutGoal delete
   */
  export type WorkoutGoalDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Filter which WorkoutGoal to delete.
    **/
    where: WorkoutGoalWhereUniqueInput
  }


  /**
   * WorkoutGoal deleteMany
   */
  export type WorkoutGoalDeleteManyArgs = {
    where?: WorkoutGoalWhereInput
  }


  /**
   * WorkoutGoal without action
   */
  export type WorkoutGoalArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutGoalInclude | null
  }



  /**
   * Model WorkoutMove
   */


  export type AggregateWorkoutMove = {
    count: WorkoutMoveCountAggregateOutputType | null
    avg: WorkoutMoveAvgAggregateOutputType | null
    sum: WorkoutMoveSumAggregateOutputType | null
    min: WorkoutMoveMinAggregateOutputType | null
    max: WorkoutMoveMaxAggregateOutputType | null
  }

  export type WorkoutMoveAvgAggregateOutputType = {
    sortPosition: number
    reps: number | null
    loadAmount: number | null
    duration: number | null
  }

  export type WorkoutMoveSumAggregateOutputType = {
    sortPosition: number
    reps: number | null
    loadAmount: number | null
    duration: number | null
  }

  export type WorkoutMoveMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    sortPosition: number
    repType: WorkoutMoveRepType | null
    reps: number | null
    distanceUnit: DistanceUnit | null
    loadAmount: number | null
    loadUnit: LoadUnit | null
    duration: number | null
    description: string | null
    notes: string | null
    moveId: string | null
    selectedEquipmentId: string | null
    workoutSectionId: string | null
  }

  export type WorkoutMoveMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    sortPosition: number
    repType: WorkoutMoveRepType | null
    reps: number | null
    distanceUnit: DistanceUnit | null
    loadAmount: number | null
    loadUnit: LoadUnit | null
    duration: number | null
    description: string | null
    notes: string | null
    moveId: string | null
    selectedEquipmentId: string | null
    workoutSectionId: string | null
  }

  export type WorkoutMoveCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    sortPosition: number
    repType: number | null
    reps: number | null
    distanceUnit: number | null
    loadAmount: number | null
    loadUnit: number | null
    duration: number | null
    description: number | null
    notes: number | null
    moveId: number | null
    selectedEquipmentId: number | null
    workoutSectionId: number | null
    _all: number
  }


  export type WorkoutMoveAvgAggregateInputType = {
    sortPosition?: true
    reps?: true
    loadAmount?: true
    duration?: true
  }

  export type WorkoutMoveSumAggregateInputType = {
    sortPosition?: true
    reps?: true
    loadAmount?: true
    duration?: true
  }

  export type WorkoutMoveMinAggregateInputType = {
    id?: true
    createdAt?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distanceUnit?: true
    loadAmount?: true
    loadUnit?: true
    duration?: true
    description?: true
    notes?: true
    moveId?: true
    selectedEquipmentId?: true
    workoutSectionId?: true
  }

  export type WorkoutMoveMaxAggregateInputType = {
    id?: true
    createdAt?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distanceUnit?: true
    loadAmount?: true
    loadUnit?: true
    duration?: true
    description?: true
    notes?: true
    moveId?: true
    selectedEquipmentId?: true
    workoutSectionId?: true
  }

  export type WorkoutMoveCountAggregateInputType = {
    id?: true
    createdAt?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distanceUnit?: true
    loadAmount?: true
    loadUnit?: true
    duration?: true
    description?: true
    notes?: true
    moveId?: true
    selectedEquipmentId?: true
    workoutSectionId?: true
    _all?: true
  }

  export type WorkoutMoveAggregateArgs = {
    /**
     * Filter which WorkoutMove to aggregate.
    **/
    where?: WorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutMoves to fetch.
    **/
    orderBy?: Enumerable<WorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutMoves from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutMoves.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutMoves
    **/
    count?: true | WorkoutMoveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WorkoutMoveAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WorkoutMoveSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutMoveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutMoveMaxAggregateInputType
  }

  export type GetWorkoutMoveAggregateType<T extends WorkoutMoveAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutMove]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutMove[P]>
      : GetScalarType<T[P], AggregateWorkoutMove[P]>
  }



  export type WorkoutMoveSelect = {
    id?: boolean
    createdAt?: boolean
    sortPosition?: boolean
    repType?: boolean
    reps?: boolean
    distanceUnit?: boolean
    loadAmount?: boolean
    loadUnit?: boolean
    duration?: boolean
    description?: boolean
    notes?: boolean
    move?: boolean | MoveArgs
    moveId?: boolean
    selectedEquipment?: boolean | EquipmentArgs
    selectedEquipmentId?: boolean
    workoutSection?: boolean | WorkoutSectionArgs
    workoutSectionId?: boolean
  }

  export type WorkoutMoveInclude = {
    move?: boolean | MoveArgs
    selectedEquipment?: boolean | EquipmentArgs
    workoutSection?: boolean | WorkoutSectionArgs
  }

  export type WorkoutMoveGetPayload<
    S extends boolean | null | undefined | WorkoutMoveArgs,
    U = keyof S
      > = S extends true
        ? WorkoutMove
    : S extends undefined
    ? never
    : S extends WorkoutMoveArgs | WorkoutMoveFindManyArgs
    ?'include' extends U
    ? WorkoutMove  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'move'
        ? MoveGetPayload<S['include'][P]> :
        P extends 'selectedEquipment'
        ? EquipmentGetPayload<S['include'][P]> | null :
        P extends 'workoutSection'
        ? WorkoutSectionGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutMove ?WorkoutMove [P]
  : 
          P extends 'move'
        ? MoveGetPayload<S['select'][P]> :
        P extends 'selectedEquipment'
        ? EquipmentGetPayload<S['select'][P]> | null :
        P extends 'workoutSection'
        ? WorkoutSectionGetPayload<S['select'][P]> : never
  } 
    : WorkoutMove
  : WorkoutMove


  type WorkoutMoveCountArgs = Merge<
    Omit<WorkoutMoveFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutMoveCountAggregateInputType | true
    }
  >

  export interface WorkoutMoveDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutMove that matches the filter.
     * @param {WorkoutMoveFindUniqueArgs} args - Arguments to find a WorkoutMove
     * @example
     * // Get one WorkoutMove
     * const workoutMove = await prisma.workoutMove.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutMoveFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutMoveFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutMove'> extends True ? CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove | null >, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T> | null >>

    /**
     * Find the first WorkoutMove that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveFindFirstArgs} args - Arguments to find a WorkoutMove
     * @example
     * // Get one WorkoutMove
     * const workoutMove = await prisma.workoutMove.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutMoveFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutMoveFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutMove'> extends True ? CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove | null >, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutMoves that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutMoves
     * const workoutMoves = await prisma.workoutMove.findMany()
     * 
     * // Get first 10 WorkoutMoves
     * const workoutMoves = await prisma.workoutMove.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutMoveWithIdOnly = await prisma.workoutMove.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutMoveFindManyArgs>(
      args?: SelectSubset<T, WorkoutMoveFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>

    /**
     * Create a WorkoutMove.
     * @param {WorkoutMoveCreateArgs} args - Arguments to create a WorkoutMove.
     * @example
     * // Create one WorkoutMove
     * const WorkoutMove = await prisma.workoutMove.create({
     *   data: {
     *     // ... data to create a WorkoutMove
     *   }
     * })
     * 
    **/
    create<T extends WorkoutMoveCreateArgs>(
      args: SelectSubset<T, WorkoutMoveCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Delete a WorkoutMove.
     * @param {WorkoutMoveDeleteArgs} args - Arguments to delete one WorkoutMove.
     * @example
     * // Delete one WorkoutMove
     * const WorkoutMove = await prisma.workoutMove.delete({
     *   where: {
     *     // ... filter to delete one WorkoutMove
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutMoveDeleteArgs>(
      args: SelectSubset<T, WorkoutMoveDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Update one WorkoutMove.
     * @param {WorkoutMoveUpdateArgs} args - Arguments to update one WorkoutMove.
     * @example
     * // Update one WorkoutMove
     * const workoutMove = await prisma.workoutMove.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutMoveUpdateArgs>(
      args: SelectSubset<T, WorkoutMoveUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Delete zero or more WorkoutMoves.
     * @param {WorkoutMoveDeleteManyArgs} args - Arguments to filter WorkoutMoves to delete.
     * @example
     * // Delete a few WorkoutMoves
     * const { count } = await prisma.workoutMove.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutMoveDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutMoveDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutMoves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutMoves
     * const workoutMove = await prisma.workoutMove.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutMoveUpdateManyArgs>(
      args: SelectSubset<T, WorkoutMoveUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutMove.
     * @param {WorkoutMoveUpsertArgs} args - Arguments to update or create a WorkoutMove.
     * @example
     * // Update or create a WorkoutMove
     * const workoutMove = await prisma.workoutMove.upsert({
     *   create: {
     *     // ... data to create a WorkoutMove
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutMove we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutMoveUpsertArgs>(
      args: SelectSubset<T, WorkoutMoveUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Count the number of WorkoutMoves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveCountArgs} args - Arguments to filter WorkoutMoves to count.
     * @example
     * // Count the number of WorkoutMoves
     * const count = await prisma.workoutMove.count({
     *   where: {
     *     // ... the filter for the WorkoutMoves we want to count
     *   }
     * })
    **/
    count<T extends WorkoutMoveCountArgs>(
      args?: Subset<T, WorkoutMoveCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutMoveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutMove.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutMoveAggregateArgs>(args: Subset<T, WorkoutMoveAggregateArgs>): PrismaPromise<GetWorkoutMoveAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutMove.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutMoveClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    move<T extends MoveArgs = {}>(args?: Subset<T, MoveArgs>): CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>;

    selectedEquipment<T extends EquipmentArgs = {}>(args?: Subset<T, EquipmentArgs>): CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>;

    workoutSection<T extends WorkoutSectionArgs = {}>(args?: Subset<T, WorkoutSectionArgs>): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection | null >, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutMove findUnique
   */
  export type WorkoutMoveFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Throw an Error if a WorkoutMove can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutMove to fetch.
    **/
    where: WorkoutMoveWhereUniqueInput
  }


  /**
   * WorkoutMove findFirst
   */
  export type WorkoutMoveFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Throw an Error if a WorkoutMove can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutMove to fetch.
    **/
    where?: WorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutMoves to fetch.
    **/
    orderBy?: Enumerable<WorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutMoves.
    **/
    cursor?: WorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutMoves from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutMoves.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutMoves.
    **/
    distinct?: Enumerable<WorkoutMoveScalarFieldEnum>
  }


  /**
   * WorkoutMove findMany
   */
  export type WorkoutMoveFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Filter, which WorkoutMoves to fetch.
    **/
    where?: WorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutMoves to fetch.
    **/
    orderBy?: Enumerable<WorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutMoves.
    **/
    cursor?: WorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutMoves from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutMoves.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutMoveScalarFieldEnum>
  }


  /**
   * WorkoutMove create
   */
  export type WorkoutMoveCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
    /**
     * The data needed to create a WorkoutMove.
    **/
    data: XOR<WorkoutMoveUncheckedCreateInput, WorkoutMoveCreateInput>
  }


  /**
   * WorkoutMove update
   */
  export type WorkoutMoveUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
    /**
     * The data needed to update a WorkoutMove.
    **/
    data: XOR<WorkoutMoveUncheckedUpdateInput, WorkoutMoveUpdateInput>
    /**
     * Choose, which WorkoutMove to update.
    **/
    where: WorkoutMoveWhereUniqueInput
  }


  /**
   * WorkoutMove updateMany
   */
  export type WorkoutMoveUpdateManyArgs = {
    data: XOR<WorkoutMoveUncheckedUpdateManyInput, WorkoutMoveUpdateManyMutationInput>
    where?: WorkoutMoveWhereInput
  }


  /**
   * WorkoutMove upsert
   */
  export type WorkoutMoveUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
    /**
     * The filter to search for the WorkoutMove to update in case it exists.
    **/
    where: WorkoutMoveWhereUniqueInput
    /**
     * In case the WorkoutMove found by the `where` argument doesn't exist, create a new WorkoutMove with this data.
    **/
    create: XOR<WorkoutMoveUncheckedCreateInput, WorkoutMoveCreateInput>
    /**
     * In case the WorkoutMove was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutMoveUncheckedUpdateInput, WorkoutMoveUpdateInput>
  }


  /**
   * WorkoutMove delete
   */
  export type WorkoutMoveDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Filter which WorkoutMove to delete.
    **/
    where: WorkoutMoveWhereUniqueInput
  }


  /**
   * WorkoutMove deleteMany
   */
  export type WorkoutMoveDeleteManyArgs = {
    where?: WorkoutMoveWhereInput
  }


  /**
   * WorkoutMove without action
   */
  export type WorkoutMoveArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutMoveInclude | null
  }



  /**
   * Model WorkoutProgram
   */


  export type AggregateWorkoutProgram = {
    count: WorkoutProgramCountAggregateOutputType | null
    min: WorkoutProgramMinAggregateOutputType | null
    max: WorkoutProgramMaxAggregateOutputType | null
  }

  export type WorkoutProgramMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    imageUrl: string | null
    videoUrl: string | null
    videoThumbUrl: string | null
    youtubeVideoUrl: string | null
    scope: ContentAccessScope | null
    createdById: string | null
  }

  export type WorkoutProgramMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    imageUrl: string | null
    videoUrl: string | null
    videoThumbUrl: string | null
    youtubeVideoUrl: string | null
    scope: ContentAccessScope | null
    createdById: string | null
  }

  export type WorkoutProgramCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    name: number | null
    description: number | null
    imageUrl: number | null
    videoUrl: number | null
    videoThumbUrl: number | null
    youtubeVideoUrl: number | null
    scope: number | null
    createdById: number | null
    _all: number
  }


  export type WorkoutProgramMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUrl?: true
    videoUrl?: true
    videoThumbUrl?: true
    youtubeVideoUrl?: true
    scope?: true
    createdById?: true
  }

  export type WorkoutProgramMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUrl?: true
    videoUrl?: true
    videoThumbUrl?: true
    youtubeVideoUrl?: true
    scope?: true
    createdById?: true
  }

  export type WorkoutProgramCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUrl?: true
    videoUrl?: true
    videoThumbUrl?: true
    youtubeVideoUrl?: true
    scope?: true
    createdById?: true
    _all?: true
  }

  export type WorkoutProgramAggregateArgs = {
    /**
     * Filter which WorkoutProgram to aggregate.
    **/
    where?: WorkoutProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPrograms to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPrograms from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPrograms.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutPrograms
    **/
    count?: true | WorkoutProgramCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutProgramMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutProgramMaxAggregateInputType
  }

  export type GetWorkoutProgramAggregateType<T extends WorkoutProgramAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutProgram]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutProgram[P]>
      : GetScalarType<T[P], AggregateWorkoutProgram[P]>
  }



  export type WorkoutProgramSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    description?: boolean
    imageUrl?: boolean
    videoUrl?: boolean
    videoThumbUrl?: boolean
    youtubeVideoUrl?: boolean
    scope?: boolean
    createdBy?: boolean | UserArgs
    createdById?: boolean
    enrolments?: boolean | WorkoutProgramEnrolmentFindManyArgs
    workoutGoals?: boolean | WorkoutGoalFindManyArgs
    workoutProgramWorkouts?: boolean | WorkoutProgramWorkoutFindManyArgs
    workoutProgramReviews?: boolean | WorkoutProgramReviewFindManyArgs
    userCollections?: boolean | UserCollectionFindManyArgs
  }

  export type WorkoutProgramInclude = {
    createdBy?: boolean | UserArgs
    enrolments?: boolean | WorkoutProgramEnrolmentFindManyArgs
    workoutGoals?: boolean | WorkoutGoalFindManyArgs
    workoutProgramWorkouts?: boolean | WorkoutProgramWorkoutFindManyArgs
    workoutProgramReviews?: boolean | WorkoutProgramReviewFindManyArgs
    userCollections?: boolean | UserCollectionFindManyArgs
  }

  export type WorkoutProgramGetPayload<
    S extends boolean | null | undefined | WorkoutProgramArgs,
    U = keyof S
      > = S extends true
        ? WorkoutProgram
    : S extends undefined
    ? never
    : S extends WorkoutProgramArgs | WorkoutProgramFindManyArgs
    ?'include' extends U
    ? WorkoutProgram  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'createdBy'
        ? UserGetPayload<S['include'][P]> :
        P extends 'enrolments'
        ? Array < WorkoutProgramEnrolmentGetPayload<S['include'][P]>>  :
        P extends 'workoutGoals'
        ? Array < WorkoutGoalGetPayload<S['include'][P]>>  :
        P extends 'workoutProgramWorkouts'
        ? Array < WorkoutProgramWorkoutGetPayload<S['include'][P]>>  :
        P extends 'workoutProgramReviews'
        ? Array < WorkoutProgramReviewGetPayload<S['include'][P]>>  :
        P extends 'userCollections'
        ? Array < UserCollectionGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutProgram ?WorkoutProgram [P]
  : 
          P extends 'createdBy'
        ? UserGetPayload<S['select'][P]> :
        P extends 'enrolments'
        ? Array < WorkoutProgramEnrolmentGetPayload<S['select'][P]>>  :
        P extends 'workoutGoals'
        ? Array < WorkoutGoalGetPayload<S['select'][P]>>  :
        P extends 'workoutProgramWorkouts'
        ? Array < WorkoutProgramWorkoutGetPayload<S['select'][P]>>  :
        P extends 'workoutProgramReviews'
        ? Array < WorkoutProgramReviewGetPayload<S['select'][P]>>  :
        P extends 'userCollections'
        ? Array < UserCollectionGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutProgram
  : WorkoutProgram


  type WorkoutProgramCountArgs = Merge<
    Omit<WorkoutProgramFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutProgramCountAggregateInputType | true
    }
  >

  export interface WorkoutProgramDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutProgram that matches the filter.
     * @param {WorkoutProgramFindUniqueArgs} args - Arguments to find a WorkoutProgram
     * @example
     * // Get one WorkoutProgram
     * const workoutProgram = await prisma.workoutProgram.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutProgramFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutProgramFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutProgram'> extends True ? CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram>, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram | null >, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T> | null >>

    /**
     * Find the first WorkoutProgram that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramFindFirstArgs} args - Arguments to find a WorkoutProgram
     * @example
     * // Get one WorkoutProgram
     * const workoutProgram = await prisma.workoutProgram.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutProgramFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutProgramFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutProgram'> extends True ? CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram>, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram | null >, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutPrograms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutPrograms
     * const workoutPrograms = await prisma.workoutProgram.findMany()
     * 
     * // Get first 10 WorkoutPrograms
     * const workoutPrograms = await prisma.workoutProgram.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutProgramWithIdOnly = await prisma.workoutProgram.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutProgramFindManyArgs>(
      args?: SelectSubset<T, WorkoutProgramFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutProgram>>, PrismaPromise<Array<WorkoutProgramGetPayload<T>>>>

    /**
     * Create a WorkoutProgram.
     * @param {WorkoutProgramCreateArgs} args - Arguments to create a WorkoutProgram.
     * @example
     * // Create one WorkoutProgram
     * const WorkoutProgram = await prisma.workoutProgram.create({
     *   data: {
     *     // ... data to create a WorkoutProgram
     *   }
     * })
     * 
    **/
    create<T extends WorkoutProgramCreateArgs>(
      args: SelectSubset<T, WorkoutProgramCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram>, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T>>>

    /**
     * Delete a WorkoutProgram.
     * @param {WorkoutProgramDeleteArgs} args - Arguments to delete one WorkoutProgram.
     * @example
     * // Delete one WorkoutProgram
     * const WorkoutProgram = await prisma.workoutProgram.delete({
     *   where: {
     *     // ... filter to delete one WorkoutProgram
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutProgramDeleteArgs>(
      args: SelectSubset<T, WorkoutProgramDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram>, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T>>>

    /**
     * Update one WorkoutProgram.
     * @param {WorkoutProgramUpdateArgs} args - Arguments to update one WorkoutProgram.
     * @example
     * // Update one WorkoutProgram
     * const workoutProgram = await prisma.workoutProgram.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutProgramUpdateArgs>(
      args: SelectSubset<T, WorkoutProgramUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram>, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T>>>

    /**
     * Delete zero or more WorkoutPrograms.
     * @param {WorkoutProgramDeleteManyArgs} args - Arguments to filter WorkoutPrograms to delete.
     * @example
     * // Delete a few WorkoutPrograms
     * const { count } = await prisma.workoutProgram.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutProgramDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutProgramDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutPrograms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutPrograms
     * const workoutProgram = await prisma.workoutProgram.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutProgramUpdateManyArgs>(
      args: SelectSubset<T, WorkoutProgramUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutProgram.
     * @param {WorkoutProgramUpsertArgs} args - Arguments to update or create a WorkoutProgram.
     * @example
     * // Update or create a WorkoutProgram
     * const workoutProgram = await prisma.workoutProgram.upsert({
     *   create: {
     *     // ... data to create a WorkoutProgram
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutProgram we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutProgramUpsertArgs>(
      args: SelectSubset<T, WorkoutProgramUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram>, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T>>>

    /**
     * Count the number of WorkoutPrograms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramCountArgs} args - Arguments to filter WorkoutPrograms to count.
     * @example
     * // Count the number of WorkoutPrograms
     * const count = await prisma.workoutProgram.count({
     *   where: {
     *     // ... the filter for the WorkoutPrograms we want to count
     *   }
     * })
    **/
    count<T extends WorkoutProgramCountArgs>(
      args?: Subset<T, WorkoutProgramCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutProgramCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutProgram.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutProgramAggregateArgs>(args: Subset<T, WorkoutProgramAggregateArgs>): PrismaPromise<GetWorkoutProgramAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutProgram.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutProgramClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    createdBy<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    enrolments<T extends WorkoutProgramEnrolmentFindManyArgs = {}>(args?: Subset<T, WorkoutProgramEnrolmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgramEnrolment>>, PrismaPromise<Array<WorkoutProgramEnrolmentGetPayload<T>>>>;

    workoutGoals<T extends WorkoutGoalFindManyArgs = {}>(args?: Subset<T, WorkoutGoalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutGoal>>, PrismaPromise<Array<WorkoutGoalGetPayload<T>>>>;

    workoutProgramWorkouts<T extends WorkoutProgramWorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutProgramWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgramWorkout>>, PrismaPromise<Array<WorkoutProgramWorkoutGetPayload<T>>>>;

    workoutProgramReviews<T extends WorkoutProgramReviewFindManyArgs = {}>(args?: Subset<T, WorkoutProgramReviewFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutProgramReview>>, PrismaPromise<Array<WorkoutProgramReviewGetPayload<T>>>>;

    userCollections<T extends UserCollectionFindManyArgs = {}>(args?: Subset<T, UserCollectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserCollection>>, PrismaPromise<Array<UserCollectionGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutProgram findUnique
   */
  export type WorkoutProgramFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
    /**
     * Throw an Error if a WorkoutProgram can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgram to fetch.
    **/
    where: WorkoutProgramWhereUniqueInput
  }


  /**
   * WorkoutProgram findFirst
   */
  export type WorkoutProgramFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
    /**
     * Throw an Error if a WorkoutProgram can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgram to fetch.
    **/
    where?: WorkoutProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPrograms to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutPrograms.
    **/
    cursor?: WorkoutProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPrograms from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPrograms.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutPrograms.
    **/
    distinct?: Enumerable<WorkoutProgramScalarFieldEnum>
  }


  /**
   * WorkoutProgram findMany
   */
  export type WorkoutProgramFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
    /**
     * Filter, which WorkoutPrograms to fetch.
    **/
    where?: WorkoutProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPrograms to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutPrograms.
    **/
    cursor?: WorkoutProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPrograms from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPrograms.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutProgramScalarFieldEnum>
  }


  /**
   * WorkoutProgram create
   */
  export type WorkoutProgramCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
    /**
     * The data needed to create a WorkoutProgram.
    **/
    data: XOR<WorkoutProgramUncheckedCreateInput, WorkoutProgramCreateInput>
  }


  /**
   * WorkoutProgram update
   */
  export type WorkoutProgramUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
    /**
     * The data needed to update a WorkoutProgram.
    **/
    data: XOR<WorkoutProgramUncheckedUpdateInput, WorkoutProgramUpdateInput>
    /**
     * Choose, which WorkoutProgram to update.
    **/
    where: WorkoutProgramWhereUniqueInput
  }


  /**
   * WorkoutProgram updateMany
   */
  export type WorkoutProgramUpdateManyArgs = {
    data: XOR<WorkoutProgramUncheckedUpdateManyInput, WorkoutProgramUpdateManyMutationInput>
    where?: WorkoutProgramWhereInput
  }


  /**
   * WorkoutProgram upsert
   */
  export type WorkoutProgramUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
    /**
     * The filter to search for the WorkoutProgram to update in case it exists.
    **/
    where: WorkoutProgramWhereUniqueInput
    /**
     * In case the WorkoutProgram found by the `where` argument doesn't exist, create a new WorkoutProgram with this data.
    **/
    create: XOR<WorkoutProgramUncheckedCreateInput, WorkoutProgramCreateInput>
    /**
     * In case the WorkoutProgram was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutProgramUncheckedUpdateInput, WorkoutProgramUpdateInput>
  }


  /**
   * WorkoutProgram delete
   */
  export type WorkoutProgramDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
    /**
     * Filter which WorkoutProgram to delete.
    **/
    where: WorkoutProgramWhereUniqueInput
  }


  /**
   * WorkoutProgram deleteMany
   */
  export type WorkoutProgramDeleteManyArgs = {
    where?: WorkoutProgramWhereInput
  }


  /**
   * WorkoutProgram without action
   */
  export type WorkoutProgramArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgram
    **/
    select?: WorkoutProgramSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramInclude | null
  }



  /**
   * Model WorkoutProgramEnrolment
   */


  export type AggregateWorkoutProgramEnrolment = {
    count: WorkoutProgramEnrolmentCountAggregateOutputType | null
    min: WorkoutProgramEnrolmentMinAggregateOutputType | null
    max: WorkoutProgramEnrolmentMaxAggregateOutputType | null
  }

  export type WorkoutProgramEnrolmentMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    startDate: Date | null
    workoutProgramId: string | null
    userId: string | null
  }

  export type WorkoutProgramEnrolmentMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    startDate: Date | null
    workoutProgramId: string | null
    userId: string | null
  }

  export type WorkoutProgramEnrolmentCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    startDate: number | null
    workoutProgramId: number | null
    userId: number | null
    _all: number
  }


  export type WorkoutProgramEnrolmentMinAggregateInputType = {
    id?: true
    createdAt?: true
    startDate?: true
    workoutProgramId?: true
    userId?: true
  }

  export type WorkoutProgramEnrolmentMaxAggregateInputType = {
    id?: true
    createdAt?: true
    startDate?: true
    workoutProgramId?: true
    userId?: true
  }

  export type WorkoutProgramEnrolmentCountAggregateInputType = {
    id?: true
    createdAt?: true
    startDate?: true
    workoutProgramId?: true
    userId?: true
    _all?: true
  }

  export type WorkoutProgramEnrolmentAggregateArgs = {
    /**
     * Filter which WorkoutProgramEnrolment to aggregate.
    **/
    where?: WorkoutProgramEnrolmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramEnrolments to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramEnrolmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutProgramEnrolmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramEnrolments from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramEnrolments.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutProgramEnrolments
    **/
    count?: true | WorkoutProgramEnrolmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutProgramEnrolmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutProgramEnrolmentMaxAggregateInputType
  }

  export type GetWorkoutProgramEnrolmentAggregateType<T extends WorkoutProgramEnrolmentAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutProgramEnrolment]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutProgramEnrolment[P]>
      : GetScalarType<T[P], AggregateWorkoutProgramEnrolment[P]>
  }



  export type WorkoutProgramEnrolmentSelect = {
    id?: boolean
    createdAt?: boolean
    startDate?: boolean
    workoutProgram?: boolean | WorkoutProgramArgs
    workoutProgramId?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type WorkoutProgramEnrolmentInclude = {
    workoutProgram?: boolean | WorkoutProgramArgs
    user?: boolean | UserArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type WorkoutProgramEnrolmentGetPayload<
    S extends boolean | null | undefined | WorkoutProgramEnrolmentArgs,
    U = keyof S
      > = S extends true
        ? WorkoutProgramEnrolment
    : S extends undefined
    ? never
    : S extends WorkoutProgramEnrolmentArgs | WorkoutProgramEnrolmentFindManyArgs
    ?'include' extends U
    ? WorkoutProgramEnrolment  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'workoutProgram'
        ? WorkoutProgramGetPayload<S['include'][P]> :
        P extends 'user'
        ? UserGetPayload<S['include'][P]> :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutProgramEnrolment ?WorkoutProgramEnrolment [P]
  : 
          P extends 'workoutProgram'
        ? WorkoutProgramGetPayload<S['select'][P]> :
        P extends 'user'
        ? UserGetPayload<S['select'][P]> :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutProgramEnrolment
  : WorkoutProgramEnrolment


  type WorkoutProgramEnrolmentCountArgs = Merge<
    Omit<WorkoutProgramEnrolmentFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutProgramEnrolmentCountAggregateInputType | true
    }
  >

  export interface WorkoutProgramEnrolmentDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutProgramEnrolment that matches the filter.
     * @param {WorkoutProgramEnrolmentFindUniqueArgs} args - Arguments to find a WorkoutProgramEnrolment
     * @example
     * // Get one WorkoutProgramEnrolment
     * const workoutProgramEnrolment = await prisma.workoutProgramEnrolment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutProgramEnrolmentFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutProgramEnrolmentFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutProgramEnrolment'> extends True ? CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment>, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment | null >, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T> | null >>

    /**
     * Find the first WorkoutProgramEnrolment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramEnrolmentFindFirstArgs} args - Arguments to find a WorkoutProgramEnrolment
     * @example
     * // Get one WorkoutProgramEnrolment
     * const workoutProgramEnrolment = await prisma.workoutProgramEnrolment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutProgramEnrolmentFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutProgramEnrolmentFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutProgramEnrolment'> extends True ? CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment>, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment | null >, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutProgramEnrolments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramEnrolmentFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutProgramEnrolments
     * const workoutProgramEnrolments = await prisma.workoutProgramEnrolment.findMany()
     * 
     * // Get first 10 WorkoutProgramEnrolments
     * const workoutProgramEnrolments = await prisma.workoutProgramEnrolment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutProgramEnrolmentWithIdOnly = await prisma.workoutProgramEnrolment.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutProgramEnrolmentFindManyArgs>(
      args?: SelectSubset<T, WorkoutProgramEnrolmentFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutProgramEnrolment>>, PrismaPromise<Array<WorkoutProgramEnrolmentGetPayload<T>>>>

    /**
     * Create a WorkoutProgramEnrolment.
     * @param {WorkoutProgramEnrolmentCreateArgs} args - Arguments to create a WorkoutProgramEnrolment.
     * @example
     * // Create one WorkoutProgramEnrolment
     * const WorkoutProgramEnrolment = await prisma.workoutProgramEnrolment.create({
     *   data: {
     *     // ... data to create a WorkoutProgramEnrolment
     *   }
     * })
     * 
    **/
    create<T extends WorkoutProgramEnrolmentCreateArgs>(
      args: SelectSubset<T, WorkoutProgramEnrolmentCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment>, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T>>>

    /**
     * Delete a WorkoutProgramEnrolment.
     * @param {WorkoutProgramEnrolmentDeleteArgs} args - Arguments to delete one WorkoutProgramEnrolment.
     * @example
     * // Delete one WorkoutProgramEnrolment
     * const WorkoutProgramEnrolment = await prisma.workoutProgramEnrolment.delete({
     *   where: {
     *     // ... filter to delete one WorkoutProgramEnrolment
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutProgramEnrolmentDeleteArgs>(
      args: SelectSubset<T, WorkoutProgramEnrolmentDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment>, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T>>>

    /**
     * Update one WorkoutProgramEnrolment.
     * @param {WorkoutProgramEnrolmentUpdateArgs} args - Arguments to update one WorkoutProgramEnrolment.
     * @example
     * // Update one WorkoutProgramEnrolment
     * const workoutProgramEnrolment = await prisma.workoutProgramEnrolment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutProgramEnrolmentUpdateArgs>(
      args: SelectSubset<T, WorkoutProgramEnrolmentUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment>, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T>>>

    /**
     * Delete zero or more WorkoutProgramEnrolments.
     * @param {WorkoutProgramEnrolmentDeleteManyArgs} args - Arguments to filter WorkoutProgramEnrolments to delete.
     * @example
     * // Delete a few WorkoutProgramEnrolments
     * const { count } = await prisma.workoutProgramEnrolment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutProgramEnrolmentDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutProgramEnrolmentDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutProgramEnrolments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramEnrolmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutProgramEnrolments
     * const workoutProgramEnrolment = await prisma.workoutProgramEnrolment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutProgramEnrolmentUpdateManyArgs>(
      args: SelectSubset<T, WorkoutProgramEnrolmentUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutProgramEnrolment.
     * @param {WorkoutProgramEnrolmentUpsertArgs} args - Arguments to update or create a WorkoutProgramEnrolment.
     * @example
     * // Update or create a WorkoutProgramEnrolment
     * const workoutProgramEnrolment = await prisma.workoutProgramEnrolment.upsert({
     *   create: {
     *     // ... data to create a WorkoutProgramEnrolment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutProgramEnrolment we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutProgramEnrolmentUpsertArgs>(
      args: SelectSubset<T, WorkoutProgramEnrolmentUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolment>, Prisma__WorkoutProgramEnrolmentClient<WorkoutProgramEnrolmentGetPayload<T>>>

    /**
     * Count the number of WorkoutProgramEnrolments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramEnrolmentCountArgs} args - Arguments to filter WorkoutProgramEnrolments to count.
     * @example
     * // Count the number of WorkoutProgramEnrolments
     * const count = await prisma.workoutProgramEnrolment.count({
     *   where: {
     *     // ... the filter for the WorkoutProgramEnrolments we want to count
     *   }
     * })
    **/
    count<T extends WorkoutProgramEnrolmentCountArgs>(
      args?: Subset<T, WorkoutProgramEnrolmentCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutProgramEnrolmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutProgramEnrolment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramEnrolmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutProgramEnrolmentAggregateArgs>(args: Subset<T, WorkoutProgramEnrolmentAggregateArgs>): PrismaPromise<GetWorkoutProgramEnrolmentAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutProgramEnrolment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutProgramEnrolmentClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    workoutProgram<T extends WorkoutProgramArgs = {}>(args?: Subset<T, WorkoutProgramArgs>): CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram | null >, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T> | null >>;

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    loggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutProgramEnrolment findUnique
   */
  export type WorkoutProgramEnrolmentFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
    /**
     * Throw an Error if a WorkoutProgramEnrolment can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgramEnrolment to fetch.
    **/
    where: WorkoutProgramEnrolmentWhereUniqueInput
  }


  /**
   * WorkoutProgramEnrolment findFirst
   */
  export type WorkoutProgramEnrolmentFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
    /**
     * Throw an Error if a WorkoutProgramEnrolment can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgramEnrolment to fetch.
    **/
    where?: WorkoutProgramEnrolmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramEnrolments to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramEnrolmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutProgramEnrolments.
    **/
    cursor?: WorkoutProgramEnrolmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramEnrolments from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramEnrolments.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutProgramEnrolments.
    **/
    distinct?: Enumerable<WorkoutProgramEnrolmentScalarFieldEnum>
  }


  /**
   * WorkoutProgramEnrolment findMany
   */
  export type WorkoutProgramEnrolmentFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
    /**
     * Filter, which WorkoutProgramEnrolments to fetch.
    **/
    where?: WorkoutProgramEnrolmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramEnrolments to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramEnrolmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutProgramEnrolments.
    **/
    cursor?: WorkoutProgramEnrolmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramEnrolments from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramEnrolments.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutProgramEnrolmentScalarFieldEnum>
  }


  /**
   * WorkoutProgramEnrolment create
   */
  export type WorkoutProgramEnrolmentCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
    /**
     * The data needed to create a WorkoutProgramEnrolment.
    **/
    data: XOR<WorkoutProgramEnrolmentUncheckedCreateInput, WorkoutProgramEnrolmentCreateInput>
  }


  /**
   * WorkoutProgramEnrolment update
   */
  export type WorkoutProgramEnrolmentUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
    /**
     * The data needed to update a WorkoutProgramEnrolment.
    **/
    data: XOR<WorkoutProgramEnrolmentUncheckedUpdateInput, WorkoutProgramEnrolmentUpdateInput>
    /**
     * Choose, which WorkoutProgramEnrolment to update.
    **/
    where: WorkoutProgramEnrolmentWhereUniqueInput
  }


  /**
   * WorkoutProgramEnrolment updateMany
   */
  export type WorkoutProgramEnrolmentUpdateManyArgs = {
    data: XOR<WorkoutProgramEnrolmentUncheckedUpdateManyInput, WorkoutProgramEnrolmentUpdateManyMutationInput>
    where?: WorkoutProgramEnrolmentWhereInput
  }


  /**
   * WorkoutProgramEnrolment upsert
   */
  export type WorkoutProgramEnrolmentUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
    /**
     * The filter to search for the WorkoutProgramEnrolment to update in case it exists.
    **/
    where: WorkoutProgramEnrolmentWhereUniqueInput
    /**
     * In case the WorkoutProgramEnrolment found by the `where` argument doesn't exist, create a new WorkoutProgramEnrolment with this data.
    **/
    create: XOR<WorkoutProgramEnrolmentUncheckedCreateInput, WorkoutProgramEnrolmentCreateInput>
    /**
     * In case the WorkoutProgramEnrolment was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutProgramEnrolmentUncheckedUpdateInput, WorkoutProgramEnrolmentUpdateInput>
  }


  /**
   * WorkoutProgramEnrolment delete
   */
  export type WorkoutProgramEnrolmentDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
    /**
     * Filter which WorkoutProgramEnrolment to delete.
    **/
    where: WorkoutProgramEnrolmentWhereUniqueInput
  }


  /**
   * WorkoutProgramEnrolment deleteMany
   */
  export type WorkoutProgramEnrolmentDeleteManyArgs = {
    where?: WorkoutProgramEnrolmentWhereInput
  }


  /**
   * WorkoutProgramEnrolment without action
   */
  export type WorkoutProgramEnrolmentArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramEnrolment
    **/
    select?: WorkoutProgramEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramEnrolmentInclude | null
  }



  /**
   * Model WorkoutProgramReview
   */


  export type AggregateWorkoutProgramReview = {
    count: WorkoutProgramReviewCountAggregateOutputType | null
    avg: WorkoutProgramReviewAvgAggregateOutputType | null
    sum: WorkoutProgramReviewSumAggregateOutputType | null
    min: WorkoutProgramReviewMinAggregateOutputType | null
    max: WorkoutProgramReviewMaxAggregateOutputType | null
  }

  export type WorkoutProgramReviewAvgAggregateOutputType = {
    score: number
  }

  export type WorkoutProgramReviewSumAggregateOutputType = {
    score: number
  }

  export type WorkoutProgramReviewMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    score: number
    comment: string | null
    workoutProgramId: string | null
    userId: string | null
  }

  export type WorkoutProgramReviewMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    score: number
    comment: string | null
    workoutProgramId: string | null
    userId: string | null
  }

  export type WorkoutProgramReviewCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    score: number
    comment: number | null
    workoutProgramId: number | null
    userId: number | null
    _all: number
  }


  export type WorkoutProgramReviewAvgAggregateInputType = {
    score?: true
  }

  export type WorkoutProgramReviewSumAggregateInputType = {
    score?: true
  }

  export type WorkoutProgramReviewMinAggregateInputType = {
    id?: true
    createdAt?: true
    score?: true
    comment?: true
    workoutProgramId?: true
    userId?: true
  }

  export type WorkoutProgramReviewMaxAggregateInputType = {
    id?: true
    createdAt?: true
    score?: true
    comment?: true
    workoutProgramId?: true
    userId?: true
  }

  export type WorkoutProgramReviewCountAggregateInputType = {
    id?: true
    createdAt?: true
    score?: true
    comment?: true
    workoutProgramId?: true
    userId?: true
    _all?: true
  }

  export type WorkoutProgramReviewAggregateArgs = {
    /**
     * Filter which WorkoutProgramReview to aggregate.
    **/
    where?: WorkoutProgramReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramReviews to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramReviewOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutProgramReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramReviews from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramReviews.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutProgramReviews
    **/
    count?: true | WorkoutProgramReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WorkoutProgramReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WorkoutProgramReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutProgramReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutProgramReviewMaxAggregateInputType
  }

  export type GetWorkoutProgramReviewAggregateType<T extends WorkoutProgramReviewAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutProgramReview]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutProgramReview[P]>
      : GetScalarType<T[P], AggregateWorkoutProgramReview[P]>
  }



  export type WorkoutProgramReviewSelect = {
    id?: boolean
    createdAt?: boolean
    score?: boolean
    comment?: boolean
    workoutProgram?: boolean | WorkoutProgramArgs
    workoutProgramId?: boolean
    user?: boolean | UserArgs
    userId?: boolean
  }

  export type WorkoutProgramReviewInclude = {
    workoutProgram?: boolean | WorkoutProgramArgs
    user?: boolean | UserArgs
  }

  export type WorkoutProgramReviewGetPayload<
    S extends boolean | null | undefined | WorkoutProgramReviewArgs,
    U = keyof S
      > = S extends true
        ? WorkoutProgramReview
    : S extends undefined
    ? never
    : S extends WorkoutProgramReviewArgs | WorkoutProgramReviewFindManyArgs
    ?'include' extends U
    ? WorkoutProgramReview  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'workoutProgram'
        ? WorkoutProgramGetPayload<S['include'][P]> :
        P extends 'user'
        ? UserGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutProgramReview ?WorkoutProgramReview [P]
  : 
          P extends 'workoutProgram'
        ? WorkoutProgramGetPayload<S['select'][P]> :
        P extends 'user'
        ? UserGetPayload<S['select'][P]> : never
  } 
    : WorkoutProgramReview
  : WorkoutProgramReview


  type WorkoutProgramReviewCountArgs = Merge<
    Omit<WorkoutProgramReviewFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutProgramReviewCountAggregateInputType | true
    }
  >

  export interface WorkoutProgramReviewDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutProgramReview that matches the filter.
     * @param {WorkoutProgramReviewFindUniqueArgs} args - Arguments to find a WorkoutProgramReview
     * @example
     * // Get one WorkoutProgramReview
     * const workoutProgramReview = await prisma.workoutProgramReview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutProgramReviewFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutProgramReviewFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutProgramReview'> extends True ? CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview>, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview | null >, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T> | null >>

    /**
     * Find the first WorkoutProgramReview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramReviewFindFirstArgs} args - Arguments to find a WorkoutProgramReview
     * @example
     * // Get one WorkoutProgramReview
     * const workoutProgramReview = await prisma.workoutProgramReview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutProgramReviewFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutProgramReviewFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutProgramReview'> extends True ? CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview>, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview | null >, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutProgramReviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramReviewFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutProgramReviews
     * const workoutProgramReviews = await prisma.workoutProgramReview.findMany()
     * 
     * // Get first 10 WorkoutProgramReviews
     * const workoutProgramReviews = await prisma.workoutProgramReview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutProgramReviewWithIdOnly = await prisma.workoutProgramReview.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutProgramReviewFindManyArgs>(
      args?: SelectSubset<T, WorkoutProgramReviewFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutProgramReview>>, PrismaPromise<Array<WorkoutProgramReviewGetPayload<T>>>>

    /**
     * Create a WorkoutProgramReview.
     * @param {WorkoutProgramReviewCreateArgs} args - Arguments to create a WorkoutProgramReview.
     * @example
     * // Create one WorkoutProgramReview
     * const WorkoutProgramReview = await prisma.workoutProgramReview.create({
     *   data: {
     *     // ... data to create a WorkoutProgramReview
     *   }
     * })
     * 
    **/
    create<T extends WorkoutProgramReviewCreateArgs>(
      args: SelectSubset<T, WorkoutProgramReviewCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview>, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T>>>

    /**
     * Delete a WorkoutProgramReview.
     * @param {WorkoutProgramReviewDeleteArgs} args - Arguments to delete one WorkoutProgramReview.
     * @example
     * // Delete one WorkoutProgramReview
     * const WorkoutProgramReview = await prisma.workoutProgramReview.delete({
     *   where: {
     *     // ... filter to delete one WorkoutProgramReview
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutProgramReviewDeleteArgs>(
      args: SelectSubset<T, WorkoutProgramReviewDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview>, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T>>>

    /**
     * Update one WorkoutProgramReview.
     * @param {WorkoutProgramReviewUpdateArgs} args - Arguments to update one WorkoutProgramReview.
     * @example
     * // Update one WorkoutProgramReview
     * const workoutProgramReview = await prisma.workoutProgramReview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutProgramReviewUpdateArgs>(
      args: SelectSubset<T, WorkoutProgramReviewUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview>, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T>>>

    /**
     * Delete zero or more WorkoutProgramReviews.
     * @param {WorkoutProgramReviewDeleteManyArgs} args - Arguments to filter WorkoutProgramReviews to delete.
     * @example
     * // Delete a few WorkoutProgramReviews
     * const { count } = await prisma.workoutProgramReview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutProgramReviewDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutProgramReviewDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutProgramReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutProgramReviews
     * const workoutProgramReview = await prisma.workoutProgramReview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutProgramReviewUpdateManyArgs>(
      args: SelectSubset<T, WorkoutProgramReviewUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutProgramReview.
     * @param {WorkoutProgramReviewUpsertArgs} args - Arguments to update or create a WorkoutProgramReview.
     * @example
     * // Update or create a WorkoutProgramReview
     * const workoutProgramReview = await prisma.workoutProgramReview.upsert({
     *   create: {
     *     // ... data to create a WorkoutProgramReview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutProgramReview we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutProgramReviewUpsertArgs>(
      args: SelectSubset<T, WorkoutProgramReviewUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramReviewClient<WorkoutProgramReview>, Prisma__WorkoutProgramReviewClient<WorkoutProgramReviewGetPayload<T>>>

    /**
     * Count the number of WorkoutProgramReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramReviewCountArgs} args - Arguments to filter WorkoutProgramReviews to count.
     * @example
     * // Count the number of WorkoutProgramReviews
     * const count = await prisma.workoutProgramReview.count({
     *   where: {
     *     // ... the filter for the WorkoutProgramReviews we want to count
     *   }
     * })
    **/
    count<T extends WorkoutProgramReviewCountArgs>(
      args?: Subset<T, WorkoutProgramReviewCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutProgramReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutProgramReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutProgramReviewAggregateArgs>(args: Subset<T, WorkoutProgramReviewAggregateArgs>): PrismaPromise<GetWorkoutProgramReviewAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutProgramReview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutProgramReviewClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    workoutProgram<T extends WorkoutProgramArgs = {}>(args?: Subset<T, WorkoutProgramArgs>): CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram | null >, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T> | null >>;

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutProgramReview findUnique
   */
  export type WorkoutProgramReviewFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
    /**
     * Throw an Error if a WorkoutProgramReview can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgramReview to fetch.
    **/
    where: WorkoutProgramReviewWhereUniqueInput
  }


  /**
   * WorkoutProgramReview findFirst
   */
  export type WorkoutProgramReviewFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
    /**
     * Throw an Error if a WorkoutProgramReview can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgramReview to fetch.
    **/
    where?: WorkoutProgramReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramReviews to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramReviewOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutProgramReviews.
    **/
    cursor?: WorkoutProgramReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramReviews from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramReviews.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutProgramReviews.
    **/
    distinct?: Enumerable<WorkoutProgramReviewScalarFieldEnum>
  }


  /**
   * WorkoutProgramReview findMany
   */
  export type WorkoutProgramReviewFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
    /**
     * Filter, which WorkoutProgramReviews to fetch.
    **/
    where?: WorkoutProgramReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramReviews to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramReviewOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutProgramReviews.
    **/
    cursor?: WorkoutProgramReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramReviews from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramReviews.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutProgramReviewScalarFieldEnum>
  }


  /**
   * WorkoutProgramReview create
   */
  export type WorkoutProgramReviewCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
    /**
     * The data needed to create a WorkoutProgramReview.
    **/
    data: XOR<WorkoutProgramReviewUncheckedCreateInput, WorkoutProgramReviewCreateInput>
  }


  /**
   * WorkoutProgramReview update
   */
  export type WorkoutProgramReviewUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
    /**
     * The data needed to update a WorkoutProgramReview.
    **/
    data: XOR<WorkoutProgramReviewUncheckedUpdateInput, WorkoutProgramReviewUpdateInput>
    /**
     * Choose, which WorkoutProgramReview to update.
    **/
    where: WorkoutProgramReviewWhereUniqueInput
  }


  /**
   * WorkoutProgramReview updateMany
   */
  export type WorkoutProgramReviewUpdateManyArgs = {
    data: XOR<WorkoutProgramReviewUncheckedUpdateManyInput, WorkoutProgramReviewUpdateManyMutationInput>
    where?: WorkoutProgramReviewWhereInput
  }


  /**
   * WorkoutProgramReview upsert
   */
  export type WorkoutProgramReviewUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
    /**
     * The filter to search for the WorkoutProgramReview to update in case it exists.
    **/
    where: WorkoutProgramReviewWhereUniqueInput
    /**
     * In case the WorkoutProgramReview found by the `where` argument doesn't exist, create a new WorkoutProgramReview with this data.
    **/
    create: XOR<WorkoutProgramReviewUncheckedCreateInput, WorkoutProgramReviewCreateInput>
    /**
     * In case the WorkoutProgramReview was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutProgramReviewUncheckedUpdateInput, WorkoutProgramReviewUpdateInput>
  }


  /**
   * WorkoutProgramReview delete
   */
  export type WorkoutProgramReviewDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
    /**
     * Filter which WorkoutProgramReview to delete.
    **/
    where: WorkoutProgramReviewWhereUniqueInput
  }


  /**
   * WorkoutProgramReview deleteMany
   */
  export type WorkoutProgramReviewDeleteManyArgs = {
    where?: WorkoutProgramReviewWhereInput
  }


  /**
   * WorkoutProgramReview without action
   */
  export type WorkoutProgramReviewArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramReview
    **/
    select?: WorkoutProgramReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramReviewInclude | null
  }



  /**
   * Model WorkoutProgramWorkout
   */


  export type AggregateWorkoutProgramWorkout = {
    count: WorkoutProgramWorkoutCountAggregateOutputType | null
    avg: WorkoutProgramWorkoutAvgAggregateOutputType | null
    sum: WorkoutProgramWorkoutSumAggregateOutputType | null
    min: WorkoutProgramWorkoutMinAggregateOutputType | null
    max: WorkoutProgramWorkoutMaxAggregateOutputType | null
  }

  export type WorkoutProgramWorkoutAvgAggregateOutputType = {
    dayNumber: number
  }

  export type WorkoutProgramWorkoutSumAggregateOutputType = {
    dayNumber: number
  }

  export type WorkoutProgramWorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    dayNumber: number
    notes: string | null
    workoutProgramId: string | null
    workoutId: string | null
  }

  export type WorkoutProgramWorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    dayNumber: number
    notes: string | null
    workoutProgramId: string | null
    workoutId: string | null
  }

  export type WorkoutProgramWorkoutCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    dayNumber: number
    notes: number | null
    workoutProgramId: number | null
    workoutId: number | null
    _all: number
  }


  export type WorkoutProgramWorkoutAvgAggregateInputType = {
    dayNumber?: true
  }

  export type WorkoutProgramWorkoutSumAggregateInputType = {
    dayNumber?: true
  }

  export type WorkoutProgramWorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    dayNumber?: true
    notes?: true
    workoutProgramId?: true
    workoutId?: true
  }

  export type WorkoutProgramWorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    dayNumber?: true
    notes?: true
    workoutProgramId?: true
    workoutId?: true
  }

  export type WorkoutProgramWorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    dayNumber?: true
    notes?: true
    workoutProgramId?: true
    workoutId?: true
    _all?: true
  }

  export type WorkoutProgramWorkoutAggregateArgs = {
    /**
     * Filter which WorkoutProgramWorkout to aggregate.
    **/
    where?: WorkoutProgramWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramWorkouts to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutProgramWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramWorkouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutProgramWorkouts
    **/
    count?: true | WorkoutProgramWorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WorkoutProgramWorkoutAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WorkoutProgramWorkoutSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutProgramWorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutProgramWorkoutMaxAggregateInputType
  }

  export type GetWorkoutProgramWorkoutAggregateType<T extends WorkoutProgramWorkoutAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutProgramWorkout]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutProgramWorkout[P]>
      : GetScalarType<T[P], AggregateWorkoutProgramWorkout[P]>
  }



  export type WorkoutProgramWorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    dayNumber?: boolean
    notes?: boolean
    workoutProgram?: boolean | WorkoutProgramArgs
    workoutProgramId?: boolean
    workout?: boolean | WorkoutArgs
    workoutId?: boolean
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type WorkoutProgramWorkoutInclude = {
    workoutProgram?: boolean | WorkoutProgramArgs
    workout?: boolean | WorkoutArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type WorkoutProgramWorkoutGetPayload<
    S extends boolean | null | undefined | WorkoutProgramWorkoutArgs,
    U = keyof S
      > = S extends true
        ? WorkoutProgramWorkout
    : S extends undefined
    ? never
    : S extends WorkoutProgramWorkoutArgs | WorkoutProgramWorkoutFindManyArgs
    ?'include' extends U
    ? WorkoutProgramWorkout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'workoutProgram'
        ? WorkoutProgramGetPayload<S['include'][P]> :
        P extends 'workout'
        ? WorkoutGetPayload<S['include'][P]> :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutProgramWorkout ?WorkoutProgramWorkout [P]
  : 
          P extends 'workoutProgram'
        ? WorkoutProgramGetPayload<S['select'][P]> :
        P extends 'workout'
        ? WorkoutGetPayload<S['select'][P]> :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutProgramWorkout
  : WorkoutProgramWorkout


  type WorkoutProgramWorkoutCountArgs = Merge<
    Omit<WorkoutProgramWorkoutFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutProgramWorkoutCountAggregateInputType | true
    }
  >

  export interface WorkoutProgramWorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutProgramWorkout that matches the filter.
     * @param {WorkoutProgramWorkoutFindUniqueArgs} args - Arguments to find a WorkoutProgramWorkout
     * @example
     * // Get one WorkoutProgramWorkout
     * const workoutProgramWorkout = await prisma.workoutProgramWorkout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutProgramWorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutProgramWorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutProgramWorkout'> extends True ? CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout>, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout | null >, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T> | null >>

    /**
     * Find the first WorkoutProgramWorkout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramWorkoutFindFirstArgs} args - Arguments to find a WorkoutProgramWorkout
     * @example
     * // Get one WorkoutProgramWorkout
     * const workoutProgramWorkout = await prisma.workoutProgramWorkout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutProgramWorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutProgramWorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutProgramWorkout'> extends True ? CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout>, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout | null >, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutProgramWorkouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramWorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutProgramWorkouts
     * const workoutProgramWorkouts = await prisma.workoutProgramWorkout.findMany()
     * 
     * // Get first 10 WorkoutProgramWorkouts
     * const workoutProgramWorkouts = await prisma.workoutProgramWorkout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutProgramWorkoutWithIdOnly = await prisma.workoutProgramWorkout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutProgramWorkoutFindManyArgs>(
      args?: SelectSubset<T, WorkoutProgramWorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutProgramWorkout>>, PrismaPromise<Array<WorkoutProgramWorkoutGetPayload<T>>>>

    /**
     * Create a WorkoutProgramWorkout.
     * @param {WorkoutProgramWorkoutCreateArgs} args - Arguments to create a WorkoutProgramWorkout.
     * @example
     * // Create one WorkoutProgramWorkout
     * const WorkoutProgramWorkout = await prisma.workoutProgramWorkout.create({
     *   data: {
     *     // ... data to create a WorkoutProgramWorkout
     *   }
     * })
     * 
    **/
    create<T extends WorkoutProgramWorkoutCreateArgs>(
      args: SelectSubset<T, WorkoutProgramWorkoutCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout>, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T>>>

    /**
     * Delete a WorkoutProgramWorkout.
     * @param {WorkoutProgramWorkoutDeleteArgs} args - Arguments to delete one WorkoutProgramWorkout.
     * @example
     * // Delete one WorkoutProgramWorkout
     * const WorkoutProgramWorkout = await prisma.workoutProgramWorkout.delete({
     *   where: {
     *     // ... filter to delete one WorkoutProgramWorkout
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutProgramWorkoutDeleteArgs>(
      args: SelectSubset<T, WorkoutProgramWorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout>, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T>>>

    /**
     * Update one WorkoutProgramWorkout.
     * @param {WorkoutProgramWorkoutUpdateArgs} args - Arguments to update one WorkoutProgramWorkout.
     * @example
     * // Update one WorkoutProgramWorkout
     * const workoutProgramWorkout = await prisma.workoutProgramWorkout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutProgramWorkoutUpdateArgs>(
      args: SelectSubset<T, WorkoutProgramWorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout>, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T>>>

    /**
     * Delete zero or more WorkoutProgramWorkouts.
     * @param {WorkoutProgramWorkoutDeleteManyArgs} args - Arguments to filter WorkoutProgramWorkouts to delete.
     * @example
     * // Delete a few WorkoutProgramWorkouts
     * const { count } = await prisma.workoutProgramWorkout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutProgramWorkoutDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutProgramWorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutProgramWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramWorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutProgramWorkouts
     * const workoutProgramWorkout = await prisma.workoutProgramWorkout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutProgramWorkoutUpdateManyArgs>(
      args: SelectSubset<T, WorkoutProgramWorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutProgramWorkout.
     * @param {WorkoutProgramWorkoutUpsertArgs} args - Arguments to update or create a WorkoutProgramWorkout.
     * @example
     * // Update or create a WorkoutProgramWorkout
     * const workoutProgramWorkout = await prisma.workoutProgramWorkout.upsert({
     *   create: {
     *     // ... data to create a WorkoutProgramWorkout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutProgramWorkout we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutProgramWorkoutUpsertArgs>(
      args: SelectSubset<T, WorkoutProgramWorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkout>, Prisma__WorkoutProgramWorkoutClient<WorkoutProgramWorkoutGetPayload<T>>>

    /**
     * Count the number of WorkoutProgramWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramWorkoutCountArgs} args - Arguments to filter WorkoutProgramWorkouts to count.
     * @example
     * // Count the number of WorkoutProgramWorkouts
     * const count = await prisma.workoutProgramWorkout.count({
     *   where: {
     *     // ... the filter for the WorkoutProgramWorkouts we want to count
     *   }
     * })
    **/
    count<T extends WorkoutProgramWorkoutCountArgs>(
      args?: Subset<T, WorkoutProgramWorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutProgramWorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutProgramWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutProgramWorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutProgramWorkoutAggregateArgs>(args: Subset<T, WorkoutProgramWorkoutAggregateArgs>): PrismaPromise<GetWorkoutProgramWorkoutAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutProgramWorkout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutProgramWorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    workoutProgram<T extends WorkoutProgramArgs = {}>(args?: Subset<T, WorkoutProgramArgs>): CheckSelect<T, Prisma__WorkoutProgramClient<WorkoutProgram | null >, Prisma__WorkoutProgramClient<WorkoutProgramGetPayload<T> | null >>;

    workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    loggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutProgramWorkout findUnique
   */
  export type WorkoutProgramWorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
    /**
     * Throw an Error if a WorkoutProgramWorkout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgramWorkout to fetch.
    **/
    where: WorkoutProgramWorkoutWhereUniqueInput
  }


  /**
   * WorkoutProgramWorkout findFirst
   */
  export type WorkoutProgramWorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
    /**
     * Throw an Error if a WorkoutProgramWorkout can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutProgramWorkout to fetch.
    **/
    where?: WorkoutProgramWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramWorkouts to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutProgramWorkouts.
    **/
    cursor?: WorkoutProgramWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramWorkouts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutProgramWorkouts.
    **/
    distinct?: Enumerable<WorkoutProgramWorkoutScalarFieldEnum>
  }


  /**
   * WorkoutProgramWorkout findMany
   */
  export type WorkoutProgramWorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
    /**
     * Filter, which WorkoutProgramWorkouts to fetch.
    **/
    where?: WorkoutProgramWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutProgramWorkouts to fetch.
    **/
    orderBy?: Enumerable<WorkoutProgramWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutProgramWorkouts.
    **/
    cursor?: WorkoutProgramWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutProgramWorkouts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutProgramWorkouts.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutProgramWorkoutScalarFieldEnum>
  }


  /**
   * WorkoutProgramWorkout create
   */
  export type WorkoutProgramWorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
    /**
     * The data needed to create a WorkoutProgramWorkout.
    **/
    data: XOR<WorkoutProgramWorkoutUncheckedCreateInput, WorkoutProgramWorkoutCreateInput>
  }


  /**
   * WorkoutProgramWorkout update
   */
  export type WorkoutProgramWorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
    /**
     * The data needed to update a WorkoutProgramWorkout.
    **/
    data: XOR<WorkoutProgramWorkoutUncheckedUpdateInput, WorkoutProgramWorkoutUpdateInput>
    /**
     * Choose, which WorkoutProgramWorkout to update.
    **/
    where: WorkoutProgramWorkoutWhereUniqueInput
  }


  /**
   * WorkoutProgramWorkout updateMany
   */
  export type WorkoutProgramWorkoutUpdateManyArgs = {
    data: XOR<WorkoutProgramWorkoutUncheckedUpdateManyInput, WorkoutProgramWorkoutUpdateManyMutationInput>
    where?: WorkoutProgramWorkoutWhereInput
  }


  /**
   * WorkoutProgramWorkout upsert
   */
  export type WorkoutProgramWorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
    /**
     * The filter to search for the WorkoutProgramWorkout to update in case it exists.
    **/
    where: WorkoutProgramWorkoutWhereUniqueInput
    /**
     * In case the WorkoutProgramWorkout found by the `where` argument doesn't exist, create a new WorkoutProgramWorkout with this data.
    **/
    create: XOR<WorkoutProgramWorkoutUncheckedCreateInput, WorkoutProgramWorkoutCreateInput>
    /**
     * In case the WorkoutProgramWorkout was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutProgramWorkoutUncheckedUpdateInput, WorkoutProgramWorkoutUpdateInput>
  }


  /**
   * WorkoutProgramWorkout delete
   */
  export type WorkoutProgramWorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
    /**
     * Filter which WorkoutProgramWorkout to delete.
    **/
    where: WorkoutProgramWorkoutWhereUniqueInput
  }


  /**
   * WorkoutProgramWorkout deleteMany
   */
  export type WorkoutProgramWorkoutDeleteManyArgs = {
    where?: WorkoutProgramWorkoutWhereInput
  }


  /**
   * WorkoutProgramWorkout without action
   */
  export type WorkoutProgramWorkoutArgs = {
    /**
     * Select specific fields to fetch from the WorkoutProgramWorkout
    **/
    select?: WorkoutProgramWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutProgramWorkoutInclude | null
  }



  /**
   * Model WorkoutSection
   */


  export type AggregateWorkoutSection = {
    count: WorkoutSectionCountAggregateOutputType | null
    avg: WorkoutSectionAvgAggregateOutputType | null
    sum: WorkoutSectionSumAggregateOutputType | null
    min: WorkoutSectionMinAggregateOutputType | null
    max: WorkoutSectionMaxAggregateOutputType | null
  }

  export type WorkoutSectionAvgAggregateOutputType = {
    sortPosition: number
    timecap: number | null
    duration: number | null
    rounds: number
  }

  export type WorkoutSectionSumAggregateOutputType = {
    sortPosition: number
    timecap: number | null
    duration: number | null
    rounds: number
  }

  export type WorkoutSectionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    sortPosition: number
    notes: string | null
    timecap: number | null
    duration: number | null
    rounds: number
    workoutId: string | null
    loggedWorkoutId: string | null
  }

  export type WorkoutSectionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    sortPosition: number
    notes: string | null
    timecap: number | null
    duration: number | null
    rounds: number
    workoutId: string | null
    loggedWorkoutId: string | null
  }

  export type WorkoutSectionCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    sortPosition: number
    notes: number | null
    timecap: number | null
    duration: number | null
    rounds: number
    workoutId: number | null
    loggedWorkoutId: number | null
    _all: number
  }


  export type WorkoutSectionAvgAggregateInputType = {
    sortPosition?: true
    timecap?: true
    duration?: true
    rounds?: true
  }

  export type WorkoutSectionSumAggregateInputType = {
    sortPosition?: true
    timecap?: true
    duration?: true
    rounds?: true
  }

  export type WorkoutSectionMinAggregateInputType = {
    id?: true
    createdAt?: true
    sortPosition?: true
    notes?: true
    timecap?: true
    duration?: true
    rounds?: true
    workoutId?: true
    loggedWorkoutId?: true
  }

  export type WorkoutSectionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    sortPosition?: true
    notes?: true
    timecap?: true
    duration?: true
    rounds?: true
    workoutId?: true
    loggedWorkoutId?: true
  }

  export type WorkoutSectionCountAggregateInputType = {
    id?: true
    createdAt?: true
    sortPosition?: true
    notes?: true
    timecap?: true
    duration?: true
    rounds?: true
    workoutId?: true
    loggedWorkoutId?: true
    _all?: true
  }

  export type WorkoutSectionAggregateArgs = {
    /**
     * Filter which WorkoutSection to aggregate.
    **/
    where?: WorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSections to fetch.
    **/
    orderBy?: Enumerable<WorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSections from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSections.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutSections
    **/
    count?: true | WorkoutSectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WorkoutSectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WorkoutSectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutSectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutSectionMaxAggregateInputType
  }

  export type GetWorkoutSectionAggregateType<T extends WorkoutSectionAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutSection]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutSection[P]>
      : GetScalarType<T[P], AggregateWorkoutSection[P]>
  }



  export type WorkoutSectionSelect = {
    id?: boolean
    createdAt?: boolean
    sortPosition?: boolean
    notes?: boolean
    timecap?: boolean
    duration?: boolean
    rounds?: boolean
    workout?: boolean | WorkoutArgs
    workoutId?: boolean
    workoutMoves?: boolean | WorkoutMoveFindManyArgs
    loggedWorkout?: boolean | LoggedWorkoutArgs
    loggedWorkoutId?: boolean
  }

  export type WorkoutSectionInclude = {
    workout?: boolean | WorkoutArgs
    workoutMoves?: boolean | WorkoutMoveFindManyArgs
    loggedWorkout?: boolean | LoggedWorkoutArgs
  }

  export type WorkoutSectionGetPayload<
    S extends boolean | null | undefined | WorkoutSectionArgs,
    U = keyof S
      > = S extends true
        ? WorkoutSection
    : S extends undefined
    ? never
    : S extends WorkoutSectionArgs | WorkoutSectionFindManyArgs
    ?'include' extends U
    ? WorkoutSection  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'workout'
        ? WorkoutGetPayload<S['include'][P]> | null :
        P extends 'workoutMoves'
        ? Array < WorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'loggedWorkout'
        ? LoggedWorkoutGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutSection ?WorkoutSection [P]
  : 
          P extends 'workout'
        ? WorkoutGetPayload<S['select'][P]> | null :
        P extends 'workoutMoves'
        ? Array < WorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'loggedWorkout'
        ? LoggedWorkoutGetPayload<S['select'][P]> | null : never
  } 
    : WorkoutSection
  : WorkoutSection


  type WorkoutSectionCountArgs = Merge<
    Omit<WorkoutSectionFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutSectionCountAggregateInputType | true
    }
  >

  export interface WorkoutSectionDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutSection that matches the filter.
     * @param {WorkoutSectionFindUniqueArgs} args - Arguments to find a WorkoutSection
     * @example
     * // Get one WorkoutSection
     * const workoutSection = await prisma.workoutSection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutSectionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutSectionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutSection'> extends True ? CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection | null >, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T> | null >>

    /**
     * Find the first WorkoutSection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionFindFirstArgs} args - Arguments to find a WorkoutSection
     * @example
     * // Get one WorkoutSection
     * const workoutSection = await prisma.workoutSection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutSectionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutSectionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutSection'> extends True ? CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection | null >, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutSections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutSections
     * const workoutSections = await prisma.workoutSection.findMany()
     * 
     * // Get first 10 WorkoutSections
     * const workoutSections = await prisma.workoutSection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutSectionWithIdOnly = await prisma.workoutSection.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutSectionFindManyArgs>(
      args?: SelectSubset<T, WorkoutSectionFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutSection>>, PrismaPromise<Array<WorkoutSectionGetPayload<T>>>>

    /**
     * Create a WorkoutSection.
     * @param {WorkoutSectionCreateArgs} args - Arguments to create a WorkoutSection.
     * @example
     * // Create one WorkoutSection
     * const WorkoutSection = await prisma.workoutSection.create({
     *   data: {
     *     // ... data to create a WorkoutSection
     *   }
     * })
     * 
    **/
    create<T extends WorkoutSectionCreateArgs>(
      args: SelectSubset<T, WorkoutSectionCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Delete a WorkoutSection.
     * @param {WorkoutSectionDeleteArgs} args - Arguments to delete one WorkoutSection.
     * @example
     * // Delete one WorkoutSection
     * const WorkoutSection = await prisma.workoutSection.delete({
     *   where: {
     *     // ... filter to delete one WorkoutSection
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutSectionDeleteArgs>(
      args: SelectSubset<T, WorkoutSectionDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Update one WorkoutSection.
     * @param {WorkoutSectionUpdateArgs} args - Arguments to update one WorkoutSection.
     * @example
     * // Update one WorkoutSection
     * const workoutSection = await prisma.workoutSection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutSectionUpdateArgs>(
      args: SelectSubset<T, WorkoutSectionUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Delete zero or more WorkoutSections.
     * @param {WorkoutSectionDeleteManyArgs} args - Arguments to filter WorkoutSections to delete.
     * @example
     * // Delete a few WorkoutSections
     * const { count } = await prisma.workoutSection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutSectionDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutSectionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutSections
     * const workoutSection = await prisma.workoutSection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutSectionUpdateManyArgs>(
      args: SelectSubset<T, WorkoutSectionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutSection.
     * @param {WorkoutSectionUpsertArgs} args - Arguments to update or create a WorkoutSection.
     * @example
     * // Update or create a WorkoutSection
     * const workoutSection = await prisma.workoutSection.upsert({
     *   create: {
     *     // ... data to create a WorkoutSection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutSection we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutSectionUpsertArgs>(
      args: SelectSubset<T, WorkoutSectionUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Count the number of WorkoutSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionCountArgs} args - Arguments to filter WorkoutSections to count.
     * @example
     * // Count the number of WorkoutSections
     * const count = await prisma.workoutSection.count({
     *   where: {
     *     // ... the filter for the WorkoutSections we want to count
     *   }
     * })
    **/
    count<T extends WorkoutSectionCountArgs>(
      args?: Subset<T, WorkoutSectionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutSectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutSectionAggregateArgs>(args: Subset<T, WorkoutSectionAggregateArgs>): PrismaPromise<GetWorkoutSectionAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutSection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutSectionClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    workoutMoves<T extends WorkoutMoveFindManyArgs = {}>(args?: Subset<T, WorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>;

    loggedWorkout<T extends LoggedWorkoutArgs = {}>(args?: Subset<T, LoggedWorkoutArgs>): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutSection findUnique
   */
  export type WorkoutSectionFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Throw an Error if a WorkoutSection can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSection to fetch.
    **/
    where: WorkoutSectionWhereUniqueInput
  }


  /**
   * WorkoutSection findFirst
   */
  export type WorkoutSectionFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Throw an Error if a WorkoutSection can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSection to fetch.
    **/
    where?: WorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSections to fetch.
    **/
    orderBy?: Enumerable<WorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutSections.
    **/
    cursor?: WorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSections from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSections.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutSections.
    **/
    distinct?: Enumerable<WorkoutSectionScalarFieldEnum>
  }


  /**
   * WorkoutSection findMany
   */
  export type WorkoutSectionFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Filter, which WorkoutSections to fetch.
    **/
    where?: WorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSections to fetch.
    **/
    orderBy?: Enumerable<WorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutSections.
    **/
    cursor?: WorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSections from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSections.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutSectionScalarFieldEnum>
  }


  /**
   * WorkoutSection create
   */
  export type WorkoutSectionCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
    /**
     * The data needed to create a WorkoutSection.
    **/
    data: XOR<WorkoutSectionUncheckedCreateInput, WorkoutSectionCreateInput>
  }


  /**
   * WorkoutSection update
   */
  export type WorkoutSectionUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
    /**
     * The data needed to update a WorkoutSection.
    **/
    data: XOR<WorkoutSectionUncheckedUpdateInput, WorkoutSectionUpdateInput>
    /**
     * Choose, which WorkoutSection to update.
    **/
    where: WorkoutSectionWhereUniqueInput
  }


  /**
   * WorkoutSection updateMany
   */
  export type WorkoutSectionUpdateManyArgs = {
    data: XOR<WorkoutSectionUncheckedUpdateManyInput, WorkoutSectionUpdateManyMutationInput>
    where?: WorkoutSectionWhereInput
  }


  /**
   * WorkoutSection upsert
   */
  export type WorkoutSectionUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
    /**
     * The filter to search for the WorkoutSection to update in case it exists.
    **/
    where: WorkoutSectionWhereUniqueInput
    /**
     * In case the WorkoutSection found by the `where` argument doesn't exist, create a new WorkoutSection with this data.
    **/
    create: XOR<WorkoutSectionUncheckedCreateInput, WorkoutSectionCreateInput>
    /**
     * In case the WorkoutSection was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutSectionUncheckedUpdateInput, WorkoutSectionUpdateInput>
  }


  /**
   * WorkoutSection delete
   */
  export type WorkoutSectionDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Filter which WorkoutSection to delete.
    **/
    where: WorkoutSectionWhereUniqueInput
  }


  /**
   * WorkoutSection deleteMany
   */
  export type WorkoutSectionDeleteManyArgs = {
    where?: WorkoutSectionWhereInput
  }


  /**
   * WorkoutSection without action
   */
  export type WorkoutSectionArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutSectionInclude | null
  }



  /**
   * Model WorkoutType
   */


  export type AggregateWorkoutType = {
    count: WorkoutTypeCountAggregateOutputType | null
    min: WorkoutTypeMinAggregateOutputType | null
    max: WorkoutTypeMaxAggregateOutputType | null
  }

  export type WorkoutTypeMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    subtitle: string | null
    description: string | null
    placeholderImageUrl: string | null
    scoreType: WorkoutScoreType | null
  }

  export type WorkoutTypeMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    subtitle: string | null
    description: string | null
    placeholderImageUrl: string | null
    scoreType: WorkoutScoreType | null
  }

  export type WorkoutTypeCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    name: number | null
    subtitle: number | null
    description: number | null
    placeholderImageUrl: number | null
    scoreType: number | null
    _all: number
  }


  export type WorkoutTypeMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    subtitle?: true
    description?: true
    placeholderImageUrl?: true
    scoreType?: true
  }

  export type WorkoutTypeMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    subtitle?: true
    description?: true
    placeholderImageUrl?: true
    scoreType?: true
  }

  export type WorkoutTypeCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    subtitle?: true
    description?: true
    placeholderImageUrl?: true
    scoreType?: true
    _all?: true
  }

  export type WorkoutTypeAggregateArgs = {
    /**
     * Filter which WorkoutType to aggregate.
    **/
    where?: WorkoutTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutTypes to fetch.
    **/
    orderBy?: Enumerable<WorkoutTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WorkoutTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutTypes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutTypes.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutTypes
    **/
    count?: true | WorkoutTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WorkoutTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WorkoutTypeMaxAggregateInputType
  }

  export type GetWorkoutTypeAggregateType<T extends WorkoutTypeAggregateArgs> = {
    [P in keyof T & keyof AggregateWorkoutType]: P extends 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutType[P]>
      : GetScalarType<T[P], AggregateWorkoutType[P]>
  }



  export type WorkoutTypeSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    subtitle?: boolean
    description?: boolean
    placeholderImageUrl?: boolean
    scoreType?: boolean
    workouts?: boolean | WorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type WorkoutTypeInclude = {
    workouts?: boolean | WorkoutFindManyArgs
    loggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type WorkoutTypeGetPayload<
    S extends boolean | null | undefined | WorkoutTypeArgs,
    U = keyof S
      > = S extends true
        ? WorkoutType
    : S extends undefined
    ? never
    : S extends WorkoutTypeArgs | WorkoutTypeFindManyArgs
    ?'include' extends U
    ? WorkoutType  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'workouts'
        ? Array < WorkoutGetPayload<S['include'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutType ?WorkoutType [P]
  : 
          P extends 'workouts'
        ? Array < WorkoutGetPayload<S['select'][P]>>  :
        P extends 'loggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutType
  : WorkoutType


  type WorkoutTypeCountArgs = Merge<
    Omit<WorkoutTypeFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutTypeCountAggregateInputType | true
    }
  >

  export interface WorkoutTypeDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutType that matches the filter.
     * @param {WorkoutTypeFindUniqueArgs} args - Arguments to find a WorkoutType
     * @example
     * // Get one WorkoutType
     * const workoutType = await prisma.workoutType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutTypeFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutTypeFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutType'> extends True ? CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType>, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType | null >, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T> | null >>

    /**
     * Find the first WorkoutType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTypeFindFirstArgs} args - Arguments to find a WorkoutType
     * @example
     * // Get one WorkoutType
     * const workoutType = await prisma.workoutType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutTypeFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutTypeFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutType'> extends True ? CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType>, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType | null >, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTypeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutTypes
     * const workoutTypes = await prisma.workoutType.findMany()
     * 
     * // Get first 10 WorkoutTypes
     * const workoutTypes = await prisma.workoutType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutTypeWithIdOnly = await prisma.workoutType.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutTypeFindManyArgs>(
      args?: SelectSubset<T, WorkoutTypeFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutType>>, PrismaPromise<Array<WorkoutTypeGetPayload<T>>>>

    /**
     * Create a WorkoutType.
     * @param {WorkoutTypeCreateArgs} args - Arguments to create a WorkoutType.
     * @example
     * // Create one WorkoutType
     * const WorkoutType = await prisma.workoutType.create({
     *   data: {
     *     // ... data to create a WorkoutType
     *   }
     * })
     * 
    **/
    create<T extends WorkoutTypeCreateArgs>(
      args: SelectSubset<T, WorkoutTypeCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType>, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T>>>

    /**
     * Delete a WorkoutType.
     * @param {WorkoutTypeDeleteArgs} args - Arguments to delete one WorkoutType.
     * @example
     * // Delete one WorkoutType
     * const WorkoutType = await prisma.workoutType.delete({
     *   where: {
     *     // ... filter to delete one WorkoutType
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutTypeDeleteArgs>(
      args: SelectSubset<T, WorkoutTypeDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType>, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T>>>

    /**
     * Update one WorkoutType.
     * @param {WorkoutTypeUpdateArgs} args - Arguments to update one WorkoutType.
     * @example
     * // Update one WorkoutType
     * const workoutType = await prisma.workoutType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutTypeUpdateArgs>(
      args: SelectSubset<T, WorkoutTypeUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType>, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T>>>

    /**
     * Delete zero or more WorkoutTypes.
     * @param {WorkoutTypeDeleteManyArgs} args - Arguments to filter WorkoutTypes to delete.
     * @example
     * // Delete a few WorkoutTypes
     * const { count } = await prisma.workoutType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutTypeDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutTypeDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutTypes
     * const workoutType = await prisma.workoutType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutTypeUpdateManyArgs>(
      args: SelectSubset<T, WorkoutTypeUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutType.
     * @param {WorkoutTypeUpsertArgs} args - Arguments to update or create a WorkoutType.
     * @example
     * // Update or create a WorkoutType
     * const workoutType = await prisma.workoutType.upsert({
     *   create: {
     *     // ... data to create a WorkoutType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutType we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutTypeUpsertArgs>(
      args: SelectSubset<T, WorkoutTypeUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutTypeClient<WorkoutType>, Prisma__WorkoutTypeClient<WorkoutTypeGetPayload<T>>>

    /**
     * Count the number of WorkoutTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTypeCountArgs} args - Arguments to filter WorkoutTypes to count.
     * @example
     * // Count the number of WorkoutTypes
     * const count = await prisma.workoutType.count({
     *   where: {
     *     // ... the filter for the WorkoutTypes we want to count
     *   }
     * })
    **/
    count<T extends WorkoutTypeCountArgs>(
      args?: Subset<T, WorkoutTypeCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutTypeAggregateArgs>(args: Subset<T, WorkoutTypeAggregateArgs>): PrismaPromise<GetWorkoutTypeAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutTypeClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    workouts<T extends WorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>;

    loggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutType findUnique
   */
  export type WorkoutTypeFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
    /**
     * Throw an Error if a WorkoutType can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutType to fetch.
    **/
    where: WorkoutTypeWhereUniqueInput
  }


  /**
   * WorkoutType findFirst
   */
  export type WorkoutTypeFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
    /**
     * Throw an Error if a WorkoutType can't be found
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutType to fetch.
    **/
    where?: WorkoutTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutTypes to fetch.
    **/
    orderBy?: Enumerable<WorkoutTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutTypes.
    **/
    cursor?: WorkoutTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutTypes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutTypes.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutTypes.
    **/
    distinct?: Enumerable<WorkoutTypeScalarFieldEnum>
  }


  /**
   * WorkoutType findMany
   */
  export type WorkoutTypeFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
    /**
     * Filter, which WorkoutTypes to fetch.
    **/
    where?: WorkoutTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutTypes to fetch.
    **/
    orderBy?: Enumerable<WorkoutTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutTypes.
    **/
    cursor?: WorkoutTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutTypes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutTypes.
    **/
    skip?: number
    distinct?: Enumerable<WorkoutTypeScalarFieldEnum>
  }


  /**
   * WorkoutType create
   */
  export type WorkoutTypeCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
    /**
     * The data needed to create a WorkoutType.
    **/
    data: XOR<WorkoutTypeUncheckedCreateInput, WorkoutTypeCreateInput>
  }


  /**
   * WorkoutType update
   */
  export type WorkoutTypeUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
    /**
     * The data needed to update a WorkoutType.
    **/
    data: XOR<WorkoutTypeUncheckedUpdateInput, WorkoutTypeUpdateInput>
    /**
     * Choose, which WorkoutType to update.
    **/
    where: WorkoutTypeWhereUniqueInput
  }


  /**
   * WorkoutType updateMany
   */
  export type WorkoutTypeUpdateManyArgs = {
    data: XOR<WorkoutTypeUncheckedUpdateManyInput, WorkoutTypeUpdateManyMutationInput>
    where?: WorkoutTypeWhereInput
  }


  /**
   * WorkoutType upsert
   */
  export type WorkoutTypeUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
    /**
     * The filter to search for the WorkoutType to update in case it exists.
    **/
    where: WorkoutTypeWhereUniqueInput
    /**
     * In case the WorkoutType found by the `where` argument doesn't exist, create a new WorkoutType with this data.
    **/
    create: XOR<WorkoutTypeUncheckedCreateInput, WorkoutTypeCreateInput>
    /**
     * In case the WorkoutType was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WorkoutTypeUncheckedUpdateInput, WorkoutTypeUpdateInput>
  }


  /**
   * WorkoutType delete
   */
  export type WorkoutTypeDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
    /**
     * Filter which WorkoutType to delete.
    **/
    where: WorkoutTypeWhereUniqueInput
  }


  /**
   * WorkoutType deleteMany
   */
  export type WorkoutTypeDeleteManyArgs = {
    where?: WorkoutTypeWhereInput
  }


  /**
   * WorkoutType without action
   */
  export type WorkoutTypeArgs = {
    /**
     * Select specific fields to fetch from the WorkoutType
    **/
    select?: WorkoutTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WorkoutTypeInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const AdminScalarFieldEnum: {
    id: 'id',
    firebaseUid: 'firebaseUid',
    createdAt: 'createdAt',
    username: 'username'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const BodyAreaScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    altNames: 'altNames',
    frontBack: 'frontBack',
    upperLower: 'upperLower'
  };

  export type BodyAreaScalarFieldEnum = (typeof BodyAreaScalarFieldEnum)[keyof typeof BodyAreaScalarFieldEnum]


  export const BodyAreaMoveScoreScalarFieldEnum: {
    createdAt: 'createdAt',
    moveId: 'moveId',
    bodyAreaId: 'bodyAreaId',
    score: 'score'
  };

  export type BodyAreaMoveScoreScalarFieldEnum = (typeof BodyAreaMoveScoreScalarFieldEnum)[keyof typeof BodyAreaMoveScoreScalarFieldEnum]


  export const EquipmentScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    altNames: 'altNames',
    imageUrl: 'imageUrl',
    loadAdjustable: 'loadAdjustable'
  };

  export type EquipmentScalarFieldEnum = (typeof EquipmentScalarFieldEnum)[keyof typeof EquipmentScalarFieldEnum]


  export const GymProfileScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description',
    postcode: 'postcode',
    bodyweightOnly: 'bodyweightOnly'
  };

  export type GymProfileScalarFieldEnum = (typeof GymProfileScalarFieldEnum)[keyof typeof GymProfileScalarFieldEnum]


  export const LoggedWorkoutScalarFieldEnum: {
    id: 'id',
    name: 'name',
    summary: 'summary',
    description: 'description',
    createdAt: 'createdAt',
    completedOn: 'completedOn',
    completedById: 'completedById',
    notes: 'notes',
    videoUrl: 'videoUrl',
    videoThumbUrl: 'videoThumbUrl',
    imageUrl: 'imageUrl',
    duration: 'duration',
    workoutTypeId: 'workoutTypeId',
    originalWorkoutId: 'originalWorkoutId',
    scheduledWorkoutId: 'scheduledWorkoutId',
    gymProfileId: 'gymProfileId',
    workoutProgramEnrolmentId: 'workoutProgramEnrolmentId',
    workoutProgramWorkoutId: 'workoutProgramWorkoutId'
  };

  export type LoggedWorkoutScalarFieldEnum = (typeof LoggedWorkoutScalarFieldEnum)[keyof typeof LoggedWorkoutScalarFieldEnum]


  export const MoveScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    archived: 'archived',
    createdById: 'createdById',
    scope: 'scope',
    name: 'name',
    searchTerms: 'searchTerms',
    description: 'description',
    demoVideoUrl: 'demoVideoUrl',
    demoVideoThumbUrl: 'demoVideoThumbUrl',
    moveTypeId: 'moveTypeId',
    validRepTypes: 'validRepTypes'
  };

  export type MoveScalarFieldEnum = (typeof MoveScalarFieldEnum)[keyof typeof MoveScalarFieldEnum]


  export const MoveProfileScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description'
  };

  export type MoveProfileScalarFieldEnum = (typeof MoveProfileScalarFieldEnum)[keyof typeof MoveProfileScalarFieldEnum]


  export const MoveTypeScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    description: 'description',
    imageUrl: 'imageUrl'
  };

  export type MoveTypeScalarFieldEnum = (typeof MoveTypeScalarFieldEnum)[keyof typeof MoveTypeScalarFieldEnum]


  export const ProgressJournalScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description'
  };

  export type ProgressJournalScalarFieldEnum = (typeof ProgressJournalScalarFieldEnum)[keyof typeof ProgressJournalScalarFieldEnum]


  export const ProgressJournalEntryScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    notes: 'notes',
    voiceNoteUrl: 'voiceNoteUrl',
    bodyweight: 'bodyweight',
    moodScore: 'moodScore',
    energyScore: 'energyScore',
    stressScore: 'stressScore',
    motivationScore: 'motivationScore',
    progressPhotoUrls: 'progressPhotoUrls',
    progressJournalId: 'progressJournalId'
  };

  export type ProgressJournalEntryScalarFieldEnum = (typeof ProgressJournalEntryScalarFieldEnum)[keyof typeof ProgressJournalEntryScalarFieldEnum]


  export const ProgressJournalGoalScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    description: 'description',
    deadline: 'deadline',
    completedDate: 'completedDate',
    progressJournalId: 'progressJournalId'
  };

  export type ProgressJournalGoalScalarFieldEnum = (typeof ProgressJournalGoalScalarFieldEnum)[keyof typeof ProgressJournalGoalScalarFieldEnum]


  export const ProgressJournalGoalTagScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    tag: 'tag',
    hexColor: 'hexColor',
    userId: 'userId'
  };

  export type ProgressJournalGoalTagScalarFieldEnum = (typeof ProgressJournalGoalTagScalarFieldEnum)[keyof typeof ProgressJournalGoalTagScalarFieldEnum]


  export const ScheduledWorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    notes: 'notes',
    scheduledAt: 'scheduledAt',
    workoutId: 'workoutId',
    loggedWorkoutId: 'loggedWorkoutId',
    gymProfileId: 'gymProfileId'
  };

  export type ScheduledWorkoutScalarFieldEnum = (typeof ScheduledWorkoutScalarFieldEnum)[keyof typeof ScheduledWorkoutScalarFieldEnum]


  export const TrainerAccountScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId'
  };

  export type TrainerAccountScalarFieldEnum = (typeof TrainerAccountScalarFieldEnum)[keyof typeof TrainerAccountScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    firebaseUid: 'firebaseUid',
    createdAt: 'createdAt',
    hasOnboarded: 'hasOnboarded',
    userProfileScope: 'userProfileScope',
    avatarUrl: 'avatarUrl',
    introVideoUrl: 'introVideoUrl',
    introVideoThumbUrl: 'introVideoThumbUrl',
    coverImageUrl: 'coverImageUrl',
    displayName: 'displayName',
    firstname: 'firstname',
    lastname: 'lastname',
    themePreference: 'themePreference',
    bio: 'bio',
    tagline: 'tagline',
    birthdate: 'birthdate',
    gender: 'gender',
    height: 'height',
    weight: 'weight',
    townCity: 'townCity',
    countryCode: 'countryCode',
    instagramUrl: 'instagramUrl',
    tiktokUrl: 'tiktokUrl',
    youtubeUrl: 'youtubeUrl',
    snapUrl: 'snapUrl',
    linkedinUrl: 'linkedinUrl',
    unitSystem: 'unitSystem'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserBenchmarkScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    createdById: 'createdById',
    name: 'name',
    description: 'description',
    reps: 'reps',
    repType: 'repType',
    load: 'load',
    loadUnit: 'loadUnit',
    distanceUnit: 'distanceUnit',
    scoreType: 'scoreType',
    moveId: 'moveId'
  };

  export type UserBenchmarkScalarFieldEnum = (typeof UserBenchmarkScalarFieldEnum)[keyof typeof UserBenchmarkScalarFieldEnum]


  export const UserBenchmarkEntryScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    score: 'score',
    notes: 'notes',
    videoUrl: 'videoUrl',
    imageUrl: 'imageUrl',
    userBenchmarkId: 'userBenchmarkId'
  };

  export type UserBenchmarkEntryScalarFieldEnum = (typeof UserBenchmarkEntryScalarFieldEnum)[keyof typeof UserBenchmarkEntryScalarFieldEnum]


  export const UserCollectionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description'
  };

  export type UserCollectionScalarFieldEnum = (typeof UserCollectionScalarFieldEnum)[keyof typeof UserCollectionScalarFieldEnum]


  export const WorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    createdById: 'createdById',
    name: 'name',
    summary: 'summary',
    description: 'description',
    demoVideoUrl: 'demoVideoUrl',
    demoVideoThumbUrl: 'demoVideoThumbUrl',
    youtubeVideoUrl: 'youtubeVideoUrl',
    spotifyAudio: 'spotifyAudio',
    imageUrl: 'imageUrl',
    timecap: 'timecap',
    builderData: 'builderData',
    difficultyLevel: 'difficultyLevel',
    scope: 'scope',
    workoutTypeId: 'workoutTypeId'
  };

  export type WorkoutScalarFieldEnum = (typeof WorkoutScalarFieldEnum)[keyof typeof WorkoutScalarFieldEnum]


  export const WorkoutGoalScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    description: 'description',
    placeholderImageUrl: 'placeholderImageUrl'
  };

  export type WorkoutGoalScalarFieldEnum = (typeof WorkoutGoalScalarFieldEnum)[keyof typeof WorkoutGoalScalarFieldEnum]


  export const WorkoutMoveScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    sortPosition: 'sortPosition',
    repType: 'repType',
    reps: 'reps',
    distanceUnit: 'distanceUnit',
    loadAmount: 'loadAmount',
    loadUnit: 'loadUnit',
    duration: 'duration',
    description: 'description',
    notes: 'notes',
    moveId: 'moveId',
    selectedEquipmentId: 'selectedEquipmentId',
    workoutSectionId: 'workoutSectionId'
  };

  export type WorkoutMoveScalarFieldEnum = (typeof WorkoutMoveScalarFieldEnum)[keyof typeof WorkoutMoveScalarFieldEnum]


  export const WorkoutProgramScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    description: 'description',
    imageUrl: 'imageUrl',
    videoUrl: 'videoUrl',
    videoThumbUrl: 'videoThumbUrl',
    youtubeVideoUrl: 'youtubeVideoUrl',
    scope: 'scope',
    createdById: 'createdById'
  };

  export type WorkoutProgramScalarFieldEnum = (typeof WorkoutProgramScalarFieldEnum)[keyof typeof WorkoutProgramScalarFieldEnum]


  export const WorkoutProgramEnrolmentScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    startDate: 'startDate',
    workoutProgramId: 'workoutProgramId',
    userId: 'userId'
  };

  export type WorkoutProgramEnrolmentScalarFieldEnum = (typeof WorkoutProgramEnrolmentScalarFieldEnum)[keyof typeof WorkoutProgramEnrolmentScalarFieldEnum]


  export const WorkoutProgramReviewScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    score: 'score',
    comment: 'comment',
    workoutProgramId: 'workoutProgramId',
    userId: 'userId'
  };

  export type WorkoutProgramReviewScalarFieldEnum = (typeof WorkoutProgramReviewScalarFieldEnum)[keyof typeof WorkoutProgramReviewScalarFieldEnum]


  export const WorkoutProgramWorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    dayNumber: 'dayNumber',
    notes: 'notes',
    workoutProgramId: 'workoutProgramId',
    workoutId: 'workoutId'
  };

  export type WorkoutProgramWorkoutScalarFieldEnum = (typeof WorkoutProgramWorkoutScalarFieldEnum)[keyof typeof WorkoutProgramWorkoutScalarFieldEnum]


  export const WorkoutSectionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    sortPosition: 'sortPosition',
    notes: 'notes',
    timecap: 'timecap',
    duration: 'duration',
    rounds: 'rounds',
    workoutId: 'workoutId',
    loggedWorkoutId: 'loggedWorkoutId'
  };

  export type WorkoutSectionScalarFieldEnum = (typeof WorkoutSectionScalarFieldEnum)[keyof typeof WorkoutSectionScalarFieldEnum]


  export const WorkoutTypeScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    subtitle: 'subtitle',
    description: 'description',
    placeholderImageUrl: 'placeholderImageUrl',
    scoreType: 'scoreType'
  };

  export type WorkoutTypeScalarFieldEnum = (typeof WorkoutTypeScalarFieldEnum)[keyof typeof WorkoutTypeScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Deep Input Types
   */


  export type AdminWhereInput = {
    AND?: Enumerable<AdminWhereInput>
    OR?: Enumerable<AdminWhereInput>
    NOT?: Enumerable<AdminWhereInput>
    id?: StringFilter | string
    firebaseUid?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    username?: StringFilter | string
  }

  export type AdminOrderByInput = {
    id?: SortOrder
    firebaseUid?: SortOrder
    createdAt?: SortOrder
    username?: SortOrder
  }

  export type AdminWhereUniqueInput = {
    id?: string
    firebaseUid?: string
    username?: string
  }

  export type BodyAreaWhereInput = {
    AND?: Enumerable<BodyAreaWhereInput>
    OR?: Enumerable<BodyAreaWhereInput>
    NOT?: Enumerable<BodyAreaWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    altNames?: StringNullableFilter | string | null
    bodyAreaMoveScores?: BodyAreaMoveScoreListRelationFilter
    frontBack?: EnumBodyAreaFrontBackFilter | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFilter | BodyAreaUpperLower
  }

  export type BodyAreaOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    altNames?: SortOrder
    frontBack?: SortOrder
    upperLower?: SortOrder
  }

  export type BodyAreaWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type BodyAreaMoveScoreWhereInput = {
    AND?: Enumerable<BodyAreaMoveScoreWhereInput>
    OR?: Enumerable<BodyAreaMoveScoreWhereInput>
    NOT?: Enumerable<BodyAreaMoveScoreWhereInput>
    createdAt?: DateTimeFilter | Date | string
    move?: XOR<MoveWhereInput, MoveRelationFilter>
    moveId?: StringFilter | string
    bodyArea?: XOR<BodyAreaWhereInput, BodyAreaRelationFilter>
    bodyAreaId?: StringFilter | string
    score?: IntFilter | number
  }

  export type BodyAreaMoveScoreOrderByInput = {
    createdAt?: SortOrder
    move?: MoveOrderByInput
    moveId?: SortOrder
    bodyArea?: BodyAreaOrderByInput
    bodyAreaId?: SortOrder
    score?: SortOrder
  }

  export type BodyAreaMoveScoreWhereUniqueInput = {
    moveId_bodyAreaId?: BodyAreaMoveScoreMoveIdBodyAreaIdCompoundUniqueInput
  }

  export type EquipmentWhereInput = {
    AND?: Enumerable<EquipmentWhereInput>
    OR?: Enumerable<EquipmentWhereInput>
    NOT?: Enumerable<EquipmentWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    altNames?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    loadAdjustable?: BoolFilter | boolean
    requiredForMoves?: MoveListRelationFilter
    selectableForMoves?: MoveListRelationFilter
    workoutMoves?: WorkoutMoveListRelationFilter
    gymProfiles?: GymProfileListRelationFilter
    userBenchmarks?: UserBenchmarkListRelationFilter
  }

  export type EquipmentOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    altNames?: SortOrder
    imageUrl?: SortOrder
    loadAdjustable?: SortOrder
  }

  export type EquipmentWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type GymProfileWhereInput = {
    AND?: Enumerable<GymProfileWhereInput>
    OR?: Enumerable<GymProfileWhereInput>
    NOT?: Enumerable<GymProfileWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    postcode?: StringNullableFilter | string | null
    bodyweightOnly?: BoolFilter | boolean
    availableEquipments?: EquipmentListRelationFilter
    scheduledWorkouts?: ScheduledWorkoutListRelationFilter
    loggedWorkouts?: LoggedWorkoutListRelationFilter
  }

  export type GymProfileOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByInput
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    postcode?: SortOrder
    bodyweightOnly?: SortOrder
  }

  export type GymProfileWhereUniqueInput = {
    id?: string
  }

  export type LoggedWorkoutWhereInput = {
    AND?: Enumerable<LoggedWorkoutWhereInput>
    OR?: Enumerable<LoggedWorkoutWhereInput>
    NOT?: Enumerable<LoggedWorkoutWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    summary?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    completedOn?: DateTimeFilter | Date | string
    completedBy?: XOR<UserWhereInput, UserRelationFilter>
    completedById?: StringFilter | string
    notes?: StringNullableFilter | string | null
    videoUrl?: StringNullableFilter | string | null
    videoThumbUrl?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    duration?: IntNullableFilter | number | null
    workoutType?: XOR<WorkoutTypeWhereInput, WorkoutTypeRelationFilter>
    workoutTypeId?: StringFilter | string
    workoutSections?: WorkoutSectionListRelationFilter
    originalWorkout?: XOR<WorkoutWhereInput, WorkoutRelationFilter> | null
    originalWorkoutId?: StringNullableFilter | string | null
    scheduledWorkout?: XOR<ScheduledWorkoutWhereInput, ScheduledWorkoutRelationFilter> | null
    scheduledWorkoutId?: StringNullableFilter | string | null
    gymProfile?: XOR<GymProfileWhereInput, GymProfileRelationFilter> | null
    gymProfileId?: StringNullableFilter | string | null
    workoutProgramEnrolment?: XOR<WorkoutProgramEnrolmentWhereInput, WorkoutProgramEnrolmentRelationFilter> | null
    workoutProgramEnrolmentId?: StringNullableFilter | string | null
    workoutProgramWorkout?: XOR<WorkoutProgramWorkoutWhereInput, WorkoutProgramWorkoutRelationFilter> | null
    workoutProgramWorkoutId?: StringNullableFilter | string | null
  }

  export type LoggedWorkoutOrderByInput = {
    id?: SortOrder
    name?: SortOrder
    summary?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    completedOn?: SortOrder
    completedBy?: UserOrderByInput
    completedById?: SortOrder
    notes?: SortOrder
    videoUrl?: SortOrder
    videoThumbUrl?: SortOrder
    imageUrl?: SortOrder
    duration?: SortOrder
    workoutType?: WorkoutTypeOrderByInput
    workoutTypeId?: SortOrder
    originalWorkout?: WorkoutOrderByInput
    originalWorkoutId?: SortOrder
    scheduledWorkout?: ScheduledWorkoutOrderByInput
    scheduledWorkoutId?: SortOrder
    gymProfile?: GymProfileOrderByInput
    gymProfileId?: SortOrder
    workoutProgramEnrolment?: WorkoutProgramEnrolmentOrderByInput
    workoutProgramEnrolmentId?: SortOrder
    workoutProgramWorkout?: WorkoutProgramWorkoutOrderByInput
    workoutProgramWorkoutId?: SortOrder
  }

  export type LoggedWorkoutWhereUniqueInput = {
    id?: string
  }

  export type MoveWhereInput = {
    AND?: Enumerable<MoveWhereInput>
    OR?: Enumerable<MoveWhereInput>
    NOT?: Enumerable<MoveWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    createdBy?: XOR<UserWhereInput, UserRelationFilter> | null
    createdById?: StringNullableFilter | string | null
    scope?: EnumMoveScopeFilter | MoveScope
    name?: StringFilter | string
    searchTerms?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    demoVideoUrl?: StringNullableFilter | string | null
    demoVideoThumbUrl?: StringNullableFilter | string | null
    moveType?: XOR<MoveTypeWhereInput, MoveTypeRelationFilter> | null
    moveTypeId?: StringNullableFilter | string | null
    validRepTypes?: EnumWorkoutMoveRepTypeNullableListFilter
    requiredEquipments?: EquipmentListRelationFilter
    selectableEquipments?: EquipmentListRelationFilter
    requiredForMoveProfiles?: MoveProfileListRelationFilter
    excludedForMoveProfiles?: MoveProfileListRelationFilter
    workoutMoves?: WorkoutMoveListRelationFilter
    bodyAreaMoveScores?: BodyAreaMoveScoreListRelationFilter
    userBenchmarks?: UserBenchmarkListRelationFilter
  }

  export type MoveOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    archived?: SortOrder
    createdBy?: UserOrderByInput
    createdById?: SortOrder
    scope?: SortOrder
    name?: SortOrder
    searchTerms?: SortOrder
    description?: SortOrder
    demoVideoUrl?: SortOrder
    demoVideoThumbUrl?: SortOrder
    moveType?: MoveTypeOrderByInput
    moveTypeId?: SortOrder
    validRepTypes?: SortOrder
  }

  export type MoveWhereUniqueInput = {
    id?: string
  }

  export type MoveProfileWhereInput = {
    AND?: Enumerable<MoveProfileWhereInput>
    OR?: Enumerable<MoveProfileWhereInput>
    NOT?: Enumerable<MoveProfileWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    requiredMoves?: MoveListRelationFilter
    excludedMoves?: MoveListRelationFilter
  }

  export type MoveProfileOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByInput
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type MoveProfileWhereUniqueInput = {
    id?: string
  }

  export type MoveTypeWhereInput = {
    AND?: Enumerable<MoveTypeWhereInput>
    OR?: Enumerable<MoveTypeWhereInput>
    NOT?: Enumerable<MoveTypeWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringFilter | string
    imageUrl?: StringFilter | string
    moves?: MoveListRelationFilter
  }

  export type MoveTypeOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    imageUrl?: SortOrder
  }

  export type MoveTypeWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalWhereInput = {
    AND?: Enumerable<ProgressJournalWhereInput>
    OR?: Enumerable<ProgressJournalWhereInput>
    NOT?: Enumerable<ProgressJournalWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    progressJournalEntries?: ProgressJournalEntryListRelationFilter
    progressJournalGoals?: ProgressJournalGoalListRelationFilter
  }

  export type ProgressJournalOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByInput
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type ProgressJournalWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalEntryWhereInput = {
    AND?: Enumerable<ProgressJournalEntryWhereInput>
    OR?: Enumerable<ProgressJournalEntryWhereInput>
    NOT?: Enumerable<ProgressJournalEntryWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    notes?: StringNullableFilter | string | null
    voiceNoteUrl?: StringNullableFilter | string | null
    bodyweight?: FloatNullableFilter | number | null
    moodScore?: FloatNullableFilter | number | null
    energyScore?: FloatNullableFilter | number | null
    stressScore?: FloatNullableFilter | number | null
    motivationScore?: FloatNullableFilter | number | null
    progressPhotoUrls?: StringNullableListFilter
    progressJournal?: XOR<ProgressJournalWhereInput, ProgressJournalRelationFilter>
    progressJournalId?: StringFilter | string
  }

  export type ProgressJournalEntryOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    notes?: SortOrder
    voiceNoteUrl?: SortOrder
    bodyweight?: SortOrder
    moodScore?: SortOrder
    energyScore?: SortOrder
    stressScore?: SortOrder
    motivationScore?: SortOrder
    progressPhotoUrls?: SortOrder
    progressJournal?: ProgressJournalOrderByInput
    progressJournalId?: SortOrder
  }

  export type ProgressJournalEntryWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalGoalWhereInput = {
    AND?: Enumerable<ProgressJournalGoalWhereInput>
    OR?: Enumerable<ProgressJournalGoalWhereInput>
    NOT?: Enumerable<ProgressJournalGoalWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    deadline?: DateTimeNullableFilter | Date | string | null
    completedDate?: DateTimeNullableFilter | Date | string | null
    progressJournalGoalTags?: ProgressJournalGoalTagListRelationFilter
    progressJournal?: XOR<ProgressJournalWhereInput, ProgressJournalRelationFilter>
    progressJournalId?: StringFilter | string
  }

  export type ProgressJournalGoalOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deadline?: SortOrder
    completedDate?: SortOrder
    progressJournal?: ProgressJournalOrderByInput
    progressJournalId?: SortOrder
  }

  export type ProgressJournalGoalWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalGoalTagWhereInput = {
    AND?: Enumerable<ProgressJournalGoalTagWhereInput>
    OR?: Enumerable<ProgressJournalGoalTagWhereInput>
    NOT?: Enumerable<ProgressJournalGoalTagWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    tag?: StringFilter | string
    hexColor?: StringFilter | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
    progressJournalGoals?: ProgressJournalGoalListRelationFilter
  }

  export type ProgressJournalGoalTagOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    tag?: SortOrder
    hexColor?: SortOrder
    user?: UserOrderByInput
    userId?: SortOrder
  }

  export type ProgressJournalGoalTagWhereUniqueInput = {
    id?: string
  }

  export type ScheduledWorkoutWhereInput = {
    AND?: Enumerable<ScheduledWorkoutWhereInput>
    OR?: Enumerable<ScheduledWorkoutWhereInput>
    NOT?: Enumerable<ScheduledWorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
    notes?: StringNullableFilter | string | null
    scheduledAt?: DateTimeFilter | Date | string
    workout?: XOR<WorkoutWhereInput, WorkoutRelationFilter> | null
    workoutId?: StringNullableFilter | string | null
    loggedWorkout?: XOR<LoggedWorkoutWhereInput, LoggedWorkoutRelationFilter> | null
    loggedWorkoutId?: StringNullableFilter | string | null
    gymProfile?: XOR<GymProfileWhereInput, GymProfileRelationFilter> | null
    gymProfileId?: StringNullableFilter | string | null
  }

  export type ScheduledWorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByInput
    userId?: SortOrder
    notes?: SortOrder
    scheduledAt?: SortOrder
    workout?: WorkoutOrderByInput
    workoutId?: SortOrder
    loggedWorkoutId?: SortOrder
    gymProfile?: GymProfileOrderByInput
    gymProfileId?: SortOrder
  }

  export type ScheduledWorkoutWhereUniqueInput = {
    id?: string
  }

  export type TrainerAccountWhereInput = {
    AND?: Enumerable<TrainerAccountWhereInput>
    OR?: Enumerable<TrainerAccountWhereInput>
    NOT?: Enumerable<TrainerAccountWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
  }

  export type TrainerAccountOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
  }

  export type TrainerAccountWhereUniqueInput = {
    id?: string
  }

  export type UserWhereInput = {
    AND?: Enumerable<UserWhereInput>
    OR?: Enumerable<UserWhereInput>
    NOT?: Enumerable<UserWhereInput>
    id?: StringFilter | string
    firebaseUid?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    hasOnboarded?: BoolFilter | boolean
    userProfileScope?: EnumUserProfileScopeFilter | UserProfileScope
    avatarUrl?: StringNullableFilter | string | null
    introVideoUrl?: StringNullableFilter | string | null
    introVideoThumbUrl?: StringNullableFilter | string | null
    coverImageUrl?: StringNullableFilter | string | null
    displayName?: StringNullableFilter | string | null
    firstname?: StringNullableFilter | string | null
    lastname?: StringNullableFilter | string | null
    themePreference?: EnumThemePreferenceFilter | ThemePreference
    bio?: StringNullableFilter | string | null
    tagline?: StringNullableFilter | string | null
    birthdate?: DateTimeNullableFilter | Date | string | null
    gender?: EnumGenderNullableFilter | Gender | null
    height?: FloatNullableFilter | number | null
    weight?: FloatNullableFilter | number | null
    townCity?: StringNullableFilter | string | null
    countryCode?: StringNullableFilter | string | null
    instagramUrl?: StringNullableFilter | string | null
    tiktokUrl?: StringNullableFilter | string | null
    youtubeUrl?: StringNullableFilter | string | null
    snapUrl?: StringNullableFilter | string | null
    linkedinUrl?: StringNullableFilter | string | null
    unitSystem?: EnumUnitSystemFilter | UnitSystem
    followedBy?: UserListRelationFilter
    following?: UserListRelationFilter
    customMoves?: MoveListRelationFilter
    workouts?: WorkoutListRelationFilter
    scheduledWorkouts?: ScheduledWorkoutListRelationFilter
    loggedWorkouts?: LoggedWorkoutListRelationFilter
    gymProfiles?: GymProfileListRelationFilter
    moveProfiles?: MoveProfileListRelationFilter
    workoutPrograms?: WorkoutProgramListRelationFilter
    workoutProgramEnrolments?: WorkoutProgramEnrolmentListRelationFilter
    workoutProgramReviews?: WorkoutProgramReviewListRelationFilter
    userBenchmarks?: UserBenchmarkListRelationFilter
    collections?: UserCollectionListRelationFilter
    trainerAccount?: XOR<TrainerAccountWhereInput, TrainerAccountRelationFilter> | null
    progressJournals?: ProgressJournalListRelationFilter
    progressJournalGoalTags?: ProgressJournalGoalTagListRelationFilter
  }

  export type UserOrderByInput = {
    id?: SortOrder
    firebaseUid?: SortOrder
    createdAt?: SortOrder
    hasOnboarded?: SortOrder
    userProfileScope?: SortOrder
    avatarUrl?: SortOrder
    introVideoUrl?: SortOrder
    introVideoThumbUrl?: SortOrder
    coverImageUrl?: SortOrder
    displayName?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    themePreference?: SortOrder
    bio?: SortOrder
    tagline?: SortOrder
    birthdate?: SortOrder
    gender?: SortOrder
    height?: SortOrder
    weight?: SortOrder
    townCity?: SortOrder
    countryCode?: SortOrder
    instagramUrl?: SortOrder
    tiktokUrl?: SortOrder
    youtubeUrl?: SortOrder
    snapUrl?: SortOrder
    linkedinUrl?: SortOrder
    unitSystem?: SortOrder
    trainerAccount?: TrainerAccountOrderByInput
  }

  export type UserWhereUniqueInput = {
    id?: string
    firebaseUid?: string
    displayName?: string
  }

  export type UserBenchmarkWhereInput = {
    AND?: Enumerable<UserBenchmarkWhereInput>
    OR?: Enumerable<UserBenchmarkWhereInput>
    NOT?: Enumerable<UserBenchmarkWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    createdBy?: XOR<UserWhereInput, UserRelationFilter>
    createdById?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    reps?: FloatFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    load?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFilter | BenchmarkScoreType
    equipment?: EquipmentListRelationFilter
    move?: XOR<MoveWhereInput, MoveRelationFilter>
    moveId?: StringFilter | string
    entries?: UserBenchmarkEntryListRelationFilter
  }

  export type UserBenchmarkOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    createdBy?: UserOrderByInput
    createdById?: SortOrder
    name?: SortOrder
    description?: SortOrder
    reps?: SortOrder
    repType?: SortOrder
    load?: SortOrder
    loadUnit?: SortOrder
    distanceUnit?: SortOrder
    scoreType?: SortOrder
    move?: MoveOrderByInput
    moveId?: SortOrder
  }

  export type UserBenchmarkWhereUniqueInput = {
    id?: string
  }

  export type UserBenchmarkEntryWhereInput = {
    AND?: Enumerable<UserBenchmarkEntryWhereInput>
    OR?: Enumerable<UserBenchmarkEntryWhereInput>
    NOT?: Enumerable<UserBenchmarkEntryWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    score?: FloatFilter | number
    notes?: StringNullableFilter | string | null
    videoUrl?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    userBenchmark?: XOR<UserBenchmarkWhereInput, UserBenchmarkRelationFilter>
    userBenchmarkId?: StringFilter | string
  }

  export type UserBenchmarkEntryOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    score?: SortOrder
    notes?: SortOrder
    videoUrl?: SortOrder
    imageUrl?: SortOrder
    userBenchmark?: UserBenchmarkOrderByInput
    userBenchmarkId?: SortOrder
  }

  export type UserBenchmarkEntryWhereUniqueInput = {
    id?: string
  }

  export type UserCollectionWhereInput = {
    AND?: Enumerable<UserCollectionWhereInput>
    OR?: Enumerable<UserCollectionWhereInput>
    NOT?: Enumerable<UserCollectionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    owner?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    workouts?: WorkoutListRelationFilter
    workoutPrograms?: WorkoutProgramListRelationFilter
  }

  export type UserCollectionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    owner?: UserOrderByInput
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type UserCollectionWhereUniqueInput = {
    id?: string
  }

  export type WorkoutWhereInput = {
    AND?: Enumerable<WorkoutWhereInput>
    OR?: Enumerable<WorkoutWhereInput>
    NOT?: Enumerable<WorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    createdBy?: XOR<UserWhereInput, UserRelationFilter> | null
    createdById?: StringNullableFilter | string | null
    name?: StringFilter | string
    summary?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    demoVideoUrl?: StringNullableFilter | string | null
    demoVideoThumbUrl?: StringNullableFilter | string | null
    youtubeVideoUrl?: StringNullableFilter | string | null
    spotifyAudio?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    timecap?: IntNullableFilter | number | null
    builderData?: JsonNullableFilter
    difficultyLevel?: IntFilter | number
    scope?: EnumContentAccessScopeFilter | ContentAccessScope
    workoutType?: XOR<WorkoutTypeWhereInput, WorkoutTypeRelationFilter>
    workoutTypeId?: StringFilter | string
    workoutSections?: WorkoutSectionListRelationFilter
    scheduledWorkouts?: ScheduledWorkoutListRelationFilter
    loggedWorkouts?: LoggedWorkoutListRelationFilter
    workoutProgramWorkouts?: WorkoutProgramWorkoutListRelationFilter
    userCollections?: UserCollectionListRelationFilter
  }

  export type WorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    createdBy?: UserOrderByInput
    createdById?: SortOrder
    name?: SortOrder
    summary?: SortOrder
    description?: SortOrder
    demoVideoUrl?: SortOrder
    demoVideoThumbUrl?: SortOrder
    youtubeVideoUrl?: SortOrder
    spotifyAudio?: SortOrder
    imageUrl?: SortOrder
    timecap?: SortOrder
    builderData?: SortOrder
    difficultyLevel?: SortOrder
    scope?: SortOrder
    workoutType?: WorkoutTypeOrderByInput
    workoutTypeId?: SortOrder
  }

  export type WorkoutWhereUniqueInput = {
    id?: string
  }

  export type WorkoutGoalWhereInput = {
    AND?: Enumerable<WorkoutGoalWhereInput>
    OR?: Enumerable<WorkoutGoalWhereInput>
    NOT?: Enumerable<WorkoutGoalWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringFilter | string
    placeholderImageUrl?: StringNullableFilter | string | null
    workoutPrograms?: WorkoutProgramListRelationFilter
  }

  export type WorkoutGoalOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    placeholderImageUrl?: SortOrder
  }

  export type WorkoutGoalWhereUniqueInput = {
    id?: string
  }

  export type WorkoutMoveWhereInput = {
    AND?: Enumerable<WorkoutMoveWhereInput>
    OR?: Enumerable<WorkoutMoveWhereInput>
    NOT?: Enumerable<WorkoutMoveWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    sortPosition?: IntFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    reps?: FloatNullableFilter | number | null
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    loadAmount?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    duration?: IntNullableFilter | number | null
    description?: StringNullableFilter | string | null
    notes?: StringNullableFilter | string | null
    move?: XOR<MoveWhereInput, MoveRelationFilter>
    moveId?: StringFilter | string
    selectedEquipment?: XOR<EquipmentWhereInput, EquipmentRelationFilter> | null
    selectedEquipmentId?: StringNullableFilter | string | null
    workoutSection?: XOR<WorkoutSectionWhereInput, WorkoutSectionRelationFilter>
    workoutSectionId?: StringFilter | string
  }

  export type WorkoutMoveOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    sortPosition?: SortOrder
    repType?: SortOrder
    reps?: SortOrder
    distanceUnit?: SortOrder
    loadAmount?: SortOrder
    loadUnit?: SortOrder
    duration?: SortOrder
    description?: SortOrder
    notes?: SortOrder
    move?: MoveOrderByInput
    moveId?: SortOrder
    selectedEquipment?: EquipmentOrderByInput
    selectedEquipmentId?: SortOrder
    workoutSection?: WorkoutSectionOrderByInput
    workoutSectionId?: SortOrder
  }

  export type WorkoutMoveWhereUniqueInput = {
    id?: string
  }

  export type WorkoutProgramWhereInput = {
    AND?: Enumerable<WorkoutProgramWhereInput>
    OR?: Enumerable<WorkoutProgramWhereInput>
    NOT?: Enumerable<WorkoutProgramWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    videoUrl?: StringNullableFilter | string | null
    videoThumbUrl?: StringNullableFilter | string | null
    youtubeVideoUrl?: StringNullableFilter | string | null
    scope?: EnumContentAccessScopeFilter | ContentAccessScope
    createdBy?: XOR<UserWhereInput, UserRelationFilter>
    createdById?: StringFilter | string
    enrolments?: WorkoutProgramEnrolmentListRelationFilter
    workoutGoals?: WorkoutGoalListRelationFilter
    workoutProgramWorkouts?: WorkoutProgramWorkoutListRelationFilter
    workoutProgramReviews?: WorkoutProgramReviewListRelationFilter
    userCollections?: UserCollectionListRelationFilter
  }

  export type WorkoutProgramOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    imageUrl?: SortOrder
    videoUrl?: SortOrder
    videoThumbUrl?: SortOrder
    youtubeVideoUrl?: SortOrder
    scope?: SortOrder
    createdBy?: UserOrderByInput
    createdById?: SortOrder
  }

  export type WorkoutProgramWhereUniqueInput = {
    id?: string
  }

  export type WorkoutProgramEnrolmentWhereInput = {
    AND?: Enumerable<WorkoutProgramEnrolmentWhereInput>
    OR?: Enumerable<WorkoutProgramEnrolmentWhereInput>
    NOT?: Enumerable<WorkoutProgramEnrolmentWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    startDate?: DateTimeNullableFilter | Date | string | null
    workoutProgram?: XOR<WorkoutProgramWhereInput, WorkoutProgramRelationFilter>
    workoutProgramId?: StringFilter | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
    loggedWorkouts?: LoggedWorkoutListRelationFilter
  }

  export type WorkoutProgramEnrolmentOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    startDate?: SortOrder
    workoutProgram?: WorkoutProgramOrderByInput
    workoutProgramId?: SortOrder
    user?: UserOrderByInput
    userId?: SortOrder
  }

  export type WorkoutProgramEnrolmentWhereUniqueInput = {
    id?: string
  }

  export type WorkoutProgramReviewWhereInput = {
    AND?: Enumerable<WorkoutProgramReviewWhereInput>
    OR?: Enumerable<WorkoutProgramReviewWhereInput>
    NOT?: Enumerable<WorkoutProgramReviewWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    score?: FloatFilter | number
    comment?: StringNullableFilter | string | null
    workoutProgram?: XOR<WorkoutProgramWhereInput, WorkoutProgramRelationFilter>
    workoutProgramId?: StringFilter | string
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
  }

  export type WorkoutProgramReviewOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    score?: SortOrder
    comment?: SortOrder
    workoutProgram?: WorkoutProgramOrderByInput
    workoutProgramId?: SortOrder
    user?: UserOrderByInput
    userId?: SortOrder
  }

  export type WorkoutProgramReviewWhereUniqueInput = {
    id?: string
  }

  export type WorkoutProgramWorkoutWhereInput = {
    AND?: Enumerable<WorkoutProgramWorkoutWhereInput>
    OR?: Enumerable<WorkoutProgramWorkoutWhereInput>
    NOT?: Enumerable<WorkoutProgramWorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    dayNumber?: FloatFilter | number
    notes?: StringNullableFilter | string | null
    workoutProgram?: XOR<WorkoutProgramWhereInput, WorkoutProgramRelationFilter>
    workoutProgramId?: StringFilter | string
    workout?: XOR<WorkoutWhereInput, WorkoutRelationFilter>
    workoutId?: StringFilter | string
    loggedWorkouts?: LoggedWorkoutListRelationFilter
  }

  export type WorkoutProgramWorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    dayNumber?: SortOrder
    notes?: SortOrder
    workoutProgram?: WorkoutProgramOrderByInput
    workoutProgramId?: SortOrder
    workout?: WorkoutOrderByInput
    workoutId?: SortOrder
  }

  export type WorkoutProgramWorkoutWhereUniqueInput = {
    id?: string
  }

  export type WorkoutSectionWhereInput = {
    AND?: Enumerable<WorkoutSectionWhereInput>
    OR?: Enumerable<WorkoutSectionWhereInput>
    NOT?: Enumerable<WorkoutSectionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    sortPosition?: IntFilter | number
    notes?: StringNullableFilter | string | null
    timecap?: IntNullableFilter | number | null
    duration?: IntNullableFilter | number | null
    rounds?: IntFilter | number
    workout?: XOR<WorkoutWhereInput, WorkoutRelationFilter> | null
    workoutId?: StringNullableFilter | string | null
    workoutMoves?: WorkoutMoveListRelationFilter
    loggedWorkout?: XOR<LoggedWorkoutWhereInput, LoggedWorkoutRelationFilter> | null
    loggedWorkoutId?: StringNullableFilter | string | null
  }

  export type WorkoutSectionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    sortPosition?: SortOrder
    notes?: SortOrder
    timecap?: SortOrder
    duration?: SortOrder
    rounds?: SortOrder
    workout?: WorkoutOrderByInput
    workoutId?: SortOrder
    loggedWorkout?: LoggedWorkoutOrderByInput
    loggedWorkoutId?: SortOrder
  }

  export type WorkoutSectionWhereUniqueInput = {
    id?: string
  }

  export type WorkoutTypeWhereInput = {
    AND?: Enumerable<WorkoutTypeWhereInput>
    OR?: Enumerable<WorkoutTypeWhereInput>
    NOT?: Enumerable<WorkoutTypeWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    subtitle?: StringFilter | string
    description?: StringFilter | string
    placeholderImageUrl?: StringFilter | string
    scoreType?: EnumWorkoutScoreTypeFilter | WorkoutScoreType
    workouts?: WorkoutListRelationFilter
    loggedWorkouts?: LoggedWorkoutListRelationFilter
  }

  export type WorkoutTypeOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    placeholderImageUrl?: SortOrder
    scoreType?: SortOrder
  }

  export type WorkoutTypeWhereUniqueInput = {
    id?: string
  }

  export type AdminCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    username: string
  }

  export type AdminUncheckedCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    username: string
  }

  export type AdminUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type BodyAreaCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutBodyAreaInput
  }

  export type BodyAreaUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutBodyAreaInput
  }

  export type BodyAreaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutBodyAreaInput
  }

  export type BodyAreaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaInput
  }

  export type BodyAreaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type BodyAreaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type BodyAreaMoveScoreCreateInput = {
    createdAt?: Date | string
    score?: number
    move: MoveCreateNestedOneWithoutBodyAreaMoveScoresInput
    bodyArea: BodyAreaCreateNestedOneWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedCreateInput = {
    createdAt?: Date | string
    moveId: string
    bodyAreaId: string
    score?: number
  }

  export type BodyAreaMoveScoreUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
    move?: MoveUpdateOneRequiredWithoutBodyAreaMoveScoresInput
    bodyArea?: BodyAreaUpdateOneRequiredWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    bodyAreaId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type BodyAreaMoveScoreUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    bodyAreaId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type EquipmentCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    requiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileCreateNestedManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutSelectedEquipmentInput
  }

  export type EquipmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    requiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileUpdateManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutSelectedEquipmentInput
  }

  export type EquipmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EquipmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type GymProfileCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    user: UserCreateNestedOneWithoutGymProfilesInput
    availableEquipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutGymProfilesInput
    availableEquipments?: EquipmentUpdateManyWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
  }

  export type GymProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LoggedWorkoutCreateInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutProgramWorkoutId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveProfileCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    user: UserCreateNestedOneWithoutMoveProfilesInput
    requiredMoves?: MoveCreateNestedManyWithoutRequiredForMoveProfilesInput
    excludedMoves?: MoveCreateNestedManyWithoutExcludedForMoveProfilesInput
  }

  export type MoveProfileUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type MoveProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutMoveProfilesInput
    requiredMoves?: MoveUpdateManyWithoutRequiredForMoveProfilesInput
    excludedMoves?: MoveUpdateManyWithoutExcludedForMoveProfilesInput
  }

  export type MoveProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveTypeCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    imageUrl: string
    moves?: MoveCreateNestedManyWithoutMoveTypeInput
  }

  export type MoveTypeUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    imageUrl: string
    moves?: MoveUncheckedCreateNestedManyWithoutMoveTypeInput
  }

  export type MoveTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    moves?: MoveUpdateManyWithoutMoveTypeInput
  }

  export type MoveTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    moves?: MoveUncheckedUpdateManyWithoutMoveTypeInput
  }

  export type MoveTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
  }

  export type MoveTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    user: UserCreateNestedOneWithoutProgressJournalsInput
    progressJournalEntries?: ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    progressJournalEntries?: ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutProgressJournalsInput
    progressJournalEntries?: ProgressJournalEntryUpdateManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    progressJournalEntries?: ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalEntryCreateInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    voiceNoteUrl?: string | null
    bodyweight?: number | null
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUrls?: ProgressJournalEntryCreateprogressPhotoUrlsInput | Enumerable<string>
    progressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalEntriesInput
  }

  export type ProgressJournalEntryUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    voiceNoteUrl?: string | null
    bodyweight?: number | null
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressJournalId: string
    progressPhotoUrls?: ProgressJournalEntryCreateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalEntryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUrls?: ProgressJournalEntryUpdateprogressPhotoUrlsInput | Enumerable<string>
    progressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalEntriesInput
  }

  export type ProgressJournalEntryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
    progressPhotoUrls?: ProgressJournalEntryUpdateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalEntryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUrls?: ProgressJournalEntryUpdateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalEntryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
    progressPhotoUrls?: ProgressJournalEntryUpdateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalGoalCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutProgressJournalGoalsInput
    progressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalId: string
  }

  export type ProgressJournalGoalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutProgressJournalGoalsInput
    progressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgressJournalGoalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagCreateInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    user: UserCreateNestedOneWithoutProgressJournalGoalTagsInput
    progressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    userId: string
  }

  export type ProgressJournalGoalTagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutProgressJournalGoalTagsInput
    progressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ScheduledWorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    scheduledAt?: Date | string
    user: UserCreateNestedOneWithoutScheduledWorkoutsInput
    workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    notes?: string | null
    scheduledAt?: Date | string
    workoutId?: string | null
    loggedWorkoutId?: string | null
    gymProfileId?: string | null
  }

  export type ScheduledWorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduledWorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScheduledWorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TrainerAccountCreateInput = {
    id?: string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutTrainerAccountInput
  }

  export type TrainerAccountUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
  }

  export type TrainerAccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutTrainerAccountInput
  }

  export type TrainerAccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type TrainerAccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrainerAccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
  }

  export type UserBenchmarkCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    createdBy: UserCreateNestedOneWithoutUserBenchmarksInput
    equipment?: EquipmentCreateNestedManyWithoutUserBenchmarksInput
    move: MoveCreateNestedOneWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    createdById: string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    moveId: string
    entries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    createdBy?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    equipment?: EquipmentUpdateManyWithoutUserBenchmarksInput
    move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    moveId?: StringFieldUpdateOperationsInput | string
    entries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
  }

  export type UserBenchmarkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    moveId?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkEntryCreateInput = {
    id?: string
    createdAt?: Date | string
    score: number
    notes?: string | null
    videoUrl?: string | null
    imageUrl?: string | null
    userBenchmark: UserBenchmarkCreateNestedOneWithoutEntriesInput
  }

  export type UserBenchmarkEntryUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    score: number
    notes?: string | null
    videoUrl?: string | null
    imageUrl?: string | null
    userBenchmarkId: string
  }

  export type UserBenchmarkEntryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    userBenchmark?: UserBenchmarkUpdateOneRequiredWithoutEntriesInput
  }

  export type UserBenchmarkEntryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    userBenchmarkId?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkEntryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkEntryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    userBenchmarkId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCollectionCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    owner: UserCreateNestedOneWithoutCollectionsInput
    workouts?: WorkoutCreateNestedManyWithoutUserCollectionsInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type UserCollectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutCollectionsInput
    workouts?: WorkoutUpdateManyWithoutUserCollectionsInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCollectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCollectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    createdBy?: UserCreateNestedOneWithoutWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    createdById?: string | null
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutTypeId: string
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneWithoutWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutGoalCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    placeholderImageUrl?: string | null
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutWorkoutGoalsInput
  }

  export type WorkoutGoalUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    placeholderImageUrl?: string | null
  }

  export type WorkoutGoalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPrograms?: WorkoutProgramUpdateManyWithoutWorkoutGoalsInput
  }

  export type WorkoutGoalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutGoalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutGoalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutMoveCreateInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    move: MoveCreateNestedOneWithoutWorkoutMovesInput
    selectedEquipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
    workoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    moveId: string
    selectedEquipmentId?: string | null
    workoutSectionId: string
  }

  export type WorkoutMoveUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    selectedEquipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
    workoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    selectedEquipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutMoveUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutMoveUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    selectedEquipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdBy: UserCreateNestedOneWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdById: string
    enrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneRequiredWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentUpdateManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdById?: StringFieldUpdateOperationsInput | string
    enrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutProgramUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdById?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramEnrolmentCreateInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutEnrolmentsInput
    user: UserCreateNestedOneWithoutWorkoutProgramEnrolmentsInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    workoutProgramId: string
    userId: string
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutEnrolmentsInput
    user?: UserUpdateOneRequiredWithoutWorkoutProgramEnrolmentsInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramReviewCreateInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutWorkoutProgramReviewsInput
    user: UserCreateNestedOneWithoutWorkoutProgramReviewsInput
  }

  export type WorkoutProgramReviewUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    workoutProgramId: string
    userId: string
  }

  export type WorkoutProgramReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutWorkoutProgramReviewsInput
    user?: UserUpdateOneRequiredWithoutWorkoutProgramReviewsInput
  }

  export type WorkoutProgramReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutProgramReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramWorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutWorkoutProgramWorkoutsInput
    workout: WorkoutCreateNestedOneWithoutWorkoutProgramWorkoutsInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workoutProgramId: string
    workoutId: string
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput
    workout?: WorkoutUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    workoutId?: StringFieldUpdateOperationsInput | string
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutProgramWorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    workoutId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSectionCreateInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    workout?: WorkoutCreateNestedOneWithoutWorkoutSectionsInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSectionInput
    loggedWorkout?: LoggedWorkoutCreateNestedOneWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    workoutId?: string | null
    loggedWorkoutId?: string | null
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workout?: WorkoutUpdateOneWithoutWorkoutSectionsInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSectionInput
    loggedWorkout?: LoggedWorkoutUpdateOneWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
  }

  export type WorkoutSectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutTypeCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    placeholderImageUrl: string
    scoreType: WorkoutScoreType
    workouts?: WorkoutCreateNestedManyWithoutWorkoutTypeInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    placeholderImageUrl: string
    scoreType: WorkoutScoreType
    workouts?: WorkoutUncheckedCreateNestedManyWithoutWorkoutTypeInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
    workouts?: WorkoutUpdateManyWithoutWorkoutTypeInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
    workouts?: WorkoutUncheckedUpdateManyWithoutWorkoutTypeInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
  }

  export type WorkoutTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type BodyAreaMoveScoreListRelationFilter = {
    every?: BodyAreaMoveScoreWhereInput
    some?: BodyAreaMoveScoreWhereInput
    none?: BodyAreaMoveScoreWhereInput
  }

  export type EnumBodyAreaFrontBackFilter = {
    equals?: BodyAreaFrontBack
    in?: Enumerable<BodyAreaFrontBack>
    notIn?: Enumerable<BodyAreaFrontBack>
    not?: NestedEnumBodyAreaFrontBackFilter | BodyAreaFrontBack
  }

  export type EnumBodyAreaUpperLowerFilter = {
    equals?: BodyAreaUpperLower
    in?: Enumerable<BodyAreaUpperLower>
    notIn?: Enumerable<BodyAreaUpperLower>
    not?: NestedEnumBodyAreaUpperLowerFilter | BodyAreaUpperLower
  }

  export type MoveRelationFilter = {
    is?: MoveWhereInput
    isNot?: MoveWhereInput
  }

  export type BodyAreaRelationFilter = {
    is?: BodyAreaWhereInput
    isNot?: BodyAreaWhereInput
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type BodyAreaMoveScoreMoveIdBodyAreaIdCompoundUniqueInput = {
    moveId: string
    bodyAreaId: string
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type MoveListRelationFilter = {
    every?: MoveWhereInput
    some?: MoveWhereInput
    none?: MoveWhereInput
  }

  export type WorkoutMoveListRelationFilter = {
    every?: WorkoutMoveWhereInput
    some?: WorkoutMoveWhereInput
    none?: WorkoutMoveWhereInput
  }

  export type GymProfileListRelationFilter = {
    every?: GymProfileWhereInput
    some?: GymProfileWhereInput
    none?: GymProfileWhereInput
  }

  export type UserBenchmarkListRelationFilter = {
    every?: UserBenchmarkWhereInput
    some?: UserBenchmarkWhereInput
    none?: UserBenchmarkWhereInput
  }

  export type UserRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type EquipmentListRelationFilter = {
    every?: EquipmentWhereInput
    some?: EquipmentWhereInput
    none?: EquipmentWhereInput
  }

  export type ScheduledWorkoutListRelationFilter = {
    every?: ScheduledWorkoutWhereInput
    some?: ScheduledWorkoutWhereInput
    none?: ScheduledWorkoutWhereInput
  }

  export type LoggedWorkoutListRelationFilter = {
    every?: LoggedWorkoutWhereInput
    some?: LoggedWorkoutWhereInput
    none?: LoggedWorkoutWhereInput
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type WorkoutTypeRelationFilter = {
    is?: WorkoutTypeWhereInput
    isNot?: WorkoutTypeWhereInput
  }

  export type WorkoutSectionListRelationFilter = {
    every?: WorkoutSectionWhereInput
    some?: WorkoutSectionWhereInput
    none?: WorkoutSectionWhereInput
  }

  export type WorkoutRelationFilter = {
    is?: WorkoutWhereInput | null
    isNot?: WorkoutWhereInput | null
  }

  export type ScheduledWorkoutRelationFilter = {
    is?: ScheduledWorkoutWhereInput | null
    isNot?: ScheduledWorkoutWhereInput | null
  }

  export type GymProfileRelationFilter = {
    is?: GymProfileWhereInput | null
    isNot?: GymProfileWhereInput | null
  }

  export type WorkoutProgramEnrolmentRelationFilter = {
    is?: WorkoutProgramEnrolmentWhereInput | null
    isNot?: WorkoutProgramEnrolmentWhereInput | null
  }

  export type WorkoutProgramWorkoutRelationFilter = {
    is?: WorkoutProgramWorkoutWhereInput | null
    isNot?: WorkoutProgramWorkoutWhereInput | null
  }

  export type EnumMoveScopeFilter = {
    equals?: MoveScope
    in?: Enumerable<MoveScope>
    notIn?: Enumerable<MoveScope>
    not?: NestedEnumMoveScopeFilter | MoveScope
  }

  export type MoveTypeRelationFilter = {
    is?: MoveTypeWhereInput | null
    isNot?: MoveTypeWhereInput | null
  }

  export type EnumWorkoutMoveRepTypeNullableListFilter = {
    equals?: Enumerable<WorkoutMoveRepType> | null
    has?: WorkoutMoveRepType | null
    hasEvery?: Enumerable<WorkoutMoveRepType>
    hasSome?: Enumerable<WorkoutMoveRepType>
    isEmpty?: boolean
  }

  export type MoveProfileListRelationFilter = {
    every?: MoveProfileWhereInput
    some?: MoveProfileWhereInput
    none?: MoveProfileWhereInput
  }

  export type ProgressJournalEntryListRelationFilter = {
    every?: ProgressJournalEntryWhereInput
    some?: ProgressJournalEntryWhereInput
    none?: ProgressJournalEntryWhereInput
  }

  export type ProgressJournalGoalListRelationFilter = {
    every?: ProgressJournalGoalWhereInput
    some?: ProgressJournalGoalWhereInput
    none?: ProgressJournalGoalWhereInput
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type StringNullableListFilter = {
    equals?: Enumerable<string> | null
    has?: string | null
    hasEvery?: Enumerable<string>
    hasSome?: Enumerable<string>
    isEmpty?: boolean
  }

  export type ProgressJournalRelationFilter = {
    is?: ProgressJournalWhereInput
    isNot?: ProgressJournalWhereInput
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type ProgressJournalGoalTagListRelationFilter = {
    every?: ProgressJournalGoalTagWhereInput
    some?: ProgressJournalGoalTagWhereInput
    none?: ProgressJournalGoalTagWhereInput
  }

  export type LoggedWorkoutRelationFilter = {
    is?: LoggedWorkoutWhereInput | null
    isNot?: LoggedWorkoutWhereInput | null
  }

  export type EnumUserProfileScopeFilter = {
    equals?: UserProfileScope
    in?: Enumerable<UserProfileScope>
    notIn?: Enumerable<UserProfileScope>
    not?: NestedEnumUserProfileScopeFilter | UserProfileScope
  }

  export type EnumThemePreferenceFilter = {
    equals?: ThemePreference
    in?: Enumerable<ThemePreference>
    notIn?: Enumerable<ThemePreference>
    not?: NestedEnumThemePreferenceFilter | ThemePreference
  }

  export type EnumGenderNullableFilter = {
    equals?: Gender | null
    in?: Enumerable<Gender> | null
    notIn?: Enumerable<Gender> | null
    not?: NestedEnumGenderNullableFilter | Gender | null
  }

  export type EnumUnitSystemFilter = {
    equals?: UnitSystem
    in?: Enumerable<UnitSystem>
    notIn?: Enumerable<UnitSystem>
    not?: NestedEnumUnitSystemFilter | UnitSystem
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type WorkoutListRelationFilter = {
    every?: WorkoutWhereInput
    some?: WorkoutWhereInput
    none?: WorkoutWhereInput
  }

  export type WorkoutProgramListRelationFilter = {
    every?: WorkoutProgramWhereInput
    some?: WorkoutProgramWhereInput
    none?: WorkoutProgramWhereInput
  }

  export type WorkoutProgramEnrolmentListRelationFilter = {
    every?: WorkoutProgramEnrolmentWhereInput
    some?: WorkoutProgramEnrolmentWhereInput
    none?: WorkoutProgramEnrolmentWhereInput
  }

  export type WorkoutProgramReviewListRelationFilter = {
    every?: WorkoutProgramReviewWhereInput
    some?: WorkoutProgramReviewWhereInput
    none?: WorkoutProgramReviewWhereInput
  }

  export type UserCollectionListRelationFilter = {
    every?: UserCollectionWhereInput
    some?: UserCollectionWhereInput
    none?: UserCollectionWhereInput
  }

  export type TrainerAccountRelationFilter = {
    is?: TrainerAccountWhereInput | null
    isNot?: TrainerAccountWhereInput | null
  }

  export type ProgressJournalListRelationFilter = {
    every?: ProgressJournalWhereInput
    some?: ProgressJournalWhereInput
    none?: ProgressJournalWhereInput
  }

  export type FloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type EnumWorkoutMoveRepTypeFilter = {
    equals?: WorkoutMoveRepType
    in?: Enumerable<WorkoutMoveRepType>
    notIn?: Enumerable<WorkoutMoveRepType>
    not?: NestedEnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
  }

  export type EnumLoadUnitFilter = {
    equals?: LoadUnit
    in?: Enumerable<LoadUnit>
    notIn?: Enumerable<LoadUnit>
    not?: NestedEnumLoadUnitFilter | LoadUnit
  }

  export type EnumDistanceUnitFilter = {
    equals?: DistanceUnit
    in?: Enumerable<DistanceUnit>
    notIn?: Enumerable<DistanceUnit>
    not?: NestedEnumDistanceUnitFilter | DistanceUnit
  }

  export type EnumBenchmarkScoreTypeFilter = {
    equals?: BenchmarkScoreType
    in?: Enumerable<BenchmarkScoreType>
    notIn?: Enumerable<BenchmarkScoreType>
    not?: NestedEnumBenchmarkScoreTypeFilter | BenchmarkScoreType
  }

  export type UserBenchmarkEntryListRelationFilter = {
    every?: UserBenchmarkEntryWhereInput
    some?: UserBenchmarkEntryWhereInput
    none?: UserBenchmarkEntryWhereInput
  }

  export type UserBenchmarkRelationFilter = {
    is?: UserBenchmarkWhereInput
    isNot?: UserBenchmarkWhereInput
  }

  export type JsonNullableFilter = {
    equals?: InputJsonValue | null
    not?: InputJsonValue | null
  }

  export type EnumContentAccessScopeFilter = {
    equals?: ContentAccessScope
    in?: Enumerable<ContentAccessScope>
    notIn?: Enumerable<ContentAccessScope>
    not?: NestedEnumContentAccessScopeFilter | ContentAccessScope
  }

  export type WorkoutProgramWorkoutListRelationFilter = {
    every?: WorkoutProgramWorkoutWhereInput
    some?: WorkoutProgramWorkoutWhereInput
    none?: WorkoutProgramWorkoutWhereInput
  }

  export type EquipmentRelationFilter = {
    is?: EquipmentWhereInput | null
    isNot?: EquipmentWhereInput | null
  }

  export type WorkoutSectionRelationFilter = {
    is?: WorkoutSectionWhereInput
    isNot?: WorkoutSectionWhereInput
  }

  export type WorkoutGoalListRelationFilter = {
    every?: WorkoutGoalWhereInput
    some?: WorkoutGoalWhereInput
    none?: WorkoutGoalWhereInput
  }

  export type WorkoutProgramRelationFilter = {
    is?: WorkoutProgramWhereInput
    isNot?: WorkoutProgramWhereInput
  }

  export type EnumWorkoutScoreTypeFilter = {
    equals?: WorkoutScoreType
    in?: Enumerable<WorkoutScoreType>
    notIn?: Enumerable<WorkoutScoreType>
    not?: NestedEnumWorkoutScoreTypeFilter | WorkoutScoreType
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BodyAreaMoveScoreCreateNestedManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type BodyAreaMoveScoreUncheckedCreateNestedManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumBodyAreaFrontBackFieldUpdateOperationsInput = {
    set?: BodyAreaFrontBack
  }

  export type EnumBodyAreaUpperLowerFieldUpdateOperationsInput = {
    set?: BodyAreaUpperLower
  }

  export type BodyAreaMoveScoreUpdateManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutBodyAreaInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutBodyAreaInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutBodyAreaInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutBodyAreaInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutBodyAreaInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutBodyAreaInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type MoveCreateNestedOneWithoutBodyAreaMoveScoresInput = {
    create?: XOR<MoveUncheckedCreateWithoutBodyAreaMoveScoresInput, MoveCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: MoveCreateOrConnectWithoutBodyAreaMoveScoresInput
    connect?: MoveWhereUniqueInput
  }

  export type BodyAreaCreateNestedOneWithoutBodyAreaMoveScoresInput = {
    create?: XOR<BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput, BodyAreaCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: BodyAreaCreateOrConnectWithoutBodyAreaMoveScoresInput
    connect?: BodyAreaWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type MoveUpdateOneRequiredWithoutBodyAreaMoveScoresInput = {
    create?: XOR<MoveUncheckedCreateWithoutBodyAreaMoveScoresInput, MoveCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: MoveCreateOrConnectWithoutBodyAreaMoveScoresInput
    upsert?: MoveUpsertWithoutBodyAreaMoveScoresInput
    connect?: MoveWhereUniqueInput
    update?: XOR<MoveUncheckedUpdateWithoutBodyAreaMoveScoresInput, MoveUpdateWithoutBodyAreaMoveScoresInput>
  }

  export type BodyAreaUpdateOneRequiredWithoutBodyAreaMoveScoresInput = {
    create?: XOR<BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput, BodyAreaCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: BodyAreaCreateOrConnectWithoutBodyAreaMoveScoresInput
    upsert?: BodyAreaUpsertWithoutBodyAreaMoveScoresInput
    connect?: BodyAreaWhereUniqueInput
    update?: XOR<BodyAreaUncheckedUpdateWithoutBodyAreaMoveScoresInput, BodyAreaUpdateWithoutBodyAreaMoveScoresInput>
  }

  export type MoveCreateNestedManyWithoutRequiredEquipmentsInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutRequiredEquipmentsInput>, Enumerable<MoveCreateWithoutRequiredEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutRequiredEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type MoveCreateNestedManyWithoutSelectableEquipmentsInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutSelectableEquipmentsInput>, Enumerable<MoveCreateWithoutSelectableEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutSelectableEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type WorkoutMoveCreateNestedManyWithoutSelectedEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutSelectedEquipmentInput>, Enumerable<WorkoutMoveCreateWithoutSelectedEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutSelectedEquipmentInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type GymProfileCreateNestedManyWithoutAvailableEquipmentsInput = {
    create?: XOR<Enumerable<GymProfileUncheckedCreateWithoutAvailableEquipmentsInput>, Enumerable<GymProfileCreateWithoutAvailableEquipmentsInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutAvailableEquipmentsInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
  }

  export type UserBenchmarkCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutEquipmentInput>, Enumerable<UserBenchmarkCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutEquipmentInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type WorkoutMoveUncheckedCreateNestedManyWithoutSelectedEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutSelectedEquipmentInput>, Enumerable<WorkoutMoveCreateWithoutSelectedEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutSelectedEquipmentInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type MoveUpdateManyWithoutRequiredEquipmentsInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutRequiredEquipmentsInput>, Enumerable<MoveCreateWithoutRequiredEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutRequiredEquipmentsInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutRequiredEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutRequiredEquipmentsInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutRequiredEquipmentsInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type MoveUpdateManyWithoutSelectableEquipmentsInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutSelectableEquipmentsInput>, Enumerable<MoveCreateWithoutSelectableEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutSelectableEquipmentsInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutSelectableEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutSelectableEquipmentsInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutSelectableEquipmentsInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type WorkoutMoveUpdateManyWithoutSelectedEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutSelectedEquipmentInput>, Enumerable<WorkoutMoveCreateWithoutSelectedEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutSelectedEquipmentInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutSelectedEquipmentInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutSelectedEquipmentInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutSelectedEquipmentInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type GymProfileUpdateManyWithoutAvailableEquipmentsInput = {
    create?: XOR<Enumerable<GymProfileUncheckedCreateWithoutAvailableEquipmentsInput>, Enumerable<GymProfileCreateWithoutAvailableEquipmentsInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutAvailableEquipmentsInput>
    upsert?: Enumerable<GymProfileUpsertWithWhereUniqueWithoutAvailableEquipmentsInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
    set?: Enumerable<GymProfileWhereUniqueInput>
    disconnect?: Enumerable<GymProfileWhereUniqueInput>
    delete?: Enumerable<GymProfileWhereUniqueInput>
    update?: Enumerable<GymProfileUpdateWithWhereUniqueWithoutAvailableEquipmentsInput>
    updateMany?: Enumerable<GymProfileUpdateManyWithWhereWithoutAvailableEquipmentsInput>
    deleteMany?: Enumerable<GymProfileScalarWhereInput>
  }

  export type UserBenchmarkUpdateManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutEquipmentInput>, Enumerable<UserBenchmarkCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutEquipmentInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutSelectedEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutSelectedEquipmentInput>, Enumerable<WorkoutMoveCreateWithoutSelectedEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutSelectedEquipmentInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutSelectedEquipmentInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutSelectedEquipmentInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutSelectedEquipmentInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutGymProfilesInput = {
    create?: XOR<UserUncheckedCreateWithoutGymProfilesInput, UserCreateWithoutGymProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutGymProfilesInput
    connect?: UserWhereUniqueInput
  }

  export type EquipmentCreateNestedManyWithoutGymProfilesInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutGymProfilesInput>, Enumerable<EquipmentCreateWithoutGymProfilesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutGymProfilesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type ScheduledWorkoutCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutGymProfilesInput = {
    create?: XOR<UserUncheckedCreateWithoutGymProfilesInput, UserCreateWithoutGymProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutGymProfilesInput
    upsert?: UserUpsertWithoutGymProfilesInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutGymProfilesInput, UserUpdateWithoutGymProfilesInput>
  }

  export type EquipmentUpdateManyWithoutGymProfilesInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutGymProfilesInput>, Enumerable<EquipmentCreateWithoutGymProfilesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutGymProfilesInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutGymProfilesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutGymProfilesInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutGymProfilesInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<UserUncheckedCreateWithoutLoggedWorkoutsInput, UserCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutTypeUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutTypeCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutTypeCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: WorkoutTypeWhereUniqueInput
  }

  export type WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type WorkoutCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput, ScheduledWorkoutCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
  }

  export type GymProfileCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<GymProfileUncheckedCreateWithoutLoggedWorkoutsInput, GymProfileCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: GymProfileWhereUniqueInput
  }

  export type WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramEnrolmentCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutProgramEnrolmentCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: WorkoutProgramEnrolmentWhereUniqueInput
  }

  export type WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramWorkoutCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutProgramWorkoutCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: WorkoutProgramWorkoutWhereUniqueInput
  }

  export type WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput, ScheduledWorkoutCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutLoggedWorkoutsInput = {
    create?: XOR<UserUncheckedCreateWithoutLoggedWorkoutsInput, UserCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: UserUpsertWithoutLoggedWorkoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutLoggedWorkoutsInput, UserUpdateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutTypeUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutTypeCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutTypeCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: WorkoutTypeUpsertWithoutLoggedWorkoutsInput
    connect?: WorkoutTypeWhereUniqueInput
    update?: XOR<WorkoutTypeUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutTypeUpdateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutSectionUpdateManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutLoggedWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutLoggedWorkoutInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutLoggedWorkoutInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type WorkoutUpdateOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: WorkoutUpsertWithoutLoggedWorkoutsInput
    connect?: WorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutUpdateWithoutLoggedWorkoutsInput>
  }

  export type ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput, ScheduledWorkoutCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    upsert?: ScheduledWorkoutUpsertWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput, ScheduledWorkoutUpdateWithoutLoggedWorkoutInput>
  }

  export type GymProfileUpdateOneWithoutLoggedWorkoutsInput = {
    create?: XOR<GymProfileUncheckedCreateWithoutLoggedWorkoutsInput, GymProfileCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: GymProfileUpsertWithoutLoggedWorkoutsInput
    connect?: GymProfileWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<GymProfileUncheckedUpdateWithoutLoggedWorkoutsInput, GymProfileUpdateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramEnrolmentCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutProgramEnrolmentCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: WorkoutProgramEnrolmentUpsertWithoutLoggedWorkoutsInput
    connect?: WorkoutProgramEnrolmentWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutProgramEnrolmentUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutProgramEnrolmentUpdateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramWorkoutCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutProgramWorkoutCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: WorkoutProgramWorkoutUpsertWithoutLoggedWorkoutsInput
    connect?: WorkoutProgramWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutProgramWorkoutUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutProgramWorkoutUpdateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutLoggedWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutLoggedWorkoutInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutLoggedWorkoutInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput, ScheduledWorkoutCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    upsert?: ScheduledWorkoutUpsertWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput, ScheduledWorkoutUpdateWithoutLoggedWorkoutInput>
  }

  export type MoveCreatevalidRepTypesInput = {
    set: Enumerable<WorkoutMoveRepType>
  }

  export type UserCreateNestedOneWithoutCustomMovesInput = {
    create?: XOR<UserUncheckedCreateWithoutCustomMovesInput, UserCreateWithoutCustomMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomMovesInput
    connect?: UserWhereUniqueInput
  }

  export type MoveTypeCreateNestedOneWithoutMovesInput = {
    create?: XOR<MoveTypeUncheckedCreateWithoutMovesInput, MoveTypeCreateWithoutMovesInput>
    connectOrCreate?: MoveTypeCreateOrConnectWithoutMovesInput
    connect?: MoveTypeWhereUniqueInput
  }

  export type EquipmentCreateNestedManyWithoutRequiredForMovesInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutRequiredForMovesInput>, Enumerable<EquipmentCreateWithoutRequiredForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutRequiredForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentCreateNestedManyWithoutSelectableForMovesInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutSelectableForMovesInput>, Enumerable<EquipmentCreateWithoutSelectableForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutSelectableForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type MoveProfileCreateNestedManyWithoutRequiredMovesInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutRequiredMovesInput>, Enumerable<MoveProfileCreateWithoutRequiredMovesInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutRequiredMovesInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
  }

  export type MoveProfileCreateNestedManyWithoutExcludedMovesInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutExcludedMovesInput>, Enumerable<MoveProfileCreateWithoutExcludedMovesInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutExcludedMovesInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
  }

  export type WorkoutMoveCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>, Enumerable<WorkoutMoveCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type BodyAreaMoveScoreCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type UserBenchmarkCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>, Enumerable<UserBenchmarkCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>, Enumerable<WorkoutMoveCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>, Enumerable<UserBenchmarkCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type EnumMoveScopeFieldUpdateOperationsInput = {
    set?: MoveScope
  }

  export type MoveUpdatevalidRepTypesInput = {
    set: Enumerable<WorkoutMoveRepType>
  }

  export type UserUpdateOneWithoutCustomMovesInput = {
    create?: XOR<UserUncheckedCreateWithoutCustomMovesInput, UserCreateWithoutCustomMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomMovesInput
    upsert?: UserUpsertWithoutCustomMovesInput
    connect?: UserWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<UserUncheckedUpdateWithoutCustomMovesInput, UserUpdateWithoutCustomMovesInput>
  }

  export type MoveTypeUpdateOneWithoutMovesInput = {
    create?: XOR<MoveTypeUncheckedCreateWithoutMovesInput, MoveTypeCreateWithoutMovesInput>
    connectOrCreate?: MoveTypeCreateOrConnectWithoutMovesInput
    upsert?: MoveTypeUpsertWithoutMovesInput
    connect?: MoveTypeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<MoveTypeUncheckedUpdateWithoutMovesInput, MoveTypeUpdateWithoutMovesInput>
  }

  export type EquipmentUpdateManyWithoutRequiredForMovesInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutRequiredForMovesInput>, Enumerable<EquipmentCreateWithoutRequiredForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutRequiredForMovesInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutRequiredForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutRequiredForMovesInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutRequiredForMovesInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentUpdateManyWithoutSelectableForMovesInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutSelectableForMovesInput>, Enumerable<EquipmentCreateWithoutSelectableForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutSelectableForMovesInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutSelectableForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutSelectableForMovesInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutSelectableForMovesInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type MoveProfileUpdateManyWithoutRequiredMovesInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutRequiredMovesInput>, Enumerable<MoveProfileCreateWithoutRequiredMovesInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutRequiredMovesInput>
    upsert?: Enumerable<MoveProfileUpsertWithWhereUniqueWithoutRequiredMovesInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
    set?: Enumerable<MoveProfileWhereUniqueInput>
    disconnect?: Enumerable<MoveProfileWhereUniqueInput>
    delete?: Enumerable<MoveProfileWhereUniqueInput>
    update?: Enumerable<MoveProfileUpdateWithWhereUniqueWithoutRequiredMovesInput>
    updateMany?: Enumerable<MoveProfileUpdateManyWithWhereWithoutRequiredMovesInput>
    deleteMany?: Enumerable<MoveProfileScalarWhereInput>
  }

  export type MoveProfileUpdateManyWithoutExcludedMovesInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutExcludedMovesInput>, Enumerable<MoveProfileCreateWithoutExcludedMovesInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutExcludedMovesInput>
    upsert?: Enumerable<MoveProfileUpsertWithWhereUniqueWithoutExcludedMovesInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
    set?: Enumerable<MoveProfileWhereUniqueInput>
    disconnect?: Enumerable<MoveProfileWhereUniqueInput>
    delete?: Enumerable<MoveProfileWhereUniqueInput>
    update?: Enumerable<MoveProfileUpdateWithWhereUniqueWithoutExcludedMovesInput>
    updateMany?: Enumerable<MoveProfileUpdateManyWithWhereWithoutExcludedMovesInput>
    deleteMany?: Enumerable<MoveProfileScalarWhereInput>
  }

  export type WorkoutMoveUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>, Enumerable<WorkoutMoveCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutMoveInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type BodyAreaMoveScoreUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutMoveInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type UserBenchmarkUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>, Enumerable<UserBenchmarkCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutMoveInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>, Enumerable<WorkoutMoveCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutMoveInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutMoveInput>
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type UserBenchmarkUncheckedUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>, Enumerable<UserBenchmarkCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutMoveInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutMoveProfilesInput = {
    create?: XOR<UserUncheckedCreateWithoutMoveProfilesInput, UserCreateWithoutMoveProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutMoveProfilesInput
    connect?: UserWhereUniqueInput
  }

  export type MoveCreateNestedManyWithoutRequiredForMoveProfilesInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutRequiredForMoveProfilesInput>, Enumerable<MoveCreateWithoutRequiredForMoveProfilesInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutRequiredForMoveProfilesInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type MoveCreateNestedManyWithoutExcludedForMoveProfilesInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutExcludedForMoveProfilesInput>, Enumerable<MoveCreateWithoutExcludedForMoveProfilesInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutExcludedForMoveProfilesInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutMoveProfilesInput = {
    create?: XOR<UserUncheckedCreateWithoutMoveProfilesInput, UserCreateWithoutMoveProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutMoveProfilesInput
    upsert?: UserUpsertWithoutMoveProfilesInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutMoveProfilesInput, UserUpdateWithoutMoveProfilesInput>
  }

  export type MoveUpdateManyWithoutRequiredForMoveProfilesInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutRequiredForMoveProfilesInput>, Enumerable<MoveCreateWithoutRequiredForMoveProfilesInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutRequiredForMoveProfilesInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutRequiredForMoveProfilesInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutRequiredForMoveProfilesInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutRequiredForMoveProfilesInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type MoveUpdateManyWithoutExcludedForMoveProfilesInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutExcludedForMoveProfilesInput>, Enumerable<MoveCreateWithoutExcludedForMoveProfilesInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutExcludedForMoveProfilesInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutExcludedForMoveProfilesInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutExcludedForMoveProfilesInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutExcludedForMoveProfilesInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type MoveCreateNestedManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>, Enumerable<MoveCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type MoveUncheckedCreateNestedManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>, Enumerable<MoveCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type MoveUpdateManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>, Enumerable<MoveCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutMoveTypeInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutMoveTypeInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutMoveTypeInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type MoveUncheckedUpdateManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>, Enumerable<MoveCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutMoveTypeInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutMoveTypeInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutMoveTypeInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutProgressJournalsInput = {
    create?: XOR<UserUncheckedCreateWithoutProgressJournalsInput, UserCreateWithoutProgressJournalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalsInput
    connect?: UserWhereUniqueInput
  }

  export type ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
  }

  export type ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
  }

  export type ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutProgressJournalsInput = {
    create?: XOR<UserUncheckedCreateWithoutProgressJournalsInput, UserCreateWithoutProgressJournalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalsInput
    upsert?: UserUpsertWithoutProgressJournalsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutProgressJournalsInput, UserUpdateWithoutProgressJournalsInput>
  }

  export type ProgressJournalEntryUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalEntryUpsertWithWhereUniqueWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    set?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    delete?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    update?: Enumerable<ProgressJournalEntryUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalEntryUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalEntryScalarWhereInput>
  }

  export type ProgressJournalGoalUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalEntryUpsertWithWhereUniqueWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    set?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    delete?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    update?: Enumerable<ProgressJournalEntryUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalEntryUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalEntryScalarWhereInput>
  }

  export type ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type ProgressJournalEntryCreateprogressPhotoUrlsInput = {
    set: Enumerable<string>
  }

  export type ProgressJournalCreateNestedOneWithoutProgressJournalEntriesInput = {
    create?: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput, ProgressJournalCreateWithoutProgressJournalEntriesInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalEntriesInput
    connect?: ProgressJournalWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProgressJournalEntryUpdateprogressPhotoUrlsInput = {
    set: Enumerable<string>
  }

  export type ProgressJournalUpdateOneRequiredWithoutProgressJournalEntriesInput = {
    create?: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput, ProgressJournalCreateWithoutProgressJournalEntriesInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalEntriesInput
    upsert?: ProgressJournalUpsertWithoutProgressJournalEntriesInput
    connect?: ProgressJournalWhereUniqueInput
    update?: XOR<ProgressJournalUncheckedUpdateWithoutProgressJournalEntriesInput, ProgressJournalUpdateWithoutProgressJournalEntriesInput>
  }

  export type ProgressJournalGoalTagCreateNestedManyWithoutProgressJournalGoalsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput>, Enumerable<ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutProgressJournalGoalsInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
  }

  export type ProgressJournalCreateNestedOneWithoutProgressJournalGoalsInput = {
    create?: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput, ProgressJournalCreateWithoutProgressJournalGoalsInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalGoalsInput
    connect?: ProgressJournalWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ProgressJournalGoalTagUpdateManyWithoutProgressJournalGoalsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput>, Enumerable<ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutProgressJournalGoalsInput>
    upsert?: Enumerable<ProgressJournalGoalTagUpsertWithWhereUniqueWithoutProgressJournalGoalsInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalTagUpdateWithWhereUniqueWithoutProgressJournalGoalsInput>
    updateMany?: Enumerable<ProgressJournalGoalTagUpdateManyWithWhereWithoutProgressJournalGoalsInput>
    deleteMany?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
  }

  export type ProgressJournalUpdateOneRequiredWithoutProgressJournalGoalsInput = {
    create?: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput, ProgressJournalCreateWithoutProgressJournalGoalsInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalGoalsInput
    upsert?: ProgressJournalUpsertWithoutProgressJournalGoalsInput
    connect?: ProgressJournalWhereUniqueInput
    update?: XOR<ProgressJournalUncheckedUpdateWithoutProgressJournalGoalsInput, ProgressJournalUpdateWithoutProgressJournalGoalsInput>
  }

  export type UserCreateNestedOneWithoutProgressJournalGoalTagsInput = {
    create?: XOR<UserUncheckedCreateWithoutProgressJournalGoalTagsInput, UserCreateWithoutProgressJournalGoalTagsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalGoalTagsInput
    connect?: UserWhereUniqueInput
  }

  export type ProgressJournalGoalCreateNestedManyWithoutProgressJournalGoalTagsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput>, Enumerable<ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalGoalTagsInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutProgressJournalGoalTagsInput = {
    create?: XOR<UserUncheckedCreateWithoutProgressJournalGoalTagsInput, UserCreateWithoutProgressJournalGoalTagsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalGoalTagsInput
    upsert?: UserUpsertWithoutProgressJournalGoalTagsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutProgressJournalGoalTagsInput, UserUpdateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalUpdateManyWithoutProgressJournalGoalTagsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput>, Enumerable<ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalGoalTagsInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalGoalTagsInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalGoalTagsInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalGoalTagsInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<UserUncheckedCreateWithoutScheduledWorkoutsInput, UserCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutScheduledWorkoutsInput, WorkoutCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput = {
    create?: XOR<LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput, LoggedWorkoutCreateWithoutScheduledWorkoutInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutScheduledWorkoutInput
    connect?: LoggedWorkoutWhereUniqueInput
  }

  export type GymProfileCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<GymProfileUncheckedCreateWithoutScheduledWorkoutsInput, GymProfileCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: GymProfileWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutScheduledWorkoutsInput = {
    create?: XOR<UserUncheckedCreateWithoutScheduledWorkoutsInput, UserCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: UserUpsertWithoutScheduledWorkoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutScheduledWorkoutsInput, UserUpdateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutUpdateOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutScheduledWorkoutsInput, WorkoutCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: WorkoutUpsertWithoutScheduledWorkoutsInput
    connect?: WorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutUncheckedUpdateWithoutScheduledWorkoutsInput, WorkoutUpdateWithoutScheduledWorkoutsInput>
  }

  export type LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput = {
    create?: XOR<LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput, LoggedWorkoutCreateWithoutScheduledWorkoutInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutScheduledWorkoutInput
    upsert?: LoggedWorkoutUpsertWithoutScheduledWorkoutInput
    connect?: LoggedWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<LoggedWorkoutUncheckedUpdateWithoutScheduledWorkoutInput, LoggedWorkoutUpdateWithoutScheduledWorkoutInput>
  }

  export type GymProfileUpdateOneWithoutScheduledWorkoutsInput = {
    create?: XOR<GymProfileUncheckedCreateWithoutScheduledWorkoutsInput, GymProfileCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: GymProfileUpsertWithoutScheduledWorkoutsInput
    connect?: GymProfileWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<GymProfileUncheckedUpdateWithoutScheduledWorkoutsInput, GymProfileUpdateWithoutScheduledWorkoutsInput>
  }

  export type UserCreateNestedOneWithoutTrainerAccountInput = {
    create?: XOR<UserUncheckedCreateWithoutTrainerAccountInput, UserCreateWithoutTrainerAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutTrainerAccountInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutTrainerAccountInput = {
    create?: XOR<UserUncheckedCreateWithoutTrainerAccountInput, UserCreateWithoutTrainerAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutTrainerAccountInput
    upsert?: UserUpsertWithoutTrainerAccountInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutTrainerAccountInput, UserUpdateWithoutTrainerAccountInput>
  }

  export type UserCreateNestedManyWithoutFollowingInput = {
    create?: XOR<Enumerable<UserUncheckedCreateWithoutFollowingInput>, Enumerable<UserCreateWithoutFollowingInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFollowingInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type UserCreateNestedManyWithoutFollowedByInput = {
    create?: XOR<Enumerable<UserUncheckedCreateWithoutFollowedByInput>, Enumerable<UserCreateWithoutFollowedByInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFollowedByInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type MoveCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutCreatedByInput>, Enumerable<MoveCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type WorkoutCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>, Enumerable<ScheduledWorkoutCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedManyWithoutCompletedByInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutCompletedByInput>, Enumerable<LoggedWorkoutCreateWithoutCompletedByInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutCompletedByInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type GymProfileCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileUncheckedCreateWithoutUserInput>, Enumerable<GymProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
  }

  export type MoveProfileCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutUserInput>, Enumerable<MoveProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutUserInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
  }

  export type WorkoutProgramCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutProgramCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
  }

  export type WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutUserInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
  }

  export type WorkoutProgramReviewCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramReviewCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutUserInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
  }

  export type UserBenchmarkCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutCreatedByInput>, Enumerable<UserBenchmarkCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type UserCollectionCreateNestedManyWithoutOwnerInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutOwnerInput>, Enumerable<UserCollectionCreateWithoutOwnerInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutOwnerInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
  }

  export type TrainerAccountCreateNestedOneWithoutUserInput = {
    create?: XOR<TrainerAccountUncheckedCreateWithoutUserInput, TrainerAccountCreateWithoutUserInput>
    connectOrCreate?: TrainerAccountCreateOrConnectWithoutUserInput
    connect?: TrainerAccountWhereUniqueInput
  }

  export type ProgressJournalCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
  }

  export type ProgressJournalGoalTagCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
  }

  export type MoveUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutCreatedByInput>, Enumerable<MoveCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type WorkoutUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>, Enumerable<ScheduledWorkoutCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutCompletedByInput>, Enumerable<LoggedWorkoutCreateWithoutCompletedByInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutCompletedByInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type GymProfileUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileUncheckedCreateWithoutUserInput>, Enumerable<GymProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
  }

  export type MoveProfileUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutUserInput>, Enumerable<MoveProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutUserInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
  }

  export type WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutProgramCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
  }

  export type WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutUserInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
  }

  export type WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramReviewCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutUserInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
  }

  export type UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutCreatedByInput>, Enumerable<UserBenchmarkCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutCreatedByInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type UserCollectionUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutOwnerInput>, Enumerable<UserCollectionCreateWithoutOwnerInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutOwnerInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
  }

  export type TrainerAccountUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<TrainerAccountUncheckedCreateWithoutUserInput, TrainerAccountCreateWithoutUserInput>
    connectOrCreate?: TrainerAccountCreateOrConnectWithoutUserInput
    connect?: TrainerAccountWhereUniqueInput
  }

  export type ProgressJournalUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
  }

  export type ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
  }

  export type EnumUserProfileScopeFieldUpdateOperationsInput = {
    set?: UserProfileScope
  }

  export type EnumThemePreferenceFieldUpdateOperationsInput = {
    set?: ThemePreference
  }

  export type NullableEnumGenderFieldUpdateOperationsInput = {
    set?: Gender | null
  }

  export type EnumUnitSystemFieldUpdateOperationsInput = {
    set?: UnitSystem
  }

  export type UserUpdateManyWithoutFollowingInput = {
    create?: XOR<Enumerable<UserUncheckedCreateWithoutFollowingInput>, Enumerable<UserCreateWithoutFollowingInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFollowingInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutFollowingInput>
    connect?: Enumerable<UserWhereUniqueInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutFollowingInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutFollowingInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type UserUpdateManyWithoutFollowedByInput = {
    create?: XOR<Enumerable<UserUncheckedCreateWithoutFollowedByInput>, Enumerable<UserCreateWithoutFollowedByInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFollowedByInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutFollowedByInput>
    connect?: Enumerable<UserWhereUniqueInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutFollowedByInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutFollowedByInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type MoveUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutCreatedByInput>, Enumerable<MoveCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type WorkoutUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>, Enumerable<ScheduledWorkoutCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUpdateManyWithoutCompletedByInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutCompletedByInput>, Enumerable<LoggedWorkoutCreateWithoutCompletedByInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutCompletedByInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutCompletedByInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutCompletedByInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutCompletedByInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type GymProfileUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileUncheckedCreateWithoutUserInput>, Enumerable<GymProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<GymProfileUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
    set?: Enumerable<GymProfileWhereUniqueInput>
    disconnect?: Enumerable<GymProfileWhereUniqueInput>
    delete?: Enumerable<GymProfileWhereUniqueInput>
    update?: Enumerable<GymProfileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<GymProfileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<GymProfileScalarWhereInput>
  }

  export type MoveProfileUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutUserInput>, Enumerable<MoveProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<MoveProfileUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
    set?: Enumerable<MoveProfileWhereUniqueInput>
    disconnect?: Enumerable<MoveProfileWhereUniqueInput>
    delete?: Enumerable<MoveProfileWhereUniqueInput>
    update?: Enumerable<MoveProfileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<MoveProfileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<MoveProfileScalarWhereInput>
  }

  export type WorkoutProgramUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutProgramCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<WorkoutProgramUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWhereUniqueInput>
    update?: Enumerable<WorkoutProgramUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<WorkoutProgramUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<WorkoutProgramScalarWhereInput>
  }

  export type WorkoutProgramEnrolmentUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutProgramEnrolmentUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutProgramEnrolmentUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutProgramEnrolmentUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutProgramEnrolmentScalarWhereInput>
  }

  export type WorkoutProgramReviewUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramReviewCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutProgramReviewUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    set?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    update?: Enumerable<WorkoutProgramReviewUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutProgramReviewUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutProgramReviewScalarWhereInput>
  }

  export type UserBenchmarkUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutCreatedByInput>, Enumerable<UserBenchmarkCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type UserCollectionUpdateManyWithoutOwnerInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutOwnerInput>, Enumerable<UserCollectionCreateWithoutOwnerInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutOwnerInput>
    upsert?: Enumerable<UserCollectionUpsertWithWhereUniqueWithoutOwnerInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
    set?: Enumerable<UserCollectionWhereUniqueInput>
    disconnect?: Enumerable<UserCollectionWhereUniqueInput>
    delete?: Enumerable<UserCollectionWhereUniqueInput>
    update?: Enumerable<UserCollectionUpdateWithWhereUniqueWithoutOwnerInput>
    updateMany?: Enumerable<UserCollectionUpdateManyWithWhereWithoutOwnerInput>
    deleteMany?: Enumerable<UserCollectionScalarWhereInput>
  }

  export type TrainerAccountUpdateOneWithoutUserInput = {
    create?: XOR<TrainerAccountUncheckedCreateWithoutUserInput, TrainerAccountCreateWithoutUserInput>
    connectOrCreate?: TrainerAccountCreateOrConnectWithoutUserInput
    upsert?: TrainerAccountUpsertWithoutUserInput
    connect?: TrainerAccountWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<TrainerAccountUncheckedUpdateWithoutUserInput, TrainerAccountUpdateWithoutUserInput>
  }

  export type ProgressJournalUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
    set?: Enumerable<ProgressJournalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalWhereUniqueInput>
    update?: Enumerable<ProgressJournalUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalScalarWhereInput>
  }

  export type ProgressJournalGoalTagUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalGoalTagUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalTagUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalGoalTagUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
  }

  export type MoveUncheckedUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<MoveUncheckedCreateWithoutCreatedByInput>, Enumerable<MoveCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type WorkoutUncheckedUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>, Enumerable<ScheduledWorkoutCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutCompletedByInput>, Enumerable<LoggedWorkoutCreateWithoutCompletedByInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutCompletedByInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutCompletedByInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutCompletedByInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutCompletedByInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type GymProfileUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileUncheckedCreateWithoutUserInput>, Enumerable<GymProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<GymProfileUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
    set?: Enumerable<GymProfileWhereUniqueInput>
    disconnect?: Enumerable<GymProfileWhereUniqueInput>
    delete?: Enumerable<GymProfileWhereUniqueInput>
    update?: Enumerable<GymProfileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<GymProfileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<GymProfileScalarWhereInput>
  }

  export type MoveProfileUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveProfileUncheckedCreateWithoutUserInput>, Enumerable<MoveProfileCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveProfileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<MoveProfileUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<MoveProfileWhereUniqueInput>
    set?: Enumerable<MoveProfileWhereUniqueInput>
    disconnect?: Enumerable<MoveProfileWhereUniqueInput>
    delete?: Enumerable<MoveProfileWhereUniqueInput>
    update?: Enumerable<MoveProfileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<MoveProfileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<MoveProfileScalarWhereInput>
  }

  export type WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutCreatedByInput>, Enumerable<WorkoutProgramCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<WorkoutProgramUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWhereUniqueInput>
    update?: Enumerable<WorkoutProgramUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<WorkoutProgramUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<WorkoutProgramScalarWhereInput>
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutProgramEnrolmentUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutProgramEnrolmentUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutProgramEnrolmentUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutProgramEnrolmentScalarWhereInput>
  }

  export type WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutUserInput>, Enumerable<WorkoutProgramReviewCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutProgramReviewUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    set?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    update?: Enumerable<WorkoutProgramReviewUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutProgramReviewUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutProgramReviewScalarWhereInput>
  }

  export type UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput = {
    create?: XOR<Enumerable<UserBenchmarkUncheckedCreateWithoutCreatedByInput>, Enumerable<UserBenchmarkCreateWithoutCreatedByInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutCreatedByInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutCreatedByInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutCreatedByInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutCreatedByInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type UserCollectionUncheckedUpdateManyWithoutOwnerInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutOwnerInput>, Enumerable<UserCollectionCreateWithoutOwnerInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutOwnerInput>
    upsert?: Enumerable<UserCollectionUpsertWithWhereUniqueWithoutOwnerInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
    set?: Enumerable<UserCollectionWhereUniqueInput>
    disconnect?: Enumerable<UserCollectionWhereUniqueInput>
    delete?: Enumerable<UserCollectionWhereUniqueInput>
    update?: Enumerable<UserCollectionUpdateWithWhereUniqueWithoutOwnerInput>
    updateMany?: Enumerable<UserCollectionUpdateManyWithWhereWithoutOwnerInput>
    deleteMany?: Enumerable<UserCollectionScalarWhereInput>
  }

  export type TrainerAccountUncheckedUpdateOneWithoutUserInput = {
    create?: XOR<TrainerAccountUncheckedCreateWithoutUserInput, TrainerAccountCreateWithoutUserInput>
    connectOrCreate?: TrainerAccountCreateOrConnectWithoutUserInput
    upsert?: TrainerAccountUpsertWithoutUserInput
    connect?: TrainerAccountWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<TrainerAccountUncheckedUpdateWithoutUserInput, TrainerAccountUpdateWithoutUserInput>
  }

  export type ProgressJournalUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
    set?: Enumerable<ProgressJournalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalWhereUniqueInput>
    update?: Enumerable<ProgressJournalUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalScalarWhereInput>
  }

  export type ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalGoalTagUpsertWithWhereUniqueWithoutUserInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalTagUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalGoalTagUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutUserBenchmarksInput = {
    create?: XOR<UserUncheckedCreateWithoutUserBenchmarksInput, UserCreateWithoutUserBenchmarksInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarksInput
    connect?: UserWhereUniqueInput
  }

  export type EquipmentCreateNestedManyWithoutUserBenchmarksInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutUserBenchmarksInput>, Enumerable<EquipmentCreateWithoutUserBenchmarksInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUserBenchmarksInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type MoveCreateNestedOneWithoutUserBenchmarksInput = {
    create?: XOR<MoveUncheckedCreateWithoutUserBenchmarksInput, MoveCreateWithoutUserBenchmarksInput>
    connectOrCreate?: MoveCreateOrConnectWithoutUserBenchmarksInput
    connect?: MoveWhereUniqueInput
  }

  export type UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
  }

  export type UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumWorkoutMoveRepTypeFieldUpdateOperationsInput = {
    set?: WorkoutMoveRepType
  }

  export type EnumLoadUnitFieldUpdateOperationsInput = {
    set?: LoadUnit
  }

  export type EnumDistanceUnitFieldUpdateOperationsInput = {
    set?: DistanceUnit
  }

  export type EnumBenchmarkScoreTypeFieldUpdateOperationsInput = {
    set?: BenchmarkScoreType
  }

  export type UserUpdateOneRequiredWithoutUserBenchmarksInput = {
    create?: XOR<UserUncheckedCreateWithoutUserBenchmarksInput, UserCreateWithoutUserBenchmarksInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarksInput
    upsert?: UserUpsertWithoutUserBenchmarksInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutUserBenchmarksInput, UserUpdateWithoutUserBenchmarksInput>
  }

  export type EquipmentUpdateManyWithoutUserBenchmarksInput = {
    create?: XOR<Enumerable<EquipmentUncheckedCreateWithoutUserBenchmarksInput>, Enumerable<EquipmentCreateWithoutUserBenchmarksInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUserBenchmarksInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutUserBenchmarksInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutUserBenchmarksInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutUserBenchmarksInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type MoveUpdateOneRequiredWithoutUserBenchmarksInput = {
    create?: XOR<MoveUncheckedCreateWithoutUserBenchmarksInput, MoveCreateWithoutUserBenchmarksInput>
    connectOrCreate?: MoveCreateOrConnectWithoutUserBenchmarksInput
    upsert?: MoveUpsertWithoutUserBenchmarksInput
    connect?: MoveWhereUniqueInput
    update?: XOR<MoveUncheckedUpdateWithoutUserBenchmarksInput, MoveUpdateWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    upsert?: Enumerable<UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserBenchmarkInput>
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    set?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    update?: Enumerable<UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserBenchmarkInput>
    updateMany?: Enumerable<UserBenchmarkEntryUpdateManyWithWhereWithoutUserBenchmarkInput>
    deleteMany?: Enumerable<UserBenchmarkEntryScalarWhereInput>
  }

  export type UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    upsert?: Enumerable<UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserBenchmarkInput>
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    set?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    update?: Enumerable<UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserBenchmarkInput>
    updateMany?: Enumerable<UserBenchmarkEntryUpdateManyWithWhereWithoutUserBenchmarkInput>
    deleteMany?: Enumerable<UserBenchmarkEntryScalarWhereInput>
  }

  export type UserBenchmarkCreateNestedOneWithoutEntriesInput = {
    create?: XOR<UserBenchmarkUncheckedCreateWithoutEntriesInput, UserBenchmarkCreateWithoutEntriesInput>
    connectOrCreate?: UserBenchmarkCreateOrConnectWithoutEntriesInput
    connect?: UserBenchmarkWhereUniqueInput
  }

  export type UserBenchmarkUpdateOneRequiredWithoutEntriesInput = {
    create?: XOR<UserBenchmarkUncheckedCreateWithoutEntriesInput, UserBenchmarkCreateWithoutEntriesInput>
    connectOrCreate?: UserBenchmarkCreateOrConnectWithoutEntriesInput
    upsert?: UserBenchmarkUpsertWithoutEntriesInput
    connect?: UserBenchmarkWhereUniqueInput
    update?: XOR<UserBenchmarkUncheckedUpdateWithoutEntriesInput, UserBenchmarkUpdateWithoutEntriesInput>
  }

  export type UserCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<UserUncheckedCreateWithoutCollectionsInput, UserCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutCreateNestedManyWithoutUserCollectionsInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutUserCollectionsInput>, Enumerable<WorkoutCreateWithoutUserCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutUserCollectionsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type WorkoutProgramCreateNestedManyWithoutUserCollectionsInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutUserCollectionsInput>, Enumerable<WorkoutProgramCreateWithoutUserCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutUserCollectionsInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutCollectionsInput = {
    create?: XOR<UserUncheckedCreateWithoutCollectionsInput, UserCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    upsert?: UserUpsertWithoutCollectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutCollectionsInput, UserUpdateWithoutCollectionsInput>
  }

  export type WorkoutUpdateManyWithoutUserCollectionsInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutUserCollectionsInput>, Enumerable<WorkoutCreateWithoutUserCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutUserCollectionsInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutUserCollectionsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutUserCollectionsInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutUserCollectionsInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type WorkoutProgramUpdateManyWithoutUserCollectionsInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutUserCollectionsInput>, Enumerable<WorkoutProgramCreateWithoutUserCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutUserCollectionsInput>
    upsert?: Enumerable<WorkoutProgramUpsertWithWhereUniqueWithoutUserCollectionsInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWhereUniqueInput>
    update?: Enumerable<WorkoutProgramUpdateWithWhereUniqueWithoutUserCollectionsInput>
    updateMany?: Enumerable<WorkoutProgramUpdateManyWithWhereWithoutUserCollectionsInput>
    deleteMany?: Enumerable<WorkoutProgramScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutsInput, UserCreateWithoutWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutTypeCreateNestedOneWithoutWorkoutsInput = {
    create?: XOR<WorkoutTypeUncheckedCreateWithoutWorkoutsInput, WorkoutTypeCreateWithoutWorkoutsInput>
    connectOrCreate?: WorkoutTypeCreateOrConnectWithoutWorkoutsInput
    connect?: WorkoutTypeWhereUniqueInput
  }

  export type WorkoutSectionCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type ScheduledWorkoutCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutOriginalWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutOriginalWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutOriginalWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
  }

  export type UserCollectionCreateNestedManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutWorkoutsInput>, Enumerable<UserCollectionCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutWorkoutsInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
  }

  export type WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutOriginalWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutOriginalWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutOriginalWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
  }

  export type EnumContentAccessScopeFieldUpdateOperationsInput = {
    set?: ContentAccessScope
  }

  export type UserUpdateOneWithoutWorkoutsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutsInput, UserCreateWithoutWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutsInput
    upsert?: UserUpsertWithoutWorkoutsInput
    connect?: UserWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<UserUncheckedUpdateWithoutWorkoutsInput, UserUpdateWithoutWorkoutsInput>
  }

  export type WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput = {
    create?: XOR<WorkoutTypeUncheckedCreateWithoutWorkoutsInput, WorkoutTypeCreateWithoutWorkoutsInput>
    connectOrCreate?: WorkoutTypeCreateOrConnectWithoutWorkoutsInput
    upsert?: WorkoutTypeUpsertWithoutWorkoutsInput
    connect?: WorkoutTypeWhereUniqueInput
    update?: XOR<WorkoutTypeUncheckedUpdateWithoutWorkoutsInput, WorkoutTypeUpdateWithoutWorkoutsInput>
  }

  export type WorkoutSectionUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutOriginalWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutOriginalWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutOriginalWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutOriginalWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutOriginalWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutOriginalWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutProgramWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutProgramWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutProgramWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutProgramWorkoutScalarWhereInput>
  }

  export type UserCollectionUpdateManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutWorkoutsInput>, Enumerable<UserCollectionCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutWorkoutsInput>
    upsert?: Enumerable<UserCollectionUpsertWithWhereUniqueWithoutWorkoutsInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
    set?: Enumerable<UserCollectionWhereUniqueInput>
    disconnect?: Enumerable<UserCollectionWhereUniqueInput>
    delete?: Enumerable<UserCollectionWhereUniqueInput>
    update?: Enumerable<UserCollectionUpdateWithWhereUniqueWithoutWorkoutsInput>
    updateMany?: Enumerable<UserCollectionUpdateManyWithWhereWithoutWorkoutsInput>
    deleteMany?: Enumerable<UserCollectionScalarWhereInput>
  }

  export type WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutInput>
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutOriginalWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutOriginalWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutOriginalWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutOriginalWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutOriginalWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutOriginalWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutProgramWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutProgramWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutProgramWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutProgramWorkoutScalarWhereInput>
  }

  export type WorkoutProgramCreateNestedManyWithoutWorkoutGoalsInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutWorkoutGoalsInput>, Enumerable<WorkoutProgramCreateWithoutWorkoutGoalsInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutWorkoutGoalsInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
  }

  export type WorkoutProgramUpdateManyWithoutWorkoutGoalsInput = {
    create?: XOR<Enumerable<WorkoutProgramUncheckedCreateWithoutWorkoutGoalsInput>, Enumerable<WorkoutProgramCreateWithoutWorkoutGoalsInput>>
    connectOrCreate?: Enumerable<WorkoutProgramCreateOrConnectWithoutWorkoutGoalsInput>
    upsert?: Enumerable<WorkoutProgramUpsertWithWhereUniqueWithoutWorkoutGoalsInput>
    connect?: Enumerable<WorkoutProgramWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWhereUniqueInput>
    update?: Enumerable<WorkoutProgramUpdateWithWhereUniqueWithoutWorkoutGoalsInput>
    updateMany?: Enumerable<WorkoutProgramUpdateManyWithWhereWithoutWorkoutGoalsInput>
    deleteMany?: Enumerable<WorkoutProgramScalarWhereInput>
  }

  export type MoveCreateNestedOneWithoutWorkoutMovesInput = {
    create?: XOR<MoveUncheckedCreateWithoutWorkoutMovesInput, MoveCreateWithoutWorkoutMovesInput>
    connectOrCreate?: MoveCreateOrConnectWithoutWorkoutMovesInput
    connect?: MoveWhereUniqueInput
  }

  export type EquipmentCreateNestedOneWithoutWorkoutMovesInput = {
    create?: XOR<EquipmentUncheckedCreateWithoutWorkoutMovesInput, EquipmentCreateWithoutWorkoutMovesInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutWorkoutMovesInput
    connect?: EquipmentWhereUniqueInput
  }

  export type WorkoutSectionCreateNestedOneWithoutWorkoutMovesInput = {
    create?: XOR<WorkoutSectionUncheckedCreateWithoutWorkoutMovesInput, WorkoutSectionCreateWithoutWorkoutMovesInput>
    connectOrCreate?: WorkoutSectionCreateOrConnectWithoutWorkoutMovesInput
    connect?: WorkoutSectionWhereUniqueInput
  }

  export type MoveUpdateOneRequiredWithoutWorkoutMovesInput = {
    create?: XOR<MoveUncheckedCreateWithoutWorkoutMovesInput, MoveCreateWithoutWorkoutMovesInput>
    connectOrCreate?: MoveCreateOrConnectWithoutWorkoutMovesInput
    upsert?: MoveUpsertWithoutWorkoutMovesInput
    connect?: MoveWhereUniqueInput
    update?: XOR<MoveUncheckedUpdateWithoutWorkoutMovesInput, MoveUpdateWithoutWorkoutMovesInput>
  }

  export type EquipmentUpdateOneWithoutWorkoutMovesInput = {
    create?: XOR<EquipmentUncheckedCreateWithoutWorkoutMovesInput, EquipmentCreateWithoutWorkoutMovesInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutWorkoutMovesInput
    upsert?: EquipmentUpsertWithoutWorkoutMovesInput
    connect?: EquipmentWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<EquipmentUncheckedUpdateWithoutWorkoutMovesInput, EquipmentUpdateWithoutWorkoutMovesInput>
  }

  export type WorkoutSectionUpdateOneRequiredWithoutWorkoutMovesInput = {
    create?: XOR<WorkoutSectionUncheckedCreateWithoutWorkoutMovesInput, WorkoutSectionCreateWithoutWorkoutMovesInput>
    connectOrCreate?: WorkoutSectionCreateOrConnectWithoutWorkoutMovesInput
    upsert?: WorkoutSectionUpsertWithoutWorkoutMovesInput
    connect?: WorkoutSectionWhereUniqueInput
    update?: XOR<WorkoutSectionUncheckedUpdateWithoutWorkoutMovesInput, WorkoutSectionUpdateWithoutWorkoutMovesInput>
  }

  export type UserCreateNestedOneWithoutWorkoutProgramsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutProgramsInput, UserCreateWithoutWorkoutProgramsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutProgramsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutProgramEnrolmentCreateNestedManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
  }

  export type WorkoutGoalCreateNestedManyWithoutWorkoutProgramsInput = {
    create?: XOR<Enumerable<WorkoutGoalUncheckedCreateWithoutWorkoutProgramsInput>, Enumerable<WorkoutGoalCreateWithoutWorkoutProgramsInput>>
    connectOrCreate?: Enumerable<WorkoutGoalCreateOrConnectWithoutWorkoutProgramsInput>
    connect?: Enumerable<WorkoutGoalWhereUniqueInput>
  }

  export type WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
  }

  export type WorkoutProgramReviewCreateNestedManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramReviewCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
  }

  export type UserCollectionCreateNestedManyWithoutWorkoutProgramsInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutWorkoutProgramsInput>, Enumerable<UserCollectionCreateWithoutWorkoutProgramsInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutWorkoutProgramsInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
  }

  export type WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
  }

  export type WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
  }

  export type WorkoutProgramReviewUncheckedCreateNestedManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramReviewCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutProgramsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutProgramsInput, UserCreateWithoutWorkoutProgramsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutProgramsInput
    upsert?: UserUpsertWithoutWorkoutProgramsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutWorkoutProgramsInput, UserUpdateWithoutWorkoutProgramsInput>
  }

  export type WorkoutProgramEnrolmentUpdateManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutWorkoutProgramInput>
    upsert?: Enumerable<WorkoutProgramEnrolmentUpsertWithWhereUniqueWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutProgramEnrolmentUpdateWithWhereUniqueWithoutWorkoutProgramInput>
    updateMany?: Enumerable<WorkoutProgramEnrolmentUpdateManyWithWhereWithoutWorkoutProgramInput>
    deleteMany?: Enumerable<WorkoutProgramEnrolmentScalarWhereInput>
  }

  export type WorkoutGoalUpdateManyWithoutWorkoutProgramsInput = {
    create?: XOR<Enumerable<WorkoutGoalUncheckedCreateWithoutWorkoutProgramsInput>, Enumerable<WorkoutGoalCreateWithoutWorkoutProgramsInput>>
    connectOrCreate?: Enumerable<WorkoutGoalCreateOrConnectWithoutWorkoutProgramsInput>
    upsert?: Enumerable<WorkoutGoalUpsertWithWhereUniqueWithoutWorkoutProgramsInput>
    connect?: Enumerable<WorkoutGoalWhereUniqueInput>
    set?: Enumerable<WorkoutGoalWhereUniqueInput>
    disconnect?: Enumerable<WorkoutGoalWhereUniqueInput>
    delete?: Enumerable<WorkoutGoalWhereUniqueInput>
    update?: Enumerable<WorkoutGoalUpdateWithWhereUniqueWithoutWorkoutProgramsInput>
    updateMany?: Enumerable<WorkoutGoalUpdateManyWithWhereWithoutWorkoutProgramsInput>
    deleteMany?: Enumerable<WorkoutGoalScalarWhereInput>
  }

  export type WorkoutProgramWorkoutUpdateManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutProgramInput>
    upsert?: Enumerable<WorkoutProgramWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutProgramWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramInput>
    updateMany?: Enumerable<WorkoutProgramWorkoutUpdateManyWithWhereWithoutWorkoutProgramInput>
    deleteMany?: Enumerable<WorkoutProgramWorkoutScalarWhereInput>
  }

  export type WorkoutProgramReviewUpdateManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramReviewCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutWorkoutProgramInput>
    upsert?: Enumerable<WorkoutProgramReviewUpsertWithWhereUniqueWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    set?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    update?: Enumerable<WorkoutProgramReviewUpdateWithWhereUniqueWithoutWorkoutProgramInput>
    updateMany?: Enumerable<WorkoutProgramReviewUpdateManyWithWhereWithoutWorkoutProgramInput>
    deleteMany?: Enumerable<WorkoutProgramReviewScalarWhereInput>
  }

  export type UserCollectionUpdateManyWithoutWorkoutProgramsInput = {
    create?: XOR<Enumerable<UserCollectionUncheckedCreateWithoutWorkoutProgramsInput>, Enumerable<UserCollectionCreateWithoutWorkoutProgramsInput>>
    connectOrCreate?: Enumerable<UserCollectionCreateOrConnectWithoutWorkoutProgramsInput>
    upsert?: Enumerable<UserCollectionUpsertWithWhereUniqueWithoutWorkoutProgramsInput>
    connect?: Enumerable<UserCollectionWhereUniqueInput>
    set?: Enumerable<UserCollectionWhereUniqueInput>
    disconnect?: Enumerable<UserCollectionWhereUniqueInput>
    delete?: Enumerable<UserCollectionWhereUniqueInput>
    update?: Enumerable<UserCollectionUpdateWithWhereUniqueWithoutWorkoutProgramsInput>
    updateMany?: Enumerable<UserCollectionUpdateManyWithWhereWithoutWorkoutProgramsInput>
    deleteMany?: Enumerable<UserCollectionScalarWhereInput>
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramEnrolmentUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramEnrolmentCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramEnrolmentCreateOrConnectWithoutWorkoutProgramInput>
    upsert?: Enumerable<WorkoutProgramEnrolmentUpsertWithWhereUniqueWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutProgramEnrolmentUpdateWithWhereUniqueWithoutWorkoutProgramInput>
    updateMany?: Enumerable<WorkoutProgramEnrolmentUpdateManyWithWhereWithoutWorkoutProgramInput>
    deleteMany?: Enumerable<WorkoutProgramEnrolmentScalarWhereInput>
  }

  export type WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramWorkoutCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutProgramInput>
    upsert?: Enumerable<WorkoutProgramWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutProgramWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramInput>
    updateMany?: Enumerable<WorkoutProgramWorkoutUpdateManyWithWhereWithoutWorkoutProgramInput>
    deleteMany?: Enumerable<WorkoutProgramWorkoutScalarWhereInput>
  }

  export type WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramInput = {
    create?: XOR<Enumerable<WorkoutProgramReviewUncheckedCreateWithoutWorkoutProgramInput>, Enumerable<WorkoutProgramReviewCreateWithoutWorkoutProgramInput>>
    connectOrCreate?: Enumerable<WorkoutProgramReviewCreateOrConnectWithoutWorkoutProgramInput>
    upsert?: Enumerable<WorkoutProgramReviewUpsertWithWhereUniqueWithoutWorkoutProgramInput>
    connect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    set?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutProgramReviewWhereUniqueInput>
    update?: Enumerable<WorkoutProgramReviewUpdateWithWhereUniqueWithoutWorkoutProgramInput>
    updateMany?: Enumerable<WorkoutProgramReviewUpdateManyWithWhereWithoutWorkoutProgramInput>
    deleteMany?: Enumerable<WorkoutProgramReviewScalarWhereInput>
  }

  export type WorkoutProgramCreateNestedOneWithoutEnrolmentsInput = {
    create?: XOR<WorkoutProgramUncheckedCreateWithoutEnrolmentsInput, WorkoutProgramCreateWithoutEnrolmentsInput>
    connectOrCreate?: WorkoutProgramCreateOrConnectWithoutEnrolmentsInput
    connect?: WorkoutProgramWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutWorkoutProgramEnrolmentsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutProgramEnrolmentsInput, UserCreateWithoutWorkoutProgramEnrolmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutProgramEnrolmentsInput
    connect?: UserWhereUniqueInput
  }

  export type LoggedWorkoutCreateNestedManyWithoutWorkoutProgramEnrolmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramEnrolmentInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramEnrolmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramEnrolmentInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramEnrolmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramEnrolmentInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramEnrolmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramEnrolmentInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type WorkoutProgramUpdateOneRequiredWithoutEnrolmentsInput = {
    create?: XOR<WorkoutProgramUncheckedCreateWithoutEnrolmentsInput, WorkoutProgramCreateWithoutEnrolmentsInput>
    connectOrCreate?: WorkoutProgramCreateOrConnectWithoutEnrolmentsInput
    upsert?: WorkoutProgramUpsertWithoutEnrolmentsInput
    connect?: WorkoutProgramWhereUniqueInput
    update?: XOR<WorkoutProgramUncheckedUpdateWithoutEnrolmentsInput, WorkoutProgramUpdateWithoutEnrolmentsInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutProgramEnrolmentsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutProgramEnrolmentsInput, UserCreateWithoutWorkoutProgramEnrolmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutProgramEnrolmentsInput
    upsert?: UserUpsertWithoutWorkoutProgramEnrolmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutWorkoutProgramEnrolmentsInput, UserUpdateWithoutWorkoutProgramEnrolmentsInput>
  }

  export type LoggedWorkoutUpdateManyWithoutWorkoutProgramEnrolmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramEnrolmentInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramEnrolmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramEnrolmentInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramEnrolmentInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramEnrolmentInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutProgramEnrolmentInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramEnrolmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramEnrolmentInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramEnrolmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramEnrolmentInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramEnrolmentInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramEnrolmentInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutProgramEnrolmentInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type WorkoutProgramCreateNestedOneWithoutWorkoutProgramReviewsInput = {
    create?: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramReviewsInput, WorkoutProgramCreateWithoutWorkoutProgramReviewsInput>
    connectOrCreate?: WorkoutProgramCreateOrConnectWithoutWorkoutProgramReviewsInput
    connect?: WorkoutProgramWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutWorkoutProgramReviewsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutProgramReviewsInput, UserCreateWithoutWorkoutProgramReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutProgramReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutProgramUpdateOneRequiredWithoutWorkoutProgramReviewsInput = {
    create?: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramReviewsInput, WorkoutProgramCreateWithoutWorkoutProgramReviewsInput>
    connectOrCreate?: WorkoutProgramCreateOrConnectWithoutWorkoutProgramReviewsInput
    upsert?: WorkoutProgramUpsertWithoutWorkoutProgramReviewsInput
    connect?: WorkoutProgramWhereUniqueInput
    update?: XOR<WorkoutProgramUncheckedUpdateWithoutWorkoutProgramReviewsInput, WorkoutProgramUpdateWithoutWorkoutProgramReviewsInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutProgramReviewsInput = {
    create?: XOR<UserUncheckedCreateWithoutWorkoutProgramReviewsInput, UserCreateWithoutWorkoutProgramReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutProgramReviewsInput
    upsert?: UserUpsertWithoutWorkoutProgramReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutWorkoutProgramReviewsInput, UserUpdateWithoutWorkoutProgramReviewsInput>
  }

  export type WorkoutProgramCreateNestedOneWithoutWorkoutProgramWorkoutsInput = {
    create?: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutProgramCreateWithoutWorkoutProgramWorkoutsInput>
    connectOrCreate?: WorkoutProgramCreateOrConnectWithoutWorkoutProgramWorkoutsInput
    connect?: WorkoutProgramWhereUniqueInput
  }

  export type WorkoutCreateNestedOneWithoutWorkoutProgramWorkoutsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutCreateWithoutWorkoutProgramWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutProgramWorkoutsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type LoggedWorkoutCreateNestedManyWithoutWorkoutProgramWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type WorkoutProgramUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput = {
    create?: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutProgramCreateWithoutWorkoutProgramWorkoutsInput>
    connectOrCreate?: WorkoutProgramCreateOrConnectWithoutWorkoutProgramWorkoutsInput
    upsert?: WorkoutProgramUpsertWithoutWorkoutProgramWorkoutsInput
    connect?: WorkoutProgramWhereUniqueInput
    update?: XOR<WorkoutProgramUncheckedUpdateWithoutWorkoutProgramWorkoutsInput, WorkoutProgramUpdateWithoutWorkoutProgramWorkoutsInput>
  }

  export type WorkoutUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutCreateWithoutWorkoutProgramWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutProgramWorkoutsInput
    upsert?: WorkoutUpsertWithoutWorkoutProgramWorkoutsInput
    connect?: WorkoutWhereUniqueInput
    update?: XOR<WorkoutUncheckedUpdateWithoutWorkoutProgramWorkoutsInput, WorkoutUpdateWithoutWorkoutProgramWorkoutsInput>
  }

  export type LoggedWorkoutUpdateManyWithoutWorkoutProgramWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutProgramWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramWorkoutInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutProgramWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutProgramWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramWorkoutInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutProgramWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type WorkoutCreateNestedOneWithoutWorkoutSectionsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutWorkoutSectionsInput, WorkoutCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutSectionsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type WorkoutMoveCreateNestedManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutMoveCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSectionInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedOneWithoutWorkoutSectionsInput = {
    create?: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutSectionsInput, LoggedWorkoutCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutWorkoutSectionsInput
    connect?: LoggedWorkoutWhereUniqueInput
  }

  export type WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutMoveCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSectionInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type WorkoutUpdateOneWithoutWorkoutSectionsInput = {
    create?: XOR<WorkoutUncheckedCreateWithoutWorkoutSectionsInput, WorkoutCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutSectionsInput
    upsert?: WorkoutUpsertWithoutWorkoutSectionsInput
    connect?: WorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutUncheckedUpdateWithoutWorkoutSectionsInput, WorkoutUpdateWithoutWorkoutSectionsInput>
  }

  export type WorkoutMoveUpdateManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutMoveCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSectionInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutWorkoutSectionInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutWorkoutSectionInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutWorkoutSectionInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type LoggedWorkoutUpdateOneWithoutWorkoutSectionsInput = {
    create?: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutSectionsInput, LoggedWorkoutCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutWorkoutSectionsInput
    upsert?: LoggedWorkoutUpsertWithoutWorkoutSectionsInput
    connect?: LoggedWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutSectionsInput, LoggedWorkoutUpdateWithoutWorkoutSectionsInput>
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutMoveCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSectionInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutWorkoutSectionInput>
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutWorkoutSectionInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutWorkoutSectionInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type WorkoutCreateNestedManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<WorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutTypeInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutTypeInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type WorkoutUncheckedCreateNestedManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<WorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutTypeInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutTypeInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type EnumWorkoutScoreTypeFieldUpdateOperationsInput = {
    set?: WorkoutScoreType
  }

  export type WorkoutUpdateManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<WorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutTypeInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutWorkoutTypeInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutWorkoutTypeInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutWorkoutTypeInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUpdateManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutTypeInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutTypeInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutTypeInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutTypeInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type WorkoutUncheckedUpdateManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<WorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<WorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutTypeInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutWorkoutTypeInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutWorkoutTypeInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutWorkoutTypeInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutWorkoutTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutTypeInput>, Enumerable<LoggedWorkoutCreateWithoutWorkoutTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutTypeInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutTypeInput>
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutTypeInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutTypeInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedEnumBodyAreaFrontBackFilter = {
    equals?: BodyAreaFrontBack
    in?: Enumerable<BodyAreaFrontBack>
    notIn?: Enumerable<BodyAreaFrontBack>
    not?: NestedEnumBodyAreaFrontBackFilter | BodyAreaFrontBack
  }

  export type NestedEnumBodyAreaUpperLowerFilter = {
    equals?: BodyAreaUpperLower
    in?: Enumerable<BodyAreaUpperLower>
    notIn?: Enumerable<BodyAreaUpperLower>
    not?: NestedEnumBodyAreaUpperLowerFilter | BodyAreaUpperLower
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedEnumMoveScopeFilter = {
    equals?: MoveScope
    in?: Enumerable<MoveScope>
    notIn?: Enumerable<MoveScope>
    not?: NestedEnumMoveScopeFilter | MoveScope
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedEnumUserProfileScopeFilter = {
    equals?: UserProfileScope
    in?: Enumerable<UserProfileScope>
    notIn?: Enumerable<UserProfileScope>
    not?: NestedEnumUserProfileScopeFilter | UserProfileScope
  }

  export type NestedEnumThemePreferenceFilter = {
    equals?: ThemePreference
    in?: Enumerable<ThemePreference>
    notIn?: Enumerable<ThemePreference>
    not?: NestedEnumThemePreferenceFilter | ThemePreference
  }

  export type NestedEnumGenderNullableFilter = {
    equals?: Gender | null
    in?: Enumerable<Gender> | null
    notIn?: Enumerable<Gender> | null
    not?: NestedEnumGenderNullableFilter | Gender | null
  }

  export type NestedEnumUnitSystemFilter = {
    equals?: UnitSystem
    in?: Enumerable<UnitSystem>
    notIn?: Enumerable<UnitSystem>
    not?: NestedEnumUnitSystemFilter | UnitSystem
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedEnumWorkoutMoveRepTypeFilter = {
    equals?: WorkoutMoveRepType
    in?: Enumerable<WorkoutMoveRepType>
    notIn?: Enumerable<WorkoutMoveRepType>
    not?: NestedEnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
  }

  export type NestedEnumLoadUnitFilter = {
    equals?: LoadUnit
    in?: Enumerable<LoadUnit>
    notIn?: Enumerable<LoadUnit>
    not?: NestedEnumLoadUnitFilter | LoadUnit
  }

  export type NestedEnumDistanceUnitFilter = {
    equals?: DistanceUnit
    in?: Enumerable<DistanceUnit>
    notIn?: Enumerable<DistanceUnit>
    not?: NestedEnumDistanceUnitFilter | DistanceUnit
  }

  export type NestedEnumBenchmarkScoreTypeFilter = {
    equals?: BenchmarkScoreType
    in?: Enumerable<BenchmarkScoreType>
    notIn?: Enumerable<BenchmarkScoreType>
    not?: NestedEnumBenchmarkScoreTypeFilter | BenchmarkScoreType
  }

  export type NestedEnumContentAccessScopeFilter = {
    equals?: ContentAccessScope
    in?: Enumerable<ContentAccessScope>
    notIn?: Enumerable<ContentAccessScope>
    not?: NestedEnumContentAccessScopeFilter | ContentAccessScope
  }

  export type NestedEnumWorkoutScoreTypeFilter = {
    equals?: WorkoutScoreType
    in?: Enumerable<WorkoutScoreType>
    notIn?: Enumerable<WorkoutScoreType>
    not?: NestedEnumWorkoutScoreTypeFilter | WorkoutScoreType
  }

  export type BodyAreaMoveScoreCreateWithoutBodyAreaInput = {
    createdAt?: Date | string
    score?: number
    move: MoveCreateNestedOneWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput = {
    createdAt?: Date | string
    moveId: string
    score?: number
  }

  export type BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    create: XOR<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput, BodyAreaMoveScoreCreateWithoutBodyAreaInput>
  }

  export type BodyAreaMoveScoreUpsertWithWhereUniqueWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    update: XOR<BodyAreaMoveScoreUncheckedUpdateWithoutBodyAreaInput, BodyAreaMoveScoreUpdateWithoutBodyAreaInput>
    create: XOR<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput, BodyAreaMoveScoreCreateWithoutBodyAreaInput>
  }

  export type BodyAreaMoveScoreUpdateWithWhereUniqueWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    data: XOR<BodyAreaMoveScoreUncheckedUpdateWithoutBodyAreaInput, BodyAreaMoveScoreUpdateWithoutBodyAreaInput>
  }

  export type BodyAreaMoveScoreUpdateManyWithWhereWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreScalarWhereInput
    data: XOR<BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaMoveScoresInput, BodyAreaMoveScoreUpdateManyMutationInput>
  }

  export type BodyAreaMoveScoreScalarWhereInput = {
    AND?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
    OR?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
    NOT?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
    createdAt?: DateTimeFilter | Date | string
    moveId?: StringFilter | string
    bodyAreaId?: StringFilter | string
    score?: IntFilter | number
  }

  export type MoveCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutBodyAreaMoveScoresInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutBodyAreaMoveScoresInput, MoveCreateWithoutBodyAreaMoveScoresInput>
  }

  export type BodyAreaCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
  }

  export type BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
  }

  export type BodyAreaCreateOrConnectWithoutBodyAreaMoveScoresInput = {
    where: BodyAreaWhereUniqueInput
    create: XOR<BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput, BodyAreaCreateWithoutBodyAreaMoveScoresInput>
  }

  export type MoveUpsertWithoutBodyAreaMoveScoresInput = {
    update: XOR<MoveUncheckedUpdateWithoutBodyAreaMoveScoresInput, MoveUpdateWithoutBodyAreaMoveScoresInput>
    create: XOR<MoveUncheckedCreateWithoutBodyAreaMoveScoresInput, MoveCreateWithoutBodyAreaMoveScoresInput>
  }

  export type MoveUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type BodyAreaUpsertWithoutBodyAreaMoveScoresInput = {
    update: XOR<BodyAreaUncheckedUpdateWithoutBodyAreaMoveScoresInput, BodyAreaUpdateWithoutBodyAreaMoveScoresInput>
    create: XOR<BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput, BodyAreaCreateWithoutBodyAreaMoveScoresInput>
  }

  export type BodyAreaUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type BodyAreaUncheckedUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type MoveCreateWithoutRequiredEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutRequiredEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutRequiredEquipmentsInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutRequiredEquipmentsInput, MoveCreateWithoutRequiredEquipmentsInput>
  }

  export type MoveCreateWithoutSelectableEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutSelectableEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutSelectableEquipmentsInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutSelectableEquipmentsInput, MoveCreateWithoutSelectableEquipmentsInput>
  }

  export type WorkoutMoveCreateWithoutSelectedEquipmentInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    move: MoveCreateNestedOneWithoutWorkoutMovesInput
    workoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedCreateWithoutSelectedEquipmentInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    moveId: string
    workoutSectionId: string
  }

  export type WorkoutMoveCreateOrConnectWithoutSelectedEquipmentInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveUncheckedCreateWithoutSelectedEquipmentInput, WorkoutMoveCreateWithoutSelectedEquipmentInput>
  }

  export type GymProfileCreateWithoutAvailableEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    user: UserCreateNestedOneWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutAvailableEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutAvailableEquipmentsInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileUncheckedCreateWithoutAvailableEquipmentsInput, GymProfileCreateWithoutAvailableEquipmentsInput>
  }

  export type UserBenchmarkCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    createdBy: UserCreateNestedOneWithoutUserBenchmarksInput
    move: MoveCreateNestedOneWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    createdById: string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    moveId: string
    entries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateOrConnectWithoutEquipmentInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkUncheckedCreateWithoutEquipmentInput, UserBenchmarkCreateWithoutEquipmentInput>
  }

  export type MoveUpsertWithWhereUniqueWithoutRequiredEquipmentsInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUncheckedUpdateWithoutRequiredEquipmentsInput, MoveUpdateWithoutRequiredEquipmentsInput>
    create: XOR<MoveUncheckedCreateWithoutRequiredEquipmentsInput, MoveCreateWithoutRequiredEquipmentsInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutRequiredEquipmentsInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUncheckedUpdateWithoutRequiredEquipmentsInput, MoveUpdateWithoutRequiredEquipmentsInput>
  }

  export type MoveUpdateManyWithWhereWithoutRequiredEquipmentsInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUncheckedUpdateManyWithoutRequiredForMovesInput, MoveUpdateManyMutationInput>
  }

  export type MoveScalarWhereInput = {
    AND?: Enumerable<MoveScalarWhereInput>
    OR?: Enumerable<MoveScalarWhereInput>
    NOT?: Enumerable<MoveScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    createdById?: StringNullableFilter | string | null
    scope?: EnumMoveScopeFilter | MoveScope
    name?: StringFilter | string
    searchTerms?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    demoVideoUrl?: StringNullableFilter | string | null
    demoVideoThumbUrl?: StringNullableFilter | string | null
    moveTypeId?: StringNullableFilter | string | null
    validRepTypes?: EnumWorkoutMoveRepTypeNullableListFilter
  }

  export type MoveUpsertWithWhereUniqueWithoutSelectableEquipmentsInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUncheckedUpdateWithoutSelectableEquipmentsInput, MoveUpdateWithoutSelectableEquipmentsInput>
    create: XOR<MoveUncheckedCreateWithoutSelectableEquipmentsInput, MoveCreateWithoutSelectableEquipmentsInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutSelectableEquipmentsInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUncheckedUpdateWithoutSelectableEquipmentsInput, MoveUpdateWithoutSelectableEquipmentsInput>
  }

  export type MoveUpdateManyWithWhereWithoutSelectableEquipmentsInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUncheckedUpdateManyWithoutSelectableForMovesInput, MoveUpdateManyMutationInput>
  }

  export type WorkoutMoveUpsertWithWhereUniqueWithoutSelectedEquipmentInput = {
    where: WorkoutMoveWhereUniqueInput
    update: XOR<WorkoutMoveUncheckedUpdateWithoutSelectedEquipmentInput, WorkoutMoveUpdateWithoutSelectedEquipmentInput>
    create: XOR<WorkoutMoveUncheckedCreateWithoutSelectedEquipmentInput, WorkoutMoveCreateWithoutSelectedEquipmentInput>
  }

  export type WorkoutMoveUpdateWithWhereUniqueWithoutSelectedEquipmentInput = {
    where: WorkoutMoveWhereUniqueInput
    data: XOR<WorkoutMoveUncheckedUpdateWithoutSelectedEquipmentInput, WorkoutMoveUpdateWithoutSelectedEquipmentInput>
  }

  export type WorkoutMoveUpdateManyWithWhereWithoutSelectedEquipmentInput = {
    where: WorkoutMoveScalarWhereInput
    data: XOR<WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput, WorkoutMoveUpdateManyMutationInput>
  }

  export type WorkoutMoveScalarWhereInput = {
    AND?: Enumerable<WorkoutMoveScalarWhereInput>
    OR?: Enumerable<WorkoutMoveScalarWhereInput>
    NOT?: Enumerable<WorkoutMoveScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    sortPosition?: IntFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    reps?: FloatNullableFilter | number | null
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    loadAmount?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    duration?: IntNullableFilter | number | null
    description?: StringNullableFilter | string | null
    notes?: StringNullableFilter | string | null
    moveId?: StringFilter | string
    selectedEquipmentId?: StringNullableFilter | string | null
    workoutSectionId?: StringFilter | string
  }

  export type GymProfileUpsertWithWhereUniqueWithoutAvailableEquipmentsInput = {
    where: GymProfileWhereUniqueInput
    update: XOR<GymProfileUncheckedUpdateWithoutAvailableEquipmentsInput, GymProfileUpdateWithoutAvailableEquipmentsInput>
    create: XOR<GymProfileUncheckedCreateWithoutAvailableEquipmentsInput, GymProfileCreateWithoutAvailableEquipmentsInput>
  }

  export type GymProfileUpdateWithWhereUniqueWithoutAvailableEquipmentsInput = {
    where: GymProfileWhereUniqueInput
    data: XOR<GymProfileUncheckedUpdateWithoutAvailableEquipmentsInput, GymProfileUpdateWithoutAvailableEquipmentsInput>
  }

  export type GymProfileUpdateManyWithWhereWithoutAvailableEquipmentsInput = {
    where: GymProfileScalarWhereInput
    data: XOR<GymProfileUncheckedUpdateManyWithoutGymProfilesInput, GymProfileUpdateManyMutationInput>
  }

  export type GymProfileScalarWhereInput = {
    AND?: Enumerable<GymProfileScalarWhereInput>
    OR?: Enumerable<GymProfileScalarWhereInput>
    NOT?: Enumerable<GymProfileScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    postcode?: StringNullableFilter | string | null
    bodyweightOnly?: BoolFilter | boolean
  }

  export type UserBenchmarkUpsertWithWhereUniqueWithoutEquipmentInput = {
    where: UserBenchmarkWhereUniqueInput
    update: XOR<UserBenchmarkUncheckedUpdateWithoutEquipmentInput, UserBenchmarkUpdateWithoutEquipmentInput>
    create: XOR<UserBenchmarkUncheckedCreateWithoutEquipmentInput, UserBenchmarkCreateWithoutEquipmentInput>
  }

  export type UserBenchmarkUpdateWithWhereUniqueWithoutEquipmentInput = {
    where: UserBenchmarkWhereUniqueInput
    data: XOR<UserBenchmarkUncheckedUpdateWithoutEquipmentInput, UserBenchmarkUpdateWithoutEquipmentInput>
  }

  export type UserBenchmarkUpdateManyWithWhereWithoutEquipmentInput = {
    where: UserBenchmarkScalarWhereInput
    data: XOR<UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput, UserBenchmarkUpdateManyMutationInput>
  }

  export type UserBenchmarkScalarWhereInput = {
    AND?: Enumerable<UserBenchmarkScalarWhereInput>
    OR?: Enumerable<UserBenchmarkScalarWhereInput>
    NOT?: Enumerable<UserBenchmarkScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    createdById?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    reps?: FloatFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    load?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFilter | BenchmarkScoreType
    moveId?: StringFilter | string
  }

  export type UserCreateWithoutGymProfilesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutGymProfilesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutGymProfilesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutGymProfilesInput, UserCreateWithoutGymProfilesInput>
  }

  export type EquipmentCreateWithoutGymProfilesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    requiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutSelectedEquipmentInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutGymProfilesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutSelectedEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutGymProfilesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentUncheckedCreateWithoutGymProfilesInput, EquipmentCreateWithoutGymProfilesInput>
  }

  export type ScheduledWorkoutCreateWithoutGymProfileInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    scheduledAt?: Date | string
    user: UserCreateNestedOneWithoutScheduledWorkoutsInput
    workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutGymProfileInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    notes?: string | null
    scheduledAt?: Date | string
    workoutId?: string | null
    loggedWorkoutId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutGymProfileInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput, ScheduledWorkoutCreateWithoutGymProfileInput>
  }

  export type LoggedWorkoutCreateWithoutGymProfileInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutGymProfileInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutProgramWorkoutId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutGymProfileInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutGymProfileInput, LoggedWorkoutCreateWithoutGymProfileInput>
  }

  export type UserUpsertWithoutGymProfilesInput = {
    update: XOR<UserUncheckedUpdateWithoutGymProfilesInput, UserUpdateWithoutGymProfilesInput>
    create: XOR<UserUncheckedCreateWithoutGymProfilesInput, UserCreateWithoutGymProfilesInput>
  }

  export type UserUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type EquipmentUpsertWithWhereUniqueWithoutGymProfilesInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUncheckedUpdateWithoutGymProfilesInput, EquipmentUpdateWithoutGymProfilesInput>
    create: XOR<EquipmentUncheckedCreateWithoutGymProfilesInput, EquipmentCreateWithoutGymProfilesInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutGymProfilesInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUncheckedUpdateWithoutGymProfilesInput, EquipmentUpdateWithoutGymProfilesInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutGymProfilesInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUncheckedUpdateManyWithoutAvailableEquipmentsInput, EquipmentUpdateManyMutationInput>
  }

  export type EquipmentScalarWhereInput = {
    AND?: Enumerable<EquipmentScalarWhereInput>
    OR?: Enumerable<EquipmentScalarWhereInput>
    NOT?: Enumerable<EquipmentScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    altNames?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    loadAdjustable?: BoolFilter | boolean
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutGymProfileInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUncheckedUpdateWithoutGymProfileInput, ScheduledWorkoutUpdateWithoutGymProfileInput>
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput, ScheduledWorkoutCreateWithoutGymProfileInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutGymProfileInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUncheckedUpdateWithoutGymProfileInput, ScheduledWorkoutUpdateWithoutGymProfileInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutGymProfileInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput, ScheduledWorkoutUpdateManyMutationInput>
  }

  export type ScheduledWorkoutScalarWhereInput = {
    AND?: Enumerable<ScheduledWorkoutScalarWhereInput>
    OR?: Enumerable<ScheduledWorkoutScalarWhereInput>
    NOT?: Enumerable<ScheduledWorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    notes?: StringNullableFilter | string | null
    scheduledAt?: DateTimeFilter | Date | string
    workoutId?: StringNullableFilter | string | null
    loggedWorkoutId?: StringNullableFilter | string | null
    gymProfileId?: StringNullableFilter | string | null
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutGymProfileInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutGymProfileInput, LoggedWorkoutUpdateWithoutGymProfileInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutGymProfileInput, LoggedWorkoutCreateWithoutGymProfileInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutGymProfileInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUncheckedUpdateWithoutGymProfileInput, LoggedWorkoutUpdateWithoutGymProfileInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutGymProfileInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput, LoggedWorkoutUpdateManyMutationInput>
  }

  export type LoggedWorkoutScalarWhereInput = {
    AND?: Enumerable<LoggedWorkoutScalarWhereInput>
    OR?: Enumerable<LoggedWorkoutScalarWhereInput>
    NOT?: Enumerable<LoggedWorkoutScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    summary?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    completedOn?: DateTimeFilter | Date | string
    completedById?: StringFilter | string
    notes?: StringNullableFilter | string | null
    videoUrl?: StringNullableFilter | string | null
    videoThumbUrl?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    duration?: IntNullableFilter | number | null
    workoutTypeId?: StringFilter | string
    originalWorkoutId?: StringNullableFilter | string | null
    scheduledWorkoutId?: StringNullableFilter | string | null
    gymProfileId?: StringNullableFilter | string | null
    workoutProgramEnrolmentId?: StringNullableFilter | string | null
    workoutProgramWorkoutId?: StringNullableFilter | string | null
  }

  export type UserCreateWithoutLoggedWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutLoggedWorkoutsInput, UserCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutTypeCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    placeholderImageUrl: string
    scoreType: WorkoutScoreType
    workouts?: WorkoutCreateNestedManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    placeholderImageUrl: string
    scoreType: WorkoutScoreType
    workouts?: WorkoutUncheckedCreateNestedManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: WorkoutTypeWhereUniqueInput
    create: XOR<WorkoutTypeUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutTypeCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutSectionCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    workout?: WorkoutCreateNestedOneWithoutWorkoutSectionsInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    workoutId?: string | null
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    create: XOR<WorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput, WorkoutSectionCreateWithoutLoggedWorkoutInput>
  }

  export type WorkoutCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    createdBy?: UserCreateNestedOneWithoutWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    createdById?: string | null
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutTypeId: string
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutCreateWithoutLoggedWorkoutsInput>
  }

  export type ScheduledWorkoutCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    scheduledAt?: Date | string
    user: UserCreateNestedOneWithoutScheduledWorkoutsInput
    workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    gymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    notes?: string | null
    scheduledAt?: Date | string
    workoutId?: string | null
    gymProfileId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput, ScheduledWorkoutCreateWithoutLoggedWorkoutInput>
  }

  export type GymProfileCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    user: UserCreateNestedOneWithoutGymProfilesInput
    availableEquipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileUncheckedCreateWithoutLoggedWorkoutsInput, GymProfileCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutProgramEnrolmentCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutEnrolmentsInput
    user: UserCreateNestedOneWithoutWorkoutProgramEnrolmentsInput
  }

  export type WorkoutProgramEnrolmentUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    workoutProgramId: string
    userId: string
  }

  export type WorkoutProgramEnrolmentCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: WorkoutProgramEnrolmentWhereUniqueInput
    create: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramEnrolmentCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutProgramWorkoutCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutWorkoutProgramWorkoutsInput
    workout: WorkoutCreateNestedOneWithoutWorkoutProgramWorkoutsInput
  }

  export type WorkoutProgramWorkoutUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workoutProgramId: string
    workoutId: string
  }

  export type WorkoutProgramWorkoutCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: WorkoutProgramWorkoutWhereUniqueInput
    create: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramWorkoutCreateWithoutLoggedWorkoutsInput>
  }

  export type UserUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<UserUncheckedUpdateWithoutLoggedWorkoutsInput, UserUpdateWithoutLoggedWorkoutsInput>
    create: XOR<UserUncheckedCreateWithoutLoggedWorkoutsInput, UserCreateWithoutLoggedWorkoutsInput>
  }

  export type UserUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutTypeUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<WorkoutTypeUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutTypeUpdateWithoutLoggedWorkoutsInput>
    create: XOR<WorkoutTypeUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutTypeCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutTypeUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
    workouts?: WorkoutUpdateManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
    workouts?: WorkoutUncheckedUpdateManyWithoutWorkoutTypeInput
  }

  export type WorkoutSectionUpsertWithWhereUniqueWithoutLoggedWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    update: XOR<WorkoutSectionUncheckedUpdateWithoutLoggedWorkoutInput, WorkoutSectionUpdateWithoutLoggedWorkoutInput>
    create: XOR<WorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput, WorkoutSectionCreateWithoutLoggedWorkoutInput>
  }

  export type WorkoutSectionUpdateWithWhereUniqueWithoutLoggedWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    data: XOR<WorkoutSectionUncheckedUpdateWithoutLoggedWorkoutInput, WorkoutSectionUpdateWithoutLoggedWorkoutInput>
  }

  export type WorkoutSectionUpdateManyWithWhereWithoutLoggedWorkoutInput = {
    where: WorkoutSectionScalarWhereInput
    data: XOR<WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionsInput, WorkoutSectionUpdateManyMutationInput>
  }

  export type WorkoutSectionScalarWhereInput = {
    AND?: Enumerable<WorkoutSectionScalarWhereInput>
    OR?: Enumerable<WorkoutSectionScalarWhereInput>
    NOT?: Enumerable<WorkoutSectionScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    sortPosition?: IntFilter | number
    notes?: StringNullableFilter | string | null
    timecap?: IntNullableFilter | number | null
    duration?: IntNullableFilter | number | null
    rounds?: IntFilter | number
    workoutId?: StringNullableFilter | string | null
    loggedWorkoutId?: StringNullableFilter | string | null
  }

  export type WorkoutUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<WorkoutUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutUpdateWithoutLoggedWorkoutsInput>
    create: XOR<WorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneWithoutWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type ScheduledWorkoutUpsertWithoutLoggedWorkoutInput = {
    update: XOR<ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput, ScheduledWorkoutUpdateWithoutLoggedWorkoutInput>
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput, ScheduledWorkoutCreateWithoutLoggedWorkoutInput>
  }

  export type ScheduledWorkoutUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    gymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GymProfileUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<GymProfileUncheckedUpdateWithoutLoggedWorkoutsInput, GymProfileUpdateWithoutLoggedWorkoutsInput>
    create: XOR<GymProfileUncheckedCreateWithoutLoggedWorkoutsInput, GymProfileCreateWithoutLoggedWorkoutsInput>
  }

  export type GymProfileUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutGymProfilesInput
    availableEquipments?: EquipmentUpdateManyWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type WorkoutProgramEnrolmentUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<WorkoutProgramEnrolmentUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutProgramEnrolmentUpdateWithoutLoggedWorkoutsInput>
    create: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramEnrolmentCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutProgramEnrolmentUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutEnrolmentsInput
    user?: UserUpdateOneRequiredWithoutWorkoutProgramEnrolmentsInput
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramWorkoutUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<WorkoutProgramWorkoutUncheckedUpdateWithoutLoggedWorkoutsInput, WorkoutProgramWorkoutUpdateWithoutLoggedWorkoutsInput>
    create: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutLoggedWorkoutsInput, WorkoutProgramWorkoutCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutProgramWorkoutUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput
    workout?: WorkoutUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput
  }

  export type WorkoutProgramWorkoutUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    workoutId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateWithoutCustomMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCustomMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCustomMovesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutCustomMovesInput, UserCreateWithoutCustomMovesInput>
  }

  export type MoveTypeCreateWithoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    imageUrl: string
  }

  export type MoveTypeUncheckedCreateWithoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    imageUrl: string
  }

  export type MoveTypeCreateOrConnectWithoutMovesInput = {
    where: MoveTypeWhereUniqueInput
    create: XOR<MoveTypeUncheckedCreateWithoutMovesInput, MoveTypeCreateWithoutMovesInput>
  }

  export type EquipmentCreateWithoutRequiredForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    selectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileCreateNestedManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutRequiredForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutSelectedEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutRequiredForMovesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentUncheckedCreateWithoutRequiredForMovesInput, EquipmentCreateWithoutRequiredForMovesInput>
  }

  export type EquipmentCreateWithoutSelectableForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    requiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileCreateNestedManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutSelectableForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutSelectedEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutSelectableForMovesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentUncheckedCreateWithoutSelectableForMovesInput, EquipmentCreateWithoutSelectableForMovesInput>
  }

  export type MoveProfileCreateWithoutRequiredMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    user: UserCreateNestedOneWithoutMoveProfilesInput
    excludedMoves?: MoveCreateNestedManyWithoutExcludedForMoveProfilesInput
  }

  export type MoveProfileUncheckedCreateWithoutRequiredMovesInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type MoveProfileCreateOrConnectWithoutRequiredMovesInput = {
    where: MoveProfileWhereUniqueInput
    create: XOR<MoveProfileUncheckedCreateWithoutRequiredMovesInput, MoveProfileCreateWithoutRequiredMovesInput>
  }

  export type MoveProfileCreateWithoutExcludedMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    user: UserCreateNestedOneWithoutMoveProfilesInput
    requiredMoves?: MoveCreateNestedManyWithoutRequiredForMoveProfilesInput
  }

  export type MoveProfileUncheckedCreateWithoutExcludedMovesInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type MoveProfileCreateOrConnectWithoutExcludedMovesInput = {
    where: MoveProfileWhereUniqueInput
    create: XOR<MoveProfileUncheckedCreateWithoutExcludedMovesInput, MoveProfileCreateWithoutExcludedMovesInput>
  }

  export type WorkoutMoveCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    selectedEquipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
    workoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    selectedEquipmentId?: string | null
    workoutSectionId: string
  }

  export type WorkoutMoveCreateOrConnectWithoutMoveInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveUncheckedCreateWithoutMoveInput, WorkoutMoveCreateWithoutMoveInput>
  }

  export type BodyAreaMoveScoreCreateWithoutMoveInput = {
    createdAt?: Date | string
    score?: number
    bodyArea: BodyAreaCreateNestedOneWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedCreateWithoutMoveInput = {
    createdAt?: Date | string
    bodyAreaId: string
    score?: number
  }

  export type BodyAreaMoveScoreCreateOrConnectWithoutMoveInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    create: XOR<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput, BodyAreaMoveScoreCreateWithoutMoveInput>
  }

  export type UserBenchmarkCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    createdBy: UserCreateNestedOneWithoutUserBenchmarksInput
    equipment?: EquipmentCreateNestedManyWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    createdById: string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    entries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateOrConnectWithoutMoveInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkUncheckedCreateWithoutMoveInput, UserBenchmarkCreateWithoutMoveInput>
  }

  export type UserUpsertWithoutCustomMovesInput = {
    update: XOR<UserUncheckedUpdateWithoutCustomMovesInput, UserUpdateWithoutCustomMovesInput>
    create: XOR<UserUncheckedCreateWithoutCustomMovesInput, UserCreateWithoutCustomMovesInput>
  }

  export type UserUpdateWithoutCustomMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutCustomMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type MoveTypeUpsertWithoutMovesInput = {
    update: XOR<MoveTypeUncheckedUpdateWithoutMovesInput, MoveTypeUpdateWithoutMovesInput>
    create: XOR<MoveTypeUncheckedCreateWithoutMovesInput, MoveTypeCreateWithoutMovesInput>
  }

  export type MoveTypeUpdateWithoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
  }

  export type MoveTypeUncheckedUpdateWithoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentUpsertWithWhereUniqueWithoutRequiredForMovesInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUncheckedUpdateWithoutRequiredForMovesInput, EquipmentUpdateWithoutRequiredForMovesInput>
    create: XOR<EquipmentUncheckedCreateWithoutRequiredForMovesInput, EquipmentCreateWithoutRequiredForMovesInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutRequiredForMovesInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUncheckedUpdateWithoutRequiredForMovesInput, EquipmentUpdateWithoutRequiredForMovesInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutRequiredForMovesInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUncheckedUpdateManyWithoutRequiredEquipmentsInput, EquipmentUpdateManyMutationInput>
  }

  export type EquipmentUpsertWithWhereUniqueWithoutSelectableForMovesInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUncheckedUpdateWithoutSelectableForMovesInput, EquipmentUpdateWithoutSelectableForMovesInput>
    create: XOR<EquipmentUncheckedCreateWithoutSelectableForMovesInput, EquipmentCreateWithoutSelectableForMovesInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutSelectableForMovesInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUncheckedUpdateWithoutSelectableForMovesInput, EquipmentUpdateWithoutSelectableForMovesInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutSelectableForMovesInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUncheckedUpdateManyWithoutSelectableEquipmentsInput, EquipmentUpdateManyMutationInput>
  }

  export type MoveProfileUpsertWithWhereUniqueWithoutRequiredMovesInput = {
    where: MoveProfileWhereUniqueInput
    update: XOR<MoveProfileUncheckedUpdateWithoutRequiredMovesInput, MoveProfileUpdateWithoutRequiredMovesInput>
    create: XOR<MoveProfileUncheckedCreateWithoutRequiredMovesInput, MoveProfileCreateWithoutRequiredMovesInput>
  }

  export type MoveProfileUpdateWithWhereUniqueWithoutRequiredMovesInput = {
    where: MoveProfileWhereUniqueInput
    data: XOR<MoveProfileUncheckedUpdateWithoutRequiredMovesInput, MoveProfileUpdateWithoutRequiredMovesInput>
  }

  export type MoveProfileUpdateManyWithWhereWithoutRequiredMovesInput = {
    where: MoveProfileScalarWhereInput
    data: XOR<MoveProfileUncheckedUpdateManyWithoutRequiredForMoveProfilesInput, MoveProfileUpdateManyMutationInput>
  }

  export type MoveProfileScalarWhereInput = {
    AND?: Enumerable<MoveProfileScalarWhereInput>
    OR?: Enumerable<MoveProfileScalarWhereInput>
    NOT?: Enumerable<MoveProfileScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
  }

  export type MoveProfileUpsertWithWhereUniqueWithoutExcludedMovesInput = {
    where: MoveProfileWhereUniqueInput
    update: XOR<MoveProfileUncheckedUpdateWithoutExcludedMovesInput, MoveProfileUpdateWithoutExcludedMovesInput>
    create: XOR<MoveProfileUncheckedCreateWithoutExcludedMovesInput, MoveProfileCreateWithoutExcludedMovesInput>
  }

  export type MoveProfileUpdateWithWhereUniqueWithoutExcludedMovesInput = {
    where: MoveProfileWhereUniqueInput
    data: XOR<MoveProfileUncheckedUpdateWithoutExcludedMovesInput, MoveProfileUpdateWithoutExcludedMovesInput>
  }

  export type MoveProfileUpdateManyWithWhereWithoutExcludedMovesInput = {
    where: MoveProfileScalarWhereInput
    data: XOR<MoveProfileUncheckedUpdateManyWithoutExcludedForMoveProfilesInput, MoveProfileUpdateManyMutationInput>
  }

  export type WorkoutMoveUpsertWithWhereUniqueWithoutMoveInput = {
    where: WorkoutMoveWhereUniqueInput
    update: XOR<WorkoutMoveUncheckedUpdateWithoutMoveInput, WorkoutMoveUpdateWithoutMoveInput>
    create: XOR<WorkoutMoveUncheckedCreateWithoutMoveInput, WorkoutMoveCreateWithoutMoveInput>
  }

  export type WorkoutMoveUpdateWithWhereUniqueWithoutMoveInput = {
    where: WorkoutMoveWhereUniqueInput
    data: XOR<WorkoutMoveUncheckedUpdateWithoutMoveInput, WorkoutMoveUpdateWithoutMoveInput>
  }

  export type WorkoutMoveUpdateManyWithWhereWithoutMoveInput = {
    where: WorkoutMoveScalarWhereInput
    data: XOR<WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput, WorkoutMoveUpdateManyMutationInput>
  }

  export type BodyAreaMoveScoreUpsertWithWhereUniqueWithoutMoveInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    update: XOR<BodyAreaMoveScoreUncheckedUpdateWithoutMoveInput, BodyAreaMoveScoreUpdateWithoutMoveInput>
    create: XOR<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput, BodyAreaMoveScoreCreateWithoutMoveInput>
  }

  export type BodyAreaMoveScoreUpdateWithWhereUniqueWithoutMoveInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    data: XOR<BodyAreaMoveScoreUncheckedUpdateWithoutMoveInput, BodyAreaMoveScoreUpdateWithoutMoveInput>
  }

  export type BodyAreaMoveScoreUpdateManyWithWhereWithoutMoveInput = {
    where: BodyAreaMoveScoreScalarWhereInput
    data: XOR<BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaMoveScoresInput, BodyAreaMoveScoreUpdateManyMutationInput>
  }

  export type UserBenchmarkUpsertWithWhereUniqueWithoutMoveInput = {
    where: UserBenchmarkWhereUniqueInput
    update: XOR<UserBenchmarkUncheckedUpdateWithoutMoveInput, UserBenchmarkUpdateWithoutMoveInput>
    create: XOR<UserBenchmarkUncheckedCreateWithoutMoveInput, UserBenchmarkCreateWithoutMoveInput>
  }

  export type UserBenchmarkUpdateWithWhereUniqueWithoutMoveInput = {
    where: UserBenchmarkWhereUniqueInput
    data: XOR<UserBenchmarkUncheckedUpdateWithoutMoveInput, UserBenchmarkUpdateWithoutMoveInput>
  }

  export type UserBenchmarkUpdateManyWithWhereWithoutMoveInput = {
    where: UserBenchmarkScalarWhereInput
    data: XOR<UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput, UserBenchmarkUpdateManyMutationInput>
  }

  export type UserCreateWithoutMoveProfilesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutMoveProfilesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutMoveProfilesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutMoveProfilesInput, UserCreateWithoutMoveProfilesInput>
  }

  export type MoveCreateWithoutRequiredForMoveProfilesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutRequiredForMoveProfilesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutRequiredForMoveProfilesInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutRequiredForMoveProfilesInput, MoveCreateWithoutRequiredForMoveProfilesInput>
  }

  export type MoveCreateWithoutExcludedForMoveProfilesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutExcludedForMoveProfilesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutExcludedForMoveProfilesInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutExcludedForMoveProfilesInput, MoveCreateWithoutExcludedForMoveProfilesInput>
  }

  export type UserUpsertWithoutMoveProfilesInput = {
    update: XOR<UserUncheckedUpdateWithoutMoveProfilesInput, UserUpdateWithoutMoveProfilesInput>
    create: XOR<UserUncheckedCreateWithoutMoveProfilesInput, UserCreateWithoutMoveProfilesInput>
  }

  export type UserUpdateWithoutMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type MoveUpsertWithWhereUniqueWithoutRequiredForMoveProfilesInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUncheckedUpdateWithoutRequiredForMoveProfilesInput, MoveUpdateWithoutRequiredForMoveProfilesInput>
    create: XOR<MoveUncheckedCreateWithoutRequiredForMoveProfilesInput, MoveCreateWithoutRequiredForMoveProfilesInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutRequiredForMoveProfilesInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUncheckedUpdateWithoutRequiredForMoveProfilesInput, MoveUpdateWithoutRequiredForMoveProfilesInput>
  }

  export type MoveUpdateManyWithWhereWithoutRequiredForMoveProfilesInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUncheckedUpdateManyWithoutRequiredMovesInput, MoveUpdateManyMutationInput>
  }

  export type MoveUpsertWithWhereUniqueWithoutExcludedForMoveProfilesInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUncheckedUpdateWithoutExcludedForMoveProfilesInput, MoveUpdateWithoutExcludedForMoveProfilesInput>
    create: XOR<MoveUncheckedCreateWithoutExcludedForMoveProfilesInput, MoveCreateWithoutExcludedForMoveProfilesInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutExcludedForMoveProfilesInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUncheckedUpdateWithoutExcludedForMoveProfilesInput, MoveUpdateWithoutExcludedForMoveProfilesInput>
  }

  export type MoveUpdateManyWithWhereWithoutExcludedForMoveProfilesInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUncheckedUpdateManyWithoutExcludedMovesInput, MoveUpdateManyMutationInput>
  }

  export type MoveCreateWithoutMoveTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutMoveTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutMoveTypeInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutMoveTypeInput, MoveCreateWithoutMoveTypeInput>
  }

  export type MoveUpsertWithWhereUniqueWithoutMoveTypeInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUncheckedUpdateWithoutMoveTypeInput, MoveUpdateWithoutMoveTypeInput>
    create: XOR<MoveUncheckedCreateWithoutMoveTypeInput, MoveCreateWithoutMoveTypeInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutMoveTypeInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUncheckedUpdateWithoutMoveTypeInput, MoveUpdateWithoutMoveTypeInput>
  }

  export type MoveUpdateManyWithWhereWithoutMoveTypeInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUncheckedUpdateManyWithoutMovesInput, MoveUpdateManyMutationInput>
  }

  export type UserCreateWithoutProgressJournalsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProgressJournalsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProgressJournalsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutProgressJournalsInput, UserCreateWithoutProgressJournalsInput>
  }

  export type ProgressJournalEntryCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    voiceNoteUrl?: string | null
    bodyweight?: number | null
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUrls?: ProgressJournalEntryCreateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    voiceNoteUrl?: string | null
    bodyweight?: number | null
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUrls?: ProgressJournalEntryCreateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput = {
    where: ProgressJournalEntryWhereUniqueInput
    create: XOR<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput, ProgressJournalEntryCreateWithoutProgressJournalInput>
  }

  export type ProgressJournalGoalCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
  }

  export type ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput = {
    where: ProgressJournalGoalWhereUniqueInput
    create: XOR<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput, ProgressJournalGoalCreateWithoutProgressJournalInput>
  }

  export type UserUpsertWithoutProgressJournalsInput = {
    update: XOR<UserUncheckedUpdateWithoutProgressJournalsInput, UserUpdateWithoutProgressJournalsInput>
    create: XOR<UserUncheckedCreateWithoutProgressJournalsInput, UserCreateWithoutProgressJournalsInput>
  }

  export type UserUpdateWithoutProgressJournalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutProgressJournalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type ProgressJournalEntryUpsertWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalEntryWhereUniqueInput
    update: XOR<ProgressJournalEntryUncheckedUpdateWithoutProgressJournalInput, ProgressJournalEntryUpdateWithoutProgressJournalInput>
    create: XOR<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput, ProgressJournalEntryCreateWithoutProgressJournalInput>
  }

  export type ProgressJournalEntryUpdateWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalEntryWhereUniqueInput
    data: XOR<ProgressJournalEntryUncheckedUpdateWithoutProgressJournalInput, ProgressJournalEntryUpdateWithoutProgressJournalInput>
  }

  export type ProgressJournalEntryUpdateManyWithWhereWithoutProgressJournalInput = {
    where: ProgressJournalEntryScalarWhereInput
    data: XOR<ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalEntriesInput, ProgressJournalEntryUpdateManyMutationInput>
  }

  export type ProgressJournalEntryScalarWhereInput = {
    AND?: Enumerable<ProgressJournalEntryScalarWhereInput>
    OR?: Enumerable<ProgressJournalEntryScalarWhereInput>
    NOT?: Enumerable<ProgressJournalEntryScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    notes?: StringNullableFilter | string | null
    voiceNoteUrl?: StringNullableFilter | string | null
    bodyweight?: FloatNullableFilter | number | null
    moodScore?: FloatNullableFilter | number | null
    energyScore?: FloatNullableFilter | number | null
    stressScore?: FloatNullableFilter | number | null
    motivationScore?: FloatNullableFilter | number | null
    progressPhotoUrls?: StringNullableListFilter
    progressJournalId?: StringFilter | string
  }

  export type ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalGoalWhereUniqueInput
    update: XOR<ProgressJournalGoalUncheckedUpdateWithoutProgressJournalInput, ProgressJournalGoalUpdateWithoutProgressJournalInput>
    create: XOR<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput, ProgressJournalGoalCreateWithoutProgressJournalInput>
  }

  export type ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalGoalWhereUniqueInput
    data: XOR<ProgressJournalGoalUncheckedUpdateWithoutProgressJournalInput, ProgressJournalGoalUpdateWithoutProgressJournalInput>
  }

  export type ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalInput = {
    where: ProgressJournalGoalScalarWhereInput
    data: XOR<ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalGoalsInput, ProgressJournalGoalUpdateManyMutationInput>
  }

  export type ProgressJournalGoalScalarWhereInput = {
    AND?: Enumerable<ProgressJournalGoalScalarWhereInput>
    OR?: Enumerable<ProgressJournalGoalScalarWhereInput>
    NOT?: Enumerable<ProgressJournalGoalScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    deadline?: DateTimeNullableFilter | Date | string | null
    completedDate?: DateTimeNullableFilter | Date | string | null
    progressJournalId?: StringFilter | string
  }

  export type ProgressJournalCreateWithoutProgressJournalEntriesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    user: UserCreateNestedOneWithoutProgressJournalsInput
    progressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    progressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalCreateOrConnectWithoutProgressJournalEntriesInput = {
    where: ProgressJournalWhereUniqueInput
    create: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput, ProgressJournalCreateWithoutProgressJournalEntriesInput>
  }

  export type ProgressJournalUpsertWithoutProgressJournalEntriesInput = {
    update: XOR<ProgressJournalUncheckedUpdateWithoutProgressJournalEntriesInput, ProgressJournalUpdateWithoutProgressJournalEntriesInput>
    create: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput, ProgressJournalCreateWithoutProgressJournalEntriesInput>
  }

  export type ProgressJournalUpdateWithoutProgressJournalEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutProgressJournalsInput
    progressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateWithoutProgressJournalEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    progressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    user: UserCreateNestedOneWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    userId: string
  }

  export type ProgressJournalGoalTagCreateOrConnectWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    create: XOR<ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    user: UserCreateNestedOneWithoutProgressJournalsInput
    progressJournalEntries?: ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    progressJournalEntries?: ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalCreateOrConnectWithoutProgressJournalGoalsInput = {
    where: ProgressJournalWhereUniqueInput
    create: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput, ProgressJournalCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalTagUpsertWithWhereUniqueWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    update: XOR<ProgressJournalGoalTagUncheckedUpdateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagUpdateWithoutProgressJournalGoalsInput>
    create: XOR<ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalTagUpdateWithWhereUniqueWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    data: XOR<ProgressJournalGoalTagUncheckedUpdateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagUpdateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalTagUpdateManyWithWhereWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagScalarWhereInput
    data: XOR<ProgressJournalGoalTagUncheckedUpdateManyWithoutProgressJournalGoalTagsInput, ProgressJournalGoalTagUpdateManyMutationInput>
  }

  export type ProgressJournalGoalTagScalarWhereInput = {
    AND?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
    OR?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
    NOT?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    tag?: StringFilter | string
    hexColor?: StringFilter | string
    userId?: StringFilter | string
  }

  export type ProgressJournalUpsertWithoutProgressJournalGoalsInput = {
    update: XOR<ProgressJournalUncheckedUpdateWithoutProgressJournalGoalsInput, ProgressJournalUpdateWithoutProgressJournalGoalsInput>
    create: XOR<ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput, ProgressJournalCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutProgressJournalsInput
    progressJournalEntries?: ProgressJournalEntryUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    progressJournalEntries?: ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type UserCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProgressJournalGoalTagsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutProgressJournalGoalTagsInput, UserCreateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalId: string
  }

  export type ProgressJournalGoalCreateOrConnectWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalWhereUniqueInput
    create: XOR<ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput>
  }

  export type UserUpsertWithoutProgressJournalGoalTagsInput = {
    update: XOR<UserUncheckedUpdateWithoutProgressJournalGoalTagsInput, UserUpdateWithoutProgressJournalGoalTagsInput>
    create: XOR<UserUncheckedCreateWithoutProgressJournalGoalTagsInput, UserCreateWithoutProgressJournalGoalTagsInput>
  }

  export type UserUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
  }

  export type ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalWhereUniqueInput
    update: XOR<ProgressJournalGoalUncheckedUpdateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalUpdateWithoutProgressJournalGoalTagsInput>
    create: XOR<ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalWhereUniqueInput
    data: XOR<ProgressJournalGoalUncheckedUpdateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalUpdateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalScalarWhereInput
    data: XOR<ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalGoalsInput, ProgressJournalGoalUpdateManyMutationInput>
  }

  export type UserCreateWithoutScheduledWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutScheduledWorkoutsInput, UserCreateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    createdBy?: UserCreateNestedOneWithoutWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    createdById?: string | null
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutTypeId: string
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutUncheckedCreateWithoutScheduledWorkoutsInput, WorkoutCreateWithoutScheduledWorkoutsInput>
  }

  export type LoggedWorkoutCreateWithoutScheduledWorkoutInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutProgramWorkoutId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutScheduledWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput, LoggedWorkoutCreateWithoutScheduledWorkoutInput>
  }

  export type GymProfileCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    user: UserCreateNestedOneWithoutGymProfilesInput
    availableEquipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileUncheckedCreateWithoutScheduledWorkoutsInput, GymProfileCreateWithoutScheduledWorkoutsInput>
  }

  export type UserUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<UserUncheckedUpdateWithoutScheduledWorkoutsInput, UserUpdateWithoutScheduledWorkoutsInput>
    create: XOR<UserUncheckedCreateWithoutScheduledWorkoutsInput, UserCreateWithoutScheduledWorkoutsInput>
  }

  export type UserUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<WorkoutUncheckedUpdateWithoutScheduledWorkoutsInput, WorkoutUpdateWithoutScheduledWorkoutsInput>
    create: XOR<WorkoutUncheckedCreateWithoutScheduledWorkoutsInput, WorkoutCreateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneWithoutWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type LoggedWorkoutUpsertWithoutScheduledWorkoutInput = {
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutScheduledWorkoutInput, LoggedWorkoutUpdateWithoutScheduledWorkoutInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput, LoggedWorkoutCreateWithoutScheduledWorkoutInput>
  }

  export type LoggedWorkoutUpdateWithoutScheduledWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutScheduledWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
  }

  export type GymProfileUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<GymProfileUncheckedUpdateWithoutScheduledWorkoutsInput, GymProfileUpdateWithoutScheduledWorkoutsInput>
    create: XOR<GymProfileUncheckedCreateWithoutScheduledWorkoutsInput, GymProfileCreateWithoutScheduledWorkoutsInput>
  }

  export type GymProfileUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutGymProfilesInput
    availableEquipments?: EquipmentUpdateManyWithoutGymProfilesInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type UserCreateWithoutTrainerAccountInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTrainerAccountInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTrainerAccountInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutTrainerAccountInput, UserCreateWithoutTrainerAccountInput>
  }

  export type UserUpsertWithoutTrainerAccountInput = {
    update: XOR<UserUncheckedUpdateWithoutTrainerAccountInput, UserUpdateWithoutTrainerAccountInput>
    create: XOR<UserUncheckedCreateWithoutTrainerAccountInput, UserCreateWithoutTrainerAccountInput>
  }

  export type UserUpdateWithoutTrainerAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutTrainerAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type UserCreateWithoutFollowingInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFollowingInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFollowingInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutFollowingInput, UserCreateWithoutFollowingInput>
  }

  export type UserCreateWithoutFollowedByInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFollowedByInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFollowedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutFollowedByInput, UserCreateWithoutFollowedByInput>
  }

  export type MoveCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutCreatedByInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutCreatedByInput, MoveCreateWithoutCreatedByInput>
  }

  export type WorkoutCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutType: WorkoutTypeCreateNestedOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutTypeId: string
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutCreatedByInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutUncheckedCreateWithoutCreatedByInput, WorkoutCreateWithoutCreatedByInput>
  }

  export type ScheduledWorkoutCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    scheduledAt?: Date | string
    workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    scheduledAt?: Date | string
    workoutId?: string | null
    loggedWorkoutId?: string | null
    gymProfileId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutUserInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutUserInput, ScheduledWorkoutCreateWithoutUserInput>
  }

  export type LoggedWorkoutCreateWithoutCompletedByInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutCompletedByInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutProgramWorkoutId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutCompletedByInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutCompletedByInput, LoggedWorkoutCreateWithoutCompletedByInput>
  }

  export type GymProfileCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    availableEquipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    postcode?: string | null
    bodyweightOnly?: boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutUserInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileUncheckedCreateWithoutUserInput, GymProfileCreateWithoutUserInput>
  }

  export type MoveProfileCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    requiredMoves?: MoveCreateNestedManyWithoutRequiredForMoveProfilesInput
    excludedMoves?: MoveCreateNestedManyWithoutExcludedForMoveProfilesInput
  }

  export type MoveProfileUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type MoveProfileCreateOrConnectWithoutUserInput = {
    where: MoveProfileWhereUniqueInput
    create: XOR<MoveProfileUncheckedCreateWithoutUserInput, MoveProfileCreateWithoutUserInput>
  }

  export type WorkoutProgramCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    enrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    enrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramCreateOrConnectWithoutCreatedByInput = {
    where: WorkoutProgramWhereUniqueInput
    create: XOR<WorkoutProgramUncheckedCreateWithoutCreatedByInput, WorkoutProgramCreateWithoutCreatedByInput>
  }

  export type WorkoutProgramEnrolmentCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutEnrolmentsInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    workoutProgramId: string
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentCreateOrConnectWithoutUserInput = {
    where: WorkoutProgramEnrolmentWhereUniqueInput
    create: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutUserInput, WorkoutProgramEnrolmentCreateWithoutUserInput>
  }

  export type WorkoutProgramReviewCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutWorkoutProgramReviewsInput
  }

  export type WorkoutProgramReviewUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    workoutProgramId: string
  }

  export type WorkoutProgramReviewCreateOrConnectWithoutUserInput = {
    where: WorkoutProgramReviewWhereUniqueInput
    create: XOR<WorkoutProgramReviewUncheckedCreateWithoutUserInput, WorkoutProgramReviewCreateWithoutUserInput>
  }

  export type UserBenchmarkCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    equipment?: EquipmentCreateNestedManyWithoutUserBenchmarksInput
    move: MoveCreateNestedOneWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedCreateWithoutCreatedByInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    moveId: string
    entries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateOrConnectWithoutCreatedByInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkUncheckedCreateWithoutCreatedByInput, UserBenchmarkCreateWithoutCreatedByInput>
  }

  export type UserCollectionCreateWithoutOwnerInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    workouts?: WorkoutCreateNestedManyWithoutUserCollectionsInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedCreateWithoutOwnerInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type UserCollectionCreateOrConnectWithoutOwnerInput = {
    where: UserCollectionWhereUniqueInput
    create: XOR<UserCollectionUncheckedCreateWithoutOwnerInput, UserCollectionCreateWithoutOwnerInput>
  }

  export type TrainerAccountCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
  }

  export type TrainerAccountUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
  }

  export type TrainerAccountCreateOrConnectWithoutUserInput = {
    where: TrainerAccountWhereUniqueInput
    create: XOR<TrainerAccountUncheckedCreateWithoutUserInput, TrainerAccountCreateWithoutUserInput>
  }

  export type ProgressJournalCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    progressJournalEntries?: ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    progressJournalEntries?: ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalCreateOrConnectWithoutUserInput = {
    where: ProgressJournalWhereUniqueInput
    create: XOR<ProgressJournalUncheckedCreateWithoutUserInput, ProgressJournalCreateWithoutUserInput>
  }

  export type ProgressJournalGoalTagCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    progressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
  }

  export type ProgressJournalGoalTagCreateOrConnectWithoutUserInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    create: XOR<ProgressJournalGoalTagUncheckedCreateWithoutUserInput, ProgressJournalGoalTagCreateWithoutUserInput>
  }

  export type UserUpsertWithWhereUniqueWithoutFollowingInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUncheckedUpdateWithoutFollowingInput, UserUpdateWithoutFollowingInput>
    create: XOR<UserUncheckedCreateWithoutFollowingInput, UserCreateWithoutFollowingInput>
  }

  export type UserUpdateWithWhereUniqueWithoutFollowingInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUncheckedUpdateWithoutFollowingInput, UserUpdateWithoutFollowingInput>
  }

  export type UserUpdateManyWithWhereWithoutFollowingInput = {
    where: UserScalarWhereInput
    data: XOR<UserUncheckedUpdateManyWithoutFollowedByInput, UserUpdateManyMutationInput>
  }

  export type UserScalarWhereInput = {
    AND?: Enumerable<UserScalarWhereInput>
    OR?: Enumerable<UserScalarWhereInput>
    NOT?: Enumerable<UserScalarWhereInput>
    id?: StringFilter | string
    firebaseUid?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    hasOnboarded?: BoolFilter | boolean
    userProfileScope?: EnumUserProfileScopeFilter | UserProfileScope
    avatarUrl?: StringNullableFilter | string | null
    introVideoUrl?: StringNullableFilter | string | null
    introVideoThumbUrl?: StringNullableFilter | string | null
    coverImageUrl?: StringNullableFilter | string | null
    displayName?: StringNullableFilter | string | null
    firstname?: StringNullableFilter | string | null
    lastname?: StringNullableFilter | string | null
    themePreference?: EnumThemePreferenceFilter | ThemePreference
    bio?: StringNullableFilter | string | null
    tagline?: StringNullableFilter | string | null
    birthdate?: DateTimeNullableFilter | Date | string | null
    gender?: EnumGenderNullableFilter | Gender | null
    height?: FloatNullableFilter | number | null
    weight?: FloatNullableFilter | number | null
    townCity?: StringNullableFilter | string | null
    countryCode?: StringNullableFilter | string | null
    instagramUrl?: StringNullableFilter | string | null
    tiktokUrl?: StringNullableFilter | string | null
    youtubeUrl?: StringNullableFilter | string | null
    snapUrl?: StringNullableFilter | string | null
    linkedinUrl?: StringNullableFilter | string | null
    unitSystem?: EnumUnitSystemFilter | UnitSystem
  }

  export type UserUpsertWithWhereUniqueWithoutFollowedByInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUncheckedUpdateWithoutFollowedByInput, UserUpdateWithoutFollowedByInput>
    create: XOR<UserUncheckedCreateWithoutFollowedByInput, UserCreateWithoutFollowedByInput>
  }

  export type UserUpdateWithWhereUniqueWithoutFollowedByInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUncheckedUpdateWithoutFollowedByInput, UserUpdateWithoutFollowedByInput>
  }

  export type UserUpdateManyWithWhereWithoutFollowedByInput = {
    where: UserScalarWhereInput
    data: XOR<UserUncheckedUpdateManyWithoutFollowingInput, UserUpdateManyMutationInput>
  }

  export type MoveUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUncheckedUpdateWithoutCreatedByInput, MoveUpdateWithoutCreatedByInput>
    create: XOR<MoveUncheckedCreateWithoutCreatedByInput, MoveCreateWithoutCreatedByInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUncheckedUpdateWithoutCreatedByInput, MoveUpdateWithoutCreatedByInput>
  }

  export type MoveUpdateManyWithWhereWithoutCreatedByInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUncheckedUpdateManyWithoutCustomMovesInput, MoveUpdateManyMutationInput>
  }

  export type WorkoutUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: WorkoutWhereUniqueInput
    update: XOR<WorkoutUncheckedUpdateWithoutCreatedByInput, WorkoutUpdateWithoutCreatedByInput>
    create: XOR<WorkoutUncheckedCreateWithoutCreatedByInput, WorkoutCreateWithoutCreatedByInput>
  }

  export type WorkoutUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: WorkoutWhereUniqueInput
    data: XOR<WorkoutUncheckedUpdateWithoutCreatedByInput, WorkoutUpdateWithoutCreatedByInput>
  }

  export type WorkoutUpdateManyWithWhereWithoutCreatedByInput = {
    where: WorkoutScalarWhereInput
    data: XOR<WorkoutUncheckedUpdateManyWithoutWorkoutsInput, WorkoutUpdateManyMutationInput>
  }

  export type WorkoutScalarWhereInput = {
    AND?: Enumerable<WorkoutScalarWhereInput>
    OR?: Enumerable<WorkoutScalarWhereInput>
    NOT?: Enumerable<WorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    createdById?: StringNullableFilter | string | null
    name?: StringFilter | string
    summary?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    demoVideoUrl?: StringNullableFilter | string | null
    demoVideoThumbUrl?: StringNullableFilter | string | null
    youtubeVideoUrl?: StringNullableFilter | string | null
    spotifyAudio?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    timecap?: IntNullableFilter | number | null
    builderData?: JsonNullableFilter
    difficultyLevel?: IntFilter | number
    scope?: EnumContentAccessScopeFilter | ContentAccessScope
    workoutTypeId?: StringFilter | string
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutUserInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUncheckedUpdateWithoutUserInput, ScheduledWorkoutUpdateWithoutUserInput>
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutUserInput, ScheduledWorkoutCreateWithoutUserInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutUserInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUncheckedUpdateWithoutUserInput, ScheduledWorkoutUpdateWithoutUserInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutUserInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput, ScheduledWorkoutUpdateManyMutationInput>
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutCompletedByInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutCompletedByInput, LoggedWorkoutUpdateWithoutCompletedByInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutCompletedByInput, LoggedWorkoutCreateWithoutCompletedByInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutCompletedByInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUncheckedUpdateWithoutCompletedByInput, LoggedWorkoutUpdateWithoutCompletedByInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutCompletedByInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput, LoggedWorkoutUpdateManyMutationInput>
  }

  export type GymProfileUpsertWithWhereUniqueWithoutUserInput = {
    where: GymProfileWhereUniqueInput
    update: XOR<GymProfileUncheckedUpdateWithoutUserInput, GymProfileUpdateWithoutUserInput>
    create: XOR<GymProfileUncheckedCreateWithoutUserInput, GymProfileCreateWithoutUserInput>
  }

  export type GymProfileUpdateWithWhereUniqueWithoutUserInput = {
    where: GymProfileWhereUniqueInput
    data: XOR<GymProfileUncheckedUpdateWithoutUserInput, GymProfileUpdateWithoutUserInput>
  }

  export type GymProfileUpdateManyWithWhereWithoutUserInput = {
    where: GymProfileScalarWhereInput
    data: XOR<GymProfileUncheckedUpdateManyWithoutGymProfilesInput, GymProfileUpdateManyMutationInput>
  }

  export type MoveProfileUpsertWithWhereUniqueWithoutUserInput = {
    where: MoveProfileWhereUniqueInput
    update: XOR<MoveProfileUncheckedUpdateWithoutUserInput, MoveProfileUpdateWithoutUserInput>
    create: XOR<MoveProfileUncheckedCreateWithoutUserInput, MoveProfileCreateWithoutUserInput>
  }

  export type MoveProfileUpdateWithWhereUniqueWithoutUserInput = {
    where: MoveProfileWhereUniqueInput
    data: XOR<MoveProfileUncheckedUpdateWithoutUserInput, MoveProfileUpdateWithoutUserInput>
  }

  export type MoveProfileUpdateManyWithWhereWithoutUserInput = {
    where: MoveProfileScalarWhereInput
    data: XOR<MoveProfileUncheckedUpdateManyWithoutMoveProfilesInput, MoveProfileUpdateManyMutationInput>
  }

  export type WorkoutProgramUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: WorkoutProgramWhereUniqueInput
    update: XOR<WorkoutProgramUncheckedUpdateWithoutCreatedByInput, WorkoutProgramUpdateWithoutCreatedByInput>
    create: XOR<WorkoutProgramUncheckedCreateWithoutCreatedByInput, WorkoutProgramCreateWithoutCreatedByInput>
  }

  export type WorkoutProgramUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: WorkoutProgramWhereUniqueInput
    data: XOR<WorkoutProgramUncheckedUpdateWithoutCreatedByInput, WorkoutProgramUpdateWithoutCreatedByInput>
  }

  export type WorkoutProgramUpdateManyWithWhereWithoutCreatedByInput = {
    where: WorkoutProgramScalarWhereInput
    data: XOR<WorkoutProgramUncheckedUpdateManyWithoutWorkoutProgramsInput, WorkoutProgramUpdateManyMutationInput>
  }

  export type WorkoutProgramScalarWhereInput = {
    AND?: Enumerable<WorkoutProgramScalarWhereInput>
    OR?: Enumerable<WorkoutProgramScalarWhereInput>
    NOT?: Enumerable<WorkoutProgramScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    videoUrl?: StringNullableFilter | string | null
    videoThumbUrl?: StringNullableFilter | string | null
    youtubeVideoUrl?: StringNullableFilter | string | null
    scope?: EnumContentAccessScopeFilter | ContentAccessScope
    createdById?: StringFilter | string
  }

  export type WorkoutProgramEnrolmentUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutProgramEnrolmentWhereUniqueInput
    update: XOR<WorkoutProgramEnrolmentUncheckedUpdateWithoutUserInput, WorkoutProgramEnrolmentUpdateWithoutUserInput>
    create: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutUserInput, WorkoutProgramEnrolmentCreateWithoutUserInput>
  }

  export type WorkoutProgramEnrolmentUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutProgramEnrolmentWhereUniqueInput
    data: XOR<WorkoutProgramEnrolmentUncheckedUpdateWithoutUserInput, WorkoutProgramEnrolmentUpdateWithoutUserInput>
  }

  export type WorkoutProgramEnrolmentUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutProgramEnrolmentScalarWhereInput
    data: XOR<WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramEnrolmentsInput, WorkoutProgramEnrolmentUpdateManyMutationInput>
  }

  export type WorkoutProgramEnrolmentScalarWhereInput = {
    AND?: Enumerable<WorkoutProgramEnrolmentScalarWhereInput>
    OR?: Enumerable<WorkoutProgramEnrolmentScalarWhereInput>
    NOT?: Enumerable<WorkoutProgramEnrolmentScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    startDate?: DateTimeNullableFilter | Date | string | null
    workoutProgramId?: StringFilter | string
    userId?: StringFilter | string
  }

  export type WorkoutProgramReviewUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutProgramReviewWhereUniqueInput
    update: XOR<WorkoutProgramReviewUncheckedUpdateWithoutUserInput, WorkoutProgramReviewUpdateWithoutUserInput>
    create: XOR<WorkoutProgramReviewUncheckedCreateWithoutUserInput, WorkoutProgramReviewCreateWithoutUserInput>
  }

  export type WorkoutProgramReviewUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutProgramReviewWhereUniqueInput
    data: XOR<WorkoutProgramReviewUncheckedUpdateWithoutUserInput, WorkoutProgramReviewUpdateWithoutUserInput>
  }

  export type WorkoutProgramReviewUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutProgramReviewScalarWhereInput
    data: XOR<WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramReviewsInput, WorkoutProgramReviewUpdateManyMutationInput>
  }

  export type WorkoutProgramReviewScalarWhereInput = {
    AND?: Enumerable<WorkoutProgramReviewScalarWhereInput>
    OR?: Enumerable<WorkoutProgramReviewScalarWhereInput>
    NOT?: Enumerable<WorkoutProgramReviewScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    score?: FloatFilter | number
    comment?: StringNullableFilter | string | null
    workoutProgramId?: StringFilter | string
    userId?: StringFilter | string
  }

  export type UserBenchmarkUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: UserBenchmarkWhereUniqueInput
    update: XOR<UserBenchmarkUncheckedUpdateWithoutCreatedByInput, UserBenchmarkUpdateWithoutCreatedByInput>
    create: XOR<UserBenchmarkUncheckedCreateWithoutCreatedByInput, UserBenchmarkCreateWithoutCreatedByInput>
  }

  export type UserBenchmarkUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: UserBenchmarkWhereUniqueInput
    data: XOR<UserBenchmarkUncheckedUpdateWithoutCreatedByInput, UserBenchmarkUpdateWithoutCreatedByInput>
  }

  export type UserBenchmarkUpdateManyWithWhereWithoutCreatedByInput = {
    where: UserBenchmarkScalarWhereInput
    data: XOR<UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput, UserBenchmarkUpdateManyMutationInput>
  }

  export type UserCollectionUpsertWithWhereUniqueWithoutOwnerInput = {
    where: UserCollectionWhereUniqueInput
    update: XOR<UserCollectionUncheckedUpdateWithoutOwnerInput, UserCollectionUpdateWithoutOwnerInput>
    create: XOR<UserCollectionUncheckedCreateWithoutOwnerInput, UserCollectionCreateWithoutOwnerInput>
  }

  export type UserCollectionUpdateWithWhereUniqueWithoutOwnerInput = {
    where: UserCollectionWhereUniqueInput
    data: XOR<UserCollectionUncheckedUpdateWithoutOwnerInput, UserCollectionUpdateWithoutOwnerInput>
  }

  export type UserCollectionUpdateManyWithWhereWithoutOwnerInput = {
    where: UserCollectionScalarWhereInput
    data: XOR<UserCollectionUncheckedUpdateManyWithoutCollectionsInput, UserCollectionUpdateManyMutationInput>
  }

  export type UserCollectionScalarWhereInput = {
    AND?: Enumerable<UserCollectionScalarWhereInput>
    OR?: Enumerable<UserCollectionScalarWhereInput>
    NOT?: Enumerable<UserCollectionScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
  }

  export type TrainerAccountUpsertWithoutUserInput = {
    update: XOR<TrainerAccountUncheckedUpdateWithoutUserInput, TrainerAccountUpdateWithoutUserInput>
    create: XOR<TrainerAccountUncheckedCreateWithoutUserInput, TrainerAccountCreateWithoutUserInput>
  }

  export type TrainerAccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrainerAccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgressJournalUpsertWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalWhereUniqueInput
    update: XOR<ProgressJournalUncheckedUpdateWithoutUserInput, ProgressJournalUpdateWithoutUserInput>
    create: XOR<ProgressJournalUncheckedCreateWithoutUserInput, ProgressJournalCreateWithoutUserInput>
  }

  export type ProgressJournalUpdateWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalWhereUniqueInput
    data: XOR<ProgressJournalUncheckedUpdateWithoutUserInput, ProgressJournalUpdateWithoutUserInput>
  }

  export type ProgressJournalUpdateManyWithWhereWithoutUserInput = {
    where: ProgressJournalScalarWhereInput
    data: XOR<ProgressJournalUncheckedUpdateManyWithoutProgressJournalsInput, ProgressJournalUpdateManyMutationInput>
  }

  export type ProgressJournalScalarWhereInput = {
    AND?: Enumerable<ProgressJournalScalarWhereInput>
    OR?: Enumerable<ProgressJournalScalarWhereInput>
    NOT?: Enumerable<ProgressJournalScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
  }

  export type ProgressJournalGoalTagUpsertWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    update: XOR<ProgressJournalGoalTagUncheckedUpdateWithoutUserInput, ProgressJournalGoalTagUpdateWithoutUserInput>
    create: XOR<ProgressJournalGoalTagUncheckedCreateWithoutUserInput, ProgressJournalGoalTagCreateWithoutUserInput>
  }

  export type ProgressJournalGoalTagUpdateWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    data: XOR<ProgressJournalGoalTagUncheckedUpdateWithoutUserInput, ProgressJournalGoalTagUpdateWithoutUserInput>
  }

  export type ProgressJournalGoalTagUpdateManyWithWhereWithoutUserInput = {
    where: ProgressJournalGoalTagScalarWhereInput
    data: XOR<ProgressJournalGoalTagUncheckedUpdateManyWithoutProgressJournalGoalTagsInput, ProgressJournalGoalTagUpdateManyMutationInput>
  }

  export type UserCreateWithoutUserBenchmarksInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserBenchmarksInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserBenchmarksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutUserBenchmarksInput, UserCreateWithoutUserBenchmarksInput>
  }

  export type EquipmentCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    requiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileCreateNestedManyWithoutAvailableEquipmentsInput
  }

  export type EquipmentUncheckedCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutSelectedEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutUserBenchmarksInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentUncheckedCreateWithoutUserBenchmarksInput, EquipmentCreateWithoutUserBenchmarksInput>
  }

  export type MoveCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutUserBenchmarksInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutUserBenchmarksInput, MoveCreateWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkEntryCreateWithoutUserBenchmarkInput = {
    id?: string
    createdAt?: Date | string
    score: number
    notes?: string | null
    videoUrl?: string | null
    imageUrl?: string | null
  }

  export type UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput = {
    id?: string
    createdAt?: Date | string
    score: number
    notes?: string | null
    videoUrl?: string | null
    imageUrl?: string | null
  }

  export type UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    create: XOR<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput, UserBenchmarkEntryCreateWithoutUserBenchmarkInput>
  }

  export type UserUpsertWithoutUserBenchmarksInput = {
    update: XOR<UserUncheckedUpdateWithoutUserBenchmarksInput, UserUpdateWithoutUserBenchmarksInput>
    create: XOR<UserUncheckedCreateWithoutUserBenchmarksInput, UserCreateWithoutUserBenchmarksInput>
  }

  export type UserUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type EquipmentUpsertWithWhereUniqueWithoutUserBenchmarksInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUncheckedUpdateWithoutUserBenchmarksInput, EquipmentUpdateWithoutUserBenchmarksInput>
    create: XOR<EquipmentUncheckedCreateWithoutUserBenchmarksInput, EquipmentCreateWithoutUserBenchmarksInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutUserBenchmarksInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUncheckedUpdateWithoutUserBenchmarksInput, EquipmentUpdateWithoutUserBenchmarksInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutUserBenchmarksInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUncheckedUpdateManyWithoutEquipmentInput, EquipmentUpdateManyMutationInput>
  }

  export type MoveUpsertWithoutUserBenchmarksInput = {
    update: XOR<MoveUncheckedUpdateWithoutUserBenchmarksInput, MoveUpdateWithoutUserBenchmarksInput>
    create: XOR<MoveUncheckedCreateWithoutUserBenchmarksInput, MoveCreateWithoutUserBenchmarksInput>
  }

  export type MoveUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
  }

  export type UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    update: XOR<UserBenchmarkEntryUncheckedUpdateWithoutUserBenchmarkInput, UserBenchmarkEntryUpdateWithoutUserBenchmarkInput>
    create: XOR<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput, UserBenchmarkEntryCreateWithoutUserBenchmarkInput>
  }

  export type UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    data: XOR<UserBenchmarkEntryUncheckedUpdateWithoutUserBenchmarkInput, UserBenchmarkEntryUpdateWithoutUserBenchmarkInput>
  }

  export type UserBenchmarkEntryUpdateManyWithWhereWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryScalarWhereInput
    data: XOR<UserBenchmarkEntryUncheckedUpdateManyWithoutEntriesInput, UserBenchmarkEntryUpdateManyMutationInput>
  }

  export type UserBenchmarkEntryScalarWhereInput = {
    AND?: Enumerable<UserBenchmarkEntryScalarWhereInput>
    OR?: Enumerable<UserBenchmarkEntryScalarWhereInput>
    NOT?: Enumerable<UserBenchmarkEntryScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    score?: FloatFilter | number
    notes?: StringNullableFilter | string | null
    videoUrl?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    userBenchmarkId?: StringFilter | string
  }

  export type UserBenchmarkCreateWithoutEntriesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    createdBy: UserCreateNestedOneWithoutUserBenchmarksInput
    equipment?: EquipmentCreateNestedManyWithoutUserBenchmarksInput
    move: MoveCreateNestedOneWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedCreateWithoutEntriesInput = {
    id?: string
    createdAt?: Date | string
    createdById: string
    name: string
    description?: string | null
    reps: number
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    scoreType?: BenchmarkScoreType
    moveId: string
  }

  export type UserBenchmarkCreateOrConnectWithoutEntriesInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkUncheckedCreateWithoutEntriesInput, UserBenchmarkCreateWithoutEntriesInput>
  }

  export type UserBenchmarkUpsertWithoutEntriesInput = {
    update: XOR<UserBenchmarkUncheckedUpdateWithoutEntriesInput, UserBenchmarkUpdateWithoutEntriesInput>
    create: XOR<UserBenchmarkUncheckedCreateWithoutEntriesInput, UserBenchmarkCreateWithoutEntriesInput>
  }

  export type UserBenchmarkUpdateWithoutEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    createdBy?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    equipment?: EquipmentUpdateManyWithoutUserBenchmarksInput
    move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    moveId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateWithoutCollectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCollectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCollectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutCollectionsInput, UserCreateWithoutCollectionsInput>
  }

  export type WorkoutCreateWithoutUserCollectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    createdBy?: UserCreateNestedOneWithoutWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutUserCollectionsInput = {
    id?: string
    createdAt?: Date | string
    createdById?: string | null
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutTypeId: string
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutUserCollectionsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutUncheckedCreateWithoutUserCollectionsInput, WorkoutCreateWithoutUserCollectionsInput>
  }

  export type WorkoutProgramCreateWithoutUserCollectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdBy: UserCreateNestedOneWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramUncheckedCreateWithoutUserCollectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdById: string
    enrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramCreateOrConnectWithoutUserCollectionsInput = {
    where: WorkoutProgramWhereUniqueInput
    create: XOR<WorkoutProgramUncheckedCreateWithoutUserCollectionsInput, WorkoutProgramCreateWithoutUserCollectionsInput>
  }

  export type UserUpsertWithoutCollectionsInput = {
    update: XOR<UserUncheckedUpdateWithoutCollectionsInput, UserUpdateWithoutCollectionsInput>
    create: XOR<UserUncheckedCreateWithoutCollectionsInput, UserCreateWithoutCollectionsInput>
  }

  export type UserUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutUpsertWithWhereUniqueWithoutUserCollectionsInput = {
    where: WorkoutWhereUniqueInput
    update: XOR<WorkoutUncheckedUpdateWithoutUserCollectionsInput, WorkoutUpdateWithoutUserCollectionsInput>
    create: XOR<WorkoutUncheckedCreateWithoutUserCollectionsInput, WorkoutCreateWithoutUserCollectionsInput>
  }

  export type WorkoutUpdateWithWhereUniqueWithoutUserCollectionsInput = {
    where: WorkoutWhereUniqueInput
    data: XOR<WorkoutUncheckedUpdateWithoutUserCollectionsInput, WorkoutUpdateWithoutUserCollectionsInput>
  }

  export type WorkoutUpdateManyWithWhereWithoutUserCollectionsInput = {
    where: WorkoutScalarWhereInput
    data: XOR<WorkoutUncheckedUpdateManyWithoutWorkoutsInput, WorkoutUpdateManyMutationInput>
  }

  export type WorkoutProgramUpsertWithWhereUniqueWithoutUserCollectionsInput = {
    where: WorkoutProgramWhereUniqueInput
    update: XOR<WorkoutProgramUncheckedUpdateWithoutUserCollectionsInput, WorkoutProgramUpdateWithoutUserCollectionsInput>
    create: XOR<WorkoutProgramUncheckedCreateWithoutUserCollectionsInput, WorkoutProgramCreateWithoutUserCollectionsInput>
  }

  export type WorkoutProgramUpdateWithWhereUniqueWithoutUserCollectionsInput = {
    where: WorkoutProgramWhereUniqueInput
    data: XOR<WorkoutProgramUncheckedUpdateWithoutUserCollectionsInput, WorkoutProgramUpdateWithoutUserCollectionsInput>
  }

  export type WorkoutProgramUpdateManyWithWhereWithoutUserCollectionsInput = {
    where: WorkoutProgramScalarWhereInput
    data: XOR<WorkoutProgramUncheckedUpdateManyWithoutWorkoutProgramsInput, WorkoutProgramUpdateManyMutationInput>
  }

  export type UserCreateWithoutWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutWorkoutsInput, UserCreateWithoutWorkoutsInput>
  }

  export type WorkoutTypeCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    placeholderImageUrl: string
    scoreType: WorkoutScoreType
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUncheckedCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    placeholderImageUrl: string
    scoreType: WorkoutScoreType
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeCreateOrConnectWithoutWorkoutsInput = {
    where: WorkoutTypeWhereUniqueInput
    create: XOR<WorkoutTypeUncheckedCreateWithoutWorkoutsInput, WorkoutTypeCreateWithoutWorkoutsInput>
  }

  export type WorkoutSectionCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    workoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSectionInput
    loggedWorkout?: LoggedWorkoutCreateNestedOneWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    loggedWorkoutId?: string | null
    workoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionCreateOrConnectWithoutWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    create: XOR<WorkoutSectionUncheckedCreateWithoutWorkoutInput, WorkoutSectionCreateWithoutWorkoutInput>
  }

  export type ScheduledWorkoutCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    notes?: string | null
    scheduledAt?: Date | string
    user: UserCreateNestedOneWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    notes?: string | null
    scheduledAt?: Date | string
    loggedWorkoutId?: string | null
    gymProfileId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput, ScheduledWorkoutCreateWithoutWorkoutInput>
  }

  export type LoggedWorkoutCreateWithoutOriginalWorkoutInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutOriginalWorkoutInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutProgramWorkoutId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutOriginalWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutOriginalWorkoutInput, LoggedWorkoutCreateWithoutOriginalWorkoutInput>
  }

  export type WorkoutProgramWorkoutCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workoutProgram: WorkoutProgramCreateNestedOneWithoutWorkoutProgramWorkoutsInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workoutProgramId: string
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutInput = {
    where: WorkoutProgramWorkoutWhereUniqueInput
    create: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutInput, WorkoutProgramWorkoutCreateWithoutWorkoutInput>
  }

  export type UserCollectionCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    owner: UserCreateNestedOneWithoutCollectionsInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type UserCollectionCreateOrConnectWithoutWorkoutsInput = {
    where: UserCollectionWhereUniqueInput
    create: XOR<UserCollectionUncheckedCreateWithoutWorkoutsInput, UserCollectionCreateWithoutWorkoutsInput>
  }

  export type UserUpsertWithoutWorkoutsInput = {
    update: XOR<UserUncheckedUpdateWithoutWorkoutsInput, UserUpdateWithoutWorkoutsInput>
    create: XOR<UserUncheckedCreateWithoutWorkoutsInput, UserCreateWithoutWorkoutsInput>
  }

  export type UserUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutTypeUpsertWithoutWorkoutsInput = {
    update: XOR<WorkoutTypeUncheckedUpdateWithoutWorkoutsInput, WorkoutTypeUpdateWithoutWorkoutsInput>
    create: XOR<WorkoutTypeUncheckedCreateWithoutWorkoutsInput, WorkoutTypeCreateWithoutWorkoutsInput>
  }

  export type WorkoutTypeUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutTypeInput
  }

  export type WorkoutTypeUncheckedUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: StringFieldUpdateOperationsInput | string
    scoreType?: EnumWorkoutScoreTypeFieldUpdateOperationsInput | WorkoutScoreType
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutTypeInput
  }

  export type WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    update: XOR<WorkoutSectionUncheckedUpdateWithoutWorkoutInput, WorkoutSectionUpdateWithoutWorkoutInput>
    create: XOR<WorkoutSectionUncheckedCreateWithoutWorkoutInput, WorkoutSectionCreateWithoutWorkoutInput>
  }

  export type WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    data: XOR<WorkoutSectionUncheckedUpdateWithoutWorkoutInput, WorkoutSectionUpdateWithoutWorkoutInput>
  }

  export type WorkoutSectionUpdateManyWithWhereWithoutWorkoutInput = {
    where: WorkoutSectionScalarWhereInput
    data: XOR<WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionsInput, WorkoutSectionUpdateManyMutationInput>
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUncheckedUpdateWithoutWorkoutInput, ScheduledWorkoutUpdateWithoutWorkoutInput>
    create: XOR<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput, ScheduledWorkoutCreateWithoutWorkoutInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUncheckedUpdateWithoutWorkoutInput, ScheduledWorkoutUpdateWithoutWorkoutInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput, ScheduledWorkoutUpdateManyMutationInput>
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutOriginalWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutOriginalWorkoutInput, LoggedWorkoutUpdateWithoutOriginalWorkoutInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutOriginalWorkoutInput, LoggedWorkoutCreateWithoutOriginalWorkoutInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutOriginalWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUncheckedUpdateWithoutOriginalWorkoutInput, LoggedWorkoutUpdateWithoutOriginalWorkoutInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutOriginalWorkoutInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput, LoggedWorkoutUpdateManyMutationInput>
  }

  export type WorkoutProgramWorkoutUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutProgramWorkoutWhereUniqueInput
    update: XOR<WorkoutProgramWorkoutUncheckedUpdateWithoutWorkoutInput, WorkoutProgramWorkoutUpdateWithoutWorkoutInput>
    create: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutInput, WorkoutProgramWorkoutCreateWithoutWorkoutInput>
  }

  export type WorkoutProgramWorkoutUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutProgramWorkoutWhereUniqueInput
    data: XOR<WorkoutProgramWorkoutUncheckedUpdateWithoutWorkoutInput, WorkoutProgramWorkoutUpdateWithoutWorkoutInput>
  }

  export type WorkoutProgramWorkoutUpdateManyWithWhereWithoutWorkoutInput = {
    where: WorkoutProgramWorkoutScalarWhereInput
    data: XOR<WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramWorkoutsInput, WorkoutProgramWorkoutUpdateManyMutationInput>
  }

  export type WorkoutProgramWorkoutScalarWhereInput = {
    AND?: Enumerable<WorkoutProgramWorkoutScalarWhereInput>
    OR?: Enumerable<WorkoutProgramWorkoutScalarWhereInput>
    NOT?: Enumerable<WorkoutProgramWorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    dayNumber?: FloatFilter | number
    notes?: StringNullableFilter | string | null
    workoutProgramId?: StringFilter | string
    workoutId?: StringFilter | string
  }

  export type UserCollectionUpsertWithWhereUniqueWithoutWorkoutsInput = {
    where: UserCollectionWhereUniqueInput
    update: XOR<UserCollectionUncheckedUpdateWithoutWorkoutsInput, UserCollectionUpdateWithoutWorkoutsInput>
    create: XOR<UserCollectionUncheckedCreateWithoutWorkoutsInput, UserCollectionCreateWithoutWorkoutsInput>
  }

  export type UserCollectionUpdateWithWhereUniqueWithoutWorkoutsInput = {
    where: UserCollectionWhereUniqueInput
    data: XOR<UserCollectionUncheckedUpdateWithoutWorkoutsInput, UserCollectionUpdateWithoutWorkoutsInput>
  }

  export type UserCollectionUpdateManyWithWhereWithoutWorkoutsInput = {
    where: UserCollectionScalarWhereInput
    data: XOR<UserCollectionUncheckedUpdateManyWithoutUserCollectionsInput, UserCollectionUpdateManyMutationInput>
  }

  export type WorkoutProgramCreateWithoutWorkoutGoalsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdBy: UserCreateNestedOneWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedCreateWithoutWorkoutGoalsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdById: string
    enrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramCreateOrConnectWithoutWorkoutGoalsInput = {
    where: WorkoutProgramWhereUniqueInput
    create: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutGoalsInput, WorkoutProgramCreateWithoutWorkoutGoalsInput>
  }

  export type WorkoutProgramUpsertWithWhereUniqueWithoutWorkoutGoalsInput = {
    where: WorkoutProgramWhereUniqueInput
    update: XOR<WorkoutProgramUncheckedUpdateWithoutWorkoutGoalsInput, WorkoutProgramUpdateWithoutWorkoutGoalsInput>
    create: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutGoalsInput, WorkoutProgramCreateWithoutWorkoutGoalsInput>
  }

  export type WorkoutProgramUpdateWithWhereUniqueWithoutWorkoutGoalsInput = {
    where: WorkoutProgramWhereUniqueInput
    data: XOR<WorkoutProgramUncheckedUpdateWithoutWorkoutGoalsInput, WorkoutProgramUpdateWithoutWorkoutGoalsInput>
  }

  export type WorkoutProgramUpdateManyWithWhereWithoutWorkoutGoalsInput = {
    where: WorkoutProgramScalarWhereInput
    data: XOR<WorkoutProgramUncheckedUpdateManyWithoutWorkoutProgramsInput, WorkoutProgramUpdateManyMutationInput>
  }

  export type MoveCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserCreateNestedOneWithoutCustomMovesInput
    moveType?: MoveTypeCreateNestedOneWithoutMovesInput
    requiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileCreateNestedManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileCreateNestedManyWithoutExcludedMovesInput
    bodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    createdById?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutWorkoutMovesInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveUncheckedCreateWithoutWorkoutMovesInput, MoveCreateWithoutWorkoutMovesInput>
  }

  export type EquipmentCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    requiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    gymProfiles?: GymProfileCreateNestedManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
  }

  export type EquipmentCreateOrConnectWithoutWorkoutMovesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentUncheckedCreateWithoutWorkoutMovesInput, EquipmentCreateWithoutWorkoutMovesInput>
  }

  export type WorkoutSectionCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    workout?: WorkoutCreateNestedOneWithoutWorkoutSectionsInput
    loggedWorkout?: LoggedWorkoutCreateNestedOneWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    notes?: string | null
    timecap?: number | null
    duration?: number | null
    rounds: number
    workoutId?: string | null
    loggedWorkoutId?: string | null
  }

  export type WorkoutSectionCreateOrConnectWithoutWorkoutMovesInput = {
    where: WorkoutSectionWhereUniqueInput
    create: XOR<WorkoutSectionUncheckedCreateWithoutWorkoutMovesInput, WorkoutSectionCreateWithoutWorkoutMovesInput>
  }

  export type MoveUpsertWithoutWorkoutMovesInput = {
    update: XOR<MoveUncheckedUpdateWithoutWorkoutMovesInput, MoveUpdateWithoutWorkoutMovesInput>
    create: XOR<MoveUncheckedCreateWithoutWorkoutMovesInput, MoveCreateWithoutWorkoutMovesInput>
  }

  export type MoveUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type EquipmentUpsertWithoutWorkoutMovesInput = {
    update: XOR<EquipmentUncheckedUpdateWithoutWorkoutMovesInput, EquipmentUpdateWithoutWorkoutMovesInput>
    create: XOR<EquipmentUncheckedCreateWithoutWorkoutMovesInput, EquipmentCreateWithoutWorkoutMovesInput>
  }

  export type EquipmentUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    requiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    gymProfiles?: GymProfileUpdateManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type WorkoutSectionUpsertWithoutWorkoutMovesInput = {
    update: XOR<WorkoutSectionUncheckedUpdateWithoutWorkoutMovesInput, WorkoutSectionUpdateWithoutWorkoutMovesInput>
    create: XOR<WorkoutSectionUncheckedCreateWithoutWorkoutMovesInput, WorkoutSectionCreateWithoutWorkoutMovesInput>
  }

  export type WorkoutSectionUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workout?: WorkoutUpdateOneWithoutWorkoutSectionsInput
    loggedWorkout?: LoggedWorkoutUpdateOneWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateWithoutWorkoutProgramsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutProgramsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutProgramsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutWorkoutProgramsInput, UserCreateWithoutWorkoutProgramsInput>
  }

  export type WorkoutProgramEnrolmentCreateWithoutWorkoutProgramInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    user: UserCreateNestedOneWithoutWorkoutProgramEnrolmentsInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedCreateWithoutWorkoutProgramInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string | null
    userId: string
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentCreateOrConnectWithoutWorkoutProgramInput = {
    where: WorkoutProgramEnrolmentWhereUniqueInput
    create: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutWorkoutProgramInput, WorkoutProgramEnrolmentCreateWithoutWorkoutProgramInput>
  }

  export type WorkoutGoalCreateWithoutWorkoutProgramsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    placeholderImageUrl?: string | null
  }

  export type WorkoutGoalUncheckedCreateWithoutWorkoutProgramsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    placeholderImageUrl?: string | null
  }

  export type WorkoutGoalCreateOrConnectWithoutWorkoutProgramsInput = {
    where: WorkoutGoalWhereUniqueInput
    create: XOR<WorkoutGoalUncheckedCreateWithoutWorkoutProgramsInput, WorkoutGoalCreateWithoutWorkoutProgramsInput>
  }

  export type WorkoutProgramWorkoutCreateWithoutWorkoutProgramInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workout: WorkoutCreateNestedOneWithoutWorkoutProgramWorkoutsInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutProgramInput = {
    id?: string
    createdAt?: Date | string
    dayNumber: number
    notes?: string | null
    workoutId: string
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutCreateOrConnectWithoutWorkoutProgramInput = {
    where: WorkoutProgramWorkoutWhereUniqueInput
    create: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutProgramInput, WorkoutProgramWorkoutCreateWithoutWorkoutProgramInput>
  }

  export type WorkoutProgramReviewCreateWithoutWorkoutProgramInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    user: UserCreateNestedOneWithoutWorkoutProgramReviewsInput
  }

  export type WorkoutProgramReviewUncheckedCreateWithoutWorkoutProgramInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    userId: string
  }

  export type WorkoutProgramReviewCreateOrConnectWithoutWorkoutProgramInput = {
    where: WorkoutProgramReviewWhereUniqueInput
    create: XOR<WorkoutProgramReviewUncheckedCreateWithoutWorkoutProgramInput, WorkoutProgramReviewCreateWithoutWorkoutProgramInput>
  }

  export type UserCollectionCreateWithoutWorkoutProgramsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    owner: UserCreateNestedOneWithoutCollectionsInput
    workouts?: WorkoutCreateNestedManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedCreateWithoutWorkoutProgramsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type UserCollectionCreateOrConnectWithoutWorkoutProgramsInput = {
    where: UserCollectionWhereUniqueInput
    create: XOR<UserCollectionUncheckedCreateWithoutWorkoutProgramsInput, UserCollectionCreateWithoutWorkoutProgramsInput>
  }

  export type UserUpsertWithoutWorkoutProgramsInput = {
    update: XOR<UserUncheckedUpdateWithoutWorkoutProgramsInput, UserUpdateWithoutWorkoutProgramsInput>
    create: XOR<UserUncheckedCreateWithoutWorkoutProgramsInput, UserCreateWithoutWorkoutProgramsInput>
  }

  export type UserUpdateWithoutWorkoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutProgramEnrolmentUpsertWithWhereUniqueWithoutWorkoutProgramInput = {
    where: WorkoutProgramEnrolmentWhereUniqueInput
    update: XOR<WorkoutProgramEnrolmentUncheckedUpdateWithoutWorkoutProgramInput, WorkoutProgramEnrolmentUpdateWithoutWorkoutProgramInput>
    create: XOR<WorkoutProgramEnrolmentUncheckedCreateWithoutWorkoutProgramInput, WorkoutProgramEnrolmentCreateWithoutWorkoutProgramInput>
  }

  export type WorkoutProgramEnrolmentUpdateWithWhereUniqueWithoutWorkoutProgramInput = {
    where: WorkoutProgramEnrolmentWhereUniqueInput
    data: XOR<WorkoutProgramEnrolmentUncheckedUpdateWithoutWorkoutProgramInput, WorkoutProgramEnrolmentUpdateWithoutWorkoutProgramInput>
  }

  export type WorkoutProgramEnrolmentUpdateManyWithWhereWithoutWorkoutProgramInput = {
    where: WorkoutProgramEnrolmentScalarWhereInput
    data: XOR<WorkoutProgramEnrolmentUncheckedUpdateManyWithoutEnrolmentsInput, WorkoutProgramEnrolmentUpdateManyMutationInput>
  }

  export type WorkoutGoalUpsertWithWhereUniqueWithoutWorkoutProgramsInput = {
    where: WorkoutGoalWhereUniqueInput
    update: XOR<WorkoutGoalUncheckedUpdateWithoutWorkoutProgramsInput, WorkoutGoalUpdateWithoutWorkoutProgramsInput>
    create: XOR<WorkoutGoalUncheckedCreateWithoutWorkoutProgramsInput, WorkoutGoalCreateWithoutWorkoutProgramsInput>
  }

  export type WorkoutGoalUpdateWithWhereUniqueWithoutWorkoutProgramsInput = {
    where: WorkoutGoalWhereUniqueInput
    data: XOR<WorkoutGoalUncheckedUpdateWithoutWorkoutProgramsInput, WorkoutGoalUpdateWithoutWorkoutProgramsInput>
  }

  export type WorkoutGoalUpdateManyWithWhereWithoutWorkoutProgramsInput = {
    where: WorkoutGoalScalarWhereInput
    data: XOR<WorkoutGoalUncheckedUpdateManyWithoutWorkoutGoalsInput, WorkoutGoalUpdateManyMutationInput>
  }

  export type WorkoutGoalScalarWhereInput = {
    AND?: Enumerable<WorkoutGoalScalarWhereInput>
    OR?: Enumerable<WorkoutGoalScalarWhereInput>
    NOT?: Enumerable<WorkoutGoalScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringFilter | string
    placeholderImageUrl?: StringNullableFilter | string | null
  }

  export type WorkoutProgramWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramInput = {
    where: WorkoutProgramWorkoutWhereUniqueInput
    update: XOR<WorkoutProgramWorkoutUncheckedUpdateWithoutWorkoutProgramInput, WorkoutProgramWorkoutUpdateWithoutWorkoutProgramInput>
    create: XOR<WorkoutProgramWorkoutUncheckedCreateWithoutWorkoutProgramInput, WorkoutProgramWorkoutCreateWithoutWorkoutProgramInput>
  }

  export type WorkoutProgramWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramInput = {
    where: WorkoutProgramWorkoutWhereUniqueInput
    data: XOR<WorkoutProgramWorkoutUncheckedUpdateWithoutWorkoutProgramInput, WorkoutProgramWorkoutUpdateWithoutWorkoutProgramInput>
  }

  export type WorkoutProgramWorkoutUpdateManyWithWhereWithoutWorkoutProgramInput = {
    where: WorkoutProgramWorkoutScalarWhereInput
    data: XOR<WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramWorkoutsInput, WorkoutProgramWorkoutUpdateManyMutationInput>
  }

  export type WorkoutProgramReviewUpsertWithWhereUniqueWithoutWorkoutProgramInput = {
    where: WorkoutProgramReviewWhereUniqueInput
    update: XOR<WorkoutProgramReviewUncheckedUpdateWithoutWorkoutProgramInput, WorkoutProgramReviewUpdateWithoutWorkoutProgramInput>
    create: XOR<WorkoutProgramReviewUncheckedCreateWithoutWorkoutProgramInput, WorkoutProgramReviewCreateWithoutWorkoutProgramInput>
  }

  export type WorkoutProgramReviewUpdateWithWhereUniqueWithoutWorkoutProgramInput = {
    where: WorkoutProgramReviewWhereUniqueInput
    data: XOR<WorkoutProgramReviewUncheckedUpdateWithoutWorkoutProgramInput, WorkoutProgramReviewUpdateWithoutWorkoutProgramInput>
  }

  export type WorkoutProgramReviewUpdateManyWithWhereWithoutWorkoutProgramInput = {
    where: WorkoutProgramReviewScalarWhereInput
    data: XOR<WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramReviewsInput, WorkoutProgramReviewUpdateManyMutationInput>
  }

  export type UserCollectionUpsertWithWhereUniqueWithoutWorkoutProgramsInput = {
    where: UserCollectionWhereUniqueInput
    update: XOR<UserCollectionUncheckedUpdateWithoutWorkoutProgramsInput, UserCollectionUpdateWithoutWorkoutProgramsInput>
    create: XOR<UserCollectionUncheckedCreateWithoutWorkoutProgramsInput, UserCollectionCreateWithoutWorkoutProgramsInput>
  }

  export type UserCollectionUpdateWithWhereUniqueWithoutWorkoutProgramsInput = {
    where: UserCollectionWhereUniqueInput
    data: XOR<UserCollectionUncheckedUpdateWithoutWorkoutProgramsInput, UserCollectionUpdateWithoutWorkoutProgramsInput>
  }

  export type UserCollectionUpdateManyWithWhereWithoutWorkoutProgramsInput = {
    where: UserCollectionScalarWhereInput
    data: XOR<UserCollectionUncheckedUpdateManyWithoutUserCollectionsInput, UserCollectionUpdateManyMutationInput>
  }

  export type WorkoutProgramCreateWithoutEnrolmentsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdBy: UserCreateNestedOneWithoutWorkoutProgramsInput
    workoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedCreateWithoutEnrolmentsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdById: string
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramCreateOrConnectWithoutEnrolmentsInput = {
    where: WorkoutProgramWhereUniqueInput
    create: XOR<WorkoutProgramUncheckedCreateWithoutEnrolmentsInput, WorkoutProgramCreateWithoutEnrolmentsInput>
  }

  export type UserCreateWithoutWorkoutProgramEnrolmentsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutProgramEnrolmentsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutProgramEnrolmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutWorkoutProgramEnrolmentsInput, UserCreateWithoutWorkoutProgramEnrolmentsInput>
  }

  export type LoggedWorkoutCreateWithoutWorkoutProgramEnrolmentInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutWorkoutProgramEnrolmentInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramWorkoutId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutWorkoutProgramEnrolmentInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramEnrolmentInput, LoggedWorkoutCreateWithoutWorkoutProgramEnrolmentInput>
  }

  export type WorkoutProgramUpsertWithoutEnrolmentsInput = {
    update: XOR<WorkoutProgramUncheckedUpdateWithoutEnrolmentsInput, WorkoutProgramUpdateWithoutEnrolmentsInput>
    create: XOR<WorkoutProgramUncheckedCreateWithoutEnrolmentsInput, WorkoutProgramCreateWithoutEnrolmentsInput>
  }

  export type WorkoutProgramUpdateWithoutEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneRequiredWithoutWorkoutProgramsInput
    workoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedUpdateWithoutEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdById?: StringFieldUpdateOperationsInput | string
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramInput
  }

  export type UserUpsertWithoutWorkoutProgramEnrolmentsInput = {
    update: XOR<UserUncheckedUpdateWithoutWorkoutProgramEnrolmentsInput, UserUpdateWithoutWorkoutProgramEnrolmentsInput>
    create: XOR<UserUncheckedCreateWithoutWorkoutProgramEnrolmentsInput, UserCreateWithoutWorkoutProgramEnrolmentsInput>
  }

  export type UserUpdateWithoutWorkoutProgramEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutProgramEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramEnrolmentInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutProgramEnrolmentInput, LoggedWorkoutUpdateWithoutWorkoutProgramEnrolmentInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramEnrolmentInput, LoggedWorkoutCreateWithoutWorkoutProgramEnrolmentInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramEnrolmentInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutProgramEnrolmentInput, LoggedWorkoutUpdateWithoutWorkoutProgramEnrolmentInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutWorkoutProgramEnrolmentInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput, LoggedWorkoutUpdateManyMutationInput>
  }

  export type WorkoutProgramCreateWithoutWorkoutProgramReviewsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdBy: UserCreateNestedOneWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedCreateWithoutWorkoutProgramReviewsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdById: string
    enrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramCreateOrConnectWithoutWorkoutProgramReviewsInput = {
    where: WorkoutProgramWhereUniqueInput
    create: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramReviewsInput, WorkoutProgramCreateWithoutWorkoutProgramReviewsInput>
  }

  export type UserCreateWithoutWorkoutProgramReviewsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    followedBy?: UserCreateNestedManyWithoutFollowingInput
    following?: UserCreateNestedManyWithoutFollowedByInput
    customMoves?: MoveCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutProgramReviewsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUrl?: string | null
    introVideoUrl?: string | null
    introVideoThumbUrl?: string | null
    coverImageUrl?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    themePreference?: ThemePreference
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    height?: number | null
    weight?: number | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    unitSystem?: UnitSystem
    customMoves?: MoveUncheckedCreateNestedManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedCreateNestedManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedCreateNestedManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedCreateNestedManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedCreateNestedManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedCreateNestedOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutProgramReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutWorkoutProgramReviewsInput, UserCreateWithoutWorkoutProgramReviewsInput>
  }

  export type WorkoutProgramUpsertWithoutWorkoutProgramReviewsInput = {
    update: XOR<WorkoutProgramUncheckedUpdateWithoutWorkoutProgramReviewsInput, WorkoutProgramUpdateWithoutWorkoutProgramReviewsInput>
    create: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramReviewsInput, WorkoutProgramCreateWithoutWorkoutProgramReviewsInput>
  }

  export type WorkoutProgramUpdateWithoutWorkoutProgramReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneRequiredWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentUpdateManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedUpdateWithoutWorkoutProgramReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdById?: StringFieldUpdateOperationsInput | string
    enrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramInput
  }

  export type UserUpsertWithoutWorkoutProgramReviewsInput = {
    update: XOR<UserUncheckedUpdateWithoutWorkoutProgramReviewsInput, UserUpdateWithoutWorkoutProgramReviewsInput>
    create: XOR<UserUncheckedCreateWithoutWorkoutProgramReviewsInput, UserCreateWithoutWorkoutProgramReviewsInput>
  }

  export type UserUpdateWithoutWorkoutProgramReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutProgramReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutProgramCreateWithoutWorkoutProgramWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdBy: UserCreateNestedOneWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentCreateNestedManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutProgramsInput
    workoutProgramReviews?: WorkoutProgramReviewCreateNestedManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedCreateWithoutWorkoutProgramWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUrl?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    scope?: ContentAccessScope
    createdById: string
    enrolments?: WorkoutProgramEnrolmentUncheckedCreateNestedManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedCreateNestedManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramCreateOrConnectWithoutWorkoutProgramWorkoutsInput = {
    where: WorkoutProgramWhereUniqueInput
    create: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutProgramCreateWithoutWorkoutProgramWorkoutsInput>
  }

  export type WorkoutCreateWithoutWorkoutProgramWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    createdBy?: UserCreateNestedOneWithoutWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateWithoutWorkoutProgramWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    createdById?: string | null
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutTypeId: string
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutWorkoutProgramWorkoutsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutCreateWithoutWorkoutProgramWorkoutsInput>
  }

  export type LoggedWorkoutCreateWithoutWorkoutProgramWorkoutInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutWorkoutProgramWorkoutInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutWorkoutProgramWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramWorkoutInput, LoggedWorkoutCreateWithoutWorkoutProgramWorkoutInput>
  }

  export type WorkoutProgramUpsertWithoutWorkoutProgramWorkoutsInput = {
    update: XOR<WorkoutProgramUncheckedUpdateWithoutWorkoutProgramWorkoutsInput, WorkoutProgramUpdateWithoutWorkoutProgramWorkoutsInput>
    create: XOR<WorkoutProgramUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutProgramCreateWithoutWorkoutProgramWorkoutsInput>
  }

  export type WorkoutProgramUpdateWithoutWorkoutProgramWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneRequiredWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentUpdateManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutProgramsInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedUpdateWithoutWorkoutProgramWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdById?: StringFieldUpdateOperationsInput | string
    enrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramInput
  }

  export type WorkoutUpsertWithoutWorkoutProgramWorkoutsInput = {
    update: XOR<WorkoutUncheckedUpdateWithoutWorkoutProgramWorkoutsInput, WorkoutUpdateWithoutWorkoutProgramWorkoutsInput>
    create: XOR<WorkoutUncheckedCreateWithoutWorkoutProgramWorkoutsInput, WorkoutCreateWithoutWorkoutProgramWorkoutsInput>
  }

  export type WorkoutUpdateWithoutWorkoutProgramWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneWithoutWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateWithoutWorkoutProgramWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutProgramWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutProgramWorkoutInput, LoggedWorkoutUpdateWithoutWorkoutProgramWorkoutInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutProgramWorkoutInput, LoggedWorkoutCreateWithoutWorkoutProgramWorkoutInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutProgramWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutProgramWorkoutInput, LoggedWorkoutUpdateWithoutWorkoutProgramWorkoutInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutWorkoutProgramWorkoutInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput, LoggedWorkoutUpdateManyMutationInput>
  }

  export type WorkoutCreateWithoutWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    createdBy?: UserCreateNestedOneWithoutWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutWorkoutsInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateWithoutWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    createdById?: string | null
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutTypeId: string
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutWorkoutSectionsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutUncheckedCreateWithoutWorkoutSectionsInput, WorkoutCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutMoveCreateWithoutWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    move: MoveCreateNestedOneWithoutWorkoutMovesInput
    selectedEquipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedCreateWithoutWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType?: WorkoutMoveRepType
    reps?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    duration?: number | null
    description?: string | null
    notes?: string | null
    moveId: string
    selectedEquipmentId?: string | null
  }

  export type WorkoutMoveCreateOrConnectWithoutWorkoutSectionInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveUncheckedCreateWithoutWorkoutSectionInput, WorkoutMoveCreateWithoutWorkoutSectionInput>
  }

  export type LoggedWorkoutCreateWithoutWorkoutSectionsInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutType: WorkoutTypeCreateNestedOneWithoutLoggedWorkoutsInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutWorkoutSectionsInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    workoutTypeId: string
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutProgramWorkoutId?: string | null
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutWorkoutSectionsInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutSectionsInput, LoggedWorkoutCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutUpsertWithoutWorkoutSectionsInput = {
    update: XOR<WorkoutUncheckedUpdateWithoutWorkoutSectionsInput, WorkoutUpdateWithoutWorkoutSectionsInput>
    create: XOR<WorkoutUncheckedCreateWithoutWorkoutSectionsInput, WorkoutCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneWithoutWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutMoveUpsertWithWhereUniqueWithoutWorkoutSectionInput = {
    where: WorkoutMoveWhereUniqueInput
    update: XOR<WorkoutMoveUncheckedUpdateWithoutWorkoutSectionInput, WorkoutMoveUpdateWithoutWorkoutSectionInput>
    create: XOR<WorkoutMoveUncheckedCreateWithoutWorkoutSectionInput, WorkoutMoveCreateWithoutWorkoutSectionInput>
  }

  export type WorkoutMoveUpdateWithWhereUniqueWithoutWorkoutSectionInput = {
    where: WorkoutMoveWhereUniqueInput
    data: XOR<WorkoutMoveUncheckedUpdateWithoutWorkoutSectionInput, WorkoutMoveUpdateWithoutWorkoutSectionInput>
  }

  export type WorkoutMoveUpdateManyWithWhereWithoutWorkoutSectionInput = {
    where: WorkoutMoveScalarWhereInput
    data: XOR<WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput, WorkoutMoveUpdateManyMutationInput>
  }

  export type LoggedWorkoutUpsertWithoutWorkoutSectionsInput = {
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutSectionsInput, LoggedWorkoutUpdateWithoutWorkoutSectionsInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutSectionsInput, LoggedWorkoutCreateWithoutWorkoutSectionsInput>
  }

  export type LoggedWorkoutUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type WorkoutCreateWithoutWorkoutTypeInput = {
    id?: string
    createdAt?: Date | string
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    createdBy?: UserCreateNestedOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutCreateNestedManyWithoutWorkoutInput
    userCollections?: UserCollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateWithoutWorkoutTypeInput = {
    id?: string
    createdAt?: Date | string
    createdById?: string | null
    name: string
    summary?: string | null
    description?: string | null
    demoVideoUrl?: string | null
    demoVideoThumbUrl?: string | null
    youtubeVideoUrl?: string | null
    spotifyAudio?: string | null
    imageUrl?: string | null
    timecap?: number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: number
    scope?: ContentAccessScope
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutWorkoutTypeInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutUncheckedCreateWithoutWorkoutTypeInput, WorkoutCreateWithoutWorkoutTypeInput>
  }

  export type LoggedWorkoutCreateWithoutWorkoutTypeInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    scheduledWorkoutId?: string | null
    completedBy: UserCreateNestedOneWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentCreateNestedOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutWorkoutTypeInput = {
    id?: string
    name: string
    summary?: string | null
    description?: string | null
    createdAt?: Date | string
    completedOn: Date | string
    completedById: string
    notes?: string | null
    videoUrl?: string | null
    videoThumbUrl?: string | null
    imageUrl?: string | null
    duration?: number | null
    originalWorkoutId?: string | null
    scheduledWorkoutId?: string | null
    gymProfileId?: string | null
    workoutProgramEnrolmentId?: string | null
    workoutProgramWorkoutId?: string | null
    workoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutWorkoutTypeInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutTypeInput, LoggedWorkoutCreateWithoutWorkoutTypeInput>
  }

  export type WorkoutUpsertWithWhereUniqueWithoutWorkoutTypeInput = {
    where: WorkoutWhereUniqueInput
    update: XOR<WorkoutUncheckedUpdateWithoutWorkoutTypeInput, WorkoutUpdateWithoutWorkoutTypeInput>
    create: XOR<WorkoutUncheckedCreateWithoutWorkoutTypeInput, WorkoutCreateWithoutWorkoutTypeInput>
  }

  export type WorkoutUpdateWithWhereUniqueWithoutWorkoutTypeInput = {
    where: WorkoutWhereUniqueInput
    data: XOR<WorkoutUncheckedUpdateWithoutWorkoutTypeInput, WorkoutUpdateWithoutWorkoutTypeInput>
  }

  export type WorkoutUpdateManyWithWhereWithoutWorkoutTypeInput = {
    where: WorkoutScalarWhereInput
    data: XOR<WorkoutUncheckedUpdateManyWithoutWorkoutsInput, WorkoutUpdateManyMutationInput>
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutTypeInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutTypeInput, LoggedWorkoutUpdateWithoutWorkoutTypeInput>
    create: XOR<LoggedWorkoutUncheckedCreateWithoutWorkoutTypeInput, LoggedWorkoutCreateWithoutWorkoutTypeInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutTypeInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUncheckedUpdateWithoutWorkoutTypeInput, LoggedWorkoutUpdateWithoutWorkoutTypeInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutWorkoutTypeInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput, LoggedWorkoutUpdateManyMutationInput>
  }

  export type BodyAreaMoveScoreUpdateWithoutBodyAreaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
    move?: MoveUpdateOneRequiredWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedUpdateWithoutBodyAreaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaMoveScoresInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type MoveUpdateWithoutRequiredEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutRequiredEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutRequiredForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUpdateWithoutSelectableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutSelectableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutSelectableForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutMoveUpdateWithoutSelectedEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    workoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutSelectedEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    workoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    workoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type GymProfileUpdateWithoutAvailableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutAvailableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateManyWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserBenchmarkUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    createdBy?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    moveId?: StringFieldUpdateOperationsInput | string
    entries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    moveId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    requiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutSelectedEquipmentInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutSelectedEquipmentInput
  }

  export type EquipmentUncheckedUpdateManyWithoutAvailableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ScheduledWorkoutUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutSectionUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workout?: WorkoutUpdateOneWithoutWorkoutSectionsInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipmentUpdateWithoutRequiredForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    selectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileUpdateManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutRequiredForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutSelectedEquipmentInput
  }

  export type EquipmentUncheckedUpdateManyWithoutRequiredEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EquipmentUpdateWithoutSelectableForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    requiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileUpdateManyWithoutAvailableEquipmentsInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutSelectableForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutSelectedEquipmentInput
  }

  export type EquipmentUncheckedUpdateManyWithoutSelectableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MoveProfileUpdateWithoutRequiredMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutMoveProfilesInput
    excludedMoves?: MoveUpdateManyWithoutExcludedForMoveProfilesInput
  }

  export type MoveProfileUncheckedUpdateWithoutRequiredMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveProfileUncheckedUpdateManyWithoutRequiredForMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveProfileUpdateWithoutExcludedMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutMoveProfilesInput
    requiredMoves?: MoveUpdateManyWithoutRequiredForMoveProfilesInput
  }

  export type MoveProfileUncheckedUpdateWithoutExcludedMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveProfileUncheckedUpdateManyWithoutExcludedForMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutMoveUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    selectedEquipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
    workoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    selectedEquipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type BodyAreaMoveScoreUpdateWithoutMoveInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
    bodyArea?: BodyAreaUpdateOneRequiredWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedUpdateWithoutMoveInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    bodyAreaId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type UserBenchmarkUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    createdBy?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    equipment?: EquipmentUpdateManyWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    entries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type MoveUpdateWithoutRequiredForMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutRequiredForMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutRequiredMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUpdateWithoutExcludedForMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutExcludedForMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutExcludedMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUpdateWithoutMoveTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    createdBy?: UserUpdateOneWithoutCustomMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutMoveTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type ProgressJournalEntryUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUrls?: ProgressJournalEntryUpdateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalEntryUncheckedUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUrls?: ProgressJournalEntryUpdateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUrls?: ProgressJournalEntryUpdateprogressPhotoUrlsInput | Enumerable<string>
  }

  export type ProgressJournalGoalUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgressJournalGoalTagUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagUncheckedUpdateManyWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpdateWithoutFollowingInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    followedBy?: UserUpdateManyWithoutFollowingInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutFollowingInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateManyWithoutFollowedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
  }

  export type UserUpdateWithoutFollowedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    following?: UserUpdateManyWithoutFollowedByInput
    customMoves?: MoveUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutFollowedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
    customMoves?: MoveUncheckedUpdateManyWithoutCreatedByInput
    workouts?: WorkoutUncheckedUpdateManyWithoutCreatedByInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutCompletedByInput
    gymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    moveProfiles?: MoveProfileUncheckedUpdateManyWithoutUserInput
    workoutPrograms?: WorkoutProgramUncheckedUpdateManyWithoutCreatedByInput
    workoutProgramEnrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutUserInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutUserInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutCreatedByInput
    collections?: UserCollectionUncheckedUpdateManyWithoutOwnerInput
    trainerAccount?: TrainerAccountUncheckedUpdateOneWithoutUserInput
    progressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    progressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateManyWithoutFollowingInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    themePreference?: EnumThemePreferenceFieldUpdateOperationsInput | ThemePreference
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitSystem?: EnumUnitSystemFieldUpdateOperationsInput | UnitSystem
  }

  export type MoveUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    moveType?: MoveTypeUpdateOneWithoutMovesInput
    requiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    selectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    requiredForMoveProfiles?: MoveProfileUpdateManyWithoutRequiredMovesInput
    excludedForMoveProfiles?: MoveProfileUpdateManyWithoutExcludedMovesInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    bodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    userBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutCustomMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateManyWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
  }

  export type ScheduledWorkoutUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUpdateWithoutCompletedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutCompletedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type GymProfileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    availableEquipments?: EquipmentUpdateManyWithoutGymProfilesInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    postcode?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweightOnly?: BoolFieldUpdateOperationsInput | boolean
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type MoveProfileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    requiredMoves?: MoveUpdateManyWithoutRequiredForMoveProfilesInput
    excludedMoves?: MoveUpdateManyWithoutExcludedForMoveProfilesInput
  }

  export type MoveProfileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveProfileUncheckedUpdateManyWithoutMoveProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutProgramUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    enrolments?: WorkoutProgramEnrolmentUpdateManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    enrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramUncheckedUpdateManyWithoutWorkoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutProgramEnrolmentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutEnrolmentsInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramReviewUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutWorkoutProgramReviewsInput
  }

  export type WorkoutProgramReviewUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    equipment?: EquipmentUpdateManyWithoutUserBenchmarksInput
    move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    entries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: FloatFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    scoreType?: EnumBenchmarkScoreTypeFieldUpdateOperationsInput | BenchmarkScoreType
    moveId?: StringFieldUpdateOperationsInput | string
    entries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type UserCollectionUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    workouts?: WorkoutUpdateManyWithoutUserCollectionsInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCollectionUncheckedUpdateManyWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    progressJournalEntries?: ProgressJournalEntryUpdateManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    progressJournalEntries?: ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput
    progressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateManyWithoutProgressJournalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalGoalTagUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    progressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    requiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    selectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    workoutMoves?: WorkoutMoveUpdateManyWithoutSelectedEquipmentInput
    gymProfiles?: GymProfileUpdateManyWithoutAvailableEquipmentsInput
  }

  export type EquipmentUncheckedUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutSelectedEquipmentInput
  }

  export type EquipmentUncheckedUpdateManyWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserBenchmarkEntryUpdateWithoutUserBenchmarkInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkEntryUncheckedUpdateWithoutUserBenchmarkInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkEntryUncheckedUpdateManyWithoutEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutUpdateWithoutUserCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneWithoutWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutUserCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutProgramUpdateWithoutUserCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneRequiredWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentUpdateManyWithoutWorkoutProgramInput
    workoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutProgramsInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramUncheckedUpdateWithoutUserCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdById?: StringFieldUpdateOperationsInput | string
    enrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramInput
  }

  export type WorkoutSectionUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    workoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSectionInput
    loggedWorkout?: LoggedWorkoutUpdateOneWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    rounds?: IntFieldUpdateOperationsInput | number
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSectionInput
  }

  export type ScheduledWorkoutUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    loggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUpdateWithoutOriginalWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutOriginalWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type WorkoutProgramWorkoutUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgram?: WorkoutProgramUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCollectionUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutCollectionsInput
    workoutPrograms?: WorkoutProgramUpdateManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCollectionUncheckedUpdateManyWithoutUserCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutProgramUpdateWithoutWorkoutGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneRequiredWithoutWorkoutProgramsInput
    enrolments?: WorkoutProgramEnrolmentUpdateManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUpdateManyWithoutWorkoutProgramInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutProgramsInput
  }

  export type WorkoutProgramUncheckedUpdateWithoutWorkoutGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdById?: StringFieldUpdateOperationsInput | string
    enrolments?: WorkoutProgramEnrolmentUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutProgramInput
    workoutProgramReviews?: WorkoutProgramReviewUncheckedUpdateManyWithoutWorkoutProgramInput
  }

  export type WorkoutProgramEnrolmentUpdateWithoutWorkoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutWorkoutProgramEnrolmentsInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateWithoutWorkoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: StringFieldUpdateOperationsInput | string
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramEnrolmentInput
  }

  export type WorkoutProgramEnrolmentUncheckedUpdateManyWithoutEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutGoalUpdateWithoutWorkoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutGoalUncheckedUpdateWithoutWorkoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutGoalUncheckedUpdateManyWithoutWorkoutGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    placeholderImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutProgramWorkoutUpdateWithoutWorkoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workout?: WorkoutUpdateOneRequiredWithoutWorkoutProgramWorkoutsInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramWorkoutUncheckedUpdateWithoutWorkoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dayNumber?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: StringFieldUpdateOperationsInput | string
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutProgramWorkoutInput
  }

  export type WorkoutProgramReviewUpdateWithoutWorkoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutWorkoutProgramReviewsInput
  }

  export type WorkoutProgramReviewUncheckedUpdateWithoutWorkoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCollectionUpdateWithoutWorkoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutCollectionsInput
    workouts?: WorkoutUpdateManyWithoutUserCollectionsInput
  }

  export type UserCollectionUncheckedUpdateWithoutWorkoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUpdateWithoutWorkoutProgramEnrolmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutWorkoutProgramEnrolmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUpdateWithoutWorkoutProgramWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutType?: WorkoutTypeUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutWorkoutProgramWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutTypeId?: StringFieldUpdateOperationsInput | string
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type WorkoutMoveUpdateWithoutWorkoutSectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    selectedEquipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutWorkoutSectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    selectedEquipmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutUpdateWithoutWorkoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    createdBy?: UserUpdateOneWithoutWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUpdateManyWithoutWorkoutInput
    userCollections?: UserCollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateWithoutWorkoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeVideoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    spotifyAudio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    builderData?: InputJsonValue | null
    difficultyLevel?: IntFieldUpdateOperationsInput | number
    scope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    scheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    loggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutOriginalWorkoutInput
    workoutProgramWorkouts?: WorkoutProgramWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type LoggedWorkoutUpdateWithoutWorkoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    workoutSections?: WorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    originalWorkout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
    scheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    gymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramEnrolment?: WorkoutProgramEnrolmentUpdateOneWithoutLoggedWorkoutsInput
    workoutProgramWorkout?: WorkoutProgramWorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutWorkoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    completedById?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    originalWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutProgramWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSections?: WorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    scheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.DMMF.Document;
}