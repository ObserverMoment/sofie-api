
/**
 * Client
**/

import * as runtime from './runtime';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model Admin
 */

export type Admin = {
  id: string
  firebaseUid: string
  createdAt: Date
  username: string
}

/**
 * Model BodyArea
 */

export type BodyArea = {
  id: string
  createdAt: Date
  name: string
  altNames: string | null
  frontBack: BodyAreaFrontBack
  upperLower: BodyAreaUpperLower
}

/**
 * Model BodyAreaMoveScore
 */

export type BodyAreaMoveScore = {
  createdAt: Date
  moveId: string
  bodyAreaId: string
  score: number
}

/**
 * Model Equipment
 */

export type Equipment = {
  id: string
  createdAt: Date
  name: string
  altNames: string | null
  imageUrl: string | null
  loadAdjustable: boolean
}

/**
 * Model Move
 */

export type Move = {
  id: string
  createdAt: Date
  archived: boolean
  userId: string | null
  scope: MoveScope
  name: string
  searchTerms: string | null
  description: string | null
  demoVideoUri: string | null
  demoVideoThumbUri: string | null
  validRepTypes: WorkoutMoveRepType[]
  moveTypeId: string | null
}

/**
 * Model MoveType
 */

export type MoveType = {
  id: string
  createdAt: Date
  name: string
  description: string | null
  imageUri: string | null
}

/**
 * Model WorkoutGoal
 */

export type WorkoutGoal = {
  id: string
  createdAt: Date
  name: string
  description: string
  hexColor: string
}

/**
 * Model WorkoutSectionType
 */

export type WorkoutSectionType = {
  id: string
  createdAt: Date
  name: string
  subtitle: string
  description: string
  validRepTypes: WorkoutMoveRepType[]
}

/**
 * Model Collection
 */

export type Collection = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
}

/**
 * Model GymProfile
 */

export type GymProfile = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
}

/**
 * Model ScheduledWorkout
 */

export type ScheduledWorkout = {
  id: string
  createdAt: Date
  userId: string
  note: string | null
  scheduledAt: Date
  gymProfileId: string | null
  loggedWorkoutId: string | null
  workoutId: string | null
  workoutPlanEnrolmentId: string | null
  workoutPlanDayWorkoutId: string | null
}

/**
 * Model User
 */

export type User = {
  id: string
  firebaseUid: string
  createdAt: Date
  hasOnboarded: boolean
  userProfileScope: UserProfileScope
  avatarUri: string | null
  introVideoUri: string | null
  introVideoThumbUri: string | null
  displayName: string | null
  firstname: string | null
  lastname: string | null
  bio: string | null
  tagline: string | null
  birthdate: Date | null
  gender: Gender | null
  townCity: string | null
  countryCode: string | null
  instagramUrl: string | null
  tiktokUrl: string | null
  youtubeUrl: string | null
  snapUrl: string | null
  linkedinUrl: string | null
}

/**
 * Model UserBenchmarkGroup
 */

export type UserBenchmarkGroup = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
}

/**
 * Model UserBenchmark
 */

export type UserBenchmark = {
  id: string
  createdAt: Date
  lastEntryAt: Date
  userId: string
  name: string
  description: string | null
  reps: number | null
  repType: WorkoutMoveRepType
  load: number | null
  loadUnit: LoadUnit
  distanceUnit: DistanceUnit
  timeUnit: TimeUnit
  equipmentId: string | null
  moveId: string
  benchmarkType: BenchmarkType
}

/**
 * Model UserBenchmarkEntry
 */

export type UserBenchmarkEntry = {
  id: string
  createdAt: Date
  userId: string
  completedOn: Date
  score: number
  note: string | null
  videoUri: string | null
  videoThumbUri: string | null
  userBenchmarkId: string
}

/**
 * Model Workout
 */

export type Workout = {
  id: string
  createdAt: Date
  archived: boolean
  userId: string
  name: string
  description: string | null
  metaData: Prisma.JsonValue | null
  introVideoUri: string | null
  introVideoThumbUri: string | null
  introAudioUri: string | null
  coverImageUri: string | null
  lengthMinutes: number | null
  difficultyLevel: DifficultyLevel
  contentAccessScope: ContentAccessScope
}

/**
 * Model WorkoutTag
 */

export type WorkoutTag = {
  id: string
  createdAt: Date
  userId: string
  tag: string
}

/**
 * Model WorkoutSection
 */

export type WorkoutSection = {
  id: string
  createdAt: Date
  archived: boolean
  userId: string
  name: string | null
  note: string | null
  rounds: number
  timecap: number | null
  sortPosition: number
  introVideoUri: string | null
  introVideoThumbUri: string | null
  introAudioUri: string | null
  classVideoUri: string | null
  classVideoThumbUri: string | null
  classAudioUri: string | null
  outroVideoUri: string | null
  outroVideoThumbUri: string | null
  outroAudioUri: string | null
  workoutId: string
  workoutSectionTypeId: string
}

/**
 * Model WorkoutSet
 */

export type WorkoutSet = {
  id: string
  createdAt: Date
  userId: string
  sortPosition: number
  rounds: number
  duration: number | null
  workoutSectionId: string
}

/**
 * Model WorkoutSetIntervalBuyIn
 */

export type WorkoutSetIntervalBuyIn = {
  id: string
  createdAt: Date
  userId: string
  interval: number
  workoutMoveId: string
  workoutSetId: string
}

/**
 * Model WorkoutSetGenerator
 */

export type WorkoutSetGenerator = {
  id: string
  createdAt: Date
  userId: string
  type: WorkoutSetGeneratorType
  workoutMoveIndex: number
  target: WorkoutSetGeneratorTarget
  roundFrequency: number
  adjustAmount: number
  workoutSetId: string | null
}

/**
 * Model WorkoutMove
 */

export type WorkoutMove = {
  id: string
  createdAt: Date
  userId: string
  sortPosition: number
  repType: WorkoutMoveRepType
  reps: number
  distanceUnit: DistanceUnit
  timeUnit: TimeUnit
  loadAmount: number
  loadUnit: LoadUnit
  moveId: string
  equipmentId: string | null
  workoutSetId: string
}

/**
 * Model WorkoutPlan
 */

export type WorkoutPlan = {
  id: string
  createdAt: Date
  userId: string
  archived: boolean
  name: string
  description: string | null
  lengthWeeks: number
  daysPerWeek: number
  coverImageUri: string | null
  introVideoUri: string | null
  introVideoThumbUri: string | null
  introAudioUri: string | null
  contentAccessScope: ContentAccessScope
}

/**
 * Model WorkoutPlanDay
 */

export type WorkoutPlanDay = {
  id: string
  createdAt: Date
  userId: string
  note: string | null
  dayNumber: number
  workoutPlanId: string
}

/**
 * Model WorkoutPlanDayWorkout
 */

export type WorkoutPlanDayWorkout = {
  id: string
  createdAt: Date
  userId: string
  note: string | null
  sortPosition: number
  workoutId: string
  workoutPlanDayId: string
}

/**
 * Model WorkoutPlanEnrolment
 */

export type WorkoutPlanEnrolment = {
  id: string
  createdAt: Date
  startDate: Date
  completedPlanDayWorkoutIds: string[]
  workoutPlanId: string
  userId: string
}

/**
 * Model WorkoutPlanReview
 */

export type WorkoutPlanReview = {
  id: string
  createdAt: Date
  userId: string
  score: number
  comment: string | null
  workoutPlanId: string
}

/**
 * Model LoggedWorkout
 */

export type LoggedWorkout = {
  id: string
  createdAt: Date
  completedOn: Date
  userId: string
  name: string
  note: string | null
  gymProfileId: string | null
  workoutId: string | null
}

/**
 * Model LoggedWorkoutSection
 */

export type LoggedWorkoutSection = {
  id: string
  createdAt: Date
  userId: string
  name: string | null
  note: string | null
  timecap: number | null
  sortPosition: number
  timeTakenMs: number | null
  lapTimesMs: Prisma.JsonValue
  repScore: number | null
  loggedWorkoutId: string
  workoutSectionTypeId: string
}

/**
 * Model LoggedWorkoutSet
 */

export type LoggedWorkoutSet = {
  id: string
  createdAt: Date
  userId: string
  note: string | null
  roundNumber: number
  sortPosition: number
  duration: number | null
  roundsCompleted: number
  loggedWorkoutSectionId: string
}

/**
 * Model LoggedWorkoutMove
 */

export type LoggedWorkoutMove = {
  id: string
  createdAt: Date
  userId: string
  sortPosition: number
  repType: WorkoutMoveRepType
  reps: number
  distance: number | null
  distanceUnit: DistanceUnit
  loadAmount: number | null
  loadUnit: LoadUnit
  timeUnit: TimeUnit
  moveId: string
  equipmentId: string | null
  loggedWorkoutSetId: string
}

/**
 * Model ProgressJournal
 */

export type ProgressJournal = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
}

/**
 * Model ProgressJournalEntry
 */

export type ProgressJournalEntry = {
  id: string
  createdAt: Date
  userId: string
  note: string | null
  voiceNoteUri: string | null
  bodyweight: number | null
  bodyweightUnit: BodyweightUnit
  moodScore: number | null
  energyScore: number | null
  stressScore: number | null
  motivationScore: number | null
  progressPhotoUris: string[]
  progressJournalId: string
}

/**
 * Model ProgressJournalGoal
 */

export type ProgressJournalGoal = {
  id: string
  createdAt: Date
  userId: string
  name: string
  description: string | null
  deadline: Date | null
  completedDate: Date | null
  progressJournalId: string
}

/**
 * Model ProgressJournalGoalTag
 */

export type ProgressJournalGoalTag = {
  id: string
  createdAt: Date
  tag: string
  hexColor: string
  userId: string
}

/**
 * Model DiscoverFeatured
 */

export type DiscoverFeatured = {
  id: string
  createdAt: Date
  tag: string
  name: string
  tagline: string
  description: string
  coverImageUri: string
}

/**
 * Model DiscoverWorkoutCategory
 */

export type DiscoverWorkoutCategory = {
  id: string
  createdAt: Date
  active: boolean
  name: string
  tagline: string
  description: string
  coverImageUri: string
}

/**
 * Model DiscoverWorkout
 */

export type DiscoverWorkout = {
  id: string
  createdAt: Date
  workoutId: string
  discoverWorkoutCategoryId: string
}

/**
 * Model DiscoverWorkoutPlanCategory
 */

export type DiscoverWorkoutPlanCategory = {
  id: string
  createdAt: Date
  active: boolean
  name: string
  tagline: string
  description: string
  coverImageUri: string
}

/**
 * Model DiscoverWorkoutPlan
 */

export type DiscoverWorkoutPlan = {
  id: string
  createdAt: Date
  workoutPlanId: string
  discoverWorkoutPlanCategoryId: string
}


/**
 * Enums
 */

// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

export const BodyAreaFrontBack: {
  BACK: 'BACK',
  FRONT: 'FRONT',
  BOTH: 'BOTH'
};

export type BodyAreaFrontBack = (typeof BodyAreaFrontBack)[keyof typeof BodyAreaFrontBack]


export const BodyAreaUpperLower: {
  CORE: 'CORE',
  LOWER: 'LOWER',
  UPPER: 'UPPER'
};

export type BodyAreaUpperLower = (typeof BodyAreaUpperLower)[keyof typeof BodyAreaUpperLower]


export const MoveScope: {
  STANDARD: 'STANDARD',
  CUSTOM: 'CUSTOM'
};

export type MoveScope = (typeof MoveScope)[keyof typeof MoveScope]


export const WorkoutMoveRepType: {
  REPS: 'REPS',
  CALORIES: 'CALORIES',
  DISTANCE: 'DISTANCE',
  TIME: 'TIME'
};

export type WorkoutMoveRepType = (typeof WorkoutMoveRepType)[keyof typeof WorkoutMoveRepType]


export const UserProfileScope: {
  PRIVATE: 'PRIVATE',
  PUBLIC: 'PUBLIC'
};

export type UserProfileScope = (typeof UserProfileScope)[keyof typeof UserProfileScope]


export const Gender: {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  NONBINARY: 'NONBINARY',
  NONE: 'NONE'
};

export type Gender = (typeof Gender)[keyof typeof Gender]


export const LoadUnit: {
  KG: 'KG',
  LB: 'LB',
  BODYWEIGHTPERCENT: 'BODYWEIGHTPERCENT',
  PERCENTMAX: 'PERCENTMAX'
};

export type LoadUnit = (typeof LoadUnit)[keyof typeof LoadUnit]


export const DistanceUnit: {
  METRES: 'METRES',
  KILOMETRES: 'KILOMETRES',
  YARDS: 'YARDS',
  MILES: 'MILES'
};

export type DistanceUnit = (typeof DistanceUnit)[keyof typeof DistanceUnit]


export const TimeUnit: {
  HOURS: 'HOURS',
  MINUTES: 'MINUTES',
  SECONDS: 'SECONDS'
};

export type TimeUnit = (typeof TimeUnit)[keyof typeof TimeUnit]


export const BenchmarkType: {
  MAXLOAD: 'MAXLOAD',
  FASTESTTIME: 'FASTESTTIME',
  UNBROKENREPS: 'UNBROKENREPS',
  UNBROKENTIME: 'UNBROKENTIME'
};

export type BenchmarkType = (typeof BenchmarkType)[keyof typeof BenchmarkType]


export const DifficultyLevel: {
  LIGHT: 'LIGHT',
  CHALLENGING: 'CHALLENGING',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED',
  ELITE: 'ELITE'
};

export type DifficultyLevel = (typeof DifficultyLevel)[keyof typeof DifficultyLevel]


export const ContentAccessScope: {
  PUBLIC: 'PUBLIC',
  GROUP: 'GROUP',
  PRIVATE: 'PRIVATE'
};

export type ContentAccessScope = (typeof ContentAccessScope)[keyof typeof ContentAccessScope]


export const WorkoutSetGeneratorType: {
  LADDERUP: 'LADDERUP',
  LADDERDOWN: 'LADDERDOWN',
  PYRAMIDUP: 'PYRAMIDUP',
  PYRAMIDDOWN: 'PYRAMIDDOWN'
};

export type WorkoutSetGeneratorType = (typeof WorkoutSetGeneratorType)[keyof typeof WorkoutSetGeneratorType]


export const WorkoutSetGeneratorTarget: {
  REPS: 'REPS',
  LOAD: 'LOAD'
};

export type WorkoutSetGeneratorTarget = (typeof WorkoutSetGeneratorTarget)[keyof typeof WorkoutSetGeneratorTarget]


export const BodyweightUnit: {
  KG: 'KG',
  LB: 'LB'
};

export type BodyweightUnit = (typeof BodyweightUnit)[keyof typeof BodyweightUnit]


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js (ORM replacement)
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admin.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js (ORM replacement)
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admin.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<any>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

  /**
   * Executes a raw query and returns the number of affected rows
   * @example
   * ```
   * // With parameters use prisma.$executeRaw``, values will be escaped automatically
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE id = ${1};`
   * // Or
   * const result = await prisma.$executeRaw('UPDATE User SET cool = $1 WHERE id = $2 ;', true, 1)
  * ```
  * 
  * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  */
  $executeRaw < T = any > (query: string | TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a raw query and returns the SELECT data
   * @example
   * ```
   * // With parameters use prisma.$queryRaw``, values will be escaped automatically
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'ema.il'};`
   * // Or
   * const result = await prisma.$queryRaw('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'ema.il')
  * ```
  * 
  * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  */
  $queryRaw < T = any > (query: string | TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>

      /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<GlobalReject>;

  /**
   * `prisma.bodyArea`: Exposes CRUD operations for the **BodyArea** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BodyAreas
    * const bodyAreas = await prisma.bodyArea.findMany()
    * ```
    */
  get bodyArea(): Prisma.BodyAreaDelegate<GlobalReject>;

  /**
   * `prisma.bodyAreaMoveScore`: Exposes CRUD operations for the **BodyAreaMoveScore** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BodyAreaMoveScores
    * const bodyAreaMoveScores = await prisma.bodyAreaMoveScore.findMany()
    * ```
    */
  get bodyAreaMoveScore(): Prisma.BodyAreaMoveScoreDelegate<GlobalReject>;

  /**
   * `prisma.equipment`: Exposes CRUD operations for the **Equipment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Equipment
    * const equipment = await prisma.equipment.findMany()
    * ```
    */
  get equipment(): Prisma.EquipmentDelegate<GlobalReject>;

  /**
   * `prisma.move`: Exposes CRUD operations for the **Move** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Moves
    * const moves = await prisma.move.findMany()
    * ```
    */
  get move(): Prisma.MoveDelegate<GlobalReject>;

  /**
   * `prisma.moveType`: Exposes CRUD operations for the **MoveType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MoveTypes
    * const moveTypes = await prisma.moveType.findMany()
    * ```
    */
  get moveType(): Prisma.MoveTypeDelegate<GlobalReject>;

  /**
   * `prisma.workoutGoal`: Exposes CRUD operations for the **WorkoutGoal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutGoals
    * const workoutGoals = await prisma.workoutGoal.findMany()
    * ```
    */
  get workoutGoal(): Prisma.WorkoutGoalDelegate<GlobalReject>;

  /**
   * `prisma.workoutSectionType`: Exposes CRUD operations for the **WorkoutSectionType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutSectionTypes
    * const workoutSectionTypes = await prisma.workoutSectionType.findMany()
    * ```
    */
  get workoutSectionType(): Prisma.WorkoutSectionTypeDelegate<GlobalReject>;

  /**
   * `prisma.collection`: Exposes CRUD operations for the **Collection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections
    * const collections = await prisma.collection.findMany()
    * ```
    */
  get collection(): Prisma.CollectionDelegate<GlobalReject>;

  /**
   * `prisma.gymProfile`: Exposes CRUD operations for the **GymProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GymProfiles
    * const gymProfiles = await prisma.gymProfile.findMany()
    * ```
    */
  get gymProfile(): Prisma.GymProfileDelegate<GlobalReject>;

  /**
   * `prisma.scheduledWorkout`: Exposes CRUD operations for the **ScheduledWorkout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ScheduledWorkouts
    * const scheduledWorkouts = await prisma.scheduledWorkout.findMany()
    * ```
    */
  get scheduledWorkout(): Prisma.ScheduledWorkoutDelegate<GlobalReject>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<GlobalReject>;

  /**
   * `prisma.userBenchmarkGroup`: Exposes CRUD operations for the **UserBenchmarkGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserBenchmarkGroups
    * const userBenchmarkGroups = await prisma.userBenchmarkGroup.findMany()
    * ```
    */
  get userBenchmarkGroup(): Prisma.UserBenchmarkGroupDelegate<GlobalReject>;

  /**
   * `prisma.userBenchmark`: Exposes CRUD operations for the **UserBenchmark** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserBenchmarks
    * const userBenchmarks = await prisma.userBenchmark.findMany()
    * ```
    */
  get userBenchmark(): Prisma.UserBenchmarkDelegate<GlobalReject>;

  /**
   * `prisma.userBenchmarkEntry`: Exposes CRUD operations for the **UserBenchmarkEntry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserBenchmarkEntries
    * const userBenchmarkEntries = await prisma.userBenchmarkEntry.findMany()
    * ```
    */
  get userBenchmarkEntry(): Prisma.UserBenchmarkEntryDelegate<GlobalReject>;

  /**
   * `prisma.workout`: Exposes CRUD operations for the **Workout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Workouts
    * const workouts = await prisma.workout.findMany()
    * ```
    */
  get workout(): Prisma.WorkoutDelegate<GlobalReject>;

  /**
   * `prisma.workoutTag`: Exposes CRUD operations for the **WorkoutTag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutTags
    * const workoutTags = await prisma.workoutTag.findMany()
    * ```
    */
  get workoutTag(): Prisma.WorkoutTagDelegate<GlobalReject>;

  /**
   * `prisma.workoutSection`: Exposes CRUD operations for the **WorkoutSection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutSections
    * const workoutSections = await prisma.workoutSection.findMany()
    * ```
    */
  get workoutSection(): Prisma.WorkoutSectionDelegate<GlobalReject>;

  /**
   * `prisma.workoutSet`: Exposes CRUD operations for the **WorkoutSet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutSets
    * const workoutSets = await prisma.workoutSet.findMany()
    * ```
    */
  get workoutSet(): Prisma.WorkoutSetDelegate<GlobalReject>;

  /**
   * `prisma.workoutSetIntervalBuyIn`: Exposes CRUD operations for the **WorkoutSetIntervalBuyIn** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutSetIntervalBuyIns
    * const workoutSetIntervalBuyIns = await prisma.workoutSetIntervalBuyIn.findMany()
    * ```
    */
  get workoutSetIntervalBuyIn(): Prisma.WorkoutSetIntervalBuyInDelegate<GlobalReject>;

  /**
   * `prisma.workoutSetGenerator`: Exposes CRUD operations for the **WorkoutSetGenerator** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutSetGenerators
    * const workoutSetGenerators = await prisma.workoutSetGenerator.findMany()
    * ```
    */
  get workoutSetGenerator(): Prisma.WorkoutSetGeneratorDelegate<GlobalReject>;

  /**
   * `prisma.workoutMove`: Exposes CRUD operations for the **WorkoutMove** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutMoves
    * const workoutMoves = await prisma.workoutMove.findMany()
    * ```
    */
  get workoutMove(): Prisma.WorkoutMoveDelegate<GlobalReject>;

  /**
   * `prisma.workoutPlan`: Exposes CRUD operations for the **WorkoutPlan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutPlans
    * const workoutPlans = await prisma.workoutPlan.findMany()
    * ```
    */
  get workoutPlan(): Prisma.WorkoutPlanDelegate<GlobalReject>;

  /**
   * `prisma.workoutPlanDay`: Exposes CRUD operations for the **WorkoutPlanDay** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutPlanDays
    * const workoutPlanDays = await prisma.workoutPlanDay.findMany()
    * ```
    */
  get workoutPlanDay(): Prisma.WorkoutPlanDayDelegate<GlobalReject>;

  /**
   * `prisma.workoutPlanDayWorkout`: Exposes CRUD operations for the **WorkoutPlanDayWorkout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutPlanDayWorkouts
    * const workoutPlanDayWorkouts = await prisma.workoutPlanDayWorkout.findMany()
    * ```
    */
  get workoutPlanDayWorkout(): Prisma.WorkoutPlanDayWorkoutDelegate<GlobalReject>;

  /**
   * `prisma.workoutPlanEnrolment`: Exposes CRUD operations for the **WorkoutPlanEnrolment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutPlanEnrolments
    * const workoutPlanEnrolments = await prisma.workoutPlanEnrolment.findMany()
    * ```
    */
  get workoutPlanEnrolment(): Prisma.WorkoutPlanEnrolmentDelegate<GlobalReject>;

  /**
   * `prisma.workoutPlanReview`: Exposes CRUD operations for the **WorkoutPlanReview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkoutPlanReviews
    * const workoutPlanReviews = await prisma.workoutPlanReview.findMany()
    * ```
    */
  get workoutPlanReview(): Prisma.WorkoutPlanReviewDelegate<GlobalReject>;

  /**
   * `prisma.loggedWorkout`: Exposes CRUD operations for the **LoggedWorkout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LoggedWorkouts
    * const loggedWorkouts = await prisma.loggedWorkout.findMany()
    * ```
    */
  get loggedWorkout(): Prisma.LoggedWorkoutDelegate<GlobalReject>;

  /**
   * `prisma.loggedWorkoutSection`: Exposes CRUD operations for the **LoggedWorkoutSection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LoggedWorkoutSections
    * const loggedWorkoutSections = await prisma.loggedWorkoutSection.findMany()
    * ```
    */
  get loggedWorkoutSection(): Prisma.LoggedWorkoutSectionDelegate<GlobalReject>;

  /**
   * `prisma.loggedWorkoutSet`: Exposes CRUD operations for the **LoggedWorkoutSet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LoggedWorkoutSets
    * const loggedWorkoutSets = await prisma.loggedWorkoutSet.findMany()
    * ```
    */
  get loggedWorkoutSet(): Prisma.LoggedWorkoutSetDelegate<GlobalReject>;

  /**
   * `prisma.loggedWorkoutMove`: Exposes CRUD operations for the **LoggedWorkoutMove** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LoggedWorkoutMoves
    * const loggedWorkoutMoves = await prisma.loggedWorkoutMove.findMany()
    * ```
    */
  get loggedWorkoutMove(): Prisma.LoggedWorkoutMoveDelegate<GlobalReject>;

  /**
   * `prisma.progressJournal`: Exposes CRUD operations for the **ProgressJournal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournals
    * const progressJournals = await prisma.progressJournal.findMany()
    * ```
    */
  get progressJournal(): Prisma.ProgressJournalDelegate<GlobalReject>;

  /**
   * `prisma.progressJournalEntry`: Exposes CRUD operations for the **ProgressJournalEntry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournalEntries
    * const progressJournalEntries = await prisma.progressJournalEntry.findMany()
    * ```
    */
  get progressJournalEntry(): Prisma.ProgressJournalEntryDelegate<GlobalReject>;

  /**
   * `prisma.progressJournalGoal`: Exposes CRUD operations for the **ProgressJournalGoal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournalGoals
    * const progressJournalGoals = await prisma.progressJournalGoal.findMany()
    * ```
    */
  get progressJournalGoal(): Prisma.ProgressJournalGoalDelegate<GlobalReject>;

  /**
   * `prisma.progressJournalGoalTag`: Exposes CRUD operations for the **ProgressJournalGoalTag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgressJournalGoalTags
    * const progressJournalGoalTags = await prisma.progressJournalGoalTag.findMany()
    * ```
    */
  get progressJournalGoalTag(): Prisma.ProgressJournalGoalTagDelegate<GlobalReject>;

  /**
   * `prisma.discoverFeatured`: Exposes CRUD operations for the **DiscoverFeatured** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoverFeatureds
    * const discoverFeatureds = await prisma.discoverFeatured.findMany()
    * ```
    */
  get discoverFeatured(): Prisma.DiscoverFeaturedDelegate<GlobalReject>;

  /**
   * `prisma.discoverWorkoutCategory`: Exposes CRUD operations for the **DiscoverWorkoutCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoverWorkoutCategories
    * const discoverWorkoutCategories = await prisma.discoverWorkoutCategory.findMany()
    * ```
    */
  get discoverWorkoutCategory(): Prisma.DiscoverWorkoutCategoryDelegate<GlobalReject>;

  /**
   * `prisma.discoverWorkout`: Exposes CRUD operations for the **DiscoverWorkout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoverWorkouts
    * const discoverWorkouts = await prisma.discoverWorkout.findMany()
    * ```
    */
  get discoverWorkout(): Prisma.DiscoverWorkoutDelegate<GlobalReject>;

  /**
   * `prisma.discoverWorkoutPlanCategory`: Exposes CRUD operations for the **DiscoverWorkoutPlanCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoverWorkoutPlanCategories
    * const discoverWorkoutPlanCategories = await prisma.discoverWorkoutPlanCategory.findMany()
    * ```
    */
  get discoverWorkoutPlanCategory(): Prisma.DiscoverWorkoutPlanCategoryDelegate<GlobalReject>;

  /**
   * `prisma.discoverWorkoutPlan`: Exposes CRUD operations for the **DiscoverWorkoutPlan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoverWorkoutPlans
    * const discoverWorkoutPlans = await prisma.discoverWorkoutPlan.findMany()
    * ```
    */
  get discoverWorkoutPlan(): Prisma.DiscoverWorkoutPlanDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  /**
   * Prisma Client JS version: 2.28.0
   * Query Engine version: 89facabd0366f63911d089156a7a70125bfbcd27
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | null | JsonObject | JsonArray

  /**
   * Same as JsonObject, but allows undefined
   */
  export type InputJsonObject = {[Key in string]?: JsonValue}
 
  export interface InputJsonArray extends Array<JsonValue> {}
 
  export type InputJsonValue = undefined |  string | number | boolean | null | InputJsonObject | InputJsonArray
   type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Buffer
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    Admin: 'Admin',
    BodyArea: 'BodyArea',
    BodyAreaMoveScore: 'BodyAreaMoveScore',
    Equipment: 'Equipment',
    Move: 'Move',
    MoveType: 'MoveType',
    WorkoutGoal: 'WorkoutGoal',
    WorkoutSectionType: 'WorkoutSectionType',
    Collection: 'Collection',
    GymProfile: 'GymProfile',
    ScheduledWorkout: 'ScheduledWorkout',
    User: 'User',
    UserBenchmarkGroup: 'UserBenchmarkGroup',
    UserBenchmark: 'UserBenchmark',
    UserBenchmarkEntry: 'UserBenchmarkEntry',
    Workout: 'Workout',
    WorkoutTag: 'WorkoutTag',
    WorkoutSection: 'WorkoutSection',
    WorkoutSet: 'WorkoutSet',
    WorkoutSetIntervalBuyIn: 'WorkoutSetIntervalBuyIn',
    WorkoutSetGenerator: 'WorkoutSetGenerator',
    WorkoutMove: 'WorkoutMove',
    WorkoutPlan: 'WorkoutPlan',
    WorkoutPlanDay: 'WorkoutPlanDay',
    WorkoutPlanDayWorkout: 'WorkoutPlanDayWorkout',
    WorkoutPlanEnrolment: 'WorkoutPlanEnrolment',
    WorkoutPlanReview: 'WorkoutPlanReview',
    LoggedWorkout: 'LoggedWorkout',
    LoggedWorkoutSection: 'LoggedWorkoutSection',
    LoggedWorkoutSet: 'LoggedWorkoutSet',
    LoggedWorkoutMove: 'LoggedWorkoutMove',
    ProgressJournal: 'ProgressJournal',
    ProgressJournalEntry: 'ProgressJournalEntry',
    ProgressJournalGoal: 'ProgressJournalGoal',
    ProgressJournalGoalTag: 'ProgressJournalGoalTag',
    DiscoverFeatured: 'DiscoverFeatured',
    DiscoverWorkoutCategory: 'DiscoverWorkoutCategory',
    DiscoverWorkout: 'DiscoverWorkout',
    DiscoverWorkoutPlanCategory: 'DiscoverWorkoutPlanCategory',
    DiscoverWorkoutPlan: 'DiscoverWorkoutPlan'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends boolean
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     *  * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your prisma.schema file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined; 
  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model Admin
   */


  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
    max: AdminMaxAggregateOutputType | null
  }

  export type AdminMinAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    username: string | null
  }

  export type AdminMaxAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    username: string | null
  }

  export type AdminCountAggregateOutputType = {
    id: number
    firebaseUid: number
    createdAt: number
    username: number
    _all: number
  }


  export type AdminMinAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    username?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    username?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    username?: true
    _all?: true
  }

  export type AdminAggregateArgs = {
    /**
     * Filter which Admin to aggregate.
     * 
    **/
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     * 
    **/
    orderBy?: Enumerable<AdminOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }


    
    
  export type AdminGroupByArgs = {
    where?: AdminWhereInput
    orderBy?: Enumerable<AdminOrderByInput>
    by: Array<AdminScalarFieldEnum>
    having?: AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }


  export type AdminGroupByOutputType = {
    id: string
    firebaseUid: string
    createdAt: Date
    username: string
    _count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends AdminGroupByArgs> = Promise<
    Array<
      PickArray<AdminGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], AdminGroupByOutputType[P]> 
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      > 
    >


  export type AdminSelect = {
    id?: boolean
    firebaseUid?: boolean
    createdAt?: boolean
    username?: boolean
  }

  export type AdminGetPayload<
    S extends boolean | null | undefined | AdminArgs,
    U = keyof S
      > = S extends true
        ? Admin
    : S extends undefined
    ? never
    : S extends AdminArgs | AdminFindManyArgs
    ?'include' extends U
    ? Admin 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Admin ?Admin [P]
  : 
     never
  } 
    : Admin
  : Admin


  type AdminCountArgs = Merge<
    Omit<AdminFindManyArgs, 'select' | 'include'> & {
      select?: AdminCountAggregateInputType | true
    }
  >

  export interface AdminDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AdminFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, AdminFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Admin'> extends True ? CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>> : CheckSelect<T, Prisma__AdminClient<Admin | null >, Prisma__AdminClient<AdminGetPayload<T> | null >>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AdminFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, AdminFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Admin'> extends True ? CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>> : CheckSelect<T, Prisma__AdminClient<Admin | null >, Prisma__AdminClient<AdminGetPayload<T> | null >>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AdminFindManyArgs>(
      args?: SelectSubset<T, AdminFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Admin>>, PrismaPromise<Array<AdminGetPayload<T>>>>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
    **/
    create<T extends AdminCreateArgs>(
      args: SelectSubset<T, AdminCreateArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Create many Admins.
     *     @param {AdminCreateManyArgs} args - Arguments to create many Admins.
     *     @example
     *     // Create many Admins
     *     const admin = await prisma.admin.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AdminCreateManyArgs>(
      args?: SelectSubset<T, AdminCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
    **/
    delete<T extends AdminDeleteArgs>(
      args: SelectSubset<T, AdminDeleteArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AdminUpdateArgs>(
      args: SelectSubset<T, AdminUpdateArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AdminDeleteManyArgs>(
      args?: SelectSubset<T, AdminDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AdminUpdateManyArgs>(
      args: SelectSubset<T, AdminUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
    **/
    upsert<T extends AdminUpsertArgs>(
      args: SelectSubset<T, AdminUpsertArgs>
    ): CheckSelect<T, Prisma__AdminClient<Admin>, Prisma__AdminClient<AdminGetPayload<T>>>

    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminGroupByArgs['orderBy'] }
        : { orderBy?: AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__AdminClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
    /**
     * Throw an Error if a Admin can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Admin to fetch.
     * 
    **/
    where: AdminWhereUniqueInput
  }


  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
    /**
     * Throw an Error if a Admin can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Admin to fetch.
     * 
    **/
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     * 
    **/
    orderBy?: Enumerable<AdminOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     * 
    **/
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     * 
    **/
    distinct?: Enumerable<AdminScalarFieldEnum>
  }


  /**
   * Admin findMany
   */
  export type AdminFindManyArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
    /**
     * Filter, which Admins to fetch.
     * 
    **/
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     * 
    **/
    orderBy?: Enumerable<AdminOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     * 
    **/
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     * 
    **/
    skip?: number
    distinct?: Enumerable<AdminScalarFieldEnum>
  }


  /**
   * Admin create
   */
  export type AdminCreateArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
    /**
     * The data needed to create a Admin.
     * 
    **/
    data: XOR<AdminCreateInput, AdminUncheckedCreateInput>
  }


  /**
   * Admin createMany
   */
  export type AdminCreateManyArgs = {
    data: Enumerable<AdminCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Admin update
   */
  export type AdminUpdateArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
    /**
     * The data needed to update a Admin.
     * 
    **/
    data: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
    /**
     * Choose, which Admin to update.
     * 
    **/
    where: AdminWhereUniqueInput
  }


  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs = {
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    where?: AdminWhereInput
  }


  /**
   * Admin upsert
   */
  export type AdminUpsertArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
    /**
     * The filter to search for the Admin to update in case it exists.
     * 
    **/
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
     * 
    **/
    create: XOR<AdminCreateInput, AdminUncheckedCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
  }


  /**
   * Admin delete
   */
  export type AdminDeleteArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
    /**
     * Filter which Admin to delete.
     * 
    **/
    where: AdminWhereUniqueInput
  }


  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs = {
    where?: AdminWhereInput
  }


  /**
   * Admin without action
   */
  export type AdminArgs = {
    /**
     * Select specific fields to fetch from the Admin
     * 
    **/
    select?: AdminSelect | null
  }



  /**
   * Model BodyArea
   */


  export type AggregateBodyArea = {
    _count: BodyAreaCountAggregateOutputType | null
    count: BodyAreaCountAggregateOutputType | null
    _min: BodyAreaMinAggregateOutputType | null
    min: BodyAreaMinAggregateOutputType | null
    _max: BodyAreaMaxAggregateOutputType | null
    max: BodyAreaMaxAggregateOutputType | null
  }

  export type BodyAreaMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    frontBack: BodyAreaFrontBack | null
    upperLower: BodyAreaUpperLower | null
  }

  export type BodyAreaMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    frontBack: BodyAreaFrontBack | null
    upperLower: BodyAreaUpperLower | null
  }

  export type BodyAreaCountAggregateOutputType = {
    id: number
    createdAt: number
    name: number
    altNames: number
    frontBack: number
    upperLower: number
    _all: number
  }


  export type BodyAreaMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    frontBack?: true
    upperLower?: true
  }

  export type BodyAreaMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    frontBack?: true
    upperLower?: true
  }

  export type BodyAreaCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    frontBack?: true
    upperLower?: true
    _all?: true
  }

  export type BodyAreaAggregateArgs = {
    /**
     * Filter which BodyArea to aggregate.
     * 
    **/
    where?: BodyAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreas to fetch.
     * 
    **/
    orderBy?: Enumerable<BodyAreaOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: BodyAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BodyAreas
    **/
    _count?: true | BodyAreaCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | BodyAreaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BodyAreaMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: BodyAreaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BodyAreaMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: BodyAreaMaxAggregateInputType
  }

  export type GetBodyAreaAggregateType<T extends BodyAreaAggregateArgs> = {
        [P in keyof T & keyof AggregateBodyArea]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBodyArea[P]>
      : GetScalarType<T[P], AggregateBodyArea[P]>
  }


    
    
  export type BodyAreaGroupByArgs = {
    where?: BodyAreaWhereInput
    orderBy?: Enumerable<BodyAreaOrderByInput>
    by: Array<BodyAreaScalarFieldEnum>
    having?: BodyAreaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BodyAreaCountAggregateInputType | true
    _min?: BodyAreaMinAggregateInputType
    _max?: BodyAreaMaxAggregateInputType
  }


  export type BodyAreaGroupByOutputType = {
    id: string
    createdAt: Date
    name: string
    altNames: string | null
    frontBack: BodyAreaFrontBack
    upperLower: BodyAreaUpperLower
    _count: BodyAreaCountAggregateOutputType | null
    _min: BodyAreaMinAggregateOutputType | null
    _max: BodyAreaMaxAggregateOutputType | null
  }

  type GetBodyAreaGroupByPayload<T extends BodyAreaGroupByArgs> = Promise<
    Array<
      PickArray<BodyAreaGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof BodyAreaGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], BodyAreaGroupByOutputType[P]> 
            : GetScalarType<T[P], BodyAreaGroupByOutputType[P]>
        }
      > 
    >


  export type BodyAreaSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    altNames?: boolean
    BodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
    frontBack?: boolean
    upperLower?: boolean
  }

  export type BodyAreaInclude = {
    BodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
  }

  export type BodyAreaGetPayload<
    S extends boolean | null | undefined | BodyAreaArgs,
    U = keyof S
      > = S extends true
        ? BodyArea
    : S extends undefined
    ? never
    : S extends BodyAreaArgs | BodyAreaFindManyArgs
    ?'include' extends U
    ? BodyArea  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'BodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof BodyArea ?BodyArea [P]
  : 
          P extends 'BodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['select'][P]>>  : never
  } 
    : BodyArea
  : BodyArea


  type BodyAreaCountArgs = Merge<
    Omit<BodyAreaFindManyArgs, 'select' | 'include'> & {
      select?: BodyAreaCountAggregateInputType | true
    }
  >

  export interface BodyAreaDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one BodyArea that matches the filter.
     * @param {BodyAreaFindUniqueArgs} args - Arguments to find a BodyArea
     * @example
     * // Get one BodyArea
     * const bodyArea = await prisma.bodyArea.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends BodyAreaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, BodyAreaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'BodyArea'> extends True ? CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaClient<BodyArea | null >, Prisma__BodyAreaClient<BodyAreaGetPayload<T> | null >>

    /**
     * Find the first BodyArea that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaFindFirstArgs} args - Arguments to find a BodyArea
     * @example
     * // Get one BodyArea
     * const bodyArea = await prisma.bodyArea.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends BodyAreaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, BodyAreaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'BodyArea'> extends True ? CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaClient<BodyArea | null >, Prisma__BodyAreaClient<BodyAreaGetPayload<T> | null >>

    /**
     * Find zero or more BodyAreas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BodyAreas
     * const bodyAreas = await prisma.bodyArea.findMany()
     * 
     * // Get first 10 BodyAreas
     * const bodyAreas = await prisma.bodyArea.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bodyAreaWithIdOnly = await prisma.bodyArea.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends BodyAreaFindManyArgs>(
      args?: SelectSubset<T, BodyAreaFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<BodyArea>>, PrismaPromise<Array<BodyAreaGetPayload<T>>>>

    /**
     * Create a BodyArea.
     * @param {BodyAreaCreateArgs} args - Arguments to create a BodyArea.
     * @example
     * // Create one BodyArea
     * const BodyArea = await prisma.bodyArea.create({
     *   data: {
     *     // ... data to create a BodyArea
     *   }
     * })
     * 
    **/
    create<T extends BodyAreaCreateArgs>(
      args: SelectSubset<T, BodyAreaCreateArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Create many BodyAreas.
     *     @param {BodyAreaCreateManyArgs} args - Arguments to create many BodyAreas.
     *     @example
     *     // Create many BodyAreas
     *     const bodyArea = await prisma.bodyArea.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends BodyAreaCreateManyArgs>(
      args?: SelectSubset<T, BodyAreaCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a BodyArea.
     * @param {BodyAreaDeleteArgs} args - Arguments to delete one BodyArea.
     * @example
     * // Delete one BodyArea
     * const BodyArea = await prisma.bodyArea.delete({
     *   where: {
     *     // ... filter to delete one BodyArea
     *   }
     * })
     * 
    **/
    delete<T extends BodyAreaDeleteArgs>(
      args: SelectSubset<T, BodyAreaDeleteArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Update one BodyArea.
     * @param {BodyAreaUpdateArgs} args - Arguments to update one BodyArea.
     * @example
     * // Update one BodyArea
     * const bodyArea = await prisma.bodyArea.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends BodyAreaUpdateArgs>(
      args: SelectSubset<T, BodyAreaUpdateArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Delete zero or more BodyAreas.
     * @param {BodyAreaDeleteManyArgs} args - Arguments to filter BodyAreas to delete.
     * @example
     * // Delete a few BodyAreas
     * const { count } = await prisma.bodyArea.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends BodyAreaDeleteManyArgs>(
      args?: SelectSubset<T, BodyAreaDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more BodyAreas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BodyAreas
     * const bodyArea = await prisma.bodyArea.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends BodyAreaUpdateManyArgs>(
      args: SelectSubset<T, BodyAreaUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one BodyArea.
     * @param {BodyAreaUpsertArgs} args - Arguments to update or create a BodyArea.
     * @example
     * // Update or create a BodyArea
     * const bodyArea = await prisma.bodyArea.upsert({
     *   create: {
     *     // ... data to create a BodyArea
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BodyArea we want to update
     *   }
     * })
    **/
    upsert<T extends BodyAreaUpsertArgs>(
      args: SelectSubset<T, BodyAreaUpsertArgs>
    ): CheckSelect<T, Prisma__BodyAreaClient<BodyArea>, Prisma__BodyAreaClient<BodyAreaGetPayload<T>>>

    /**
     * Count the number of BodyAreas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaCountArgs} args - Arguments to filter BodyAreas to count.
     * @example
     * // Count the number of BodyAreas
     * const count = await prisma.bodyArea.count({
     *   where: {
     *     // ... the filter for the BodyAreas we want to count
     *   }
     * })
    **/
    count<T extends BodyAreaCountArgs>(
      args?: Subset<T, BodyAreaCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BodyAreaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BodyArea.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BodyAreaAggregateArgs>(args: Subset<T, BodyAreaAggregateArgs>): PrismaPromise<GetBodyAreaAggregateType<T>>

    /**
     * Group by BodyArea.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BodyAreaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BodyAreaGroupByArgs['orderBy'] }
        : { orderBy?: BodyAreaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BodyAreaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBodyAreaGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for BodyArea.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__BodyAreaClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    BodyAreaMoveScores<T extends BodyAreaMoveScoreFindManyArgs = {}>(args?: Subset<T, BodyAreaMoveScoreFindManyArgs>): CheckSelect<T, PrismaPromise<Array<BodyAreaMoveScore>>, PrismaPromise<Array<BodyAreaMoveScoreGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * BodyArea findUnique
   */
  export type BodyAreaFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
    /**
     * Throw an Error if a BodyArea can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyArea to fetch.
     * 
    **/
    where: BodyAreaWhereUniqueInput
  }


  /**
   * BodyArea findFirst
   */
  export type BodyAreaFindFirstArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
    /**
     * Throw an Error if a BodyArea can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyArea to fetch.
     * 
    **/
    where?: BodyAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreas to fetch.
     * 
    **/
    orderBy?: Enumerable<BodyAreaOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BodyAreas.
     * 
    **/
    cursor?: BodyAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BodyAreas.
     * 
    **/
    distinct?: Enumerable<BodyAreaScalarFieldEnum>
  }


  /**
   * BodyArea findMany
   */
  export type BodyAreaFindManyArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
    /**
     * Filter, which BodyAreas to fetch.
     * 
    **/
    where?: BodyAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreas to fetch.
     * 
    **/
    orderBy?: Enumerable<BodyAreaOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BodyAreas.
     * 
    **/
    cursor?: BodyAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreas.
     * 
    **/
    skip?: number
    distinct?: Enumerable<BodyAreaScalarFieldEnum>
  }


  /**
   * BodyArea create
   */
  export type BodyAreaCreateArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
    /**
     * The data needed to create a BodyArea.
     * 
    **/
    data: XOR<BodyAreaCreateInput, BodyAreaUncheckedCreateInput>
  }


  /**
   * BodyArea createMany
   */
  export type BodyAreaCreateManyArgs = {
    data: Enumerable<BodyAreaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * BodyArea update
   */
  export type BodyAreaUpdateArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
    /**
     * The data needed to update a BodyArea.
     * 
    **/
    data: XOR<BodyAreaUpdateInput, BodyAreaUncheckedUpdateInput>
    /**
     * Choose, which BodyArea to update.
     * 
    **/
    where: BodyAreaWhereUniqueInput
  }


  /**
   * BodyArea updateMany
   */
  export type BodyAreaUpdateManyArgs = {
    data: XOR<BodyAreaUpdateManyMutationInput, BodyAreaUncheckedUpdateManyInput>
    where?: BodyAreaWhereInput
  }


  /**
   * BodyArea upsert
   */
  export type BodyAreaUpsertArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
    /**
     * The filter to search for the BodyArea to update in case it exists.
     * 
    **/
    where: BodyAreaWhereUniqueInput
    /**
     * In case the BodyArea found by the `where` argument doesn't exist, create a new BodyArea with this data.
     * 
    **/
    create: XOR<BodyAreaCreateInput, BodyAreaUncheckedCreateInput>
    /**
     * In case the BodyArea was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<BodyAreaUpdateInput, BodyAreaUncheckedUpdateInput>
  }


  /**
   * BodyArea delete
   */
  export type BodyAreaDeleteArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
    /**
     * Filter which BodyArea to delete.
     * 
    **/
    where: BodyAreaWhereUniqueInput
  }


  /**
   * BodyArea deleteMany
   */
  export type BodyAreaDeleteManyArgs = {
    where?: BodyAreaWhereInput
  }


  /**
   * BodyArea without action
   */
  export type BodyAreaArgs = {
    /**
     * Select specific fields to fetch from the BodyArea
     * 
    **/
    select?: BodyAreaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaInclude | null
  }



  /**
   * Model BodyAreaMoveScore
   */


  export type AggregateBodyAreaMoveScore = {
    _count: BodyAreaMoveScoreCountAggregateOutputType | null
    count: BodyAreaMoveScoreCountAggregateOutputType | null
    _avg: BodyAreaMoveScoreAvgAggregateOutputType | null
    avg: BodyAreaMoveScoreAvgAggregateOutputType | null
    _sum: BodyAreaMoveScoreSumAggregateOutputType | null
    sum: BodyAreaMoveScoreSumAggregateOutputType | null
    _min: BodyAreaMoveScoreMinAggregateOutputType | null
    min: BodyAreaMoveScoreMinAggregateOutputType | null
    _max: BodyAreaMoveScoreMaxAggregateOutputType | null
    max: BodyAreaMoveScoreMaxAggregateOutputType | null
  }

  export type BodyAreaMoveScoreAvgAggregateOutputType = {
    score: number | null
  }

  export type BodyAreaMoveScoreSumAggregateOutputType = {
    score: number | null
  }

  export type BodyAreaMoveScoreMinAggregateOutputType = {
    createdAt: Date | null
    moveId: string | null
    bodyAreaId: string | null
    score: number | null
  }

  export type BodyAreaMoveScoreMaxAggregateOutputType = {
    createdAt: Date | null
    moveId: string | null
    bodyAreaId: string | null
    score: number | null
  }

  export type BodyAreaMoveScoreCountAggregateOutputType = {
    createdAt: number
    moveId: number
    bodyAreaId: number
    score: number
    _all: number
  }


  export type BodyAreaMoveScoreAvgAggregateInputType = {
    score?: true
  }

  export type BodyAreaMoveScoreSumAggregateInputType = {
    score?: true
  }

  export type BodyAreaMoveScoreMinAggregateInputType = {
    createdAt?: true
    moveId?: true
    bodyAreaId?: true
    score?: true
  }

  export type BodyAreaMoveScoreMaxAggregateInputType = {
    createdAt?: true
    moveId?: true
    bodyAreaId?: true
    score?: true
  }

  export type BodyAreaMoveScoreCountAggregateInputType = {
    createdAt?: true
    moveId?: true
    bodyAreaId?: true
    score?: true
    _all?: true
  }

  export type BodyAreaMoveScoreAggregateArgs = {
    /**
     * Filter which BodyAreaMoveScore to aggregate.
     * 
    **/
    where?: BodyAreaMoveScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreaMoveScores to fetch.
     * 
    **/
    orderBy?: Enumerable<BodyAreaMoveScoreOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: BodyAreaMoveScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreaMoveScores from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreaMoveScores.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BodyAreaMoveScores
    **/
    _count?: true | BodyAreaMoveScoreCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | BodyAreaMoveScoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BodyAreaMoveScoreAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: BodyAreaMoveScoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BodyAreaMoveScoreSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: BodyAreaMoveScoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BodyAreaMoveScoreMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: BodyAreaMoveScoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BodyAreaMoveScoreMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: BodyAreaMoveScoreMaxAggregateInputType
  }

  export type GetBodyAreaMoveScoreAggregateType<T extends BodyAreaMoveScoreAggregateArgs> = {
        [P in keyof T & keyof AggregateBodyAreaMoveScore]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBodyAreaMoveScore[P]>
      : GetScalarType<T[P], AggregateBodyAreaMoveScore[P]>
  }


    
    
  export type BodyAreaMoveScoreGroupByArgs = {
    where?: BodyAreaMoveScoreWhereInput
    orderBy?: Enumerable<BodyAreaMoveScoreOrderByInput>
    by: Array<BodyAreaMoveScoreScalarFieldEnum>
    having?: BodyAreaMoveScoreScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BodyAreaMoveScoreCountAggregateInputType | true
    _avg?: BodyAreaMoveScoreAvgAggregateInputType
    _sum?: BodyAreaMoveScoreSumAggregateInputType
    _min?: BodyAreaMoveScoreMinAggregateInputType
    _max?: BodyAreaMoveScoreMaxAggregateInputType
  }


  export type BodyAreaMoveScoreGroupByOutputType = {
    createdAt: Date
    moveId: string
    bodyAreaId: string
    score: number
    _count: BodyAreaMoveScoreCountAggregateOutputType | null
    _avg: BodyAreaMoveScoreAvgAggregateOutputType | null
    _sum: BodyAreaMoveScoreSumAggregateOutputType | null
    _min: BodyAreaMoveScoreMinAggregateOutputType | null
    _max: BodyAreaMoveScoreMaxAggregateOutputType | null
  }

  type GetBodyAreaMoveScoreGroupByPayload<T extends BodyAreaMoveScoreGroupByArgs> = Promise<
    Array<
      PickArray<BodyAreaMoveScoreGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof BodyAreaMoveScoreGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], BodyAreaMoveScoreGroupByOutputType[P]> 
            : GetScalarType<T[P], BodyAreaMoveScoreGroupByOutputType[P]>
        }
      > 
    >


  export type BodyAreaMoveScoreSelect = {
    createdAt?: boolean
    Move?: boolean | MoveArgs
    moveId?: boolean
    BodyArea?: boolean | BodyAreaArgs
    bodyAreaId?: boolean
    score?: boolean
  }

  export type BodyAreaMoveScoreInclude = {
    Move?: boolean | MoveArgs
    BodyArea?: boolean | BodyAreaArgs
  }

  export type BodyAreaMoveScoreGetPayload<
    S extends boolean | null | undefined | BodyAreaMoveScoreArgs,
    U = keyof S
      > = S extends true
        ? BodyAreaMoveScore
    : S extends undefined
    ? never
    : S extends BodyAreaMoveScoreArgs | BodyAreaMoveScoreFindManyArgs
    ?'include' extends U
    ? BodyAreaMoveScore  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'Move'
        ? MoveGetPayload<S['include'][P]> :
        P extends 'BodyArea'
        ? BodyAreaGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof BodyAreaMoveScore ?BodyAreaMoveScore [P]
  : 
          P extends 'Move'
        ? MoveGetPayload<S['select'][P]> :
        P extends 'BodyArea'
        ? BodyAreaGetPayload<S['select'][P]> : never
  } 
    : BodyAreaMoveScore
  : BodyAreaMoveScore


  type BodyAreaMoveScoreCountArgs = Merge<
    Omit<BodyAreaMoveScoreFindManyArgs, 'select' | 'include'> & {
      select?: BodyAreaMoveScoreCountAggregateInputType | true
    }
  >

  export interface BodyAreaMoveScoreDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one BodyAreaMoveScore that matches the filter.
     * @param {BodyAreaMoveScoreFindUniqueArgs} args - Arguments to find a BodyAreaMoveScore
     * @example
     * // Get one BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends BodyAreaMoveScoreFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, BodyAreaMoveScoreFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'BodyAreaMoveScore'> extends True ? CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore | null >, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T> | null >>

    /**
     * Find the first BodyAreaMoveScore that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreFindFirstArgs} args - Arguments to find a BodyAreaMoveScore
     * @example
     * // Get one BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends BodyAreaMoveScoreFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, BodyAreaMoveScoreFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'BodyAreaMoveScore'> extends True ? CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>> : CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore | null >, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T> | null >>

    /**
     * Find zero or more BodyAreaMoveScores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BodyAreaMoveScores
     * const bodyAreaMoveScores = await prisma.bodyAreaMoveScore.findMany()
     * 
     * // Get first 10 BodyAreaMoveScores
     * const bodyAreaMoveScores = await prisma.bodyAreaMoveScore.findMany({ take: 10 })
     * 
     * // Only select the `createdAt`
     * const bodyAreaMoveScoreWithCreatedAtOnly = await prisma.bodyAreaMoveScore.findMany({ select: { createdAt: true } })
     * 
    **/
    findMany<T extends BodyAreaMoveScoreFindManyArgs>(
      args?: SelectSubset<T, BodyAreaMoveScoreFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<BodyAreaMoveScore>>, PrismaPromise<Array<BodyAreaMoveScoreGetPayload<T>>>>

    /**
     * Create a BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreCreateArgs} args - Arguments to create a BodyAreaMoveScore.
     * @example
     * // Create one BodyAreaMoveScore
     * const BodyAreaMoveScore = await prisma.bodyAreaMoveScore.create({
     *   data: {
     *     // ... data to create a BodyAreaMoveScore
     *   }
     * })
     * 
    **/
    create<T extends BodyAreaMoveScoreCreateArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreCreateArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Create many BodyAreaMoveScores.
     *     @param {BodyAreaMoveScoreCreateManyArgs} args - Arguments to create many BodyAreaMoveScores.
     *     @example
     *     // Create many BodyAreaMoveScores
     *     const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends BodyAreaMoveScoreCreateManyArgs>(
      args?: SelectSubset<T, BodyAreaMoveScoreCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreDeleteArgs} args - Arguments to delete one BodyAreaMoveScore.
     * @example
     * // Delete one BodyAreaMoveScore
     * const BodyAreaMoveScore = await prisma.bodyAreaMoveScore.delete({
     *   where: {
     *     // ... filter to delete one BodyAreaMoveScore
     *   }
     * })
     * 
    **/
    delete<T extends BodyAreaMoveScoreDeleteArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreDeleteArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Update one BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreUpdateArgs} args - Arguments to update one BodyAreaMoveScore.
     * @example
     * // Update one BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends BodyAreaMoveScoreUpdateArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreUpdateArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Delete zero or more BodyAreaMoveScores.
     * @param {BodyAreaMoveScoreDeleteManyArgs} args - Arguments to filter BodyAreaMoveScores to delete.
     * @example
     * // Delete a few BodyAreaMoveScores
     * const { count } = await prisma.bodyAreaMoveScore.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends BodyAreaMoveScoreDeleteManyArgs>(
      args?: SelectSubset<T, BodyAreaMoveScoreDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more BodyAreaMoveScores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BodyAreaMoveScores
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends BodyAreaMoveScoreUpdateManyArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one BodyAreaMoveScore.
     * @param {BodyAreaMoveScoreUpsertArgs} args - Arguments to update or create a BodyAreaMoveScore.
     * @example
     * // Update or create a BodyAreaMoveScore
     * const bodyAreaMoveScore = await prisma.bodyAreaMoveScore.upsert({
     *   create: {
     *     // ... data to create a BodyAreaMoveScore
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BodyAreaMoveScore we want to update
     *   }
     * })
    **/
    upsert<T extends BodyAreaMoveScoreUpsertArgs>(
      args: SelectSubset<T, BodyAreaMoveScoreUpsertArgs>
    ): CheckSelect<T, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScore>, Prisma__BodyAreaMoveScoreClient<BodyAreaMoveScoreGetPayload<T>>>

    /**
     * Count the number of BodyAreaMoveScores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreCountArgs} args - Arguments to filter BodyAreaMoveScores to count.
     * @example
     * // Count the number of BodyAreaMoveScores
     * const count = await prisma.bodyAreaMoveScore.count({
     *   where: {
     *     // ... the filter for the BodyAreaMoveScores we want to count
     *   }
     * })
    **/
    count<T extends BodyAreaMoveScoreCountArgs>(
      args?: Subset<T, BodyAreaMoveScoreCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BodyAreaMoveScoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BodyAreaMoveScore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BodyAreaMoveScoreAggregateArgs>(args: Subset<T, BodyAreaMoveScoreAggregateArgs>): PrismaPromise<GetBodyAreaMoveScoreAggregateType<T>>

    /**
     * Group by BodyAreaMoveScore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyAreaMoveScoreGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BodyAreaMoveScoreGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BodyAreaMoveScoreGroupByArgs['orderBy'] }
        : { orderBy?: BodyAreaMoveScoreGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BodyAreaMoveScoreGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBodyAreaMoveScoreGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for BodyAreaMoveScore.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__BodyAreaMoveScoreClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    Move<T extends MoveArgs = {}>(args?: Subset<T, MoveArgs>): CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>;

    BodyArea<T extends BodyAreaArgs = {}>(args?: Subset<T, BodyAreaArgs>): CheckSelect<T, Prisma__BodyAreaClient<BodyArea | null >, Prisma__BodyAreaClient<BodyAreaGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * BodyAreaMoveScore findUnique
   */
  export type BodyAreaMoveScoreFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Throw an Error if a BodyAreaMoveScore can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyAreaMoveScore to fetch.
     * 
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
  }


  /**
   * BodyAreaMoveScore findFirst
   */
  export type BodyAreaMoveScoreFindFirstArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Throw an Error if a BodyAreaMoveScore can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which BodyAreaMoveScore to fetch.
     * 
    **/
    where?: BodyAreaMoveScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreaMoveScores to fetch.
     * 
    **/
    orderBy?: Enumerable<BodyAreaMoveScoreOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BodyAreaMoveScores.
     * 
    **/
    cursor?: BodyAreaMoveScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreaMoveScores from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreaMoveScores.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BodyAreaMoveScores.
     * 
    **/
    distinct?: Enumerable<BodyAreaMoveScoreScalarFieldEnum>
  }


  /**
   * BodyAreaMoveScore findMany
   */
  export type BodyAreaMoveScoreFindManyArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Filter, which BodyAreaMoveScores to fetch.
     * 
    **/
    where?: BodyAreaMoveScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyAreaMoveScores to fetch.
     * 
    **/
    orderBy?: Enumerable<BodyAreaMoveScoreOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BodyAreaMoveScores.
     * 
    **/
    cursor?: BodyAreaMoveScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyAreaMoveScores from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyAreaMoveScores.
     * 
    **/
    skip?: number
    distinct?: Enumerable<BodyAreaMoveScoreScalarFieldEnum>
  }


  /**
   * BodyAreaMoveScore create
   */
  export type BodyAreaMoveScoreCreateArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * The data needed to create a BodyAreaMoveScore.
     * 
    **/
    data: XOR<BodyAreaMoveScoreCreateInput, BodyAreaMoveScoreUncheckedCreateInput>
  }


  /**
   * BodyAreaMoveScore createMany
   */
  export type BodyAreaMoveScoreCreateManyArgs = {
    data: Enumerable<BodyAreaMoveScoreCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * BodyAreaMoveScore update
   */
  export type BodyAreaMoveScoreUpdateArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * The data needed to update a BodyAreaMoveScore.
     * 
    **/
    data: XOR<BodyAreaMoveScoreUpdateInput, BodyAreaMoveScoreUncheckedUpdateInput>
    /**
     * Choose, which BodyAreaMoveScore to update.
     * 
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
  }


  /**
   * BodyAreaMoveScore updateMany
   */
  export type BodyAreaMoveScoreUpdateManyArgs = {
    data: XOR<BodyAreaMoveScoreUpdateManyMutationInput, BodyAreaMoveScoreUncheckedUpdateManyInput>
    where?: BodyAreaMoveScoreWhereInput
  }


  /**
   * BodyAreaMoveScore upsert
   */
  export type BodyAreaMoveScoreUpsertArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * The filter to search for the BodyAreaMoveScore to update in case it exists.
     * 
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
    /**
     * In case the BodyAreaMoveScore found by the `where` argument doesn't exist, create a new BodyAreaMoveScore with this data.
     * 
    **/
    create: XOR<BodyAreaMoveScoreCreateInput, BodyAreaMoveScoreUncheckedCreateInput>
    /**
     * In case the BodyAreaMoveScore was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<BodyAreaMoveScoreUpdateInput, BodyAreaMoveScoreUncheckedUpdateInput>
  }


  /**
   * BodyAreaMoveScore delete
   */
  export type BodyAreaMoveScoreDeleteArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
    /**
     * Filter which BodyAreaMoveScore to delete.
     * 
    **/
    where: BodyAreaMoveScoreWhereUniqueInput
  }


  /**
   * BodyAreaMoveScore deleteMany
   */
  export type BodyAreaMoveScoreDeleteManyArgs = {
    where?: BodyAreaMoveScoreWhereInput
  }


  /**
   * BodyAreaMoveScore without action
   */
  export type BodyAreaMoveScoreArgs = {
    /**
     * Select specific fields to fetch from the BodyAreaMoveScore
     * 
    **/
    select?: BodyAreaMoveScoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: BodyAreaMoveScoreInclude | null
  }



  /**
   * Model Equipment
   */


  export type AggregateEquipment = {
    _count: EquipmentCountAggregateOutputType | null
    count: EquipmentCountAggregateOutputType | null
    _min: EquipmentMinAggregateOutputType | null
    min: EquipmentMinAggregateOutputType | null
    _max: EquipmentMaxAggregateOutputType | null
    max: EquipmentMaxAggregateOutputType | null
  }

  export type EquipmentMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    imageUrl: string | null
    loadAdjustable: boolean | null
  }

  export type EquipmentMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    altNames: string | null
    imageUrl: string | null
    loadAdjustable: boolean | null
  }

  export type EquipmentCountAggregateOutputType = {
    id: number
    createdAt: number
    name: number
    altNames: number
    imageUrl: number
    loadAdjustable: number
    _all: number
  }


  export type EquipmentMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    imageUrl?: true
    loadAdjustable?: true
  }

  export type EquipmentMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    imageUrl?: true
    loadAdjustable?: true
  }

  export type EquipmentCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    altNames?: true
    imageUrl?: true
    loadAdjustable?: true
    _all?: true
  }

  export type EquipmentAggregateArgs = {
    /**
     * Filter which Equipment to aggregate.
     * 
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Equipment
    **/
    _count?: true | EquipmentCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | EquipmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipmentMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: EquipmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipmentMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: EquipmentMaxAggregateInputType
  }

  export type GetEquipmentAggregateType<T extends EquipmentAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipment[P]>
      : GetScalarType<T[P], AggregateEquipment[P]>
  }


    
    
  export type EquipmentGroupByArgs = {
    where?: EquipmentWhereInput
    orderBy?: Enumerable<EquipmentOrderByInput>
    by: Array<EquipmentScalarFieldEnum>
    having?: EquipmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipmentCountAggregateInputType | true
    _min?: EquipmentMinAggregateInputType
    _max?: EquipmentMaxAggregateInputType
  }


  export type EquipmentGroupByOutputType = {
    id: string
    createdAt: Date
    name: string
    altNames: string | null
    imageUrl: string | null
    loadAdjustable: boolean
    _count: EquipmentCountAggregateOutputType | null
    _min: EquipmentMinAggregateOutputType | null
    _max: EquipmentMaxAggregateOutputType | null
  }

  type GetEquipmentGroupByPayload<T extends EquipmentGroupByArgs> = Promise<
    Array<
      PickArray<EquipmentGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof EquipmentGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], EquipmentGroupByOutputType[P]> 
            : GetScalarType<T[P], EquipmentGroupByOutputType[P]>
        }
      > 
    >


  export type EquipmentSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    altNames?: boolean
    imageUrl?: boolean
    loadAdjustable?: boolean
    RequiredForMoves?: boolean | MoveFindManyArgs
    SelectableForMoves?: boolean | MoveFindManyArgs
    GymProfiles?: boolean | GymProfileFindManyArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type EquipmentInclude = {
    RequiredForMoves?: boolean | MoveFindManyArgs
    SelectableForMoves?: boolean | MoveFindManyArgs
    GymProfiles?: boolean | GymProfileFindManyArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type EquipmentGetPayload<
    S extends boolean | null | undefined | EquipmentArgs,
    U = keyof S
      > = S extends true
        ? Equipment
    : S extends undefined
    ? never
    : S extends EquipmentArgs | EquipmentFindManyArgs
    ?'include' extends U
    ? Equipment  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'RequiredForMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  :
        P extends 'SelectableForMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  :
        P extends 'GymProfiles'
        ? Array < GymProfileGetPayload<S['include'][P]>>  :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Equipment ?Equipment [P]
  : 
          P extends 'RequiredForMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  :
        P extends 'SelectableForMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  :
        P extends 'GymProfiles'
        ? Array < GymProfileGetPayload<S['select'][P]>>  :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['select'][P]>>  : never
  } 
    : Equipment
  : Equipment


  type EquipmentCountArgs = Merge<
    Omit<EquipmentFindManyArgs, 'select' | 'include'> & {
      select?: EquipmentCountAggregateInputType | true
    }
  >

  export interface EquipmentDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Equipment that matches the filter.
     * @param {EquipmentFindUniqueArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EquipmentFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, EquipmentFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Equipment'> extends True ? CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>> : CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>

    /**
     * Find the first Equipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentFindFirstArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EquipmentFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, EquipmentFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Equipment'> extends True ? CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>> : CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>

    /**
     * Find zero or more Equipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Equipment
     * const equipment = await prisma.equipment.findMany()
     * 
     * // Get first 10 Equipment
     * const equipment = await prisma.equipment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipmentWithIdOnly = await prisma.equipment.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EquipmentFindManyArgs>(
      args?: SelectSubset<T, EquipmentFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>

    /**
     * Create a Equipment.
     * @param {EquipmentCreateArgs} args - Arguments to create a Equipment.
     * @example
     * // Create one Equipment
     * const Equipment = await prisma.equipment.create({
     *   data: {
     *     // ... data to create a Equipment
     *   }
     * })
     * 
    **/
    create<T extends EquipmentCreateArgs>(
      args: SelectSubset<T, EquipmentCreateArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Create many Equipment.
     *     @param {EquipmentCreateManyArgs} args - Arguments to create many Equipment.
     *     @example
     *     // Create many Equipment
     *     const equipment = await prisma.equipment.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EquipmentCreateManyArgs>(
      args?: SelectSubset<T, EquipmentCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Equipment.
     * @param {EquipmentDeleteArgs} args - Arguments to delete one Equipment.
     * @example
     * // Delete one Equipment
     * const Equipment = await prisma.equipment.delete({
     *   where: {
     *     // ... filter to delete one Equipment
     *   }
     * })
     * 
    **/
    delete<T extends EquipmentDeleteArgs>(
      args: SelectSubset<T, EquipmentDeleteArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Update one Equipment.
     * @param {EquipmentUpdateArgs} args - Arguments to update one Equipment.
     * @example
     * // Update one Equipment
     * const equipment = await prisma.equipment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EquipmentUpdateArgs>(
      args: SelectSubset<T, EquipmentUpdateArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Delete zero or more Equipment.
     * @param {EquipmentDeleteManyArgs} args - Arguments to filter Equipment to delete.
     * @example
     * // Delete a few Equipment
     * const { count } = await prisma.equipment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EquipmentDeleteManyArgs>(
      args?: SelectSubset<T, EquipmentDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Equipment
     * const equipment = await prisma.equipment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EquipmentUpdateManyArgs>(
      args: SelectSubset<T, EquipmentUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Equipment.
     * @param {EquipmentUpsertArgs} args - Arguments to update or create a Equipment.
     * @example
     * // Update or create a Equipment
     * const equipment = await prisma.equipment.upsert({
     *   create: {
     *     // ... data to create a Equipment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Equipment we want to update
     *   }
     * })
    **/
    upsert<T extends EquipmentUpsertArgs>(
      args: SelectSubset<T, EquipmentUpsertArgs>
    ): CheckSelect<T, Prisma__EquipmentClient<Equipment>, Prisma__EquipmentClient<EquipmentGetPayload<T>>>

    /**
     * Count the number of Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentCountArgs} args - Arguments to filter Equipment to count.
     * @example
     * // Count the number of Equipment
     * const count = await prisma.equipment.count({
     *   where: {
     *     // ... the filter for the Equipment we want to count
     *   }
     * })
    **/
    count<T extends EquipmentCountArgs>(
      args?: Subset<T, EquipmentCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipmentAggregateArgs>(args: Subset<T, EquipmentAggregateArgs>): PrismaPromise<GetEquipmentAggregateType<T>>

    /**
     * Group by Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipmentGroupByArgs['orderBy'] }
        : { orderBy?: EquipmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipmentGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Equipment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__EquipmentClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    RequiredForMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    SelectableForMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    GymProfiles<T extends GymProfileFindManyArgs = {}>(args?: Subset<T, GymProfileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<GymProfile>>, PrismaPromise<Array<GymProfileGetPayload<T>>>>;

    WorkoutMoves<T extends WorkoutMoveFindManyArgs = {}>(args?: Subset<T, WorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>;

    LoggedWorkoutMoves<T extends LoggedWorkoutMoveFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutMove>>, PrismaPromise<Array<LoggedWorkoutMoveGetPayload<T>>>>;

    UserBenchmarks<T extends UserBenchmarkFindManyArgs = {}>(args?: Subset<T, UserBenchmarkFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Equipment findUnique
   */
  export type EquipmentFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Throw an Error if a Equipment can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment findFirst
   */
  export type EquipmentFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Throw an Error if a Equipment can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipment.
     * 
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipment.
     * 
    **/
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * Equipment findMany
   */
  export type EquipmentFindManyArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Equipment.
     * 
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
     * 
    **/
    skip?: number
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * Equipment create
   */
  export type EquipmentCreateArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * The data needed to create a Equipment.
     * 
    **/
    data: XOR<EquipmentCreateInput, EquipmentUncheckedCreateInput>
  }


  /**
   * Equipment createMany
   */
  export type EquipmentCreateManyArgs = {
    data: Enumerable<EquipmentCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Equipment update
   */
  export type EquipmentUpdateArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * The data needed to update a Equipment.
     * 
    **/
    data: XOR<EquipmentUpdateInput, EquipmentUncheckedUpdateInput>
    /**
     * Choose, which Equipment to update.
     * 
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment updateMany
   */
  export type EquipmentUpdateManyArgs = {
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyInput>
    where?: EquipmentWhereInput
  }


  /**
   * Equipment upsert
   */
  export type EquipmentUpsertArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * The filter to search for the Equipment to update in case it exists.
     * 
    **/
    where: EquipmentWhereUniqueInput
    /**
     * In case the Equipment found by the `where` argument doesn't exist, create a new Equipment with this data.
     * 
    **/
    create: XOR<EquipmentCreateInput, EquipmentUncheckedCreateInput>
    /**
     * In case the Equipment was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<EquipmentUpdateInput, EquipmentUncheckedUpdateInput>
  }


  /**
   * Equipment delete
   */
  export type EquipmentDeleteArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter which Equipment to delete.
     * 
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment deleteMany
   */
  export type EquipmentDeleteManyArgs = {
    where?: EquipmentWhereInput
  }


  /**
   * Equipment without action
   */
  export type EquipmentArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
  }



  /**
   * Model Move
   */


  export type AggregateMove = {
    _count: MoveCountAggregateOutputType | null
    count: MoveCountAggregateOutputType | null
    _min: MoveMinAggregateOutputType | null
    min: MoveMinAggregateOutputType | null
    _max: MoveMaxAggregateOutputType | null
    max: MoveMaxAggregateOutputType | null
  }

  export type MoveMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    userId: string | null
    scope: MoveScope | null
    name: string | null
    searchTerms: string | null
    description: string | null
    demoVideoUri: string | null
    demoVideoThumbUri: string | null
    moveTypeId: string | null
  }

  export type MoveMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    userId: string | null
    scope: MoveScope | null
    name: string | null
    searchTerms: string | null
    description: string | null
    demoVideoUri: string | null
    demoVideoThumbUri: string | null
    moveTypeId: string | null
  }

  export type MoveCountAggregateOutputType = {
    id: number
    createdAt: number
    archived: number
    userId: number
    scope: number
    name: number
    searchTerms: number
    description: number
    demoVideoUri: number
    demoVideoThumbUri: number
    validRepTypes: number
    moveTypeId: number
    _all: number
  }


  export type MoveMinAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    scope?: true
    name?: true
    searchTerms?: true
    description?: true
    demoVideoUri?: true
    demoVideoThumbUri?: true
    moveTypeId?: true
  }

  export type MoveMaxAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    scope?: true
    name?: true
    searchTerms?: true
    description?: true
    demoVideoUri?: true
    demoVideoThumbUri?: true
    moveTypeId?: true
  }

  export type MoveCountAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    scope?: true
    name?: true
    searchTerms?: true
    description?: true
    demoVideoUri?: true
    demoVideoThumbUri?: true
    validRepTypes?: true
    moveTypeId?: true
    _all?: true
  }

  export type MoveAggregateArgs = {
    /**
     * Filter which Move to aggregate.
     * 
    **/
    where?: MoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moves to fetch.
     * 
    **/
    orderBy?: Enumerable<MoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: MoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moves.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Moves
    **/
    _count?: true | MoveCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | MoveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MoveMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: MoveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MoveMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: MoveMaxAggregateInputType
  }

  export type GetMoveAggregateType<T extends MoveAggregateArgs> = {
        [P in keyof T & keyof AggregateMove]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMove[P]>
      : GetScalarType<T[P], AggregateMove[P]>
  }


    
    
  export type MoveGroupByArgs = {
    where?: MoveWhereInput
    orderBy?: Enumerable<MoveOrderByInput>
    by: Array<MoveScalarFieldEnum>
    having?: MoveScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MoveCountAggregateInputType | true
    _min?: MoveMinAggregateInputType
    _max?: MoveMaxAggregateInputType
  }


  export type MoveGroupByOutputType = {
    id: string
    createdAt: Date
    archived: boolean
    userId: string | null
    scope: MoveScope
    name: string
    searchTerms: string | null
    description: string | null
    demoVideoUri: string | null
    demoVideoThumbUri: string | null
    validRepTypes: WorkoutMoveRepType[]
    moveTypeId: string | null
    _count: MoveCountAggregateOutputType | null
    _min: MoveMinAggregateOutputType | null
    _max: MoveMaxAggregateOutputType | null
  }

  type GetMoveGroupByPayload<T extends MoveGroupByArgs> = Promise<
    Array<
      PickArray<MoveGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof MoveGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], MoveGroupByOutputType[P]> 
            : GetScalarType<T[P], MoveGroupByOutputType[P]>
        }
      > 
    >


  export type MoveSelect = {
    id?: boolean
    createdAt?: boolean
    archived?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    scope?: boolean
    name?: boolean
    searchTerms?: boolean
    description?: boolean
    demoVideoUri?: boolean
    demoVideoThumbUri?: boolean
    validRepTypes?: boolean
    MoveType?: boolean | MoveTypeArgs
    moveTypeId?: boolean
    RequiredEquipments?: boolean | EquipmentFindManyArgs
    SelectableEquipments?: boolean | EquipmentFindManyArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    BodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type MoveInclude = {
    User?: boolean | UserArgs
    MoveType?: boolean | MoveTypeArgs
    RequiredEquipments?: boolean | EquipmentFindManyArgs
    SelectableEquipments?: boolean | EquipmentFindManyArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    BodyAreaMoveScores?: boolean | BodyAreaMoveScoreFindManyArgs
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type MoveGetPayload<
    S extends boolean | null | undefined | MoveArgs,
    U = keyof S
      > = S extends true
        ? Move
    : S extends undefined
    ? never
    : S extends MoveArgs | MoveFindManyArgs
    ?'include' extends U
    ? Move  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> | null :
        P extends 'MoveType'
        ? MoveTypeGetPayload<S['include'][P]> | null :
        P extends 'RequiredEquipments'
        ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'SelectableEquipments'
        ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'BodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Move ?Move [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> | null :
        P extends 'MoveType'
        ? MoveTypeGetPayload<S['select'][P]> | null :
        P extends 'RequiredEquipments'
        ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'SelectableEquipments'
        ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'BodyAreaMoveScores'
        ? Array < BodyAreaMoveScoreGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['select'][P]>>  : never
  } 
    : Move
  : Move


  type MoveCountArgs = Merge<
    Omit<MoveFindManyArgs, 'select' | 'include'> & {
      select?: MoveCountAggregateInputType | true
    }
  >

  export interface MoveDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Move that matches the filter.
     * @param {MoveFindUniqueArgs} args - Arguments to find a Move
     * @example
     * // Get one Move
     * const move = await prisma.move.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MoveFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, MoveFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Move'> extends True ? CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>> : CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>

    /**
     * Find the first Move that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveFindFirstArgs} args - Arguments to find a Move
     * @example
     * // Get one Move
     * const move = await prisma.move.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MoveFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, MoveFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Move'> extends True ? CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>> : CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>

    /**
     * Find zero or more Moves that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Moves
     * const moves = await prisma.move.findMany()
     * 
     * // Get first 10 Moves
     * const moves = await prisma.move.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const moveWithIdOnly = await prisma.move.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MoveFindManyArgs>(
      args?: SelectSubset<T, MoveFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>

    /**
     * Create a Move.
     * @param {MoveCreateArgs} args - Arguments to create a Move.
     * @example
     * // Create one Move
     * const Move = await prisma.move.create({
     *   data: {
     *     // ... data to create a Move
     *   }
     * })
     * 
    **/
    create<T extends MoveCreateArgs>(
      args: SelectSubset<T, MoveCreateArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Create many Moves.
     *     @param {MoveCreateManyArgs} args - Arguments to create many Moves.
     *     @example
     *     // Create many Moves
     *     const move = await prisma.move.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends MoveCreateManyArgs>(
      args?: SelectSubset<T, MoveCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Move.
     * @param {MoveDeleteArgs} args - Arguments to delete one Move.
     * @example
     * // Delete one Move
     * const Move = await prisma.move.delete({
     *   where: {
     *     // ... filter to delete one Move
     *   }
     * })
     * 
    **/
    delete<T extends MoveDeleteArgs>(
      args: SelectSubset<T, MoveDeleteArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Update one Move.
     * @param {MoveUpdateArgs} args - Arguments to update one Move.
     * @example
     * // Update one Move
     * const move = await prisma.move.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MoveUpdateArgs>(
      args: SelectSubset<T, MoveUpdateArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Delete zero or more Moves.
     * @param {MoveDeleteManyArgs} args - Arguments to filter Moves to delete.
     * @example
     * // Delete a few Moves
     * const { count } = await prisma.move.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MoveDeleteManyArgs>(
      args?: SelectSubset<T, MoveDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Moves
     * const move = await prisma.move.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MoveUpdateManyArgs>(
      args: SelectSubset<T, MoveUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Move.
     * @param {MoveUpsertArgs} args - Arguments to update or create a Move.
     * @example
     * // Update or create a Move
     * const move = await prisma.move.upsert({
     *   create: {
     *     // ... data to create a Move
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Move we want to update
     *   }
     * })
    **/
    upsert<T extends MoveUpsertArgs>(
      args: SelectSubset<T, MoveUpsertArgs>
    ): CheckSelect<T, Prisma__MoveClient<Move>, Prisma__MoveClient<MoveGetPayload<T>>>

    /**
     * Count the number of Moves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveCountArgs} args - Arguments to filter Moves to count.
     * @example
     * // Count the number of Moves
     * const count = await prisma.move.count({
     *   where: {
     *     // ... the filter for the Moves we want to count
     *   }
     * })
    **/
    count<T extends MoveCountArgs>(
      args?: Subset<T, MoveCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MoveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Move.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MoveAggregateArgs>(args: Subset<T, MoveAggregateArgs>): PrismaPromise<GetMoveAggregateType<T>>

    /**
     * Group by Move.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MoveGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MoveGroupByArgs['orderBy'] }
        : { orderBy?: MoveGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MoveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMoveGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Move.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__MoveClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    MoveType<T extends MoveTypeArgs = {}>(args?: Subset<T, MoveTypeArgs>): CheckSelect<T, Prisma__MoveTypeClient<MoveType | null >, Prisma__MoveTypeClient<MoveTypeGetPayload<T> | null >>;

    RequiredEquipments<T extends EquipmentFindManyArgs = {}>(args?: Subset<T, EquipmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>;

    SelectableEquipments<T extends EquipmentFindManyArgs = {}>(args?: Subset<T, EquipmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>;

    WorkoutMoves<T extends WorkoutMoveFindManyArgs = {}>(args?: Subset<T, WorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>;

    BodyAreaMoveScores<T extends BodyAreaMoveScoreFindManyArgs = {}>(args?: Subset<T, BodyAreaMoveScoreFindManyArgs>): CheckSelect<T, PrismaPromise<Array<BodyAreaMoveScore>>, PrismaPromise<Array<BodyAreaMoveScoreGetPayload<T>>>>;

    LoggedWorkoutMoves<T extends LoggedWorkoutMoveFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutMove>>, PrismaPromise<Array<LoggedWorkoutMoveGetPayload<T>>>>;

    UserBenchmarks<T extends UserBenchmarkFindManyArgs = {}>(args?: Subset<T, UserBenchmarkFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Move findUnique
   */
  export type MoveFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
    /**
     * Throw an Error if a Move can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Move to fetch.
     * 
    **/
    where: MoveWhereUniqueInput
  }


  /**
   * Move findFirst
   */
  export type MoveFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
    /**
     * Throw an Error if a Move can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Move to fetch.
     * 
    **/
    where?: MoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moves to fetch.
     * 
    **/
    orderBy?: Enumerable<MoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Moves.
     * 
    **/
    cursor?: MoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moves.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Moves.
     * 
    **/
    distinct?: Enumerable<MoveScalarFieldEnum>
  }


  /**
   * Move findMany
   */
  export type MoveFindManyArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
    /**
     * Filter, which Moves to fetch.
     * 
    **/
    where?: MoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moves to fetch.
     * 
    **/
    orderBy?: Enumerable<MoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Moves.
     * 
    **/
    cursor?: MoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moves.
     * 
    **/
    skip?: number
    distinct?: Enumerable<MoveScalarFieldEnum>
  }


  /**
   * Move create
   */
  export type MoveCreateArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
    /**
     * The data needed to create a Move.
     * 
    **/
    data: XOR<MoveCreateInput, MoveUncheckedCreateInput>
  }


  /**
   * Move createMany
   */
  export type MoveCreateManyArgs = {
    data: Enumerable<MoveCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Move update
   */
  export type MoveUpdateArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
    /**
     * The data needed to update a Move.
     * 
    **/
    data: XOR<MoveUpdateInput, MoveUncheckedUpdateInput>
    /**
     * Choose, which Move to update.
     * 
    **/
    where: MoveWhereUniqueInput
  }


  /**
   * Move updateMany
   */
  export type MoveUpdateManyArgs = {
    data: XOR<MoveUpdateManyMutationInput, MoveUncheckedUpdateManyInput>
    where?: MoveWhereInput
  }


  /**
   * Move upsert
   */
  export type MoveUpsertArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
    /**
     * The filter to search for the Move to update in case it exists.
     * 
    **/
    where: MoveWhereUniqueInput
    /**
     * In case the Move found by the `where` argument doesn't exist, create a new Move with this data.
     * 
    **/
    create: XOR<MoveCreateInput, MoveUncheckedCreateInput>
    /**
     * In case the Move was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<MoveUpdateInput, MoveUncheckedUpdateInput>
  }


  /**
   * Move delete
   */
  export type MoveDeleteArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
    /**
     * Filter which Move to delete.
     * 
    **/
    where: MoveWhereUniqueInput
  }


  /**
   * Move deleteMany
   */
  export type MoveDeleteManyArgs = {
    where?: MoveWhereInput
  }


  /**
   * Move without action
   */
  export type MoveArgs = {
    /**
     * Select specific fields to fetch from the Move
     * 
    **/
    select?: MoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveInclude | null
  }



  /**
   * Model MoveType
   */


  export type AggregateMoveType = {
    _count: MoveTypeCountAggregateOutputType | null
    count: MoveTypeCountAggregateOutputType | null
    _min: MoveTypeMinAggregateOutputType | null
    min: MoveTypeMinAggregateOutputType | null
    _max: MoveTypeMaxAggregateOutputType | null
    max: MoveTypeMaxAggregateOutputType | null
  }

  export type MoveTypeMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    imageUri: string | null
  }

  export type MoveTypeMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    imageUri: string | null
  }

  export type MoveTypeCountAggregateOutputType = {
    id: number
    createdAt: number
    name: number
    description: number
    imageUri: number
    _all: number
  }


  export type MoveTypeMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUri?: true
  }

  export type MoveTypeMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUri?: true
  }

  export type MoveTypeCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    imageUri?: true
    _all?: true
  }

  export type MoveTypeAggregateArgs = {
    /**
     * Filter which MoveType to aggregate.
     * 
    **/
    where?: MoveTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveTypes to fetch.
     * 
    **/
    orderBy?: Enumerable<MoveTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: MoveTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveTypes from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveTypes.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MoveTypes
    **/
    _count?: true | MoveTypeCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | MoveTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MoveTypeMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: MoveTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MoveTypeMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: MoveTypeMaxAggregateInputType
  }

  export type GetMoveTypeAggregateType<T extends MoveTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateMoveType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMoveType[P]>
      : GetScalarType<T[P], AggregateMoveType[P]>
  }


    
    
  export type MoveTypeGroupByArgs = {
    where?: MoveTypeWhereInput
    orderBy?: Enumerable<MoveTypeOrderByInput>
    by: Array<MoveTypeScalarFieldEnum>
    having?: MoveTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MoveTypeCountAggregateInputType | true
    _min?: MoveTypeMinAggregateInputType
    _max?: MoveTypeMaxAggregateInputType
  }


  export type MoveTypeGroupByOutputType = {
    id: string
    createdAt: Date
    name: string
    description: string | null
    imageUri: string | null
    _count: MoveTypeCountAggregateOutputType | null
    _min: MoveTypeMinAggregateOutputType | null
    _max: MoveTypeMaxAggregateOutputType | null
  }

  type GetMoveTypeGroupByPayload<T extends MoveTypeGroupByArgs> = Promise<
    Array<
      PickArray<MoveTypeGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof MoveTypeGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], MoveTypeGroupByOutputType[P]> 
            : GetScalarType<T[P], MoveTypeGroupByOutputType[P]>
        }
      > 
    >


  export type MoveTypeSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    description?: boolean
    imageUri?: boolean
    Moves?: boolean | MoveFindManyArgs
  }

  export type MoveTypeInclude = {
    Moves?: boolean | MoveFindManyArgs
  }

  export type MoveTypeGetPayload<
    S extends boolean | null | undefined | MoveTypeArgs,
    U = keyof S
      > = S extends true
        ? MoveType
    : S extends undefined
    ? never
    : S extends MoveTypeArgs | MoveTypeFindManyArgs
    ?'include' extends U
    ? MoveType  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'Moves'
        ? Array < MoveGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof MoveType ?MoveType [P]
  : 
          P extends 'Moves'
        ? Array < MoveGetPayload<S['select'][P]>>  : never
  } 
    : MoveType
  : MoveType


  type MoveTypeCountArgs = Merge<
    Omit<MoveTypeFindManyArgs, 'select' | 'include'> & {
      select?: MoveTypeCountAggregateInputType | true
    }
  >

  export interface MoveTypeDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one MoveType that matches the filter.
     * @param {MoveTypeFindUniqueArgs} args - Arguments to find a MoveType
     * @example
     * // Get one MoveType
     * const moveType = await prisma.moveType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MoveTypeFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, MoveTypeFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'MoveType'> extends True ? CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>> : CheckSelect<T, Prisma__MoveTypeClient<MoveType | null >, Prisma__MoveTypeClient<MoveTypeGetPayload<T> | null >>

    /**
     * Find the first MoveType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeFindFirstArgs} args - Arguments to find a MoveType
     * @example
     * // Get one MoveType
     * const moveType = await prisma.moveType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MoveTypeFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, MoveTypeFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'MoveType'> extends True ? CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>> : CheckSelect<T, Prisma__MoveTypeClient<MoveType | null >, Prisma__MoveTypeClient<MoveTypeGetPayload<T> | null >>

    /**
     * Find zero or more MoveTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MoveTypes
     * const moveTypes = await prisma.moveType.findMany()
     * 
     * // Get first 10 MoveTypes
     * const moveTypes = await prisma.moveType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const moveTypeWithIdOnly = await prisma.moveType.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MoveTypeFindManyArgs>(
      args?: SelectSubset<T, MoveTypeFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<MoveType>>, PrismaPromise<Array<MoveTypeGetPayload<T>>>>

    /**
     * Create a MoveType.
     * @param {MoveTypeCreateArgs} args - Arguments to create a MoveType.
     * @example
     * // Create one MoveType
     * const MoveType = await prisma.moveType.create({
     *   data: {
     *     // ... data to create a MoveType
     *   }
     * })
     * 
    **/
    create<T extends MoveTypeCreateArgs>(
      args: SelectSubset<T, MoveTypeCreateArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Create many MoveTypes.
     *     @param {MoveTypeCreateManyArgs} args - Arguments to create many MoveTypes.
     *     @example
     *     // Create many MoveTypes
     *     const moveType = await prisma.moveType.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends MoveTypeCreateManyArgs>(
      args?: SelectSubset<T, MoveTypeCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a MoveType.
     * @param {MoveTypeDeleteArgs} args - Arguments to delete one MoveType.
     * @example
     * // Delete one MoveType
     * const MoveType = await prisma.moveType.delete({
     *   where: {
     *     // ... filter to delete one MoveType
     *   }
     * })
     * 
    **/
    delete<T extends MoveTypeDeleteArgs>(
      args: SelectSubset<T, MoveTypeDeleteArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Update one MoveType.
     * @param {MoveTypeUpdateArgs} args - Arguments to update one MoveType.
     * @example
     * // Update one MoveType
     * const moveType = await prisma.moveType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MoveTypeUpdateArgs>(
      args: SelectSubset<T, MoveTypeUpdateArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Delete zero or more MoveTypes.
     * @param {MoveTypeDeleteManyArgs} args - Arguments to filter MoveTypes to delete.
     * @example
     * // Delete a few MoveTypes
     * const { count } = await prisma.moveType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MoveTypeDeleteManyArgs>(
      args?: SelectSubset<T, MoveTypeDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more MoveTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MoveTypes
     * const moveType = await prisma.moveType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MoveTypeUpdateManyArgs>(
      args: SelectSubset<T, MoveTypeUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one MoveType.
     * @param {MoveTypeUpsertArgs} args - Arguments to update or create a MoveType.
     * @example
     * // Update or create a MoveType
     * const moveType = await prisma.moveType.upsert({
     *   create: {
     *     // ... data to create a MoveType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MoveType we want to update
     *   }
     * })
    **/
    upsert<T extends MoveTypeUpsertArgs>(
      args: SelectSubset<T, MoveTypeUpsertArgs>
    ): CheckSelect<T, Prisma__MoveTypeClient<MoveType>, Prisma__MoveTypeClient<MoveTypeGetPayload<T>>>

    /**
     * Count the number of MoveTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeCountArgs} args - Arguments to filter MoveTypes to count.
     * @example
     * // Count the number of MoveTypes
     * const count = await prisma.moveType.count({
     *   where: {
     *     // ... the filter for the MoveTypes we want to count
     *   }
     * })
    **/
    count<T extends MoveTypeCountArgs>(
      args?: Subset<T, MoveTypeCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MoveTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MoveType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MoveTypeAggregateArgs>(args: Subset<T, MoveTypeAggregateArgs>): PrismaPromise<GetMoveTypeAggregateType<T>>

    /**
     * Group by MoveType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoveTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MoveTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MoveTypeGroupByArgs['orderBy'] }
        : { orderBy?: MoveTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MoveTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMoveTypeGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for MoveType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__MoveTypeClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    Moves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * MoveType findUnique
   */
  export type MoveTypeFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
    /**
     * Throw an Error if a MoveType can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which MoveType to fetch.
     * 
    **/
    where: MoveTypeWhereUniqueInput
  }


  /**
   * MoveType findFirst
   */
  export type MoveTypeFindFirstArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
    /**
     * Throw an Error if a MoveType can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which MoveType to fetch.
     * 
    **/
    where?: MoveTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveTypes to fetch.
     * 
    **/
    orderBy?: Enumerable<MoveTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MoveTypes.
     * 
    **/
    cursor?: MoveTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveTypes from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveTypes.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MoveTypes.
     * 
    **/
    distinct?: Enumerable<MoveTypeScalarFieldEnum>
  }


  /**
   * MoveType findMany
   */
  export type MoveTypeFindManyArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
    /**
     * Filter, which MoveTypes to fetch.
     * 
    **/
    where?: MoveTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MoveTypes to fetch.
     * 
    **/
    orderBy?: Enumerable<MoveTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MoveTypes.
     * 
    **/
    cursor?: MoveTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MoveTypes from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MoveTypes.
     * 
    **/
    skip?: number
    distinct?: Enumerable<MoveTypeScalarFieldEnum>
  }


  /**
   * MoveType create
   */
  export type MoveTypeCreateArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
    /**
     * The data needed to create a MoveType.
     * 
    **/
    data: XOR<MoveTypeCreateInput, MoveTypeUncheckedCreateInput>
  }


  /**
   * MoveType createMany
   */
  export type MoveTypeCreateManyArgs = {
    data: Enumerable<MoveTypeCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * MoveType update
   */
  export type MoveTypeUpdateArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
    /**
     * The data needed to update a MoveType.
     * 
    **/
    data: XOR<MoveTypeUpdateInput, MoveTypeUncheckedUpdateInput>
    /**
     * Choose, which MoveType to update.
     * 
    **/
    where: MoveTypeWhereUniqueInput
  }


  /**
   * MoveType updateMany
   */
  export type MoveTypeUpdateManyArgs = {
    data: XOR<MoveTypeUpdateManyMutationInput, MoveTypeUncheckedUpdateManyInput>
    where?: MoveTypeWhereInput
  }


  /**
   * MoveType upsert
   */
  export type MoveTypeUpsertArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
    /**
     * The filter to search for the MoveType to update in case it exists.
     * 
    **/
    where: MoveTypeWhereUniqueInput
    /**
     * In case the MoveType found by the `where` argument doesn't exist, create a new MoveType with this data.
     * 
    **/
    create: XOR<MoveTypeCreateInput, MoveTypeUncheckedCreateInput>
    /**
     * In case the MoveType was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<MoveTypeUpdateInput, MoveTypeUncheckedUpdateInput>
  }


  /**
   * MoveType delete
   */
  export type MoveTypeDeleteArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
    /**
     * Filter which MoveType to delete.
     * 
    **/
    where: MoveTypeWhereUniqueInput
  }


  /**
   * MoveType deleteMany
   */
  export type MoveTypeDeleteManyArgs = {
    where?: MoveTypeWhereInput
  }


  /**
   * MoveType without action
   */
  export type MoveTypeArgs = {
    /**
     * Select specific fields to fetch from the MoveType
     * 
    **/
    select?: MoveTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MoveTypeInclude | null
  }



  /**
   * Model WorkoutGoal
   */


  export type AggregateWorkoutGoal = {
    _count: WorkoutGoalCountAggregateOutputType | null
    count: WorkoutGoalCountAggregateOutputType | null
    _min: WorkoutGoalMinAggregateOutputType | null
    min: WorkoutGoalMinAggregateOutputType | null
    _max: WorkoutGoalMaxAggregateOutputType | null
    max: WorkoutGoalMaxAggregateOutputType | null
  }

  export type WorkoutGoalMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    hexColor: string | null
  }

  export type WorkoutGoalMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    description: string | null
    hexColor: string | null
  }

  export type WorkoutGoalCountAggregateOutputType = {
    id: number
    createdAt: number
    name: number
    description: number
    hexColor: number
    _all: number
  }


  export type WorkoutGoalMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    hexColor?: true
  }

  export type WorkoutGoalMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    hexColor?: true
  }

  export type WorkoutGoalCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    description?: true
    hexColor?: true
    _all?: true
  }

  export type WorkoutGoalAggregateArgs = {
    /**
     * Filter which WorkoutGoal to aggregate.
     * 
    **/
    where?: WorkoutGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutGoals to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutGoals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutGoals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutGoals
    **/
    _count?: true | WorkoutGoalCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutGoalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutGoalMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutGoalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutGoalMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutGoalMaxAggregateInputType
  }

  export type GetWorkoutGoalAggregateType<T extends WorkoutGoalAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutGoal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutGoal[P]>
      : GetScalarType<T[P], AggregateWorkoutGoal[P]>
  }


    
    
  export type WorkoutGoalGroupByArgs = {
    where?: WorkoutGoalWhereInput
    orderBy?: Enumerable<WorkoutGoalOrderByInput>
    by: Array<WorkoutGoalScalarFieldEnum>
    having?: WorkoutGoalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutGoalCountAggregateInputType | true
    _min?: WorkoutGoalMinAggregateInputType
    _max?: WorkoutGoalMaxAggregateInputType
  }


  export type WorkoutGoalGroupByOutputType = {
    id: string
    createdAt: Date
    name: string
    description: string
    hexColor: string
    _count: WorkoutGoalCountAggregateOutputType | null
    _min: WorkoutGoalMinAggregateOutputType | null
    _max: WorkoutGoalMaxAggregateOutputType | null
  }

  type GetWorkoutGoalGroupByPayload<T extends WorkoutGoalGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutGoalGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutGoalGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutGoalGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutGoalGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutGoalSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    description?: boolean
    hexColor?: boolean
    Workouts?: boolean | WorkoutFindManyArgs
  }

  export type WorkoutGoalInclude = {
    Workouts?: boolean | WorkoutFindManyArgs
  }

  export type WorkoutGoalGetPayload<
    S extends boolean | null | undefined | WorkoutGoalArgs,
    U = keyof S
      > = S extends true
        ? WorkoutGoal
    : S extends undefined
    ? never
    : S extends WorkoutGoalArgs | WorkoutGoalFindManyArgs
    ?'include' extends U
    ? WorkoutGoal  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutGoal ?WorkoutGoal [P]
  : 
          P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutGoal
  : WorkoutGoal


  type WorkoutGoalCountArgs = Merge<
    Omit<WorkoutGoalFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutGoalCountAggregateInputType | true
    }
  >

  export interface WorkoutGoalDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutGoal that matches the filter.
     * @param {WorkoutGoalFindUniqueArgs} args - Arguments to find a WorkoutGoal
     * @example
     * // Get one WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutGoalFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutGoalFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutGoal'> extends True ? CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal | null >, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T> | null >>

    /**
     * Find the first WorkoutGoal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalFindFirstArgs} args - Arguments to find a WorkoutGoal
     * @example
     * // Get one WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutGoalFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutGoalFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutGoal'> extends True ? CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal | null >, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutGoals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutGoals
     * const workoutGoals = await prisma.workoutGoal.findMany()
     * 
     * // Get first 10 WorkoutGoals
     * const workoutGoals = await prisma.workoutGoal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutGoalWithIdOnly = await prisma.workoutGoal.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutGoalFindManyArgs>(
      args?: SelectSubset<T, WorkoutGoalFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutGoal>>, PrismaPromise<Array<WorkoutGoalGetPayload<T>>>>

    /**
     * Create a WorkoutGoal.
     * @param {WorkoutGoalCreateArgs} args - Arguments to create a WorkoutGoal.
     * @example
     * // Create one WorkoutGoal
     * const WorkoutGoal = await prisma.workoutGoal.create({
     *   data: {
     *     // ... data to create a WorkoutGoal
     *   }
     * })
     * 
    **/
    create<T extends WorkoutGoalCreateArgs>(
      args: SelectSubset<T, WorkoutGoalCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Create many WorkoutGoals.
     *     @param {WorkoutGoalCreateManyArgs} args - Arguments to create many WorkoutGoals.
     *     @example
     *     // Create many WorkoutGoals
     *     const workoutGoal = await prisma.workoutGoal.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutGoalCreateManyArgs>(
      args?: SelectSubset<T, WorkoutGoalCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutGoal.
     * @param {WorkoutGoalDeleteArgs} args - Arguments to delete one WorkoutGoal.
     * @example
     * // Delete one WorkoutGoal
     * const WorkoutGoal = await prisma.workoutGoal.delete({
     *   where: {
     *     // ... filter to delete one WorkoutGoal
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutGoalDeleteArgs>(
      args: SelectSubset<T, WorkoutGoalDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Update one WorkoutGoal.
     * @param {WorkoutGoalUpdateArgs} args - Arguments to update one WorkoutGoal.
     * @example
     * // Update one WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutGoalUpdateArgs>(
      args: SelectSubset<T, WorkoutGoalUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Delete zero or more WorkoutGoals.
     * @param {WorkoutGoalDeleteManyArgs} args - Arguments to filter WorkoutGoals to delete.
     * @example
     * // Delete a few WorkoutGoals
     * const { count } = await prisma.workoutGoal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutGoalDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutGoalDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutGoals
     * const workoutGoal = await prisma.workoutGoal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutGoalUpdateManyArgs>(
      args: SelectSubset<T, WorkoutGoalUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutGoal.
     * @param {WorkoutGoalUpsertArgs} args - Arguments to update or create a WorkoutGoal.
     * @example
     * // Update or create a WorkoutGoal
     * const workoutGoal = await prisma.workoutGoal.upsert({
     *   create: {
     *     // ... data to create a WorkoutGoal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutGoal we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutGoalUpsertArgs>(
      args: SelectSubset<T, WorkoutGoalUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutGoalClient<WorkoutGoal>, Prisma__WorkoutGoalClient<WorkoutGoalGetPayload<T>>>

    /**
     * Count the number of WorkoutGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalCountArgs} args - Arguments to filter WorkoutGoals to count.
     * @example
     * // Count the number of WorkoutGoals
     * const count = await prisma.workoutGoal.count({
     *   where: {
     *     // ... the filter for the WorkoutGoals we want to count
     *   }
     * })
    **/
    count<T extends WorkoutGoalCountArgs>(
      args?: Subset<T, WorkoutGoalCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutGoalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutGoal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutGoalAggregateArgs>(args: Subset<T, WorkoutGoalAggregateArgs>): PrismaPromise<GetWorkoutGoalAggregateType<T>>

    /**
     * Group by WorkoutGoal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGoalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutGoalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutGoalGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutGoalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutGoalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutGoalGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutGoal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutGoalClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    Workouts<T extends WorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutGoal findUnique
   */
  export type WorkoutGoalFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Throw an Error if a WorkoutGoal can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutGoal to fetch.
     * 
    **/
    where: WorkoutGoalWhereUniqueInput
  }


  /**
   * WorkoutGoal findFirst
   */
  export type WorkoutGoalFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Throw an Error if a WorkoutGoal can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutGoal to fetch.
     * 
    **/
    where?: WorkoutGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutGoals to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutGoals.
     * 
    **/
    cursor?: WorkoutGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutGoals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutGoals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutGoals.
     * 
    **/
    distinct?: Enumerable<WorkoutGoalScalarFieldEnum>
  }


  /**
   * WorkoutGoal findMany
   */
  export type WorkoutGoalFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Filter, which WorkoutGoals to fetch.
     * 
    **/
    where?: WorkoutGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutGoals to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutGoals.
     * 
    **/
    cursor?: WorkoutGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutGoals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutGoals.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutGoalScalarFieldEnum>
  }


  /**
   * WorkoutGoal create
   */
  export type WorkoutGoalCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
    /**
     * The data needed to create a WorkoutGoal.
     * 
    **/
    data: XOR<WorkoutGoalCreateInput, WorkoutGoalUncheckedCreateInput>
  }


  /**
   * WorkoutGoal createMany
   */
  export type WorkoutGoalCreateManyArgs = {
    data: Enumerable<WorkoutGoalCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutGoal update
   */
  export type WorkoutGoalUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
    /**
     * The data needed to update a WorkoutGoal.
     * 
    **/
    data: XOR<WorkoutGoalUpdateInput, WorkoutGoalUncheckedUpdateInput>
    /**
     * Choose, which WorkoutGoal to update.
     * 
    **/
    where: WorkoutGoalWhereUniqueInput
  }


  /**
   * WorkoutGoal updateMany
   */
  export type WorkoutGoalUpdateManyArgs = {
    data: XOR<WorkoutGoalUpdateManyMutationInput, WorkoutGoalUncheckedUpdateManyInput>
    where?: WorkoutGoalWhereInput
  }


  /**
   * WorkoutGoal upsert
   */
  export type WorkoutGoalUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
    /**
     * The filter to search for the WorkoutGoal to update in case it exists.
     * 
    **/
    where: WorkoutGoalWhereUniqueInput
    /**
     * In case the WorkoutGoal found by the `where` argument doesn't exist, create a new WorkoutGoal with this data.
     * 
    **/
    create: XOR<WorkoutGoalCreateInput, WorkoutGoalUncheckedCreateInput>
    /**
     * In case the WorkoutGoal was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutGoalUpdateInput, WorkoutGoalUncheckedUpdateInput>
  }


  /**
   * WorkoutGoal delete
   */
  export type WorkoutGoalDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
    /**
     * Filter which WorkoutGoal to delete.
     * 
    **/
    where: WorkoutGoalWhereUniqueInput
  }


  /**
   * WorkoutGoal deleteMany
   */
  export type WorkoutGoalDeleteManyArgs = {
    where?: WorkoutGoalWhereInput
  }


  /**
   * WorkoutGoal without action
   */
  export type WorkoutGoalArgs = {
    /**
     * Select specific fields to fetch from the WorkoutGoal
     * 
    **/
    select?: WorkoutGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutGoalInclude | null
  }



  /**
   * Model WorkoutSectionType
   */


  export type AggregateWorkoutSectionType = {
    _count: WorkoutSectionTypeCountAggregateOutputType | null
    count: WorkoutSectionTypeCountAggregateOutputType | null
    _min: WorkoutSectionTypeMinAggregateOutputType | null
    min: WorkoutSectionTypeMinAggregateOutputType | null
    _max: WorkoutSectionTypeMaxAggregateOutputType | null
    max: WorkoutSectionTypeMaxAggregateOutputType | null
  }

  export type WorkoutSectionTypeMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    subtitle: string | null
    description: string | null
  }

  export type WorkoutSectionTypeMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    name: string | null
    subtitle: string | null
    description: string | null
  }

  export type WorkoutSectionTypeCountAggregateOutputType = {
    id: number
    createdAt: number
    name: number
    subtitle: number
    description: number
    validRepTypes: number
    _all: number
  }


  export type WorkoutSectionTypeMinAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    subtitle?: true
    description?: true
  }

  export type WorkoutSectionTypeMaxAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    subtitle?: true
    description?: true
  }

  export type WorkoutSectionTypeCountAggregateInputType = {
    id?: true
    createdAt?: true
    name?: true
    subtitle?: true
    description?: true
    validRepTypes?: true
    _all?: true
  }

  export type WorkoutSectionTypeAggregateArgs = {
    /**
     * Filter which WorkoutSectionType to aggregate.
     * 
    **/
    where?: WorkoutSectionTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSectionTypes to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSectionTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutSectionTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSectionTypes from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSectionTypes.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutSectionTypes
    **/
    _count?: true | WorkoutSectionTypeCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutSectionTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutSectionTypeMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutSectionTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutSectionTypeMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutSectionTypeMaxAggregateInputType
  }

  export type GetWorkoutSectionTypeAggregateType<T extends WorkoutSectionTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutSectionType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutSectionType[P]>
      : GetScalarType<T[P], AggregateWorkoutSectionType[P]>
  }


    
    
  export type WorkoutSectionTypeGroupByArgs = {
    where?: WorkoutSectionTypeWhereInput
    orderBy?: Enumerable<WorkoutSectionTypeOrderByInput>
    by: Array<WorkoutSectionTypeScalarFieldEnum>
    having?: WorkoutSectionTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutSectionTypeCountAggregateInputType | true
    _min?: WorkoutSectionTypeMinAggregateInputType
    _max?: WorkoutSectionTypeMaxAggregateInputType
  }


  export type WorkoutSectionTypeGroupByOutputType = {
    id: string
    createdAt: Date
    name: string
    subtitle: string
    description: string
    validRepTypes: WorkoutMoveRepType[]
    _count: WorkoutSectionTypeCountAggregateOutputType | null
    _min: WorkoutSectionTypeMinAggregateOutputType | null
    _max: WorkoutSectionTypeMaxAggregateOutputType | null
  }

  type GetWorkoutSectionTypeGroupByPayload<T extends WorkoutSectionTypeGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutSectionTypeGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutSectionTypeGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutSectionTypeGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutSectionTypeGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutSectionTypeSelect = {
    id?: boolean
    createdAt?: boolean
    name?: boolean
    subtitle?: boolean
    description?: boolean
    validRepTypes?: boolean
    WorkoutSections?: boolean | WorkoutSectionFindManyArgs
    LoggedWorkoutSections?: boolean | LoggedWorkoutSectionFindManyArgs
  }

  export type WorkoutSectionTypeInclude = {
    WorkoutSections?: boolean | WorkoutSectionFindManyArgs
    LoggedWorkoutSections?: boolean | LoggedWorkoutSectionFindManyArgs
  }

  export type WorkoutSectionTypeGetPayload<
    S extends boolean | null | undefined | WorkoutSectionTypeArgs,
    U = keyof S
      > = S extends true
        ? WorkoutSectionType
    : S extends undefined
    ? never
    : S extends WorkoutSectionTypeArgs | WorkoutSectionTypeFindManyArgs
    ?'include' extends U
    ? WorkoutSectionType  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'WorkoutSections'
        ? Array < WorkoutSectionGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkoutSections'
        ? Array < LoggedWorkoutSectionGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutSectionType ?WorkoutSectionType [P]
  : 
          P extends 'WorkoutSections'
        ? Array < WorkoutSectionGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkoutSections'
        ? Array < LoggedWorkoutSectionGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutSectionType
  : WorkoutSectionType


  type WorkoutSectionTypeCountArgs = Merge<
    Omit<WorkoutSectionTypeFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutSectionTypeCountAggregateInputType | true
    }
  >

  export interface WorkoutSectionTypeDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutSectionType that matches the filter.
     * @param {WorkoutSectionTypeFindUniqueArgs} args - Arguments to find a WorkoutSectionType
     * @example
     * // Get one WorkoutSectionType
     * const workoutSectionType = await prisma.workoutSectionType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutSectionTypeFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutSectionTypeFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutSectionType'> extends True ? CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType>, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType | null >, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T> | null >>

    /**
     * Find the first WorkoutSectionType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionTypeFindFirstArgs} args - Arguments to find a WorkoutSectionType
     * @example
     * // Get one WorkoutSectionType
     * const workoutSectionType = await prisma.workoutSectionType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutSectionTypeFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutSectionTypeFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutSectionType'> extends True ? CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType>, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType | null >, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutSectionTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionTypeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutSectionTypes
     * const workoutSectionTypes = await prisma.workoutSectionType.findMany()
     * 
     * // Get first 10 WorkoutSectionTypes
     * const workoutSectionTypes = await prisma.workoutSectionType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutSectionTypeWithIdOnly = await prisma.workoutSectionType.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutSectionTypeFindManyArgs>(
      args?: SelectSubset<T, WorkoutSectionTypeFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutSectionType>>, PrismaPromise<Array<WorkoutSectionTypeGetPayload<T>>>>

    /**
     * Create a WorkoutSectionType.
     * @param {WorkoutSectionTypeCreateArgs} args - Arguments to create a WorkoutSectionType.
     * @example
     * // Create one WorkoutSectionType
     * const WorkoutSectionType = await prisma.workoutSectionType.create({
     *   data: {
     *     // ... data to create a WorkoutSectionType
     *   }
     * })
     * 
    **/
    create<T extends WorkoutSectionTypeCreateArgs>(
      args: SelectSubset<T, WorkoutSectionTypeCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType>, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T>>>

    /**
     * Create many WorkoutSectionTypes.
     *     @param {WorkoutSectionTypeCreateManyArgs} args - Arguments to create many WorkoutSectionTypes.
     *     @example
     *     // Create many WorkoutSectionTypes
     *     const workoutSectionType = await prisma.workoutSectionType.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutSectionTypeCreateManyArgs>(
      args?: SelectSubset<T, WorkoutSectionTypeCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutSectionType.
     * @param {WorkoutSectionTypeDeleteArgs} args - Arguments to delete one WorkoutSectionType.
     * @example
     * // Delete one WorkoutSectionType
     * const WorkoutSectionType = await prisma.workoutSectionType.delete({
     *   where: {
     *     // ... filter to delete one WorkoutSectionType
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutSectionTypeDeleteArgs>(
      args: SelectSubset<T, WorkoutSectionTypeDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType>, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T>>>

    /**
     * Update one WorkoutSectionType.
     * @param {WorkoutSectionTypeUpdateArgs} args - Arguments to update one WorkoutSectionType.
     * @example
     * // Update one WorkoutSectionType
     * const workoutSectionType = await prisma.workoutSectionType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutSectionTypeUpdateArgs>(
      args: SelectSubset<T, WorkoutSectionTypeUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType>, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T>>>

    /**
     * Delete zero or more WorkoutSectionTypes.
     * @param {WorkoutSectionTypeDeleteManyArgs} args - Arguments to filter WorkoutSectionTypes to delete.
     * @example
     * // Delete a few WorkoutSectionTypes
     * const { count } = await prisma.workoutSectionType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutSectionTypeDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutSectionTypeDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutSectionTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutSectionTypes
     * const workoutSectionType = await prisma.workoutSectionType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutSectionTypeUpdateManyArgs>(
      args: SelectSubset<T, WorkoutSectionTypeUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutSectionType.
     * @param {WorkoutSectionTypeUpsertArgs} args - Arguments to update or create a WorkoutSectionType.
     * @example
     * // Update or create a WorkoutSectionType
     * const workoutSectionType = await prisma.workoutSectionType.upsert({
     *   create: {
     *     // ... data to create a WorkoutSectionType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutSectionType we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutSectionTypeUpsertArgs>(
      args: SelectSubset<T, WorkoutSectionTypeUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType>, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T>>>

    /**
     * Count the number of WorkoutSectionTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionTypeCountArgs} args - Arguments to filter WorkoutSectionTypes to count.
     * @example
     * // Count the number of WorkoutSectionTypes
     * const count = await prisma.workoutSectionType.count({
     *   where: {
     *     // ... the filter for the WorkoutSectionTypes we want to count
     *   }
     * })
    **/
    count<T extends WorkoutSectionTypeCountArgs>(
      args?: Subset<T, WorkoutSectionTypeCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutSectionTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutSectionType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutSectionTypeAggregateArgs>(args: Subset<T, WorkoutSectionTypeAggregateArgs>): PrismaPromise<GetWorkoutSectionTypeAggregateType<T>>

    /**
     * Group by WorkoutSectionType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutSectionTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutSectionTypeGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutSectionTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutSectionTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutSectionTypeGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutSectionType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutSectionTypeClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    WorkoutSections<T extends WorkoutSectionFindManyArgs = {}>(args?: Subset<T, WorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSection>>, PrismaPromise<Array<WorkoutSectionGetPayload<T>>>>;

    LoggedWorkoutSections<T extends LoggedWorkoutSectionFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutSection>>, PrismaPromise<Array<LoggedWorkoutSectionGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutSectionType findUnique
   */
  export type WorkoutSectionTypeFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
    /**
     * Throw an Error if a WorkoutSectionType can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSectionType to fetch.
     * 
    **/
    where: WorkoutSectionTypeWhereUniqueInput
  }


  /**
   * WorkoutSectionType findFirst
   */
  export type WorkoutSectionTypeFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
    /**
     * Throw an Error if a WorkoutSectionType can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSectionType to fetch.
     * 
    **/
    where?: WorkoutSectionTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSectionTypes to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSectionTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutSectionTypes.
     * 
    **/
    cursor?: WorkoutSectionTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSectionTypes from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSectionTypes.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutSectionTypes.
     * 
    **/
    distinct?: Enumerable<WorkoutSectionTypeScalarFieldEnum>
  }


  /**
   * WorkoutSectionType findMany
   */
  export type WorkoutSectionTypeFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
    /**
     * Filter, which WorkoutSectionTypes to fetch.
     * 
    **/
    where?: WorkoutSectionTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSectionTypes to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSectionTypeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutSectionTypes.
     * 
    **/
    cursor?: WorkoutSectionTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSectionTypes from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSectionTypes.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutSectionTypeScalarFieldEnum>
  }


  /**
   * WorkoutSectionType create
   */
  export type WorkoutSectionTypeCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
    /**
     * The data needed to create a WorkoutSectionType.
     * 
    **/
    data: XOR<WorkoutSectionTypeCreateInput, WorkoutSectionTypeUncheckedCreateInput>
  }


  /**
   * WorkoutSectionType createMany
   */
  export type WorkoutSectionTypeCreateManyArgs = {
    data: Enumerable<WorkoutSectionTypeCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutSectionType update
   */
  export type WorkoutSectionTypeUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
    /**
     * The data needed to update a WorkoutSectionType.
     * 
    **/
    data: XOR<WorkoutSectionTypeUpdateInput, WorkoutSectionTypeUncheckedUpdateInput>
    /**
     * Choose, which WorkoutSectionType to update.
     * 
    **/
    where: WorkoutSectionTypeWhereUniqueInput
  }


  /**
   * WorkoutSectionType updateMany
   */
  export type WorkoutSectionTypeUpdateManyArgs = {
    data: XOR<WorkoutSectionTypeUpdateManyMutationInput, WorkoutSectionTypeUncheckedUpdateManyInput>
    where?: WorkoutSectionTypeWhereInput
  }


  /**
   * WorkoutSectionType upsert
   */
  export type WorkoutSectionTypeUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
    /**
     * The filter to search for the WorkoutSectionType to update in case it exists.
     * 
    **/
    where: WorkoutSectionTypeWhereUniqueInput
    /**
     * In case the WorkoutSectionType found by the `where` argument doesn't exist, create a new WorkoutSectionType with this data.
     * 
    **/
    create: XOR<WorkoutSectionTypeCreateInput, WorkoutSectionTypeUncheckedCreateInput>
    /**
     * In case the WorkoutSectionType was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutSectionTypeUpdateInput, WorkoutSectionTypeUncheckedUpdateInput>
  }


  /**
   * WorkoutSectionType delete
   */
  export type WorkoutSectionTypeDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
    /**
     * Filter which WorkoutSectionType to delete.
     * 
    **/
    where: WorkoutSectionTypeWhereUniqueInput
  }


  /**
   * WorkoutSectionType deleteMany
   */
  export type WorkoutSectionTypeDeleteManyArgs = {
    where?: WorkoutSectionTypeWhereInput
  }


  /**
   * WorkoutSectionType without action
   */
  export type WorkoutSectionTypeArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSectionType
     * 
    **/
    select?: WorkoutSectionTypeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionTypeInclude | null
  }



  /**
   * Model Collection
   */


  export type AggregateCollection = {
    _count: CollectionCountAggregateOutputType | null
    count: CollectionCountAggregateOutputType | null
    _min: CollectionMinAggregateOutputType | null
    min: CollectionMinAggregateOutputType | null
    _max: CollectionMaxAggregateOutputType | null
    max: CollectionMaxAggregateOutputType | null
  }

  export type CollectionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type CollectionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type CollectionCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    name: number
    description: number
    _all: number
  }


  export type CollectionMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type CollectionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type CollectionCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    _all?: true
  }

  export type CollectionAggregateArgs = {
    /**
     * Filter which Collection to aggregate.
     * 
    **/
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     * 
    **/
    orderBy?: Enumerable<CollectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Collections
    **/
    _count?: true | CollectionCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | CollectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CollectionMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: CollectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CollectionMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: CollectionMaxAggregateInputType
  }

  export type GetCollectionAggregateType<T extends CollectionAggregateArgs> = {
        [P in keyof T & keyof AggregateCollection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollection[P]>
      : GetScalarType<T[P], AggregateCollection[P]>
  }


    
    
  export type CollectionGroupByArgs = {
    where?: CollectionWhereInput
    orderBy?: Enumerable<CollectionOrderByInput>
    by: Array<CollectionScalarFieldEnum>
    having?: CollectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CollectionCountAggregateInputType | true
    _min?: CollectionMinAggregateInputType
    _max?: CollectionMaxAggregateInputType
  }


  export type CollectionGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    name: string
    description: string | null
    _count: CollectionCountAggregateOutputType | null
    _min: CollectionMinAggregateOutputType | null
    _max: CollectionMaxAggregateOutputType | null
  }

  type GetCollectionGroupByPayload<T extends CollectionGroupByArgs> = Promise<
    Array<
      PickArray<CollectionGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof CollectionGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], CollectionGroupByOutputType[P]> 
            : GetScalarType<T[P], CollectionGroupByOutputType[P]>
        }
      > 
    >


  export type CollectionSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    Workouts?: boolean | WorkoutFindManyArgs
    WorkoutPlans?: boolean | WorkoutPlanFindManyArgs
  }

  export type CollectionInclude = {
    User?: boolean | UserArgs
    Workouts?: boolean | WorkoutFindManyArgs
    WorkoutPlans?: boolean | WorkoutPlanFindManyArgs
  }

  export type CollectionGetPayload<
    S extends boolean | null | undefined | CollectionArgs,
    U = keyof S
      > = S extends true
        ? Collection
    : S extends undefined
    ? never
    : S extends CollectionArgs | CollectionFindManyArgs
    ?'include' extends U
    ? Collection  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlans'
        ? Array < WorkoutPlanGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Collection ?Collection [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlans'
        ? Array < WorkoutPlanGetPayload<S['select'][P]>>  : never
  } 
    : Collection
  : Collection


  type CollectionCountArgs = Merge<
    Omit<CollectionFindManyArgs, 'select' | 'include'> & {
      select?: CollectionCountAggregateInputType | true
    }
  >

  export interface CollectionDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Collection that matches the filter.
     * @param {CollectionFindUniqueArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CollectionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, CollectionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Collection'> extends True ? CheckSelect<T, Prisma__CollectionClient<Collection>, Prisma__CollectionClient<CollectionGetPayload<T>>> : CheckSelect<T, Prisma__CollectionClient<Collection | null >, Prisma__CollectionClient<CollectionGetPayload<T> | null >>

    /**
     * Find the first Collection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindFirstArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CollectionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, CollectionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Collection'> extends True ? CheckSelect<T, Prisma__CollectionClient<Collection>, Prisma__CollectionClient<CollectionGetPayload<T>>> : CheckSelect<T, Prisma__CollectionClient<Collection | null >, Prisma__CollectionClient<CollectionGetPayload<T> | null >>

    /**
     * Find zero or more Collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections
     * const collections = await prisma.collection.findMany()
     * 
     * // Get first 10 Collections
     * const collections = await prisma.collection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collectionWithIdOnly = await prisma.collection.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CollectionFindManyArgs>(
      args?: SelectSubset<T, CollectionFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Collection>>, PrismaPromise<Array<CollectionGetPayload<T>>>>

    /**
     * Create a Collection.
     * @param {CollectionCreateArgs} args - Arguments to create a Collection.
     * @example
     * // Create one Collection
     * const Collection = await prisma.collection.create({
     *   data: {
     *     // ... data to create a Collection
     *   }
     * })
     * 
    **/
    create<T extends CollectionCreateArgs>(
      args: SelectSubset<T, CollectionCreateArgs>
    ): CheckSelect<T, Prisma__CollectionClient<Collection>, Prisma__CollectionClient<CollectionGetPayload<T>>>

    /**
     * Create many Collections.
     *     @param {CollectionCreateManyArgs} args - Arguments to create many Collections.
     *     @example
     *     // Create many Collections
     *     const collection = await prisma.collection.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CollectionCreateManyArgs>(
      args?: SelectSubset<T, CollectionCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Collection.
     * @param {CollectionDeleteArgs} args - Arguments to delete one Collection.
     * @example
     * // Delete one Collection
     * const Collection = await prisma.collection.delete({
     *   where: {
     *     // ... filter to delete one Collection
     *   }
     * })
     * 
    **/
    delete<T extends CollectionDeleteArgs>(
      args: SelectSubset<T, CollectionDeleteArgs>
    ): CheckSelect<T, Prisma__CollectionClient<Collection>, Prisma__CollectionClient<CollectionGetPayload<T>>>

    /**
     * Update one Collection.
     * @param {CollectionUpdateArgs} args - Arguments to update one Collection.
     * @example
     * // Update one Collection
     * const collection = await prisma.collection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CollectionUpdateArgs>(
      args: SelectSubset<T, CollectionUpdateArgs>
    ): CheckSelect<T, Prisma__CollectionClient<Collection>, Prisma__CollectionClient<CollectionGetPayload<T>>>

    /**
     * Delete zero or more Collections.
     * @param {CollectionDeleteManyArgs} args - Arguments to filter Collections to delete.
     * @example
     * // Delete a few Collections
     * const { count } = await prisma.collection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CollectionDeleteManyArgs>(
      args?: SelectSubset<T, CollectionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections
     * const collection = await prisma.collection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CollectionUpdateManyArgs>(
      args: SelectSubset<T, CollectionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Collection.
     * @param {CollectionUpsertArgs} args - Arguments to update or create a Collection.
     * @example
     * // Update or create a Collection
     * const collection = await prisma.collection.upsert({
     *   create: {
     *     // ... data to create a Collection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collection we want to update
     *   }
     * })
    **/
    upsert<T extends CollectionUpsertArgs>(
      args: SelectSubset<T, CollectionUpsertArgs>
    ): CheckSelect<T, Prisma__CollectionClient<Collection>, Prisma__CollectionClient<CollectionGetPayload<T>>>

    /**
     * Count the number of Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionCountArgs} args - Arguments to filter Collections to count.
     * @example
     * // Count the number of Collections
     * const count = await prisma.collection.count({
     *   where: {
     *     // ... the filter for the Collections we want to count
     *   }
     * })
    **/
    count<T extends CollectionCountArgs>(
      args?: Subset<T, CollectionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CollectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CollectionAggregateArgs>(args: Subset<T, CollectionAggregateArgs>): PrismaPromise<GetCollectionAggregateType<T>>

    /**
     * Group by Collection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CollectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CollectionGroupByArgs['orderBy'] }
        : { orderBy?: CollectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CollectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectionGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Collection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CollectionClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Workouts<T extends WorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>;

    WorkoutPlans<T extends WorkoutPlanFindManyArgs = {}>(args?: Subset<T, WorkoutPlanFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlan>>, PrismaPromise<Array<WorkoutPlanGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Collection findUnique
   */
  export type CollectionFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
    /**
     * Throw an Error if a Collection can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Collection to fetch.
     * 
    **/
    where: CollectionWhereUniqueInput
  }


  /**
   * Collection findFirst
   */
  export type CollectionFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
    /**
     * Throw an Error if a Collection can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Collection to fetch.
     * 
    **/
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     * 
    **/
    orderBy?: Enumerable<CollectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Collections.
     * 
    **/
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Collections.
     * 
    **/
    distinct?: Enumerable<CollectionScalarFieldEnum>
  }


  /**
   * Collection findMany
   */
  export type CollectionFindManyArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
    /**
     * Filter, which Collections to fetch.
     * 
    **/
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     * 
    **/
    orderBy?: Enumerable<CollectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Collections.
     * 
    **/
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     * 
    **/
    skip?: number
    distinct?: Enumerable<CollectionScalarFieldEnum>
  }


  /**
   * Collection create
   */
  export type CollectionCreateArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
    /**
     * The data needed to create a Collection.
     * 
    **/
    data: XOR<CollectionCreateInput, CollectionUncheckedCreateInput>
  }


  /**
   * Collection createMany
   */
  export type CollectionCreateManyArgs = {
    data: Enumerable<CollectionCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Collection update
   */
  export type CollectionUpdateArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
    /**
     * The data needed to update a Collection.
     * 
    **/
    data: XOR<CollectionUpdateInput, CollectionUncheckedUpdateInput>
    /**
     * Choose, which Collection to update.
     * 
    **/
    where: CollectionWhereUniqueInput
  }


  /**
   * Collection updateMany
   */
  export type CollectionUpdateManyArgs = {
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyInput>
    where?: CollectionWhereInput
  }


  /**
   * Collection upsert
   */
  export type CollectionUpsertArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
    /**
     * The filter to search for the Collection to update in case it exists.
     * 
    **/
    where: CollectionWhereUniqueInput
    /**
     * In case the Collection found by the `where` argument doesn't exist, create a new Collection with this data.
     * 
    **/
    create: XOR<CollectionCreateInput, CollectionUncheckedCreateInput>
    /**
     * In case the Collection was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<CollectionUpdateInput, CollectionUncheckedUpdateInput>
  }


  /**
   * Collection delete
   */
  export type CollectionDeleteArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
    /**
     * Filter which Collection to delete.
     * 
    **/
    where: CollectionWhereUniqueInput
  }


  /**
   * Collection deleteMany
   */
  export type CollectionDeleteManyArgs = {
    where?: CollectionWhereInput
  }


  /**
   * Collection without action
   */
  export type CollectionArgs = {
    /**
     * Select specific fields to fetch from the Collection
     * 
    **/
    select?: CollectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CollectionInclude | null
  }



  /**
   * Model GymProfile
   */


  export type AggregateGymProfile = {
    _count: GymProfileCountAggregateOutputType | null
    count: GymProfileCountAggregateOutputType | null
    _min: GymProfileMinAggregateOutputType | null
    min: GymProfileMinAggregateOutputType | null
    _max: GymProfileMaxAggregateOutputType | null
    max: GymProfileMaxAggregateOutputType | null
  }

  export type GymProfileMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type GymProfileMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type GymProfileCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    name: number
    description: number
    _all: number
  }


  export type GymProfileMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type GymProfileMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type GymProfileCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    _all?: true
  }

  export type GymProfileAggregateArgs = {
    /**
     * Filter which GymProfile to aggregate.
     * 
    **/
    where?: GymProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GymProfiles to fetch.
     * 
    **/
    orderBy?: Enumerable<GymProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: GymProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GymProfiles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GymProfiles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GymProfiles
    **/
    _count?: true | GymProfileCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | GymProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GymProfileMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: GymProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GymProfileMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: GymProfileMaxAggregateInputType
  }

  export type GetGymProfileAggregateType<T extends GymProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateGymProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGymProfile[P]>
      : GetScalarType<T[P], AggregateGymProfile[P]>
  }


    
    
  export type GymProfileGroupByArgs = {
    where?: GymProfileWhereInput
    orderBy?: Enumerable<GymProfileOrderByInput>
    by: Array<GymProfileScalarFieldEnum>
    having?: GymProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GymProfileCountAggregateInputType | true
    _min?: GymProfileMinAggregateInputType
    _max?: GymProfileMaxAggregateInputType
  }


  export type GymProfileGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    name: string
    description: string | null
    _count: GymProfileCountAggregateOutputType | null
    _min: GymProfileMinAggregateOutputType | null
    _max: GymProfileMaxAggregateOutputType | null
  }

  type GetGymProfileGroupByPayload<T extends GymProfileGroupByArgs> = Promise<
    Array<
      PickArray<GymProfileGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof GymProfileGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], GymProfileGroupByOutputType[P]> 
            : GetScalarType<T[P], GymProfileGroupByOutputType[P]>
        }
      > 
    >


  export type GymProfileSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    Equipments?: boolean | EquipmentFindManyArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    LoggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type GymProfileInclude = {
    User?: boolean | UserArgs
    Equipments?: boolean | EquipmentFindManyArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    LoggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
  }

  export type GymProfileGetPayload<
    S extends boolean | null | undefined | GymProfileArgs,
    U = keyof S
      > = S extends true
        ? GymProfile
    : S extends undefined
    ? never
    : S extends GymProfileArgs | GymProfileFindManyArgs
    ?'include' extends U
    ? GymProfile  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Equipments'
        ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof GymProfile ?GymProfile [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Equipments'
        ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : GymProfile
  : GymProfile


  type GymProfileCountArgs = Merge<
    Omit<GymProfileFindManyArgs, 'select' | 'include'> & {
      select?: GymProfileCountAggregateInputType | true
    }
  >

  export interface GymProfileDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one GymProfile that matches the filter.
     * @param {GymProfileFindUniqueArgs} args - Arguments to find a GymProfile
     * @example
     * // Get one GymProfile
     * const gymProfile = await prisma.gymProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends GymProfileFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, GymProfileFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'GymProfile'> extends True ? CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>> : CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>

    /**
     * Find the first GymProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileFindFirstArgs} args - Arguments to find a GymProfile
     * @example
     * // Get one GymProfile
     * const gymProfile = await prisma.gymProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends GymProfileFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, GymProfileFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'GymProfile'> extends True ? CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>> : CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>

    /**
     * Find zero or more GymProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GymProfiles
     * const gymProfiles = await prisma.gymProfile.findMany()
     * 
     * // Get first 10 GymProfiles
     * const gymProfiles = await prisma.gymProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gymProfileWithIdOnly = await prisma.gymProfile.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends GymProfileFindManyArgs>(
      args?: SelectSubset<T, GymProfileFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<GymProfile>>, PrismaPromise<Array<GymProfileGetPayload<T>>>>

    /**
     * Create a GymProfile.
     * @param {GymProfileCreateArgs} args - Arguments to create a GymProfile.
     * @example
     * // Create one GymProfile
     * const GymProfile = await prisma.gymProfile.create({
     *   data: {
     *     // ... data to create a GymProfile
     *   }
     * })
     * 
    **/
    create<T extends GymProfileCreateArgs>(
      args: SelectSubset<T, GymProfileCreateArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Create many GymProfiles.
     *     @param {GymProfileCreateManyArgs} args - Arguments to create many GymProfiles.
     *     @example
     *     // Create many GymProfiles
     *     const gymProfile = await prisma.gymProfile.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends GymProfileCreateManyArgs>(
      args?: SelectSubset<T, GymProfileCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a GymProfile.
     * @param {GymProfileDeleteArgs} args - Arguments to delete one GymProfile.
     * @example
     * // Delete one GymProfile
     * const GymProfile = await prisma.gymProfile.delete({
     *   where: {
     *     // ... filter to delete one GymProfile
     *   }
     * })
     * 
    **/
    delete<T extends GymProfileDeleteArgs>(
      args: SelectSubset<T, GymProfileDeleteArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Update one GymProfile.
     * @param {GymProfileUpdateArgs} args - Arguments to update one GymProfile.
     * @example
     * // Update one GymProfile
     * const gymProfile = await prisma.gymProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends GymProfileUpdateArgs>(
      args: SelectSubset<T, GymProfileUpdateArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Delete zero or more GymProfiles.
     * @param {GymProfileDeleteManyArgs} args - Arguments to filter GymProfiles to delete.
     * @example
     * // Delete a few GymProfiles
     * const { count } = await prisma.gymProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends GymProfileDeleteManyArgs>(
      args?: SelectSubset<T, GymProfileDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more GymProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GymProfiles
     * const gymProfile = await prisma.gymProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends GymProfileUpdateManyArgs>(
      args: SelectSubset<T, GymProfileUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one GymProfile.
     * @param {GymProfileUpsertArgs} args - Arguments to update or create a GymProfile.
     * @example
     * // Update or create a GymProfile
     * const gymProfile = await prisma.gymProfile.upsert({
     *   create: {
     *     // ... data to create a GymProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GymProfile we want to update
     *   }
     * })
    **/
    upsert<T extends GymProfileUpsertArgs>(
      args: SelectSubset<T, GymProfileUpsertArgs>
    ): CheckSelect<T, Prisma__GymProfileClient<GymProfile>, Prisma__GymProfileClient<GymProfileGetPayload<T>>>

    /**
     * Count the number of GymProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileCountArgs} args - Arguments to filter GymProfiles to count.
     * @example
     * // Count the number of GymProfiles
     * const count = await prisma.gymProfile.count({
     *   where: {
     *     // ... the filter for the GymProfiles we want to count
     *   }
     * })
    **/
    count<T extends GymProfileCountArgs>(
      args?: Subset<T, GymProfileCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GymProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GymProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GymProfileAggregateArgs>(args: Subset<T, GymProfileAggregateArgs>): PrismaPromise<GetGymProfileAggregateType<T>>

    /**
     * Group by GymProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GymProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GymProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GymProfileGroupByArgs['orderBy'] }
        : { orderBy?: GymProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GymProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGymProfileGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for GymProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__GymProfileClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Equipments<T extends EquipmentFindManyArgs = {}>(args?: Subset<T, EquipmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Equipment>>, PrismaPromise<Array<EquipmentGetPayload<T>>>>;

    ScheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    LoggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * GymProfile findUnique
   */
  export type GymProfileFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
    /**
     * Throw an Error if a GymProfile can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which GymProfile to fetch.
     * 
    **/
    where: GymProfileWhereUniqueInput
  }


  /**
   * GymProfile findFirst
   */
  export type GymProfileFindFirstArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
    /**
     * Throw an Error if a GymProfile can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which GymProfile to fetch.
     * 
    **/
    where?: GymProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GymProfiles to fetch.
     * 
    **/
    orderBy?: Enumerable<GymProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GymProfiles.
     * 
    **/
    cursor?: GymProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GymProfiles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GymProfiles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GymProfiles.
     * 
    **/
    distinct?: Enumerable<GymProfileScalarFieldEnum>
  }


  /**
   * GymProfile findMany
   */
  export type GymProfileFindManyArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
    /**
     * Filter, which GymProfiles to fetch.
     * 
    **/
    where?: GymProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GymProfiles to fetch.
     * 
    **/
    orderBy?: Enumerable<GymProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GymProfiles.
     * 
    **/
    cursor?: GymProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GymProfiles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GymProfiles.
     * 
    **/
    skip?: number
    distinct?: Enumerable<GymProfileScalarFieldEnum>
  }


  /**
   * GymProfile create
   */
  export type GymProfileCreateArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
    /**
     * The data needed to create a GymProfile.
     * 
    **/
    data: XOR<GymProfileCreateInput, GymProfileUncheckedCreateInput>
  }


  /**
   * GymProfile createMany
   */
  export type GymProfileCreateManyArgs = {
    data: Enumerable<GymProfileCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * GymProfile update
   */
  export type GymProfileUpdateArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
    /**
     * The data needed to update a GymProfile.
     * 
    **/
    data: XOR<GymProfileUpdateInput, GymProfileUncheckedUpdateInput>
    /**
     * Choose, which GymProfile to update.
     * 
    **/
    where: GymProfileWhereUniqueInput
  }


  /**
   * GymProfile updateMany
   */
  export type GymProfileUpdateManyArgs = {
    data: XOR<GymProfileUpdateManyMutationInput, GymProfileUncheckedUpdateManyInput>
    where?: GymProfileWhereInput
  }


  /**
   * GymProfile upsert
   */
  export type GymProfileUpsertArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
    /**
     * The filter to search for the GymProfile to update in case it exists.
     * 
    **/
    where: GymProfileWhereUniqueInput
    /**
     * In case the GymProfile found by the `where` argument doesn't exist, create a new GymProfile with this data.
     * 
    **/
    create: XOR<GymProfileCreateInput, GymProfileUncheckedCreateInput>
    /**
     * In case the GymProfile was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<GymProfileUpdateInput, GymProfileUncheckedUpdateInput>
  }


  /**
   * GymProfile delete
   */
  export type GymProfileDeleteArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
    /**
     * Filter which GymProfile to delete.
     * 
    **/
    where: GymProfileWhereUniqueInput
  }


  /**
   * GymProfile deleteMany
   */
  export type GymProfileDeleteManyArgs = {
    where?: GymProfileWhereInput
  }


  /**
   * GymProfile without action
   */
  export type GymProfileArgs = {
    /**
     * Select specific fields to fetch from the GymProfile
     * 
    **/
    select?: GymProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GymProfileInclude | null
  }



  /**
   * Model ScheduledWorkout
   */


  export type AggregateScheduledWorkout = {
    _count: ScheduledWorkoutCountAggregateOutputType | null
    count: ScheduledWorkoutCountAggregateOutputType | null
    _min: ScheduledWorkoutMinAggregateOutputType | null
    min: ScheduledWorkoutMinAggregateOutputType | null
    _max: ScheduledWorkoutMaxAggregateOutputType | null
    max: ScheduledWorkoutMaxAggregateOutputType | null
  }

  export type ScheduledWorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    scheduledAt: Date | null
    gymProfileId: string | null
    loggedWorkoutId: string | null
    workoutId: string | null
    workoutPlanEnrolmentId: string | null
    workoutPlanDayWorkoutId: string | null
  }

  export type ScheduledWorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    scheduledAt: Date | null
    gymProfileId: string | null
    loggedWorkoutId: string | null
    workoutId: string | null
    workoutPlanEnrolmentId: string | null
    workoutPlanDayWorkoutId: string | null
  }

  export type ScheduledWorkoutCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    note: number
    scheduledAt: number
    gymProfileId: number
    loggedWorkoutId: number
    workoutId: number
    workoutPlanEnrolmentId: number
    workoutPlanDayWorkoutId: number
    _all: number
  }


  export type ScheduledWorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    scheduledAt?: true
    gymProfileId?: true
    loggedWorkoutId?: true
    workoutId?: true
    workoutPlanEnrolmentId?: true
    workoutPlanDayWorkoutId?: true
  }

  export type ScheduledWorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    scheduledAt?: true
    gymProfileId?: true
    loggedWorkoutId?: true
    workoutId?: true
    workoutPlanEnrolmentId?: true
    workoutPlanDayWorkoutId?: true
  }

  export type ScheduledWorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    scheduledAt?: true
    gymProfileId?: true
    loggedWorkoutId?: true
    workoutId?: true
    workoutPlanEnrolmentId?: true
    workoutPlanDayWorkoutId?: true
    _all?: true
  }

  export type ScheduledWorkoutAggregateArgs = {
    /**
     * Filter which ScheduledWorkout to aggregate.
     * 
    **/
    where?: ScheduledWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScheduledWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<ScheduledWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ScheduledWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScheduledWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScheduledWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ScheduledWorkouts
    **/
    _count?: true | ScheduledWorkoutCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | ScheduledWorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScheduledWorkoutMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: ScheduledWorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScheduledWorkoutMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: ScheduledWorkoutMaxAggregateInputType
  }

  export type GetScheduledWorkoutAggregateType<T extends ScheduledWorkoutAggregateArgs> = {
        [P in keyof T & keyof AggregateScheduledWorkout]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScheduledWorkout[P]>
      : GetScalarType<T[P], AggregateScheduledWorkout[P]>
  }


    
    
  export type ScheduledWorkoutGroupByArgs = {
    where?: ScheduledWorkoutWhereInput
    orderBy?: Enumerable<ScheduledWorkoutOrderByInput>
    by: Array<ScheduledWorkoutScalarFieldEnum>
    having?: ScheduledWorkoutScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScheduledWorkoutCountAggregateInputType | true
    _min?: ScheduledWorkoutMinAggregateInputType
    _max?: ScheduledWorkoutMaxAggregateInputType
  }


  export type ScheduledWorkoutGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    note: string | null
    scheduledAt: Date
    gymProfileId: string | null
    loggedWorkoutId: string | null
    workoutId: string | null
    workoutPlanEnrolmentId: string | null
    workoutPlanDayWorkoutId: string | null
    _count: ScheduledWorkoutCountAggregateOutputType | null
    _min: ScheduledWorkoutMinAggregateOutputType | null
    _max: ScheduledWorkoutMaxAggregateOutputType | null
  }

  type GetScheduledWorkoutGroupByPayload<T extends ScheduledWorkoutGroupByArgs> = Promise<
    Array<
      PickArray<ScheduledWorkoutGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof ScheduledWorkoutGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], ScheduledWorkoutGroupByOutputType[P]> 
            : GetScalarType<T[P], ScheduledWorkoutGroupByOutputType[P]>
        }
      > 
    >


  export type ScheduledWorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    note?: boolean
    scheduledAt?: boolean
    GymProfile?: boolean | GymProfileArgs
    gymProfileId?: boolean
    LoggedWorkout?: boolean | LoggedWorkoutArgs
    loggedWorkoutId?: boolean
    Workout?: boolean | WorkoutArgs
    workoutId?: boolean
    WorkoutPlanEnrolment?: boolean | WorkoutPlanEnrolmentArgs
    workoutPlanEnrolmentId?: boolean
    WorkoutPlanDayWorkout?: boolean | WorkoutPlanDayWorkoutArgs
    workoutPlanDayWorkoutId?: boolean
  }

  export type ScheduledWorkoutInclude = {
    User?: boolean | UserArgs
    GymProfile?: boolean | GymProfileArgs
    LoggedWorkout?: boolean | LoggedWorkoutArgs
    Workout?: boolean | WorkoutArgs
    WorkoutPlanEnrolment?: boolean | WorkoutPlanEnrolmentArgs
    WorkoutPlanDayWorkout?: boolean | WorkoutPlanDayWorkoutArgs
  }

  export type ScheduledWorkoutGetPayload<
    S extends boolean | null | undefined | ScheduledWorkoutArgs,
    U = keyof S
      > = S extends true
        ? ScheduledWorkout
    : S extends undefined
    ? never
    : S extends ScheduledWorkoutArgs | ScheduledWorkoutFindManyArgs
    ?'include' extends U
    ? ScheduledWorkout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'GymProfile'
        ? GymProfileGetPayload<S['include'][P]> | null :
        P extends 'LoggedWorkout'
        ? LoggedWorkoutGetPayload<S['include'][P]> | null :
        P extends 'Workout'
        ? WorkoutGetPayload<S['include'][P]> | null :
        P extends 'WorkoutPlanEnrolment'
        ? WorkoutPlanEnrolmentGetPayload<S['include'][P]> | null :
        P extends 'WorkoutPlanDayWorkout'
        ? WorkoutPlanDayWorkoutGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ScheduledWorkout ?ScheduledWorkout [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'GymProfile'
        ? GymProfileGetPayload<S['select'][P]> | null :
        P extends 'LoggedWorkout'
        ? LoggedWorkoutGetPayload<S['select'][P]> | null :
        P extends 'Workout'
        ? WorkoutGetPayload<S['select'][P]> | null :
        P extends 'WorkoutPlanEnrolment'
        ? WorkoutPlanEnrolmentGetPayload<S['select'][P]> | null :
        P extends 'WorkoutPlanDayWorkout'
        ? WorkoutPlanDayWorkoutGetPayload<S['select'][P]> | null : never
  } 
    : ScheduledWorkout
  : ScheduledWorkout


  type ScheduledWorkoutCountArgs = Merge<
    Omit<ScheduledWorkoutFindManyArgs, 'select' | 'include'> & {
      select?: ScheduledWorkoutCountAggregateInputType | true
    }
  >

  export interface ScheduledWorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ScheduledWorkout that matches the filter.
     * @param {ScheduledWorkoutFindUniqueArgs} args - Arguments to find a ScheduledWorkout
     * @example
     * // Get one ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ScheduledWorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ScheduledWorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ScheduledWorkout'> extends True ? CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout | null >, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T> | null >>

    /**
     * Find the first ScheduledWorkout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutFindFirstArgs} args - Arguments to find a ScheduledWorkout
     * @example
     * // Get one ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ScheduledWorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ScheduledWorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ScheduledWorkout'> extends True ? CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout | null >, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T> | null >>

    /**
     * Find zero or more ScheduledWorkouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ScheduledWorkouts
     * const scheduledWorkouts = await prisma.scheduledWorkout.findMany()
     * 
     * // Get first 10 ScheduledWorkouts
     * const scheduledWorkouts = await prisma.scheduledWorkout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scheduledWorkoutWithIdOnly = await prisma.scheduledWorkout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ScheduledWorkoutFindManyArgs>(
      args?: SelectSubset<T, ScheduledWorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>

    /**
     * Create a ScheduledWorkout.
     * @param {ScheduledWorkoutCreateArgs} args - Arguments to create a ScheduledWorkout.
     * @example
     * // Create one ScheduledWorkout
     * const ScheduledWorkout = await prisma.scheduledWorkout.create({
     *   data: {
     *     // ... data to create a ScheduledWorkout
     *   }
     * })
     * 
    **/
    create<T extends ScheduledWorkoutCreateArgs>(
      args: SelectSubset<T, ScheduledWorkoutCreateArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Create many ScheduledWorkouts.
     *     @param {ScheduledWorkoutCreateManyArgs} args - Arguments to create many ScheduledWorkouts.
     *     @example
     *     // Create many ScheduledWorkouts
     *     const scheduledWorkout = await prisma.scheduledWorkout.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ScheduledWorkoutCreateManyArgs>(
      args?: SelectSubset<T, ScheduledWorkoutCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ScheduledWorkout.
     * @param {ScheduledWorkoutDeleteArgs} args - Arguments to delete one ScheduledWorkout.
     * @example
     * // Delete one ScheduledWorkout
     * const ScheduledWorkout = await prisma.scheduledWorkout.delete({
     *   where: {
     *     // ... filter to delete one ScheduledWorkout
     *   }
     * })
     * 
    **/
    delete<T extends ScheduledWorkoutDeleteArgs>(
      args: SelectSubset<T, ScheduledWorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Update one ScheduledWorkout.
     * @param {ScheduledWorkoutUpdateArgs} args - Arguments to update one ScheduledWorkout.
     * @example
     * // Update one ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ScheduledWorkoutUpdateArgs>(
      args: SelectSubset<T, ScheduledWorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Delete zero or more ScheduledWorkouts.
     * @param {ScheduledWorkoutDeleteManyArgs} args - Arguments to filter ScheduledWorkouts to delete.
     * @example
     * // Delete a few ScheduledWorkouts
     * const { count } = await prisma.scheduledWorkout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ScheduledWorkoutDeleteManyArgs>(
      args?: SelectSubset<T, ScheduledWorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ScheduledWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ScheduledWorkouts
     * const scheduledWorkout = await prisma.scheduledWorkout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ScheduledWorkoutUpdateManyArgs>(
      args: SelectSubset<T, ScheduledWorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ScheduledWorkout.
     * @param {ScheduledWorkoutUpsertArgs} args - Arguments to update or create a ScheduledWorkout.
     * @example
     * // Update or create a ScheduledWorkout
     * const scheduledWorkout = await prisma.scheduledWorkout.upsert({
     *   create: {
     *     // ... data to create a ScheduledWorkout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ScheduledWorkout we want to update
     *   }
     * })
    **/
    upsert<T extends ScheduledWorkoutUpsertArgs>(
      args: SelectSubset<T, ScheduledWorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout>, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T>>>

    /**
     * Count the number of ScheduledWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutCountArgs} args - Arguments to filter ScheduledWorkouts to count.
     * @example
     * // Count the number of ScheduledWorkouts
     * const count = await prisma.scheduledWorkout.count({
     *   where: {
     *     // ... the filter for the ScheduledWorkouts we want to count
     *   }
     * })
    **/
    count<T extends ScheduledWorkoutCountArgs>(
      args?: Subset<T, ScheduledWorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScheduledWorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ScheduledWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScheduledWorkoutAggregateArgs>(args: Subset<T, ScheduledWorkoutAggregateArgs>): PrismaPromise<GetScheduledWorkoutAggregateType<T>>

    /**
     * Group by ScheduledWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduledWorkoutGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ScheduledWorkoutGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ScheduledWorkoutGroupByArgs['orderBy'] }
        : { orderBy?: ScheduledWorkoutGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ScheduledWorkoutGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScheduledWorkoutGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ScheduledWorkout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ScheduledWorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    GymProfile<T extends GymProfileArgs = {}>(args?: Subset<T, GymProfileArgs>): CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>;

    LoggedWorkout<T extends LoggedWorkoutArgs = {}>(args?: Subset<T, LoggedWorkoutArgs>): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>;

    Workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    WorkoutPlanEnrolment<T extends WorkoutPlanEnrolmentArgs = {}>(args?: Subset<T, WorkoutPlanEnrolmentArgs>): CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment | null >, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T> | null >>;

    WorkoutPlanDayWorkout<T extends WorkoutPlanDayWorkoutArgs = {}>(args?: Subset<T, WorkoutPlanDayWorkoutArgs>): CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout | null >, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ScheduledWorkout findUnique
   */
  export type ScheduledWorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Throw an Error if a ScheduledWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ScheduledWorkout to fetch.
     * 
    **/
    where: ScheduledWorkoutWhereUniqueInput
  }


  /**
   * ScheduledWorkout findFirst
   */
  export type ScheduledWorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Throw an Error if a ScheduledWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ScheduledWorkout to fetch.
     * 
    **/
    where?: ScheduledWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScheduledWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<ScheduledWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScheduledWorkouts.
     * 
    **/
    cursor?: ScheduledWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScheduledWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScheduledWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScheduledWorkouts.
     * 
    **/
    distinct?: Enumerable<ScheduledWorkoutScalarFieldEnum>
  }


  /**
   * ScheduledWorkout findMany
   */
  export type ScheduledWorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Filter, which ScheduledWorkouts to fetch.
     * 
    **/
    where?: ScheduledWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScheduledWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<ScheduledWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ScheduledWorkouts.
     * 
    **/
    cursor?: ScheduledWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScheduledWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScheduledWorkouts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ScheduledWorkoutScalarFieldEnum>
  }


  /**
   * ScheduledWorkout create
   */
  export type ScheduledWorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * The data needed to create a ScheduledWorkout.
     * 
    **/
    data: XOR<ScheduledWorkoutCreateInput, ScheduledWorkoutUncheckedCreateInput>
  }


  /**
   * ScheduledWorkout createMany
   */
  export type ScheduledWorkoutCreateManyArgs = {
    data: Enumerable<ScheduledWorkoutCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ScheduledWorkout update
   */
  export type ScheduledWorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * The data needed to update a ScheduledWorkout.
     * 
    **/
    data: XOR<ScheduledWorkoutUpdateInput, ScheduledWorkoutUncheckedUpdateInput>
    /**
     * Choose, which ScheduledWorkout to update.
     * 
    **/
    where: ScheduledWorkoutWhereUniqueInput
  }


  /**
   * ScheduledWorkout updateMany
   */
  export type ScheduledWorkoutUpdateManyArgs = {
    data: XOR<ScheduledWorkoutUpdateManyMutationInput, ScheduledWorkoutUncheckedUpdateManyInput>
    where?: ScheduledWorkoutWhereInput
  }


  /**
   * ScheduledWorkout upsert
   */
  export type ScheduledWorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * The filter to search for the ScheduledWorkout to update in case it exists.
     * 
    **/
    where: ScheduledWorkoutWhereUniqueInput
    /**
     * In case the ScheduledWorkout found by the `where` argument doesn't exist, create a new ScheduledWorkout with this data.
     * 
    **/
    create: XOR<ScheduledWorkoutCreateInput, ScheduledWorkoutUncheckedCreateInput>
    /**
     * In case the ScheduledWorkout was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ScheduledWorkoutUpdateInput, ScheduledWorkoutUncheckedUpdateInput>
  }


  /**
   * ScheduledWorkout delete
   */
  export type ScheduledWorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
    /**
     * Filter which ScheduledWorkout to delete.
     * 
    **/
    where: ScheduledWorkoutWhereUniqueInput
  }


  /**
   * ScheduledWorkout deleteMany
   */
  export type ScheduledWorkoutDeleteManyArgs = {
    where?: ScheduledWorkoutWhereInput
  }


  /**
   * ScheduledWorkout without action
   */
  export type ScheduledWorkoutArgs = {
    /**
     * Select specific fields to fetch from the ScheduledWorkout
     * 
    **/
    select?: ScheduledWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ScheduledWorkoutInclude | null
  }



  /**
   * Model User
   */


  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
    max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    hasOnboarded: boolean | null
    userProfileScope: UserProfileScope | null
    avatarUri: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    displayName: string | null
    firstname: string | null
    lastname: string | null
    bio: string | null
    tagline: string | null
    birthdate: Date | null
    gender: Gender | null
    townCity: string | null
    countryCode: string | null
    instagramUrl: string | null
    tiktokUrl: string | null
    youtubeUrl: string | null
    snapUrl: string | null
    linkedinUrl: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    firebaseUid: string | null
    createdAt: Date | null
    hasOnboarded: boolean | null
    userProfileScope: UserProfileScope | null
    avatarUri: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    displayName: string | null
    firstname: string | null
    lastname: string | null
    bio: string | null
    tagline: string | null
    birthdate: Date | null
    gender: Gender | null
    townCity: string | null
    countryCode: string | null
    instagramUrl: string | null
    tiktokUrl: string | null
    youtubeUrl: string | null
    snapUrl: string | null
    linkedinUrl: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    firebaseUid: number
    createdAt: number
    hasOnboarded: number
    userProfileScope: number
    avatarUri: number
    introVideoUri: number
    introVideoThumbUri: number
    displayName: number
    firstname: number
    lastname: number
    bio: number
    tagline: number
    birthdate: number
    gender: number
    townCity: number
    countryCode: number
    instagramUrl: number
    tiktokUrl: number
    youtubeUrl: number
    snapUrl: number
    linkedinUrl: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    hasOnboarded?: true
    userProfileScope?: true
    avatarUri?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    displayName?: true
    firstname?: true
    lastname?: true
    bio?: true
    tagline?: true
    birthdate?: true
    gender?: true
    townCity?: true
    countryCode?: true
    instagramUrl?: true
    tiktokUrl?: true
    youtubeUrl?: true
    snapUrl?: true
    linkedinUrl?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    hasOnboarded?: true
    userProfileScope?: true
    avatarUri?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    displayName?: true
    firstname?: true
    lastname?: true
    bio?: true
    tagline?: true
    birthdate?: true
    gender?: true
    townCity?: true
    countryCode?: true
    instagramUrl?: true
    tiktokUrl?: true
    youtubeUrl?: true
    snapUrl?: true
    linkedinUrl?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    firebaseUid?: true
    createdAt?: true
    hasOnboarded?: true
    userProfileScope?: true
    avatarUri?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    displayName?: true
    firstname?: true
    lastname?: true
    bio?: true
    tagline?: true
    birthdate?: true
    gender?: true
    townCity?: true
    countryCode?: true
    instagramUrl?: true
    tiktokUrl?: true
    youtubeUrl?: true
    snapUrl?: true
    linkedinUrl?: true
    _all?: true
  }

  export type UserAggregateArgs = {
    /**
     * Filter which User to aggregate.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }


    
    
  export type UserGroupByArgs = {
    where?: UserWhereInput
    orderBy?: Enumerable<UserOrderByInput>
    by: Array<UserScalarFieldEnum>
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }


  export type UserGroupByOutputType = {
    id: string
    firebaseUid: string
    createdAt: Date
    hasOnboarded: boolean
    userProfileScope: UserProfileScope
    avatarUri: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    displayName: string | null
    firstname: string | null
    lastname: string | null
    bio: string | null
    tagline: string | null
    birthdate: Date | null
    gender: Gender | null
    townCity: string | null
    countryCode: string | null
    instagramUrl: string | null
    tiktokUrl: string | null
    youtubeUrl: string | null
    snapUrl: string | null
    linkedinUrl: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Promise<
    Array<
      PickArray<UserGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], UserGroupByOutputType[P]> 
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      > 
    >


  export type UserSelect = {
    id?: boolean
    firebaseUid?: boolean
    createdAt?: boolean
    hasOnboarded?: boolean
    userProfileScope?: boolean
    avatarUri?: boolean
    introVideoUri?: boolean
    introVideoThumbUri?: boolean
    displayName?: boolean
    firstname?: boolean
    lastname?: boolean
    bio?: boolean
    tagline?: boolean
    birthdate?: boolean
    gender?: boolean
    townCity?: boolean
    countryCode?: boolean
    instagramUrl?: boolean
    tiktokUrl?: boolean
    youtubeUrl?: boolean
    snapUrl?: boolean
    linkedinUrl?: boolean
    CustomMoves?: boolean | MoveFindManyArgs
    Workouts?: boolean | WorkoutFindManyArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    LoggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    GymProfiles?: boolean | GymProfileFindManyArgs
    ProgressJournals?: boolean | ProgressJournalFindManyArgs
    ProgressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
    LoggedWorkoutSections?: boolean | LoggedWorkoutSectionFindManyArgs
    LoggedWorkoutSets?: boolean | LoggedWorkoutSetFindManyArgs
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    ProgressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
    ProgressJournalEntrys?: boolean | ProgressJournalEntryFindManyArgs
    WorkoutSections?: boolean | WorkoutSectionFindManyArgs
    WorkoutSets?: boolean | WorkoutSetFindManyArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    WorkoutSetGenerators?: boolean | WorkoutSetGeneratorFindManyArgs
    WorkoutSetIntervalBuyIn?: boolean | WorkoutSetIntervalBuyInFindManyArgs
    WorkoutTag?: boolean | WorkoutTagFindManyArgs
    UserBenchmarkGroups?: boolean | UserBenchmarkGroupFindManyArgs
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
    UserBenchmarkEntries?: boolean | UserBenchmarkEntryFindManyArgs
    WorkoutPlans?: boolean | WorkoutPlanFindManyArgs
    WorkoutPlanDays?: boolean | WorkoutPlanDayFindManyArgs
    WorkoutPlanDayWorkouts?: boolean | WorkoutPlanDayWorkoutFindManyArgs
    WorkoutPlanEnrolments?: boolean | WorkoutPlanEnrolmentFindManyArgs
    WorkoutPlanReviews?: boolean | WorkoutPlanReviewFindManyArgs
    Collections?: boolean | CollectionFindManyArgs
  }

  export type UserInclude = {
    CustomMoves?: boolean | MoveFindManyArgs
    Workouts?: boolean | WorkoutFindManyArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    LoggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    GymProfiles?: boolean | GymProfileFindManyArgs
    ProgressJournals?: boolean | ProgressJournalFindManyArgs
    ProgressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
    LoggedWorkoutSections?: boolean | LoggedWorkoutSectionFindManyArgs
    LoggedWorkoutSets?: boolean | LoggedWorkoutSetFindManyArgs
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    ProgressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
    ProgressJournalEntrys?: boolean | ProgressJournalEntryFindManyArgs
    WorkoutSections?: boolean | WorkoutSectionFindManyArgs
    WorkoutSets?: boolean | WorkoutSetFindManyArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    WorkoutSetGenerators?: boolean | WorkoutSetGeneratorFindManyArgs
    WorkoutSetIntervalBuyIn?: boolean | WorkoutSetIntervalBuyInFindManyArgs
    WorkoutTag?: boolean | WorkoutTagFindManyArgs
    UserBenchmarkGroups?: boolean | UserBenchmarkGroupFindManyArgs
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
    UserBenchmarkEntries?: boolean | UserBenchmarkEntryFindManyArgs
    WorkoutPlans?: boolean | WorkoutPlanFindManyArgs
    WorkoutPlanDays?: boolean | WorkoutPlanDayFindManyArgs
    WorkoutPlanDayWorkouts?: boolean | WorkoutPlanDayWorkoutFindManyArgs
    WorkoutPlanEnrolments?: boolean | WorkoutPlanEnrolmentFindManyArgs
    WorkoutPlanReviews?: boolean | WorkoutPlanReviewFindManyArgs
    Collections?: boolean | CollectionFindManyArgs
  }

  export type UserGetPayload<
    S extends boolean | null | undefined | UserArgs,
    U = keyof S
      > = S extends true
        ? User
    : S extends undefined
    ? never
    : S extends UserArgs | UserFindManyArgs
    ?'include' extends U
    ? User  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'CustomMoves'
        ? Array < MoveGetPayload<S['include'][P]>>  :
        P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['include'][P]>>  :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  :
        P extends 'GymProfiles'
        ? Array < GymProfileGetPayload<S['include'][P]>>  :
        P extends 'ProgressJournals'
        ? Array < ProgressJournalGetPayload<S['include'][P]>>  :
        P extends 'ProgressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkoutSections'
        ? Array < LoggedWorkoutSectionGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkoutSets'
        ? Array < LoggedWorkoutSetGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'ProgressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['include'][P]>>  :
        P extends 'ProgressJournalEntrys'
        ? Array < ProgressJournalEntryGetPayload<S['include'][P]>>  :
        P extends 'WorkoutSections'
        ? Array < WorkoutSectionGetPayload<S['include'][P]>>  :
        P extends 'WorkoutSets'
        ? Array < WorkoutSetGetPayload<S['include'][P]>>  :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'WorkoutSetGenerators'
        ? Array < WorkoutSetGeneratorGetPayload<S['include'][P]>>  :
        P extends 'WorkoutSetIntervalBuyIn'
        ? Array < WorkoutSetIntervalBuyInGetPayload<S['include'][P]>>  :
        P extends 'WorkoutTag'
        ? Array < WorkoutTagGetPayload<S['include'][P]>>  :
        P extends 'UserBenchmarkGroups'
        ? Array < UserBenchmarkGroupGetPayload<S['include'][P]>>  :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['include'][P]>>  :
        P extends 'UserBenchmarkEntries'
        ? Array < UserBenchmarkEntryGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlans'
        ? Array < WorkoutPlanGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlanDays'
        ? Array < WorkoutPlanDayGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlanDayWorkouts'
        ? Array < WorkoutPlanDayWorkoutGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlanEnrolments'
        ? Array < WorkoutPlanEnrolmentGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlanReviews'
        ? Array < WorkoutPlanReviewGetPayload<S['include'][P]>>  :
        P extends 'Collections'
        ? Array < CollectionGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof User ?User [P]
  : 
          P extends 'CustomMoves'
        ? Array < MoveGetPayload<S['select'][P]>>  :
        P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['select'][P]>>  :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  :
        P extends 'GymProfiles'
        ? Array < GymProfileGetPayload<S['select'][P]>>  :
        P extends 'ProgressJournals'
        ? Array < ProgressJournalGetPayload<S['select'][P]>>  :
        P extends 'ProgressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkoutSections'
        ? Array < LoggedWorkoutSectionGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkoutSets'
        ? Array < LoggedWorkoutSetGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'ProgressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['select'][P]>>  :
        P extends 'ProgressJournalEntrys'
        ? Array < ProgressJournalEntryGetPayload<S['select'][P]>>  :
        P extends 'WorkoutSections'
        ? Array < WorkoutSectionGetPayload<S['select'][P]>>  :
        P extends 'WorkoutSets'
        ? Array < WorkoutSetGetPayload<S['select'][P]>>  :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'WorkoutSetGenerators'
        ? Array < WorkoutSetGeneratorGetPayload<S['select'][P]>>  :
        P extends 'WorkoutSetIntervalBuyIn'
        ? Array < WorkoutSetIntervalBuyInGetPayload<S['select'][P]>>  :
        P extends 'WorkoutTag'
        ? Array < WorkoutTagGetPayload<S['select'][P]>>  :
        P extends 'UserBenchmarkGroups'
        ? Array < UserBenchmarkGroupGetPayload<S['select'][P]>>  :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['select'][P]>>  :
        P extends 'UserBenchmarkEntries'
        ? Array < UserBenchmarkEntryGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlans'
        ? Array < WorkoutPlanGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlanDays'
        ? Array < WorkoutPlanDayGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlanDayWorkouts'
        ? Array < WorkoutPlanDayWorkoutGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlanEnrolments'
        ? Array < WorkoutPlanEnrolmentGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlanReviews'
        ? Array < WorkoutPlanReviewGetPayload<S['select'][P]>>  :
        P extends 'Collections'
        ? Array < CollectionGetPayload<S['select'][P]>>  : never
  } 
    : User
  : User


  type UserCountArgs = Merge<
    Omit<UserFindManyArgs, 'select' | 'include'> & {
      select?: UserCountAggregateInputType | true
    }
  >

  export interface UserDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'User'> extends True ? CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>> : CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'User'> extends True ? CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>> : CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs>(
      args?: SelectSubset<T, UserFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs>(
      args: SelectSubset<T, UserCreateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Create many Users.
     *     @param {UserCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserCreateManyArgs>(
      args?: SelectSubset<T, UserCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs>(
      args: SelectSubset<T, UserDeleteArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs>(
      args: SelectSubset<T, UserUpdateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs>(
      args?: SelectSubset<T, UserDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs>(
      args: SelectSubset<T, UserUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs>(
      args: SelectSubset<T, UserUpsertArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    CustomMoves<T extends MoveFindManyArgs = {}>(args?: Subset<T, MoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Move>>, PrismaPromise<Array<MoveGetPayload<T>>>>;

    Workouts<T extends WorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>;

    ScheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    LoggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    GymProfiles<T extends GymProfileFindManyArgs = {}>(args?: Subset<T, GymProfileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<GymProfile>>, PrismaPromise<Array<GymProfileGetPayload<T>>>>;

    ProgressJournals<T extends ProgressJournalFindManyArgs = {}>(args?: Subset<T, ProgressJournalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournal>>, PrismaPromise<Array<ProgressJournalGetPayload<T>>>>;

    ProgressJournalGoalTags<T extends ProgressJournalGoalTagFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalTagFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoalTag>>, PrismaPromise<Array<ProgressJournalGoalTagGetPayload<T>>>>;

    LoggedWorkoutSections<T extends LoggedWorkoutSectionFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutSection>>, PrismaPromise<Array<LoggedWorkoutSectionGetPayload<T>>>>;

    LoggedWorkoutSets<T extends LoggedWorkoutSetFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutSetFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutSet>>, PrismaPromise<Array<LoggedWorkoutSetGetPayload<T>>>>;

    LoggedWorkoutMoves<T extends LoggedWorkoutMoveFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutMove>>, PrismaPromise<Array<LoggedWorkoutMoveGetPayload<T>>>>;

    ProgressJournalGoals<T extends ProgressJournalGoalFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoal>>, PrismaPromise<Array<ProgressJournalGoalGetPayload<T>>>>;

    ProgressJournalEntrys<T extends ProgressJournalEntryFindManyArgs = {}>(args?: Subset<T, ProgressJournalEntryFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalEntry>>, PrismaPromise<Array<ProgressJournalEntryGetPayload<T>>>>;

    WorkoutSections<T extends WorkoutSectionFindManyArgs = {}>(args?: Subset<T, WorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSection>>, PrismaPromise<Array<WorkoutSectionGetPayload<T>>>>;

    WorkoutSets<T extends WorkoutSetFindManyArgs = {}>(args?: Subset<T, WorkoutSetFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSet>>, PrismaPromise<Array<WorkoutSetGetPayload<T>>>>;

    WorkoutMoves<T extends WorkoutMoveFindManyArgs = {}>(args?: Subset<T, WorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>;

    WorkoutSetGenerators<T extends WorkoutSetGeneratorFindManyArgs = {}>(args?: Subset<T, WorkoutSetGeneratorFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSetGenerator>>, PrismaPromise<Array<WorkoutSetGeneratorGetPayload<T>>>>;

    WorkoutSetIntervalBuyIn<T extends WorkoutSetIntervalBuyInFindManyArgs = {}>(args?: Subset<T, WorkoutSetIntervalBuyInFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSetIntervalBuyIn>>, PrismaPromise<Array<WorkoutSetIntervalBuyInGetPayload<T>>>>;

    WorkoutTag<T extends WorkoutTagFindManyArgs = {}>(args?: Subset<T, WorkoutTagFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutTag>>, PrismaPromise<Array<WorkoutTagGetPayload<T>>>>;

    UserBenchmarkGroups<T extends UserBenchmarkGroupFindManyArgs = {}>(args?: Subset<T, UserBenchmarkGroupFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmarkGroup>>, PrismaPromise<Array<UserBenchmarkGroupGetPayload<T>>>>;

    UserBenchmarks<T extends UserBenchmarkFindManyArgs = {}>(args?: Subset<T, UserBenchmarkFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>;

    UserBenchmarkEntries<T extends UserBenchmarkEntryFindManyArgs = {}>(args?: Subset<T, UserBenchmarkEntryFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmarkEntry>>, PrismaPromise<Array<UserBenchmarkEntryGetPayload<T>>>>;

    WorkoutPlans<T extends WorkoutPlanFindManyArgs = {}>(args?: Subset<T, WorkoutPlanFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlan>>, PrismaPromise<Array<WorkoutPlanGetPayload<T>>>>;

    WorkoutPlanDays<T extends WorkoutPlanDayFindManyArgs = {}>(args?: Subset<T, WorkoutPlanDayFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanDay>>, PrismaPromise<Array<WorkoutPlanDayGetPayload<T>>>>;

    WorkoutPlanDayWorkouts<T extends WorkoutPlanDayWorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutPlanDayWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanDayWorkout>>, PrismaPromise<Array<WorkoutPlanDayWorkoutGetPayload<T>>>>;

    WorkoutPlanEnrolments<T extends WorkoutPlanEnrolmentFindManyArgs = {}>(args?: Subset<T, WorkoutPlanEnrolmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanEnrolment>>, PrismaPromise<Array<WorkoutPlanEnrolmentGetPayload<T>>>>;

    WorkoutPlanReviews<T extends WorkoutPlanReviewFindManyArgs = {}>(args?: Subset<T, WorkoutPlanReviewFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanReview>>, PrismaPromise<Array<WorkoutPlanReviewGetPayload<T>>>>;

    Collections<T extends CollectionFindManyArgs = {}>(args?: Subset<T, CollectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Collection>>, PrismaPromise<Array<CollectionGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * User findUnique
   */
  export type UserFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Throw an Error if a User can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which User to fetch.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User findFirst
   */
  export type UserFindFirstArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Throw an Error if a User can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which User to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     * 
    **/
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User findMany
   */
  export type UserFindManyArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User create
   */
  export type UserCreateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to create a User.
     * 
    **/
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }


  /**
   * User createMany
   */
  export type UserCreateManyArgs = {
    data: Enumerable<UserCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * User update
   */
  export type UserUpdateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to update a User.
     * 
    **/
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs = {
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The filter to search for the User to update in case it exists.
     * 
    **/
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     * 
    **/
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter which User to delete.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs = {
    where?: UserWhereInput
  }


  /**
   * User without action
   */
  export type UserArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
  }



  /**
   * Model UserBenchmarkGroup
   */


  export type AggregateUserBenchmarkGroup = {
    _count: UserBenchmarkGroupCountAggregateOutputType | null
    count: UserBenchmarkGroupCountAggregateOutputType | null
    _min: UserBenchmarkGroupMinAggregateOutputType | null
    min: UserBenchmarkGroupMinAggregateOutputType | null
    _max: UserBenchmarkGroupMaxAggregateOutputType | null
    max: UserBenchmarkGroupMaxAggregateOutputType | null
  }

  export type UserBenchmarkGroupMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type UserBenchmarkGroupMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type UserBenchmarkGroupCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    name: number
    description: number
    _all: number
  }


  export type UserBenchmarkGroupMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type UserBenchmarkGroupMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type UserBenchmarkGroupCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    _all?: true
  }

  export type UserBenchmarkGroupAggregateArgs = {
    /**
     * Filter which UserBenchmarkGroup to aggregate.
     * 
    **/
    where?: UserBenchmarkGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkGroups to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkGroupOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserBenchmarkGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkGroups from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkGroups.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserBenchmarkGroups
    **/
    _count?: true | UserBenchmarkGroupCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | UserBenchmarkGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserBenchmarkGroupMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: UserBenchmarkGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserBenchmarkGroupMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: UserBenchmarkGroupMaxAggregateInputType
  }

  export type GetUserBenchmarkGroupAggregateType<T extends UserBenchmarkGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateUserBenchmarkGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserBenchmarkGroup[P]>
      : GetScalarType<T[P], AggregateUserBenchmarkGroup[P]>
  }


    
    
  export type UserBenchmarkGroupGroupByArgs = {
    where?: UserBenchmarkGroupWhereInput
    orderBy?: Enumerable<UserBenchmarkGroupOrderByInput>
    by: Array<UserBenchmarkGroupScalarFieldEnum>
    having?: UserBenchmarkGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserBenchmarkGroupCountAggregateInputType | true
    _min?: UserBenchmarkGroupMinAggregateInputType
    _max?: UserBenchmarkGroupMaxAggregateInputType
  }


  export type UserBenchmarkGroupGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    name: string
    description: string | null
    _count: UserBenchmarkGroupCountAggregateOutputType | null
    _min: UserBenchmarkGroupMinAggregateOutputType | null
    _max: UserBenchmarkGroupMaxAggregateOutputType | null
  }

  type GetUserBenchmarkGroupGroupByPayload<T extends UserBenchmarkGroupGroupByArgs> = Promise<
    Array<
      PickArray<UserBenchmarkGroupGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof UserBenchmarkGroupGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], UserBenchmarkGroupGroupByOutputType[P]> 
            : GetScalarType<T[P], UserBenchmarkGroupGroupByOutputType[P]>
        }
      > 
    >


  export type UserBenchmarkGroupSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type UserBenchmarkGroupInclude = {
    User?: boolean | UserArgs
    UserBenchmarks?: boolean | UserBenchmarkFindManyArgs
  }

  export type UserBenchmarkGroupGetPayload<
    S extends boolean | null | undefined | UserBenchmarkGroupArgs,
    U = keyof S
      > = S extends true
        ? UserBenchmarkGroup
    : S extends undefined
    ? never
    : S extends UserBenchmarkGroupArgs | UserBenchmarkGroupFindManyArgs
    ?'include' extends U
    ? UserBenchmarkGroup  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UserBenchmarkGroup ?UserBenchmarkGroup [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'UserBenchmarks'
        ? Array < UserBenchmarkGetPayload<S['select'][P]>>  : never
  } 
    : UserBenchmarkGroup
  : UserBenchmarkGroup


  type UserBenchmarkGroupCountArgs = Merge<
    Omit<UserBenchmarkGroupFindManyArgs, 'select' | 'include'> & {
      select?: UserBenchmarkGroupCountAggregateInputType | true
    }
  >

  export interface UserBenchmarkGroupDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one UserBenchmarkGroup that matches the filter.
     * @param {UserBenchmarkGroupFindUniqueArgs} args - Arguments to find a UserBenchmarkGroup
     * @example
     * // Get one UserBenchmarkGroup
     * const userBenchmarkGroup = await prisma.userBenchmarkGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserBenchmarkGroupFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserBenchmarkGroupFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserBenchmarkGroup'> extends True ? CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup>, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup | null >, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T> | null >>

    /**
     * Find the first UserBenchmarkGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkGroupFindFirstArgs} args - Arguments to find a UserBenchmarkGroup
     * @example
     * // Get one UserBenchmarkGroup
     * const userBenchmarkGroup = await prisma.userBenchmarkGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserBenchmarkGroupFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserBenchmarkGroupFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserBenchmarkGroup'> extends True ? CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup>, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup | null >, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T> | null >>

    /**
     * Find zero or more UserBenchmarkGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkGroupFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserBenchmarkGroups
     * const userBenchmarkGroups = await prisma.userBenchmarkGroup.findMany()
     * 
     * // Get first 10 UserBenchmarkGroups
     * const userBenchmarkGroups = await prisma.userBenchmarkGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userBenchmarkGroupWithIdOnly = await prisma.userBenchmarkGroup.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserBenchmarkGroupFindManyArgs>(
      args?: SelectSubset<T, UserBenchmarkGroupFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<UserBenchmarkGroup>>, PrismaPromise<Array<UserBenchmarkGroupGetPayload<T>>>>

    /**
     * Create a UserBenchmarkGroup.
     * @param {UserBenchmarkGroupCreateArgs} args - Arguments to create a UserBenchmarkGroup.
     * @example
     * // Create one UserBenchmarkGroup
     * const UserBenchmarkGroup = await prisma.userBenchmarkGroup.create({
     *   data: {
     *     // ... data to create a UserBenchmarkGroup
     *   }
     * })
     * 
    **/
    create<T extends UserBenchmarkGroupCreateArgs>(
      args: SelectSubset<T, UserBenchmarkGroupCreateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup>, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T>>>

    /**
     * Create many UserBenchmarkGroups.
     *     @param {UserBenchmarkGroupCreateManyArgs} args - Arguments to create many UserBenchmarkGroups.
     *     @example
     *     // Create many UserBenchmarkGroups
     *     const userBenchmarkGroup = await prisma.userBenchmarkGroup.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserBenchmarkGroupCreateManyArgs>(
      args?: SelectSubset<T, UserBenchmarkGroupCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a UserBenchmarkGroup.
     * @param {UserBenchmarkGroupDeleteArgs} args - Arguments to delete one UserBenchmarkGroup.
     * @example
     * // Delete one UserBenchmarkGroup
     * const UserBenchmarkGroup = await prisma.userBenchmarkGroup.delete({
     *   where: {
     *     // ... filter to delete one UserBenchmarkGroup
     *   }
     * })
     * 
    **/
    delete<T extends UserBenchmarkGroupDeleteArgs>(
      args: SelectSubset<T, UserBenchmarkGroupDeleteArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup>, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T>>>

    /**
     * Update one UserBenchmarkGroup.
     * @param {UserBenchmarkGroupUpdateArgs} args - Arguments to update one UserBenchmarkGroup.
     * @example
     * // Update one UserBenchmarkGroup
     * const userBenchmarkGroup = await prisma.userBenchmarkGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserBenchmarkGroupUpdateArgs>(
      args: SelectSubset<T, UserBenchmarkGroupUpdateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup>, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T>>>

    /**
     * Delete zero or more UserBenchmarkGroups.
     * @param {UserBenchmarkGroupDeleteManyArgs} args - Arguments to filter UserBenchmarkGroups to delete.
     * @example
     * // Delete a few UserBenchmarkGroups
     * const { count } = await prisma.userBenchmarkGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserBenchmarkGroupDeleteManyArgs>(
      args?: SelectSubset<T, UserBenchmarkGroupDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserBenchmarkGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserBenchmarkGroups
     * const userBenchmarkGroup = await prisma.userBenchmarkGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserBenchmarkGroupUpdateManyArgs>(
      args: SelectSubset<T, UserBenchmarkGroupUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserBenchmarkGroup.
     * @param {UserBenchmarkGroupUpsertArgs} args - Arguments to update or create a UserBenchmarkGroup.
     * @example
     * // Update or create a UserBenchmarkGroup
     * const userBenchmarkGroup = await prisma.userBenchmarkGroup.upsert({
     *   create: {
     *     // ... data to create a UserBenchmarkGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserBenchmarkGroup we want to update
     *   }
     * })
    **/
    upsert<T extends UserBenchmarkGroupUpsertArgs>(
      args: SelectSubset<T, UserBenchmarkGroupUpsertArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroup>, Prisma__UserBenchmarkGroupClient<UserBenchmarkGroupGetPayload<T>>>

    /**
     * Count the number of UserBenchmarkGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkGroupCountArgs} args - Arguments to filter UserBenchmarkGroups to count.
     * @example
     * // Count the number of UserBenchmarkGroups
     * const count = await prisma.userBenchmarkGroup.count({
     *   where: {
     *     // ... the filter for the UserBenchmarkGroups we want to count
     *   }
     * })
    **/
    count<T extends UserBenchmarkGroupCountArgs>(
      args?: Subset<T, UserBenchmarkGroupCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserBenchmarkGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserBenchmarkGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserBenchmarkGroupAggregateArgs>(args: Subset<T, UserBenchmarkGroupAggregateArgs>): PrismaPromise<GetUserBenchmarkGroupAggregateType<T>>

    /**
     * Group by UserBenchmarkGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserBenchmarkGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserBenchmarkGroupGroupByArgs['orderBy'] }
        : { orderBy?: UserBenchmarkGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserBenchmarkGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserBenchmarkGroupGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserBenchmarkGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserBenchmarkGroupClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    UserBenchmarks<T extends UserBenchmarkFindManyArgs = {}>(args?: Subset<T, UserBenchmarkFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * UserBenchmarkGroup findUnique
   */
  export type UserBenchmarkGroupFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
    /**
     * Throw an Error if a UserBenchmarkGroup can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmarkGroup to fetch.
     * 
    **/
    where: UserBenchmarkGroupWhereUniqueInput
  }


  /**
   * UserBenchmarkGroup findFirst
   */
  export type UserBenchmarkGroupFindFirstArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
    /**
     * Throw an Error if a UserBenchmarkGroup can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmarkGroup to fetch.
     * 
    **/
    where?: UserBenchmarkGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkGroups to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkGroupOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserBenchmarkGroups.
     * 
    **/
    cursor?: UserBenchmarkGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkGroups from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkGroups.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserBenchmarkGroups.
     * 
    **/
    distinct?: Enumerable<UserBenchmarkGroupScalarFieldEnum>
  }


  /**
   * UserBenchmarkGroup findMany
   */
  export type UserBenchmarkGroupFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
    /**
     * Filter, which UserBenchmarkGroups to fetch.
     * 
    **/
    where?: UserBenchmarkGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkGroups to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkGroupOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserBenchmarkGroups.
     * 
    **/
    cursor?: UserBenchmarkGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkGroups from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkGroups.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserBenchmarkGroupScalarFieldEnum>
  }


  /**
   * UserBenchmarkGroup create
   */
  export type UserBenchmarkGroupCreateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
    /**
     * The data needed to create a UserBenchmarkGroup.
     * 
    **/
    data: XOR<UserBenchmarkGroupCreateInput, UserBenchmarkGroupUncheckedCreateInput>
  }


  /**
   * UserBenchmarkGroup createMany
   */
  export type UserBenchmarkGroupCreateManyArgs = {
    data: Enumerable<UserBenchmarkGroupCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * UserBenchmarkGroup update
   */
  export type UserBenchmarkGroupUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
    /**
     * The data needed to update a UserBenchmarkGroup.
     * 
    **/
    data: XOR<UserBenchmarkGroupUpdateInput, UserBenchmarkGroupUncheckedUpdateInput>
    /**
     * Choose, which UserBenchmarkGroup to update.
     * 
    **/
    where: UserBenchmarkGroupWhereUniqueInput
  }


  /**
   * UserBenchmarkGroup updateMany
   */
  export type UserBenchmarkGroupUpdateManyArgs = {
    data: XOR<UserBenchmarkGroupUpdateManyMutationInput, UserBenchmarkGroupUncheckedUpdateManyInput>
    where?: UserBenchmarkGroupWhereInput
  }


  /**
   * UserBenchmarkGroup upsert
   */
  export type UserBenchmarkGroupUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
    /**
     * The filter to search for the UserBenchmarkGroup to update in case it exists.
     * 
    **/
    where: UserBenchmarkGroupWhereUniqueInput
    /**
     * In case the UserBenchmarkGroup found by the `where` argument doesn't exist, create a new UserBenchmarkGroup with this data.
     * 
    **/
    create: XOR<UserBenchmarkGroupCreateInput, UserBenchmarkGroupUncheckedCreateInput>
    /**
     * In case the UserBenchmarkGroup was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserBenchmarkGroupUpdateInput, UserBenchmarkGroupUncheckedUpdateInput>
  }


  /**
   * UserBenchmarkGroup delete
   */
  export type UserBenchmarkGroupDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
    /**
     * Filter which UserBenchmarkGroup to delete.
     * 
    **/
    where: UserBenchmarkGroupWhereUniqueInput
  }


  /**
   * UserBenchmarkGroup deleteMany
   */
  export type UserBenchmarkGroupDeleteManyArgs = {
    where?: UserBenchmarkGroupWhereInput
  }


  /**
   * UserBenchmarkGroup without action
   */
  export type UserBenchmarkGroupArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkGroup
     * 
    **/
    select?: UserBenchmarkGroupSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkGroupInclude | null
  }



  /**
   * Model UserBenchmark
   */


  export type AggregateUserBenchmark = {
    _count: UserBenchmarkCountAggregateOutputType | null
    count: UserBenchmarkCountAggregateOutputType | null
    _avg: UserBenchmarkAvgAggregateOutputType | null
    avg: UserBenchmarkAvgAggregateOutputType | null
    _sum: UserBenchmarkSumAggregateOutputType | null
    sum: UserBenchmarkSumAggregateOutputType | null
    _min: UserBenchmarkMinAggregateOutputType | null
    min: UserBenchmarkMinAggregateOutputType | null
    _max: UserBenchmarkMaxAggregateOutputType | null
    max: UserBenchmarkMaxAggregateOutputType | null
  }

  export type UserBenchmarkAvgAggregateOutputType = {
    reps: number | null
    load: number | null
  }

  export type UserBenchmarkSumAggregateOutputType = {
    reps: number | null
    load: number | null
  }

  export type UserBenchmarkMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    lastEntryAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
    reps: number | null
    repType: WorkoutMoveRepType | null
    load: number | null
    loadUnit: LoadUnit | null
    distanceUnit: DistanceUnit | null
    timeUnit: TimeUnit | null
    equipmentId: string | null
    moveId: string | null
    benchmarkType: BenchmarkType | null
  }

  export type UserBenchmarkMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    lastEntryAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
    reps: number | null
    repType: WorkoutMoveRepType | null
    load: number | null
    loadUnit: LoadUnit | null
    distanceUnit: DistanceUnit | null
    timeUnit: TimeUnit | null
    equipmentId: string | null
    moveId: string | null
    benchmarkType: BenchmarkType | null
  }

  export type UserBenchmarkCountAggregateOutputType = {
    id: number
    createdAt: number
    lastEntryAt: number
    userId: number
    name: number
    description: number
    reps: number
    repType: number
    load: number
    loadUnit: number
    distanceUnit: number
    timeUnit: number
    equipmentId: number
    moveId: number
    benchmarkType: number
    _all: number
  }


  export type UserBenchmarkAvgAggregateInputType = {
    reps?: true
    load?: true
  }

  export type UserBenchmarkSumAggregateInputType = {
    reps?: true
    load?: true
  }

  export type UserBenchmarkMinAggregateInputType = {
    id?: true
    createdAt?: true
    lastEntryAt?: true
    userId?: true
    name?: true
    description?: true
    reps?: true
    repType?: true
    load?: true
    loadUnit?: true
    distanceUnit?: true
    timeUnit?: true
    equipmentId?: true
    moveId?: true
    benchmarkType?: true
  }

  export type UserBenchmarkMaxAggregateInputType = {
    id?: true
    createdAt?: true
    lastEntryAt?: true
    userId?: true
    name?: true
    description?: true
    reps?: true
    repType?: true
    load?: true
    loadUnit?: true
    distanceUnit?: true
    timeUnit?: true
    equipmentId?: true
    moveId?: true
    benchmarkType?: true
  }

  export type UserBenchmarkCountAggregateInputType = {
    id?: true
    createdAt?: true
    lastEntryAt?: true
    userId?: true
    name?: true
    description?: true
    reps?: true
    repType?: true
    load?: true
    loadUnit?: true
    distanceUnit?: true
    timeUnit?: true
    equipmentId?: true
    moveId?: true
    benchmarkType?: true
    _all?: true
  }

  export type UserBenchmarkAggregateArgs = {
    /**
     * Filter which UserBenchmark to aggregate.
     * 
    **/
    where?: UserBenchmarkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarks to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserBenchmarkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserBenchmarks
    **/
    _count?: true | UserBenchmarkCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | UserBenchmarkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserBenchmarkAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: UserBenchmarkAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserBenchmarkSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: UserBenchmarkSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserBenchmarkMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: UserBenchmarkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserBenchmarkMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: UserBenchmarkMaxAggregateInputType
  }

  export type GetUserBenchmarkAggregateType<T extends UserBenchmarkAggregateArgs> = {
        [P in keyof T & keyof AggregateUserBenchmark]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserBenchmark[P]>
      : GetScalarType<T[P], AggregateUserBenchmark[P]>
  }


    
    
  export type UserBenchmarkGroupByArgs = {
    where?: UserBenchmarkWhereInput
    orderBy?: Enumerable<UserBenchmarkOrderByInput>
    by: Array<UserBenchmarkScalarFieldEnum>
    having?: UserBenchmarkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserBenchmarkCountAggregateInputType | true
    _avg?: UserBenchmarkAvgAggregateInputType
    _sum?: UserBenchmarkSumAggregateInputType
    _min?: UserBenchmarkMinAggregateInputType
    _max?: UserBenchmarkMaxAggregateInputType
  }


  export type UserBenchmarkGroupByOutputType = {
    id: string
    createdAt: Date
    lastEntryAt: Date
    userId: string
    name: string
    description: string | null
    reps: number | null
    repType: WorkoutMoveRepType
    load: number | null
    loadUnit: LoadUnit
    distanceUnit: DistanceUnit
    timeUnit: TimeUnit
    equipmentId: string | null
    moveId: string
    benchmarkType: BenchmarkType
    _count: UserBenchmarkCountAggregateOutputType | null
    _avg: UserBenchmarkAvgAggregateOutputType | null
    _sum: UserBenchmarkSumAggregateOutputType | null
    _min: UserBenchmarkMinAggregateOutputType | null
    _max: UserBenchmarkMaxAggregateOutputType | null
  }

  type GetUserBenchmarkGroupByPayload<T extends UserBenchmarkGroupByArgs> = Promise<
    Array<
      PickArray<UserBenchmarkGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof UserBenchmarkGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], UserBenchmarkGroupByOutputType[P]> 
            : GetScalarType<T[P], UserBenchmarkGroupByOutputType[P]>
        }
      > 
    >


  export type UserBenchmarkSelect = {
    id?: boolean
    createdAt?: boolean
    lastEntryAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    reps?: boolean
    repType?: boolean
    load?: boolean
    loadUnit?: boolean
    distanceUnit?: boolean
    timeUnit?: boolean
    Equipment?: boolean | EquipmentArgs
    equipmentId?: boolean
    Move?: boolean | MoveArgs
    moveId?: boolean
    benchmarkType?: boolean
    UserBenchmarkEntries?: boolean | UserBenchmarkEntryFindManyArgs
    UserBenchmarkGroups?: boolean | UserBenchmarkGroupFindManyArgs
  }

  export type UserBenchmarkInclude = {
    User?: boolean | UserArgs
    Equipment?: boolean | EquipmentArgs
    Move?: boolean | MoveArgs
    UserBenchmarkEntries?: boolean | UserBenchmarkEntryFindManyArgs
    UserBenchmarkGroups?: boolean | UserBenchmarkGroupFindManyArgs
  }

  export type UserBenchmarkGetPayload<
    S extends boolean | null | undefined | UserBenchmarkArgs,
    U = keyof S
      > = S extends true
        ? UserBenchmark
    : S extends undefined
    ? never
    : S extends UserBenchmarkArgs | UserBenchmarkFindManyArgs
    ?'include' extends U
    ? UserBenchmark  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Equipment'
        ? EquipmentGetPayload<S['include'][P]> | null :
        P extends 'Move'
        ? MoveGetPayload<S['include'][P]> :
        P extends 'UserBenchmarkEntries'
        ? Array < UserBenchmarkEntryGetPayload<S['include'][P]>>  :
        P extends 'UserBenchmarkGroups'
        ? Array < UserBenchmarkGroupGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UserBenchmark ?UserBenchmark [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Equipment'
        ? EquipmentGetPayload<S['select'][P]> | null :
        P extends 'Move'
        ? MoveGetPayload<S['select'][P]> :
        P extends 'UserBenchmarkEntries'
        ? Array < UserBenchmarkEntryGetPayload<S['select'][P]>>  :
        P extends 'UserBenchmarkGroups'
        ? Array < UserBenchmarkGroupGetPayload<S['select'][P]>>  : never
  } 
    : UserBenchmark
  : UserBenchmark


  type UserBenchmarkCountArgs = Merge<
    Omit<UserBenchmarkFindManyArgs, 'select' | 'include'> & {
      select?: UserBenchmarkCountAggregateInputType | true
    }
  >

  export interface UserBenchmarkDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one UserBenchmark that matches the filter.
     * @param {UserBenchmarkFindUniqueArgs} args - Arguments to find a UserBenchmark
     * @example
     * // Get one UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserBenchmarkFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserBenchmarkFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserBenchmark'> extends True ? CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark | null >, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T> | null >>

    /**
     * Find the first UserBenchmark that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkFindFirstArgs} args - Arguments to find a UserBenchmark
     * @example
     * // Get one UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserBenchmarkFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserBenchmarkFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserBenchmark'> extends True ? CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark | null >, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T> | null >>

    /**
     * Find zero or more UserBenchmarks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserBenchmarks
     * const userBenchmarks = await prisma.userBenchmark.findMany()
     * 
     * // Get first 10 UserBenchmarks
     * const userBenchmarks = await prisma.userBenchmark.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userBenchmarkWithIdOnly = await prisma.userBenchmark.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserBenchmarkFindManyArgs>(
      args?: SelectSubset<T, UserBenchmarkFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<UserBenchmark>>, PrismaPromise<Array<UserBenchmarkGetPayload<T>>>>

    /**
     * Create a UserBenchmark.
     * @param {UserBenchmarkCreateArgs} args - Arguments to create a UserBenchmark.
     * @example
     * // Create one UserBenchmark
     * const UserBenchmark = await prisma.userBenchmark.create({
     *   data: {
     *     // ... data to create a UserBenchmark
     *   }
     * })
     * 
    **/
    create<T extends UserBenchmarkCreateArgs>(
      args: SelectSubset<T, UserBenchmarkCreateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Create many UserBenchmarks.
     *     @param {UserBenchmarkCreateManyArgs} args - Arguments to create many UserBenchmarks.
     *     @example
     *     // Create many UserBenchmarks
     *     const userBenchmark = await prisma.userBenchmark.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserBenchmarkCreateManyArgs>(
      args?: SelectSubset<T, UserBenchmarkCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a UserBenchmark.
     * @param {UserBenchmarkDeleteArgs} args - Arguments to delete one UserBenchmark.
     * @example
     * // Delete one UserBenchmark
     * const UserBenchmark = await prisma.userBenchmark.delete({
     *   where: {
     *     // ... filter to delete one UserBenchmark
     *   }
     * })
     * 
    **/
    delete<T extends UserBenchmarkDeleteArgs>(
      args: SelectSubset<T, UserBenchmarkDeleteArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Update one UserBenchmark.
     * @param {UserBenchmarkUpdateArgs} args - Arguments to update one UserBenchmark.
     * @example
     * // Update one UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserBenchmarkUpdateArgs>(
      args: SelectSubset<T, UserBenchmarkUpdateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Delete zero or more UserBenchmarks.
     * @param {UserBenchmarkDeleteManyArgs} args - Arguments to filter UserBenchmarks to delete.
     * @example
     * // Delete a few UserBenchmarks
     * const { count } = await prisma.userBenchmark.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserBenchmarkDeleteManyArgs>(
      args?: SelectSubset<T, UserBenchmarkDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserBenchmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserBenchmarks
     * const userBenchmark = await prisma.userBenchmark.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserBenchmarkUpdateManyArgs>(
      args: SelectSubset<T, UserBenchmarkUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserBenchmark.
     * @param {UserBenchmarkUpsertArgs} args - Arguments to update or create a UserBenchmark.
     * @example
     * // Update or create a UserBenchmark
     * const userBenchmark = await prisma.userBenchmark.upsert({
     *   create: {
     *     // ... data to create a UserBenchmark
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserBenchmark we want to update
     *   }
     * })
    **/
    upsert<T extends UserBenchmarkUpsertArgs>(
      args: SelectSubset<T, UserBenchmarkUpsertArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark>, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T>>>

    /**
     * Count the number of UserBenchmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkCountArgs} args - Arguments to filter UserBenchmarks to count.
     * @example
     * // Count the number of UserBenchmarks
     * const count = await prisma.userBenchmark.count({
     *   where: {
     *     // ... the filter for the UserBenchmarks we want to count
     *   }
     * })
    **/
    count<T extends UserBenchmarkCountArgs>(
      args?: Subset<T, UserBenchmarkCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserBenchmarkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserBenchmark.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserBenchmarkAggregateArgs>(args: Subset<T, UserBenchmarkAggregateArgs>): PrismaPromise<GetUserBenchmarkAggregateType<T>>

    /**
     * Group by UserBenchmark.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserBenchmarkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserBenchmarkGroupByArgs['orderBy'] }
        : { orderBy?: UserBenchmarkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserBenchmarkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserBenchmarkGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserBenchmark.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserBenchmarkClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Equipment<T extends EquipmentArgs = {}>(args?: Subset<T, EquipmentArgs>): CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>;

    Move<T extends MoveArgs = {}>(args?: Subset<T, MoveArgs>): CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>;

    UserBenchmarkEntries<T extends UserBenchmarkEntryFindManyArgs = {}>(args?: Subset<T, UserBenchmarkEntryFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmarkEntry>>, PrismaPromise<Array<UserBenchmarkEntryGetPayload<T>>>>;

    UserBenchmarkGroups<T extends UserBenchmarkGroupFindManyArgs = {}>(args?: Subset<T, UserBenchmarkGroupFindManyArgs>): CheckSelect<T, PrismaPromise<Array<UserBenchmarkGroup>>, PrismaPromise<Array<UserBenchmarkGroupGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * UserBenchmark findUnique
   */
  export type UserBenchmarkFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Throw an Error if a UserBenchmark can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmark to fetch.
     * 
    **/
    where: UserBenchmarkWhereUniqueInput
  }


  /**
   * UserBenchmark findFirst
   */
  export type UserBenchmarkFindFirstArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Throw an Error if a UserBenchmark can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmark to fetch.
     * 
    **/
    where?: UserBenchmarkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarks to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserBenchmarks.
     * 
    **/
    cursor?: UserBenchmarkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserBenchmarks.
     * 
    **/
    distinct?: Enumerable<UserBenchmarkScalarFieldEnum>
  }


  /**
   * UserBenchmark findMany
   */
  export type UserBenchmarkFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Filter, which UserBenchmarks to fetch.
     * 
    **/
    where?: UserBenchmarkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarks to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserBenchmarks.
     * 
    **/
    cursor?: UserBenchmarkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarks.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserBenchmarkScalarFieldEnum>
  }


  /**
   * UserBenchmark create
   */
  export type UserBenchmarkCreateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
    /**
     * The data needed to create a UserBenchmark.
     * 
    **/
    data: XOR<UserBenchmarkCreateInput, UserBenchmarkUncheckedCreateInput>
  }


  /**
   * UserBenchmark createMany
   */
  export type UserBenchmarkCreateManyArgs = {
    data: Enumerable<UserBenchmarkCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * UserBenchmark update
   */
  export type UserBenchmarkUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
    /**
     * The data needed to update a UserBenchmark.
     * 
    **/
    data: XOR<UserBenchmarkUpdateInput, UserBenchmarkUncheckedUpdateInput>
    /**
     * Choose, which UserBenchmark to update.
     * 
    **/
    where: UserBenchmarkWhereUniqueInput
  }


  /**
   * UserBenchmark updateMany
   */
  export type UserBenchmarkUpdateManyArgs = {
    data: XOR<UserBenchmarkUpdateManyMutationInput, UserBenchmarkUncheckedUpdateManyInput>
    where?: UserBenchmarkWhereInput
  }


  /**
   * UserBenchmark upsert
   */
  export type UserBenchmarkUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
    /**
     * The filter to search for the UserBenchmark to update in case it exists.
     * 
    **/
    where: UserBenchmarkWhereUniqueInput
    /**
     * In case the UserBenchmark found by the `where` argument doesn't exist, create a new UserBenchmark with this data.
     * 
    **/
    create: XOR<UserBenchmarkCreateInput, UserBenchmarkUncheckedCreateInput>
    /**
     * In case the UserBenchmark was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserBenchmarkUpdateInput, UserBenchmarkUncheckedUpdateInput>
  }


  /**
   * UserBenchmark delete
   */
  export type UserBenchmarkDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
    /**
     * Filter which UserBenchmark to delete.
     * 
    **/
    where: UserBenchmarkWhereUniqueInput
  }


  /**
   * UserBenchmark deleteMany
   */
  export type UserBenchmarkDeleteManyArgs = {
    where?: UserBenchmarkWhereInput
  }


  /**
   * UserBenchmark without action
   */
  export type UserBenchmarkArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmark
     * 
    **/
    select?: UserBenchmarkSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkInclude | null
  }



  /**
   * Model UserBenchmarkEntry
   */


  export type AggregateUserBenchmarkEntry = {
    _count: UserBenchmarkEntryCountAggregateOutputType | null
    count: UserBenchmarkEntryCountAggregateOutputType | null
    _avg: UserBenchmarkEntryAvgAggregateOutputType | null
    avg: UserBenchmarkEntryAvgAggregateOutputType | null
    _sum: UserBenchmarkEntrySumAggregateOutputType | null
    sum: UserBenchmarkEntrySumAggregateOutputType | null
    _min: UserBenchmarkEntryMinAggregateOutputType | null
    min: UserBenchmarkEntryMinAggregateOutputType | null
    _max: UserBenchmarkEntryMaxAggregateOutputType | null
    max: UserBenchmarkEntryMaxAggregateOutputType | null
  }

  export type UserBenchmarkEntryAvgAggregateOutputType = {
    score: number | null
  }

  export type UserBenchmarkEntrySumAggregateOutputType = {
    score: number | null
  }

  export type UserBenchmarkEntryMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    completedOn: Date | null
    score: number | null
    note: string | null
    videoUri: string | null
    videoThumbUri: string | null
    userBenchmarkId: string | null
  }

  export type UserBenchmarkEntryMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    completedOn: Date | null
    score: number | null
    note: string | null
    videoUri: string | null
    videoThumbUri: string | null
    userBenchmarkId: string | null
  }

  export type UserBenchmarkEntryCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    completedOn: number
    score: number
    note: number
    videoUri: number
    videoThumbUri: number
    userBenchmarkId: number
    _all: number
  }


  export type UserBenchmarkEntryAvgAggregateInputType = {
    score?: true
  }

  export type UserBenchmarkEntrySumAggregateInputType = {
    score?: true
  }

  export type UserBenchmarkEntryMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    completedOn?: true
    score?: true
    note?: true
    videoUri?: true
    videoThumbUri?: true
    userBenchmarkId?: true
  }

  export type UserBenchmarkEntryMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    completedOn?: true
    score?: true
    note?: true
    videoUri?: true
    videoThumbUri?: true
    userBenchmarkId?: true
  }

  export type UserBenchmarkEntryCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    completedOn?: true
    score?: true
    note?: true
    videoUri?: true
    videoThumbUri?: true
    userBenchmarkId?: true
    _all?: true
  }

  export type UserBenchmarkEntryAggregateArgs = {
    /**
     * Filter which UserBenchmarkEntry to aggregate.
     * 
    **/
    where?: UserBenchmarkEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserBenchmarkEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkEntries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserBenchmarkEntries
    **/
    _count?: true | UserBenchmarkEntryCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | UserBenchmarkEntryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserBenchmarkEntryAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: UserBenchmarkEntryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserBenchmarkEntrySumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: UserBenchmarkEntrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserBenchmarkEntryMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: UserBenchmarkEntryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserBenchmarkEntryMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: UserBenchmarkEntryMaxAggregateInputType
  }

  export type GetUserBenchmarkEntryAggregateType<T extends UserBenchmarkEntryAggregateArgs> = {
        [P in keyof T & keyof AggregateUserBenchmarkEntry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserBenchmarkEntry[P]>
      : GetScalarType<T[P], AggregateUserBenchmarkEntry[P]>
  }


    
    
  export type UserBenchmarkEntryGroupByArgs = {
    where?: UserBenchmarkEntryWhereInput
    orderBy?: Enumerable<UserBenchmarkEntryOrderByInput>
    by: Array<UserBenchmarkEntryScalarFieldEnum>
    having?: UserBenchmarkEntryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserBenchmarkEntryCountAggregateInputType | true
    _avg?: UserBenchmarkEntryAvgAggregateInputType
    _sum?: UserBenchmarkEntrySumAggregateInputType
    _min?: UserBenchmarkEntryMinAggregateInputType
    _max?: UserBenchmarkEntryMaxAggregateInputType
  }


  export type UserBenchmarkEntryGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    completedOn: Date
    score: number
    note: string | null
    videoUri: string | null
    videoThumbUri: string | null
    userBenchmarkId: string
    _count: UserBenchmarkEntryCountAggregateOutputType | null
    _avg: UserBenchmarkEntryAvgAggregateOutputType | null
    _sum: UserBenchmarkEntrySumAggregateOutputType | null
    _min: UserBenchmarkEntryMinAggregateOutputType | null
    _max: UserBenchmarkEntryMaxAggregateOutputType | null
  }

  type GetUserBenchmarkEntryGroupByPayload<T extends UserBenchmarkEntryGroupByArgs> = Promise<
    Array<
      PickArray<UserBenchmarkEntryGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof UserBenchmarkEntryGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], UserBenchmarkEntryGroupByOutputType[P]> 
            : GetScalarType<T[P], UserBenchmarkEntryGroupByOutputType[P]>
        }
      > 
    >


  export type UserBenchmarkEntrySelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    completedOn?: boolean
    score?: boolean
    note?: boolean
    videoUri?: boolean
    videoThumbUri?: boolean
    UserBenchmark?: boolean | UserBenchmarkArgs
    userBenchmarkId?: boolean
  }

  export type UserBenchmarkEntryInclude = {
    User?: boolean | UserArgs
    UserBenchmark?: boolean | UserBenchmarkArgs
  }

  export type UserBenchmarkEntryGetPayload<
    S extends boolean | null | undefined | UserBenchmarkEntryArgs,
    U = keyof S
      > = S extends true
        ? UserBenchmarkEntry
    : S extends undefined
    ? never
    : S extends UserBenchmarkEntryArgs | UserBenchmarkEntryFindManyArgs
    ?'include' extends U
    ? UserBenchmarkEntry  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'UserBenchmark'
        ? UserBenchmarkGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UserBenchmarkEntry ?UserBenchmarkEntry [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'UserBenchmark'
        ? UserBenchmarkGetPayload<S['select'][P]> : never
  } 
    : UserBenchmarkEntry
  : UserBenchmarkEntry


  type UserBenchmarkEntryCountArgs = Merge<
    Omit<UserBenchmarkEntryFindManyArgs, 'select' | 'include'> & {
      select?: UserBenchmarkEntryCountAggregateInputType | true
    }
  >

  export interface UserBenchmarkEntryDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one UserBenchmarkEntry that matches the filter.
     * @param {UserBenchmarkEntryFindUniqueArgs} args - Arguments to find a UserBenchmarkEntry
     * @example
     * // Get one UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserBenchmarkEntryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserBenchmarkEntryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserBenchmarkEntry'> extends True ? CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry | null >, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T> | null >>

    /**
     * Find the first UserBenchmarkEntry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryFindFirstArgs} args - Arguments to find a UserBenchmarkEntry
     * @example
     * // Get one UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserBenchmarkEntryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserBenchmarkEntryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserBenchmarkEntry'> extends True ? CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>> : CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry | null >, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T> | null >>

    /**
     * Find zero or more UserBenchmarkEntries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserBenchmarkEntries
     * const userBenchmarkEntries = await prisma.userBenchmarkEntry.findMany()
     * 
     * // Get first 10 UserBenchmarkEntries
     * const userBenchmarkEntries = await prisma.userBenchmarkEntry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userBenchmarkEntryWithIdOnly = await prisma.userBenchmarkEntry.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserBenchmarkEntryFindManyArgs>(
      args?: SelectSubset<T, UserBenchmarkEntryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<UserBenchmarkEntry>>, PrismaPromise<Array<UserBenchmarkEntryGetPayload<T>>>>

    /**
     * Create a UserBenchmarkEntry.
     * @param {UserBenchmarkEntryCreateArgs} args - Arguments to create a UserBenchmarkEntry.
     * @example
     * // Create one UserBenchmarkEntry
     * const UserBenchmarkEntry = await prisma.userBenchmarkEntry.create({
     *   data: {
     *     // ... data to create a UserBenchmarkEntry
     *   }
     * })
     * 
    **/
    create<T extends UserBenchmarkEntryCreateArgs>(
      args: SelectSubset<T, UserBenchmarkEntryCreateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Create many UserBenchmarkEntries.
     *     @param {UserBenchmarkEntryCreateManyArgs} args - Arguments to create many UserBenchmarkEntries.
     *     @example
     *     // Create many UserBenchmarkEntries
     *     const userBenchmarkEntry = await prisma.userBenchmarkEntry.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserBenchmarkEntryCreateManyArgs>(
      args?: SelectSubset<T, UserBenchmarkEntryCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a UserBenchmarkEntry.
     * @param {UserBenchmarkEntryDeleteArgs} args - Arguments to delete one UserBenchmarkEntry.
     * @example
     * // Delete one UserBenchmarkEntry
     * const UserBenchmarkEntry = await prisma.userBenchmarkEntry.delete({
     *   where: {
     *     // ... filter to delete one UserBenchmarkEntry
     *   }
     * })
     * 
    **/
    delete<T extends UserBenchmarkEntryDeleteArgs>(
      args: SelectSubset<T, UserBenchmarkEntryDeleteArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Update one UserBenchmarkEntry.
     * @param {UserBenchmarkEntryUpdateArgs} args - Arguments to update one UserBenchmarkEntry.
     * @example
     * // Update one UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserBenchmarkEntryUpdateArgs>(
      args: SelectSubset<T, UserBenchmarkEntryUpdateArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Delete zero or more UserBenchmarkEntries.
     * @param {UserBenchmarkEntryDeleteManyArgs} args - Arguments to filter UserBenchmarkEntries to delete.
     * @example
     * // Delete a few UserBenchmarkEntries
     * const { count } = await prisma.userBenchmarkEntry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserBenchmarkEntryDeleteManyArgs>(
      args?: SelectSubset<T, UserBenchmarkEntryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserBenchmarkEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserBenchmarkEntries
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserBenchmarkEntryUpdateManyArgs>(
      args: SelectSubset<T, UserBenchmarkEntryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserBenchmarkEntry.
     * @param {UserBenchmarkEntryUpsertArgs} args - Arguments to update or create a UserBenchmarkEntry.
     * @example
     * // Update or create a UserBenchmarkEntry
     * const userBenchmarkEntry = await prisma.userBenchmarkEntry.upsert({
     *   create: {
     *     // ... data to create a UserBenchmarkEntry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserBenchmarkEntry we want to update
     *   }
     * })
    **/
    upsert<T extends UserBenchmarkEntryUpsertArgs>(
      args: SelectSubset<T, UserBenchmarkEntryUpsertArgs>
    ): CheckSelect<T, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntry>, Prisma__UserBenchmarkEntryClient<UserBenchmarkEntryGetPayload<T>>>

    /**
     * Count the number of UserBenchmarkEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryCountArgs} args - Arguments to filter UserBenchmarkEntries to count.
     * @example
     * // Count the number of UserBenchmarkEntries
     * const count = await prisma.userBenchmarkEntry.count({
     *   where: {
     *     // ... the filter for the UserBenchmarkEntries we want to count
     *   }
     * })
    **/
    count<T extends UserBenchmarkEntryCountArgs>(
      args?: Subset<T, UserBenchmarkEntryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserBenchmarkEntryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserBenchmarkEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserBenchmarkEntryAggregateArgs>(args: Subset<T, UserBenchmarkEntryAggregateArgs>): PrismaPromise<GetUserBenchmarkEntryAggregateType<T>>

    /**
     * Group by UserBenchmarkEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBenchmarkEntryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserBenchmarkEntryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserBenchmarkEntryGroupByArgs['orderBy'] }
        : { orderBy?: UserBenchmarkEntryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserBenchmarkEntryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserBenchmarkEntryGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserBenchmarkEntry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserBenchmarkEntryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    UserBenchmark<T extends UserBenchmarkArgs = {}>(args?: Subset<T, UserBenchmarkArgs>): CheckSelect<T, Prisma__UserBenchmarkClient<UserBenchmark | null >, Prisma__UserBenchmarkClient<UserBenchmarkGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * UserBenchmarkEntry findUnique
   */
  export type UserBenchmarkEntryFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Throw an Error if a UserBenchmarkEntry can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmarkEntry to fetch.
     * 
    **/
    where: UserBenchmarkEntryWhereUniqueInput
  }


  /**
   * UserBenchmarkEntry findFirst
   */
  export type UserBenchmarkEntryFindFirstArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Throw an Error if a UserBenchmarkEntry can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which UserBenchmarkEntry to fetch.
     * 
    **/
    where?: UserBenchmarkEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserBenchmarkEntries.
     * 
    **/
    cursor?: UserBenchmarkEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkEntries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserBenchmarkEntries.
     * 
    **/
    distinct?: Enumerable<UserBenchmarkEntryScalarFieldEnum>
  }


  /**
   * UserBenchmarkEntry findMany
   */
  export type UserBenchmarkEntryFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Filter, which UserBenchmarkEntries to fetch.
     * 
    **/
    where?: UserBenchmarkEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBenchmarkEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<UserBenchmarkEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserBenchmarkEntries.
     * 
    **/
    cursor?: UserBenchmarkEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBenchmarkEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBenchmarkEntries.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserBenchmarkEntryScalarFieldEnum>
  }


  /**
   * UserBenchmarkEntry create
   */
  export type UserBenchmarkEntryCreateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * The data needed to create a UserBenchmarkEntry.
     * 
    **/
    data: XOR<UserBenchmarkEntryCreateInput, UserBenchmarkEntryUncheckedCreateInput>
  }


  /**
   * UserBenchmarkEntry createMany
   */
  export type UserBenchmarkEntryCreateManyArgs = {
    data: Enumerable<UserBenchmarkEntryCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * UserBenchmarkEntry update
   */
  export type UserBenchmarkEntryUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * The data needed to update a UserBenchmarkEntry.
     * 
    **/
    data: XOR<UserBenchmarkEntryUpdateInput, UserBenchmarkEntryUncheckedUpdateInput>
    /**
     * Choose, which UserBenchmarkEntry to update.
     * 
    **/
    where: UserBenchmarkEntryWhereUniqueInput
  }


  /**
   * UserBenchmarkEntry updateMany
   */
  export type UserBenchmarkEntryUpdateManyArgs = {
    data: XOR<UserBenchmarkEntryUpdateManyMutationInput, UserBenchmarkEntryUncheckedUpdateManyInput>
    where?: UserBenchmarkEntryWhereInput
  }


  /**
   * UserBenchmarkEntry upsert
   */
  export type UserBenchmarkEntryUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * The filter to search for the UserBenchmarkEntry to update in case it exists.
     * 
    **/
    where: UserBenchmarkEntryWhereUniqueInput
    /**
     * In case the UserBenchmarkEntry found by the `where` argument doesn't exist, create a new UserBenchmarkEntry with this data.
     * 
    **/
    create: XOR<UserBenchmarkEntryCreateInput, UserBenchmarkEntryUncheckedCreateInput>
    /**
     * In case the UserBenchmarkEntry was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserBenchmarkEntryUpdateInput, UserBenchmarkEntryUncheckedUpdateInput>
  }


  /**
   * UserBenchmarkEntry delete
   */
  export type UserBenchmarkEntryDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
    /**
     * Filter which UserBenchmarkEntry to delete.
     * 
    **/
    where: UserBenchmarkEntryWhereUniqueInput
  }


  /**
   * UserBenchmarkEntry deleteMany
   */
  export type UserBenchmarkEntryDeleteManyArgs = {
    where?: UserBenchmarkEntryWhereInput
  }


  /**
   * UserBenchmarkEntry without action
   */
  export type UserBenchmarkEntryArgs = {
    /**
     * Select specific fields to fetch from the UserBenchmarkEntry
     * 
    **/
    select?: UserBenchmarkEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserBenchmarkEntryInclude | null
  }



  /**
   * Model Workout
   */


  export type AggregateWorkout = {
    _count: WorkoutCountAggregateOutputType | null
    count: WorkoutCountAggregateOutputType | null
    _avg: WorkoutAvgAggregateOutputType | null
    avg: WorkoutAvgAggregateOutputType | null
    _sum: WorkoutSumAggregateOutputType | null
    sum: WorkoutSumAggregateOutputType | null
    _min: WorkoutMinAggregateOutputType | null
    min: WorkoutMinAggregateOutputType | null
    _max: WorkoutMaxAggregateOutputType | null
    max: WorkoutMaxAggregateOutputType | null
  }

  export type WorkoutAvgAggregateOutputType = {
    lengthMinutes: number | null
  }

  export type WorkoutSumAggregateOutputType = {
    lengthMinutes: number | null
  }

  export type WorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    userId: string | null
    name: string | null
    description: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    coverImageUri: string | null
    lengthMinutes: number | null
    difficultyLevel: DifficultyLevel | null
    contentAccessScope: ContentAccessScope | null
  }

  export type WorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    userId: string | null
    name: string | null
    description: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    coverImageUri: string | null
    lengthMinutes: number | null
    difficultyLevel: DifficultyLevel | null
    contentAccessScope: ContentAccessScope | null
  }

  export type WorkoutCountAggregateOutputType = {
    id: number
    createdAt: number
    archived: number
    userId: number
    name: number
    description: number
    metaData: number
    introVideoUri: number
    introVideoThumbUri: number
    introAudioUri: number
    coverImageUri: number
    lengthMinutes: number
    difficultyLevel: number
    contentAccessScope: number
    _all: number
  }


  export type WorkoutAvgAggregateInputType = {
    lengthMinutes?: true
  }

  export type WorkoutSumAggregateInputType = {
    lengthMinutes?: true
  }

  export type WorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    name?: true
    description?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    coverImageUri?: true
    lengthMinutes?: true
    difficultyLevel?: true
    contentAccessScope?: true
  }

  export type WorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    name?: true
    description?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    coverImageUri?: true
    lengthMinutes?: true
    difficultyLevel?: true
    contentAccessScope?: true
  }

  export type WorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    name?: true
    description?: true
    metaData?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    coverImageUri?: true
    lengthMinutes?: true
    difficultyLevel?: true
    contentAccessScope?: true
    _all?: true
  }

  export type WorkoutAggregateArgs = {
    /**
     * Filter which Workout to aggregate.
     * 
    **/
    where?: WorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workouts to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Workouts
    **/
    _count?: true | WorkoutCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutMaxAggregateInputType
  }

  export type GetWorkoutAggregateType<T extends WorkoutAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkout]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkout[P]>
      : GetScalarType<T[P], AggregateWorkout[P]>
  }


    
    
  export type WorkoutGroupByArgs = {
    where?: WorkoutWhereInput
    orderBy?: Enumerable<WorkoutOrderByInput>
    by: Array<WorkoutScalarFieldEnum>
    having?: WorkoutScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutCountAggregateInputType | true
    _avg?: WorkoutAvgAggregateInputType
    _sum?: WorkoutSumAggregateInputType
    _min?: WorkoutMinAggregateInputType
    _max?: WorkoutMaxAggregateInputType
  }


  export type WorkoutGroupByOutputType = {
    id: string
    createdAt: Date
    archived: boolean
    userId: string
    name: string
    description: string | null
    metaData: JsonValue | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    coverImageUri: string | null
    lengthMinutes: number | null
    difficultyLevel: DifficultyLevel
    contentAccessScope: ContentAccessScope
    _count: WorkoutCountAggregateOutputType | null
    _avg: WorkoutAvgAggregateOutputType | null
    _sum: WorkoutSumAggregateOutputType | null
    _min: WorkoutMinAggregateOutputType | null
    _max: WorkoutMaxAggregateOutputType | null
  }

  type GetWorkoutGroupByPayload<T extends WorkoutGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    archived?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    metaData?: boolean
    introVideoUri?: boolean
    introVideoThumbUri?: boolean
    introAudioUri?: boolean
    coverImageUri?: boolean
    lengthMinutes?: boolean
    difficultyLevel?: boolean
    contentAccessScope?: boolean
    WorkoutSections?: boolean | WorkoutSectionFindManyArgs
    LoggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    WorkoutGoals?: boolean | WorkoutGoalFindManyArgs
    WorkoutTags?: boolean | WorkoutTagFindManyArgs
    WorkoutPlanDayWorkout?: boolean | WorkoutPlanDayWorkoutFindManyArgs
    Collections?: boolean | CollectionFindManyArgs
    DiscoverWorkouts?: boolean | DiscoverWorkoutFindManyArgs
  }

  export type WorkoutInclude = {
    User?: boolean | UserArgs
    WorkoutSections?: boolean | WorkoutSectionFindManyArgs
    LoggedWorkouts?: boolean | LoggedWorkoutFindManyArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
    WorkoutGoals?: boolean | WorkoutGoalFindManyArgs
    WorkoutTags?: boolean | WorkoutTagFindManyArgs
    WorkoutPlanDayWorkout?: boolean | WorkoutPlanDayWorkoutFindManyArgs
    Collections?: boolean | CollectionFindManyArgs
    DiscoverWorkouts?: boolean | DiscoverWorkoutFindManyArgs
  }

  export type WorkoutGetPayload<
    S extends boolean | null | undefined | WorkoutArgs,
    U = keyof S
      > = S extends true
        ? Workout
    : S extends undefined
    ? never
    : S extends WorkoutArgs | WorkoutFindManyArgs
    ?'include' extends U
    ? Workout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'WorkoutSections'
        ? Array < WorkoutSectionGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['include'][P]>>  :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  :
        P extends 'WorkoutGoals'
        ? Array < WorkoutGoalGetPayload<S['include'][P]>>  :
        P extends 'WorkoutTags'
        ? Array < WorkoutTagGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlanDayWorkout'
        ? Array < WorkoutPlanDayWorkoutGetPayload<S['include'][P]>>  :
        P extends 'Collections'
        ? Array < CollectionGetPayload<S['include'][P]>>  :
        P extends 'DiscoverWorkouts'
        ? Array < DiscoverWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Workout ?Workout [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'WorkoutSections'
        ? Array < WorkoutSectionGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkouts'
        ? Array < LoggedWorkoutGetPayload<S['select'][P]>>  :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  :
        P extends 'WorkoutGoals'
        ? Array < WorkoutGoalGetPayload<S['select'][P]>>  :
        P extends 'WorkoutTags'
        ? Array < WorkoutTagGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlanDayWorkout'
        ? Array < WorkoutPlanDayWorkoutGetPayload<S['select'][P]>>  :
        P extends 'Collections'
        ? Array < CollectionGetPayload<S['select'][P]>>  :
        P extends 'DiscoverWorkouts'
        ? Array < DiscoverWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : Workout
  : Workout


  type WorkoutCountArgs = Merge<
    Omit<WorkoutFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutCountAggregateInputType | true
    }
  >

  export interface WorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Workout that matches the filter.
     * @param {WorkoutFindUniqueArgs} args - Arguments to find a Workout
     * @example
     * // Get one Workout
     * const workout = await prisma.workout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Workout'> extends True ? CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>

    /**
     * Find the first Workout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutFindFirstArgs} args - Arguments to find a Workout
     * @example
     * // Get one Workout
     * const workout = await prisma.workout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Workout'> extends True ? CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>

    /**
     * Find zero or more Workouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Workouts
     * const workouts = await prisma.workout.findMany()
     * 
     * // Get first 10 Workouts
     * const workouts = await prisma.workout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutWithIdOnly = await prisma.workout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutFindManyArgs>(
      args?: SelectSubset<T, WorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>

    /**
     * Create a Workout.
     * @param {WorkoutCreateArgs} args - Arguments to create a Workout.
     * @example
     * // Create one Workout
     * const Workout = await prisma.workout.create({
     *   data: {
     *     // ... data to create a Workout
     *   }
     * })
     * 
    **/
    create<T extends WorkoutCreateArgs>(
      args: SelectSubset<T, WorkoutCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Create many Workouts.
     *     @param {WorkoutCreateManyArgs} args - Arguments to create many Workouts.
     *     @example
     *     // Create many Workouts
     *     const workout = await prisma.workout.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutCreateManyArgs>(
      args?: SelectSubset<T, WorkoutCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Workout.
     * @param {WorkoutDeleteArgs} args - Arguments to delete one Workout.
     * @example
     * // Delete one Workout
     * const Workout = await prisma.workout.delete({
     *   where: {
     *     // ... filter to delete one Workout
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutDeleteArgs>(
      args: SelectSubset<T, WorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Update one Workout.
     * @param {WorkoutUpdateArgs} args - Arguments to update one Workout.
     * @example
     * // Update one Workout
     * const workout = await prisma.workout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutUpdateArgs>(
      args: SelectSubset<T, WorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Delete zero or more Workouts.
     * @param {WorkoutDeleteManyArgs} args - Arguments to filter Workouts to delete.
     * @example
     * // Delete a few Workouts
     * const { count } = await prisma.workout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Workouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Workouts
     * const workout = await prisma.workout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutUpdateManyArgs>(
      args: SelectSubset<T, WorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Workout.
     * @param {WorkoutUpsertArgs} args - Arguments to update or create a Workout.
     * @example
     * // Update or create a Workout
     * const workout = await prisma.workout.upsert({
     *   create: {
     *     // ... data to create a Workout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Workout we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutUpsertArgs>(
      args: SelectSubset<T, WorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutClient<Workout>, Prisma__WorkoutClient<WorkoutGetPayload<T>>>

    /**
     * Count the number of Workouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutCountArgs} args - Arguments to filter Workouts to count.
     * @example
     * // Count the number of Workouts
     * const count = await prisma.workout.count({
     *   where: {
     *     // ... the filter for the Workouts we want to count
     *   }
     * })
    **/
    count<T extends WorkoutCountArgs>(
      args?: Subset<T, WorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Workout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutAggregateArgs>(args: Subset<T, WorkoutAggregateArgs>): PrismaPromise<GetWorkoutAggregateType<T>>

    /**
     * Group by Workout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Workout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    WorkoutSections<T extends WorkoutSectionFindManyArgs = {}>(args?: Subset<T, WorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSection>>, PrismaPromise<Array<WorkoutSectionGetPayload<T>>>>;

    LoggedWorkouts<T extends LoggedWorkoutFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>;

    ScheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    WorkoutGoals<T extends WorkoutGoalFindManyArgs = {}>(args?: Subset<T, WorkoutGoalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutGoal>>, PrismaPromise<Array<WorkoutGoalGetPayload<T>>>>;

    WorkoutTags<T extends WorkoutTagFindManyArgs = {}>(args?: Subset<T, WorkoutTagFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutTag>>, PrismaPromise<Array<WorkoutTagGetPayload<T>>>>;

    WorkoutPlanDayWorkout<T extends WorkoutPlanDayWorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutPlanDayWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanDayWorkout>>, PrismaPromise<Array<WorkoutPlanDayWorkoutGetPayload<T>>>>;

    Collections<T extends CollectionFindManyArgs = {}>(args?: Subset<T, CollectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Collection>>, PrismaPromise<Array<CollectionGetPayload<T>>>>;

    DiscoverWorkouts<T extends DiscoverWorkoutFindManyArgs = {}>(args?: Subset<T, DiscoverWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<DiscoverWorkout>>, PrismaPromise<Array<DiscoverWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Workout findUnique
   */
  export type WorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
    /**
     * Throw an Error if a Workout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Workout to fetch.
     * 
    **/
    where: WorkoutWhereUniqueInput
  }


  /**
   * Workout findFirst
   */
  export type WorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
    /**
     * Throw an Error if a Workout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Workout to fetch.
     * 
    **/
    where?: WorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workouts to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Workouts.
     * 
    **/
    cursor?: WorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Workouts.
     * 
    **/
    distinct?: Enumerable<WorkoutScalarFieldEnum>
  }


  /**
   * Workout findMany
   */
  export type WorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
    /**
     * Filter, which Workouts to fetch.
     * 
    **/
    where?: WorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workouts to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Workouts.
     * 
    **/
    cursor?: WorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workouts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutScalarFieldEnum>
  }


  /**
   * Workout create
   */
  export type WorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
    /**
     * The data needed to create a Workout.
     * 
    **/
    data: XOR<WorkoutCreateInput, WorkoutUncheckedCreateInput>
  }


  /**
   * Workout createMany
   */
  export type WorkoutCreateManyArgs = {
    data: Enumerable<WorkoutCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Workout update
   */
  export type WorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
    /**
     * The data needed to update a Workout.
     * 
    **/
    data: XOR<WorkoutUpdateInput, WorkoutUncheckedUpdateInput>
    /**
     * Choose, which Workout to update.
     * 
    **/
    where: WorkoutWhereUniqueInput
  }


  /**
   * Workout updateMany
   */
  export type WorkoutUpdateManyArgs = {
    data: XOR<WorkoutUpdateManyMutationInput, WorkoutUncheckedUpdateManyInput>
    where?: WorkoutWhereInput
  }


  /**
   * Workout upsert
   */
  export type WorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
    /**
     * The filter to search for the Workout to update in case it exists.
     * 
    **/
    where: WorkoutWhereUniqueInput
    /**
     * In case the Workout found by the `where` argument doesn't exist, create a new Workout with this data.
     * 
    **/
    create: XOR<WorkoutCreateInput, WorkoutUncheckedCreateInput>
    /**
     * In case the Workout was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutUpdateInput, WorkoutUncheckedUpdateInput>
  }


  /**
   * Workout delete
   */
  export type WorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
    /**
     * Filter which Workout to delete.
     * 
    **/
    where: WorkoutWhereUniqueInput
  }


  /**
   * Workout deleteMany
   */
  export type WorkoutDeleteManyArgs = {
    where?: WorkoutWhereInput
  }


  /**
   * Workout without action
   */
  export type WorkoutArgs = {
    /**
     * Select specific fields to fetch from the Workout
     * 
    **/
    select?: WorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutInclude | null
  }



  /**
   * Model WorkoutTag
   */


  export type AggregateWorkoutTag = {
    _count: WorkoutTagCountAggregateOutputType | null
    count: WorkoutTagCountAggregateOutputType | null
    _min: WorkoutTagMinAggregateOutputType | null
    min: WorkoutTagMinAggregateOutputType | null
    _max: WorkoutTagMaxAggregateOutputType | null
    max: WorkoutTagMaxAggregateOutputType | null
  }

  export type WorkoutTagMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    tag: string | null
  }

  export type WorkoutTagMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    tag: string | null
  }

  export type WorkoutTagCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    tag: number
    _all: number
  }


  export type WorkoutTagMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    tag?: true
  }

  export type WorkoutTagMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    tag?: true
  }

  export type WorkoutTagCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    tag?: true
    _all?: true
  }

  export type WorkoutTagAggregateArgs = {
    /**
     * Filter which WorkoutTag to aggregate.
     * 
    **/
    where?: WorkoutTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutTags to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutTags from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutTags.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutTags
    **/
    _count?: true | WorkoutTagCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutTagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutTagMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutTagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutTagMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutTagMaxAggregateInputType
  }

  export type GetWorkoutTagAggregateType<T extends WorkoutTagAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutTag[P]>
      : GetScalarType<T[P], AggregateWorkoutTag[P]>
  }


    
    
  export type WorkoutTagGroupByArgs = {
    where?: WorkoutTagWhereInput
    orderBy?: Enumerable<WorkoutTagOrderByInput>
    by: Array<WorkoutTagScalarFieldEnum>
    having?: WorkoutTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutTagCountAggregateInputType | true
    _min?: WorkoutTagMinAggregateInputType
    _max?: WorkoutTagMaxAggregateInputType
  }


  export type WorkoutTagGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    tag: string
    _count: WorkoutTagCountAggregateOutputType | null
    _min: WorkoutTagMinAggregateOutputType | null
    _max: WorkoutTagMaxAggregateOutputType | null
  }

  type GetWorkoutTagGroupByPayload<T extends WorkoutTagGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutTagGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutTagGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutTagGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutTagGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutTagSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    tag?: boolean
    Workouts?: boolean | WorkoutFindManyArgs
    WorkoutPlans?: boolean | WorkoutPlanFindManyArgs
  }

  export type WorkoutTagInclude = {
    User?: boolean | UserArgs
    Workouts?: boolean | WorkoutFindManyArgs
    WorkoutPlans?: boolean | WorkoutPlanFindManyArgs
  }

  export type WorkoutTagGetPayload<
    S extends boolean | null | undefined | WorkoutTagArgs,
    U = keyof S
      > = S extends true
        ? WorkoutTag
    : S extends undefined
    ? never
    : S extends WorkoutTagArgs | WorkoutTagFindManyArgs
    ?'include' extends U
    ? WorkoutTag  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlans'
        ? Array < WorkoutPlanGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutTag ?WorkoutTag [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Workouts'
        ? Array < WorkoutGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlans'
        ? Array < WorkoutPlanGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutTag
  : WorkoutTag


  type WorkoutTagCountArgs = Merge<
    Omit<WorkoutTagFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutTagCountAggregateInputType | true
    }
  >

  export interface WorkoutTagDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutTag that matches the filter.
     * @param {WorkoutTagFindUniqueArgs} args - Arguments to find a WorkoutTag
     * @example
     * // Get one WorkoutTag
     * const workoutTag = await prisma.workoutTag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutTagFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutTagFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutTag'> extends True ? CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag>, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag | null >, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T> | null >>

    /**
     * Find the first WorkoutTag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTagFindFirstArgs} args - Arguments to find a WorkoutTag
     * @example
     * // Get one WorkoutTag
     * const workoutTag = await prisma.workoutTag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutTagFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutTagFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutTag'> extends True ? CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag>, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag | null >, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTagFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutTags
     * const workoutTags = await prisma.workoutTag.findMany()
     * 
     * // Get first 10 WorkoutTags
     * const workoutTags = await prisma.workoutTag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutTagWithIdOnly = await prisma.workoutTag.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutTagFindManyArgs>(
      args?: SelectSubset<T, WorkoutTagFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutTag>>, PrismaPromise<Array<WorkoutTagGetPayload<T>>>>

    /**
     * Create a WorkoutTag.
     * @param {WorkoutTagCreateArgs} args - Arguments to create a WorkoutTag.
     * @example
     * // Create one WorkoutTag
     * const WorkoutTag = await prisma.workoutTag.create({
     *   data: {
     *     // ... data to create a WorkoutTag
     *   }
     * })
     * 
    **/
    create<T extends WorkoutTagCreateArgs>(
      args: SelectSubset<T, WorkoutTagCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag>, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T>>>

    /**
     * Create many WorkoutTags.
     *     @param {WorkoutTagCreateManyArgs} args - Arguments to create many WorkoutTags.
     *     @example
     *     // Create many WorkoutTags
     *     const workoutTag = await prisma.workoutTag.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutTagCreateManyArgs>(
      args?: SelectSubset<T, WorkoutTagCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutTag.
     * @param {WorkoutTagDeleteArgs} args - Arguments to delete one WorkoutTag.
     * @example
     * // Delete one WorkoutTag
     * const WorkoutTag = await prisma.workoutTag.delete({
     *   where: {
     *     // ... filter to delete one WorkoutTag
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutTagDeleteArgs>(
      args: SelectSubset<T, WorkoutTagDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag>, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T>>>

    /**
     * Update one WorkoutTag.
     * @param {WorkoutTagUpdateArgs} args - Arguments to update one WorkoutTag.
     * @example
     * // Update one WorkoutTag
     * const workoutTag = await prisma.workoutTag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutTagUpdateArgs>(
      args: SelectSubset<T, WorkoutTagUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag>, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T>>>

    /**
     * Delete zero or more WorkoutTags.
     * @param {WorkoutTagDeleteManyArgs} args - Arguments to filter WorkoutTags to delete.
     * @example
     * // Delete a few WorkoutTags
     * const { count } = await prisma.workoutTag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutTagDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutTagDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutTags
     * const workoutTag = await prisma.workoutTag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutTagUpdateManyArgs>(
      args: SelectSubset<T, WorkoutTagUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutTag.
     * @param {WorkoutTagUpsertArgs} args - Arguments to update or create a WorkoutTag.
     * @example
     * // Update or create a WorkoutTag
     * const workoutTag = await prisma.workoutTag.upsert({
     *   create: {
     *     // ... data to create a WorkoutTag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutTag we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutTagUpsertArgs>(
      args: SelectSubset<T, WorkoutTagUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutTagClient<WorkoutTag>, Prisma__WorkoutTagClient<WorkoutTagGetPayload<T>>>

    /**
     * Count the number of WorkoutTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTagCountArgs} args - Arguments to filter WorkoutTags to count.
     * @example
     * // Count the number of WorkoutTags
     * const count = await prisma.workoutTag.count({
     *   where: {
     *     // ... the filter for the WorkoutTags we want to count
     *   }
     * })
    **/
    count<T extends WorkoutTagCountArgs>(
      args?: Subset<T, WorkoutTagCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutTagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutTagAggregateArgs>(args: Subset<T, WorkoutTagAggregateArgs>): PrismaPromise<GetWorkoutTagAggregateType<T>>

    /**
     * Group by WorkoutTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutTagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutTagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutTagGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutTagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutTagGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutTag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutTagClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Workouts<T extends WorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Workout>>, PrismaPromise<Array<WorkoutGetPayload<T>>>>;

    WorkoutPlans<T extends WorkoutPlanFindManyArgs = {}>(args?: Subset<T, WorkoutPlanFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlan>>, PrismaPromise<Array<WorkoutPlanGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutTag findUnique
   */
  export type WorkoutTagFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
    /**
     * Throw an Error if a WorkoutTag can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutTag to fetch.
     * 
    **/
    where: WorkoutTagWhereUniqueInput
  }


  /**
   * WorkoutTag findFirst
   */
  export type WorkoutTagFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
    /**
     * Throw an Error if a WorkoutTag can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutTag to fetch.
     * 
    **/
    where?: WorkoutTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutTags to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutTags.
     * 
    **/
    cursor?: WorkoutTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutTags from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutTags.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutTags.
     * 
    **/
    distinct?: Enumerable<WorkoutTagScalarFieldEnum>
  }


  /**
   * WorkoutTag findMany
   */
  export type WorkoutTagFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
    /**
     * Filter, which WorkoutTags to fetch.
     * 
    **/
    where?: WorkoutTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutTags to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutTags.
     * 
    **/
    cursor?: WorkoutTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutTags from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutTags.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutTagScalarFieldEnum>
  }


  /**
   * WorkoutTag create
   */
  export type WorkoutTagCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
    /**
     * The data needed to create a WorkoutTag.
     * 
    **/
    data: XOR<WorkoutTagCreateInput, WorkoutTagUncheckedCreateInput>
  }


  /**
   * WorkoutTag createMany
   */
  export type WorkoutTagCreateManyArgs = {
    data: Enumerable<WorkoutTagCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutTag update
   */
  export type WorkoutTagUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
    /**
     * The data needed to update a WorkoutTag.
     * 
    **/
    data: XOR<WorkoutTagUpdateInput, WorkoutTagUncheckedUpdateInput>
    /**
     * Choose, which WorkoutTag to update.
     * 
    **/
    where: WorkoutTagWhereUniqueInput
  }


  /**
   * WorkoutTag updateMany
   */
  export type WorkoutTagUpdateManyArgs = {
    data: XOR<WorkoutTagUpdateManyMutationInput, WorkoutTagUncheckedUpdateManyInput>
    where?: WorkoutTagWhereInput
  }


  /**
   * WorkoutTag upsert
   */
  export type WorkoutTagUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
    /**
     * The filter to search for the WorkoutTag to update in case it exists.
     * 
    **/
    where: WorkoutTagWhereUniqueInput
    /**
     * In case the WorkoutTag found by the `where` argument doesn't exist, create a new WorkoutTag with this data.
     * 
    **/
    create: XOR<WorkoutTagCreateInput, WorkoutTagUncheckedCreateInput>
    /**
     * In case the WorkoutTag was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutTagUpdateInput, WorkoutTagUncheckedUpdateInput>
  }


  /**
   * WorkoutTag delete
   */
  export type WorkoutTagDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
    /**
     * Filter which WorkoutTag to delete.
     * 
    **/
    where: WorkoutTagWhereUniqueInput
  }


  /**
   * WorkoutTag deleteMany
   */
  export type WorkoutTagDeleteManyArgs = {
    where?: WorkoutTagWhereInput
  }


  /**
   * WorkoutTag without action
   */
  export type WorkoutTagArgs = {
    /**
     * Select specific fields to fetch from the WorkoutTag
     * 
    **/
    select?: WorkoutTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutTagInclude | null
  }



  /**
   * Model WorkoutSection
   */


  export type AggregateWorkoutSection = {
    _count: WorkoutSectionCountAggregateOutputType | null
    count: WorkoutSectionCountAggregateOutputType | null
    _avg: WorkoutSectionAvgAggregateOutputType | null
    avg: WorkoutSectionAvgAggregateOutputType | null
    _sum: WorkoutSectionSumAggregateOutputType | null
    sum: WorkoutSectionSumAggregateOutputType | null
    _min: WorkoutSectionMinAggregateOutputType | null
    min: WorkoutSectionMinAggregateOutputType | null
    _max: WorkoutSectionMaxAggregateOutputType | null
    max: WorkoutSectionMaxAggregateOutputType | null
  }

  export type WorkoutSectionAvgAggregateOutputType = {
    rounds: number | null
    timecap: number | null
    sortPosition: number | null
  }

  export type WorkoutSectionSumAggregateOutputType = {
    rounds: number | null
    timecap: number | null
    sortPosition: number | null
  }

  export type WorkoutSectionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    userId: string | null
    name: string | null
    note: string | null
    rounds: number | null
    timecap: number | null
    sortPosition: number | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    classVideoUri: string | null
    classVideoThumbUri: string | null
    classAudioUri: string | null
    outroVideoUri: string | null
    outroVideoThumbUri: string | null
    outroAudioUri: string | null
    workoutId: string | null
    workoutSectionTypeId: string | null
  }

  export type WorkoutSectionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    archived: boolean | null
    userId: string | null
    name: string | null
    note: string | null
    rounds: number | null
    timecap: number | null
    sortPosition: number | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    classVideoUri: string | null
    classVideoThumbUri: string | null
    classAudioUri: string | null
    outroVideoUri: string | null
    outroVideoThumbUri: string | null
    outroAudioUri: string | null
    workoutId: string | null
    workoutSectionTypeId: string | null
  }

  export type WorkoutSectionCountAggregateOutputType = {
    id: number
    createdAt: number
    archived: number
    userId: number
    name: number
    note: number
    rounds: number
    timecap: number
    sortPosition: number
    introVideoUri: number
    introVideoThumbUri: number
    introAudioUri: number
    classVideoUri: number
    classVideoThumbUri: number
    classAudioUri: number
    outroVideoUri: number
    outroVideoThumbUri: number
    outroAudioUri: number
    workoutId: number
    workoutSectionTypeId: number
    _all: number
  }


  export type WorkoutSectionAvgAggregateInputType = {
    rounds?: true
    timecap?: true
    sortPosition?: true
  }

  export type WorkoutSectionSumAggregateInputType = {
    rounds?: true
    timecap?: true
    sortPosition?: true
  }

  export type WorkoutSectionMinAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    name?: true
    note?: true
    rounds?: true
    timecap?: true
    sortPosition?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    classVideoUri?: true
    classVideoThumbUri?: true
    classAudioUri?: true
    outroVideoUri?: true
    outroVideoThumbUri?: true
    outroAudioUri?: true
    workoutId?: true
    workoutSectionTypeId?: true
  }

  export type WorkoutSectionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    name?: true
    note?: true
    rounds?: true
    timecap?: true
    sortPosition?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    classVideoUri?: true
    classVideoThumbUri?: true
    classAudioUri?: true
    outroVideoUri?: true
    outroVideoThumbUri?: true
    outroAudioUri?: true
    workoutId?: true
    workoutSectionTypeId?: true
  }

  export type WorkoutSectionCountAggregateInputType = {
    id?: true
    createdAt?: true
    archived?: true
    userId?: true
    name?: true
    note?: true
    rounds?: true
    timecap?: true
    sortPosition?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    classVideoUri?: true
    classVideoThumbUri?: true
    classAudioUri?: true
    outroVideoUri?: true
    outroVideoThumbUri?: true
    outroAudioUri?: true
    workoutId?: true
    workoutSectionTypeId?: true
    _all?: true
  }

  export type WorkoutSectionAggregateArgs = {
    /**
     * Filter which WorkoutSection to aggregate.
     * 
    **/
    where?: WorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSections to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSections.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutSections
    **/
    _count?: true | WorkoutSectionCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutSectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutSectionAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutSectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutSectionSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutSectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutSectionMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutSectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutSectionMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutSectionMaxAggregateInputType
  }

  export type GetWorkoutSectionAggregateType<T extends WorkoutSectionAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutSection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutSection[P]>
      : GetScalarType<T[P], AggregateWorkoutSection[P]>
  }


    
    
  export type WorkoutSectionGroupByArgs = {
    where?: WorkoutSectionWhereInput
    orderBy?: Enumerable<WorkoutSectionOrderByInput>
    by: Array<WorkoutSectionScalarFieldEnum>
    having?: WorkoutSectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutSectionCountAggregateInputType | true
    _avg?: WorkoutSectionAvgAggregateInputType
    _sum?: WorkoutSectionSumAggregateInputType
    _min?: WorkoutSectionMinAggregateInputType
    _max?: WorkoutSectionMaxAggregateInputType
  }


  export type WorkoutSectionGroupByOutputType = {
    id: string
    createdAt: Date
    archived: boolean
    userId: string
    name: string | null
    note: string | null
    rounds: number
    timecap: number | null
    sortPosition: number
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    classVideoUri: string | null
    classVideoThumbUri: string | null
    classAudioUri: string | null
    outroVideoUri: string | null
    outroVideoThumbUri: string | null
    outroAudioUri: string | null
    workoutId: string
    workoutSectionTypeId: string
    _count: WorkoutSectionCountAggregateOutputType | null
    _avg: WorkoutSectionAvgAggregateOutputType | null
    _sum: WorkoutSectionSumAggregateOutputType | null
    _min: WorkoutSectionMinAggregateOutputType | null
    _max: WorkoutSectionMaxAggregateOutputType | null
  }

  type GetWorkoutSectionGroupByPayload<T extends WorkoutSectionGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutSectionGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutSectionGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutSectionGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutSectionGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutSectionSelect = {
    id?: boolean
    createdAt?: boolean
    archived?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    note?: boolean
    rounds?: boolean
    timecap?: boolean
    sortPosition?: boolean
    introVideoUri?: boolean
    introVideoThumbUri?: boolean
    introAudioUri?: boolean
    classVideoUri?: boolean
    classVideoThumbUri?: boolean
    classAudioUri?: boolean
    outroVideoUri?: boolean
    outroVideoThumbUri?: boolean
    outroAudioUri?: boolean
    Workout?: boolean | WorkoutArgs
    workoutId?: boolean
    WorkoutSectionType?: boolean | WorkoutSectionTypeArgs
    workoutSectionTypeId?: boolean
    WorkoutSets?: boolean | WorkoutSetFindManyArgs
  }

  export type WorkoutSectionInclude = {
    User?: boolean | UserArgs
    Workout?: boolean | WorkoutArgs
    WorkoutSectionType?: boolean | WorkoutSectionTypeArgs
    WorkoutSets?: boolean | WorkoutSetFindManyArgs
  }

  export type WorkoutSectionGetPayload<
    S extends boolean | null | undefined | WorkoutSectionArgs,
    U = keyof S
      > = S extends true
        ? WorkoutSection
    : S extends undefined
    ? never
    : S extends WorkoutSectionArgs | WorkoutSectionFindManyArgs
    ?'include' extends U
    ? WorkoutSection  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Workout'
        ? WorkoutGetPayload<S['include'][P]> :
        P extends 'WorkoutSectionType'
        ? WorkoutSectionTypeGetPayload<S['include'][P]> :
        P extends 'WorkoutSets'
        ? Array < WorkoutSetGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutSection ?WorkoutSection [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Workout'
        ? WorkoutGetPayload<S['select'][P]> :
        P extends 'WorkoutSectionType'
        ? WorkoutSectionTypeGetPayload<S['select'][P]> :
        P extends 'WorkoutSets'
        ? Array < WorkoutSetGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutSection
  : WorkoutSection


  type WorkoutSectionCountArgs = Merge<
    Omit<WorkoutSectionFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutSectionCountAggregateInputType | true
    }
  >

  export interface WorkoutSectionDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutSection that matches the filter.
     * @param {WorkoutSectionFindUniqueArgs} args - Arguments to find a WorkoutSection
     * @example
     * // Get one WorkoutSection
     * const workoutSection = await prisma.workoutSection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutSectionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutSectionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutSection'> extends True ? CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection | null >, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T> | null >>

    /**
     * Find the first WorkoutSection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionFindFirstArgs} args - Arguments to find a WorkoutSection
     * @example
     * // Get one WorkoutSection
     * const workoutSection = await prisma.workoutSection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutSectionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutSectionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutSection'> extends True ? CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection | null >, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutSections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutSections
     * const workoutSections = await prisma.workoutSection.findMany()
     * 
     * // Get first 10 WorkoutSections
     * const workoutSections = await prisma.workoutSection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutSectionWithIdOnly = await prisma.workoutSection.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutSectionFindManyArgs>(
      args?: SelectSubset<T, WorkoutSectionFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutSection>>, PrismaPromise<Array<WorkoutSectionGetPayload<T>>>>

    /**
     * Create a WorkoutSection.
     * @param {WorkoutSectionCreateArgs} args - Arguments to create a WorkoutSection.
     * @example
     * // Create one WorkoutSection
     * const WorkoutSection = await prisma.workoutSection.create({
     *   data: {
     *     // ... data to create a WorkoutSection
     *   }
     * })
     * 
    **/
    create<T extends WorkoutSectionCreateArgs>(
      args: SelectSubset<T, WorkoutSectionCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Create many WorkoutSections.
     *     @param {WorkoutSectionCreateManyArgs} args - Arguments to create many WorkoutSections.
     *     @example
     *     // Create many WorkoutSections
     *     const workoutSection = await prisma.workoutSection.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutSectionCreateManyArgs>(
      args?: SelectSubset<T, WorkoutSectionCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutSection.
     * @param {WorkoutSectionDeleteArgs} args - Arguments to delete one WorkoutSection.
     * @example
     * // Delete one WorkoutSection
     * const WorkoutSection = await prisma.workoutSection.delete({
     *   where: {
     *     // ... filter to delete one WorkoutSection
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutSectionDeleteArgs>(
      args: SelectSubset<T, WorkoutSectionDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Update one WorkoutSection.
     * @param {WorkoutSectionUpdateArgs} args - Arguments to update one WorkoutSection.
     * @example
     * // Update one WorkoutSection
     * const workoutSection = await prisma.workoutSection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutSectionUpdateArgs>(
      args: SelectSubset<T, WorkoutSectionUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Delete zero or more WorkoutSections.
     * @param {WorkoutSectionDeleteManyArgs} args - Arguments to filter WorkoutSections to delete.
     * @example
     * // Delete a few WorkoutSections
     * const { count } = await prisma.workoutSection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutSectionDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutSectionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutSections
     * const workoutSection = await prisma.workoutSection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutSectionUpdateManyArgs>(
      args: SelectSubset<T, WorkoutSectionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutSection.
     * @param {WorkoutSectionUpsertArgs} args - Arguments to update or create a WorkoutSection.
     * @example
     * // Update or create a WorkoutSection
     * const workoutSection = await prisma.workoutSection.upsert({
     *   create: {
     *     // ... data to create a WorkoutSection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutSection we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutSectionUpsertArgs>(
      args: SelectSubset<T, WorkoutSectionUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection>, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T>>>

    /**
     * Count the number of WorkoutSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionCountArgs} args - Arguments to filter WorkoutSections to count.
     * @example
     * // Count the number of WorkoutSections
     * const count = await prisma.workoutSection.count({
     *   where: {
     *     // ... the filter for the WorkoutSections we want to count
     *   }
     * })
    **/
    count<T extends WorkoutSectionCountArgs>(
      args?: Subset<T, WorkoutSectionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutSectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutSectionAggregateArgs>(args: Subset<T, WorkoutSectionAggregateArgs>): PrismaPromise<GetWorkoutSectionAggregateType<T>>

    /**
     * Group by WorkoutSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutSectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutSectionGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutSectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutSectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutSectionGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutSection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutSectionClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    WorkoutSectionType<T extends WorkoutSectionTypeArgs = {}>(args?: Subset<T, WorkoutSectionTypeArgs>): CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType | null >, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T> | null >>;

    WorkoutSets<T extends WorkoutSetFindManyArgs = {}>(args?: Subset<T, WorkoutSetFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSet>>, PrismaPromise<Array<WorkoutSetGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutSection findUnique
   */
  export type WorkoutSectionFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Throw an Error if a WorkoutSection can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSection to fetch.
     * 
    **/
    where: WorkoutSectionWhereUniqueInput
  }


  /**
   * WorkoutSection findFirst
   */
  export type WorkoutSectionFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Throw an Error if a WorkoutSection can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSection to fetch.
     * 
    **/
    where?: WorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSections to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutSections.
     * 
    **/
    cursor?: WorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSections.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutSections.
     * 
    **/
    distinct?: Enumerable<WorkoutSectionScalarFieldEnum>
  }


  /**
   * WorkoutSection findMany
   */
  export type WorkoutSectionFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Filter, which WorkoutSections to fetch.
     * 
    **/
    where?: WorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSections to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutSections.
     * 
    **/
    cursor?: WorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSections.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutSectionScalarFieldEnum>
  }


  /**
   * WorkoutSection create
   */
  export type WorkoutSectionCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
    /**
     * The data needed to create a WorkoutSection.
     * 
    **/
    data: XOR<WorkoutSectionCreateInput, WorkoutSectionUncheckedCreateInput>
  }


  /**
   * WorkoutSection createMany
   */
  export type WorkoutSectionCreateManyArgs = {
    data: Enumerable<WorkoutSectionCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutSection update
   */
  export type WorkoutSectionUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
    /**
     * The data needed to update a WorkoutSection.
     * 
    **/
    data: XOR<WorkoutSectionUpdateInput, WorkoutSectionUncheckedUpdateInput>
    /**
     * Choose, which WorkoutSection to update.
     * 
    **/
    where: WorkoutSectionWhereUniqueInput
  }


  /**
   * WorkoutSection updateMany
   */
  export type WorkoutSectionUpdateManyArgs = {
    data: XOR<WorkoutSectionUpdateManyMutationInput, WorkoutSectionUncheckedUpdateManyInput>
    where?: WorkoutSectionWhereInput
  }


  /**
   * WorkoutSection upsert
   */
  export type WorkoutSectionUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
    /**
     * The filter to search for the WorkoutSection to update in case it exists.
     * 
    **/
    where: WorkoutSectionWhereUniqueInput
    /**
     * In case the WorkoutSection found by the `where` argument doesn't exist, create a new WorkoutSection with this data.
     * 
    **/
    create: XOR<WorkoutSectionCreateInput, WorkoutSectionUncheckedCreateInput>
    /**
     * In case the WorkoutSection was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutSectionUpdateInput, WorkoutSectionUncheckedUpdateInput>
  }


  /**
   * WorkoutSection delete
   */
  export type WorkoutSectionDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
    /**
     * Filter which WorkoutSection to delete.
     * 
    **/
    where: WorkoutSectionWhereUniqueInput
  }


  /**
   * WorkoutSection deleteMany
   */
  export type WorkoutSectionDeleteManyArgs = {
    where?: WorkoutSectionWhereInput
  }


  /**
   * WorkoutSection without action
   */
  export type WorkoutSectionArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSection
     * 
    **/
    select?: WorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSectionInclude | null
  }



  /**
   * Model WorkoutSet
   */


  export type AggregateWorkoutSet = {
    _count: WorkoutSetCountAggregateOutputType | null
    count: WorkoutSetCountAggregateOutputType | null
    _avg: WorkoutSetAvgAggregateOutputType | null
    avg: WorkoutSetAvgAggregateOutputType | null
    _sum: WorkoutSetSumAggregateOutputType | null
    sum: WorkoutSetSumAggregateOutputType | null
    _min: WorkoutSetMinAggregateOutputType | null
    min: WorkoutSetMinAggregateOutputType | null
    _max: WorkoutSetMaxAggregateOutputType | null
    max: WorkoutSetMaxAggregateOutputType | null
  }

  export type WorkoutSetAvgAggregateOutputType = {
    sortPosition: number | null
    rounds: number | null
    duration: number | null
  }

  export type WorkoutSetSumAggregateOutputType = {
    sortPosition: number | null
    rounds: number | null
    duration: number | null
  }

  export type WorkoutSetMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    sortPosition: number | null
    rounds: number | null
    duration: number | null
    workoutSectionId: string | null
  }

  export type WorkoutSetMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    sortPosition: number | null
    rounds: number | null
    duration: number | null
    workoutSectionId: string | null
  }

  export type WorkoutSetCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    sortPosition: number
    rounds: number
    duration: number
    workoutSectionId: number
    _all: number
  }


  export type WorkoutSetAvgAggregateInputType = {
    sortPosition?: true
    rounds?: true
    duration?: true
  }

  export type WorkoutSetSumAggregateInputType = {
    sortPosition?: true
    rounds?: true
    duration?: true
  }

  export type WorkoutSetMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    rounds?: true
    duration?: true
    workoutSectionId?: true
  }

  export type WorkoutSetMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    rounds?: true
    duration?: true
    workoutSectionId?: true
  }

  export type WorkoutSetCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    rounds?: true
    duration?: true
    workoutSectionId?: true
    _all?: true
  }

  export type WorkoutSetAggregateArgs = {
    /**
     * Filter which WorkoutSet to aggregate.
     * 
    **/
    where?: WorkoutSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSets to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutSets
    **/
    _count?: true | WorkoutSetCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutSetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutSetAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutSetAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutSetSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutSetSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutSetMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutSetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutSetMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutSetMaxAggregateInputType
  }

  export type GetWorkoutSetAggregateType<T extends WorkoutSetAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutSet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutSet[P]>
      : GetScalarType<T[P], AggregateWorkoutSet[P]>
  }


    
    
  export type WorkoutSetGroupByArgs = {
    where?: WorkoutSetWhereInput
    orderBy?: Enumerable<WorkoutSetOrderByInput>
    by: Array<WorkoutSetScalarFieldEnum>
    having?: WorkoutSetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutSetCountAggregateInputType | true
    _avg?: WorkoutSetAvgAggregateInputType
    _sum?: WorkoutSetSumAggregateInputType
    _min?: WorkoutSetMinAggregateInputType
    _max?: WorkoutSetMaxAggregateInputType
  }


  export type WorkoutSetGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    sortPosition: number
    rounds: number
    duration: number | null
    workoutSectionId: string
    _count: WorkoutSetCountAggregateOutputType | null
    _avg: WorkoutSetAvgAggregateOutputType | null
    _sum: WorkoutSetSumAggregateOutputType | null
    _min: WorkoutSetMinAggregateOutputType | null
    _max: WorkoutSetMaxAggregateOutputType | null
  }

  type GetWorkoutSetGroupByPayload<T extends WorkoutSetGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutSetGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutSetGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutSetGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutSetGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutSetSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    sortPosition?: boolean
    rounds?: boolean
    duration?: boolean
    Generators?: boolean | WorkoutSetGeneratorFindManyArgs
    IntervalBuyIn?: boolean | WorkoutSetIntervalBuyInArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    WorkoutSection?: boolean | WorkoutSectionArgs
    workoutSectionId?: boolean
  }

  export type WorkoutSetInclude = {
    User?: boolean | UserArgs
    Generators?: boolean | WorkoutSetGeneratorFindManyArgs
    IntervalBuyIn?: boolean | WorkoutSetIntervalBuyInArgs
    WorkoutMoves?: boolean | WorkoutMoveFindManyArgs
    WorkoutSection?: boolean | WorkoutSectionArgs
  }

  export type WorkoutSetGetPayload<
    S extends boolean | null | undefined | WorkoutSetArgs,
    U = keyof S
      > = S extends true
        ? WorkoutSet
    : S extends undefined
    ? never
    : S extends WorkoutSetArgs | WorkoutSetFindManyArgs
    ?'include' extends U
    ? WorkoutSet  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Generators'
        ? Array < WorkoutSetGeneratorGetPayload<S['include'][P]>>  :
        P extends 'IntervalBuyIn'
        ? WorkoutSetIntervalBuyInGetPayload<S['include'][P]> | null :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'WorkoutSection'
        ? WorkoutSectionGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutSet ?WorkoutSet [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Generators'
        ? Array < WorkoutSetGeneratorGetPayload<S['select'][P]>>  :
        P extends 'IntervalBuyIn'
        ? WorkoutSetIntervalBuyInGetPayload<S['select'][P]> | null :
        P extends 'WorkoutMoves'
        ? Array < WorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'WorkoutSection'
        ? WorkoutSectionGetPayload<S['select'][P]> : never
  } 
    : WorkoutSet
  : WorkoutSet


  type WorkoutSetCountArgs = Merge<
    Omit<WorkoutSetFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutSetCountAggregateInputType | true
    }
  >

  export interface WorkoutSetDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutSet that matches the filter.
     * @param {WorkoutSetFindUniqueArgs} args - Arguments to find a WorkoutSet
     * @example
     * // Get one WorkoutSet
     * const workoutSet = await prisma.workoutSet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutSetFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutSetFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutSet'> extends True ? CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet>, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet | null >, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T> | null >>

    /**
     * Find the first WorkoutSet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetFindFirstArgs} args - Arguments to find a WorkoutSet
     * @example
     * // Get one WorkoutSet
     * const workoutSet = await prisma.workoutSet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutSetFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutSetFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutSet'> extends True ? CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet>, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet | null >, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutSets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutSets
     * const workoutSets = await prisma.workoutSet.findMany()
     * 
     * // Get first 10 WorkoutSets
     * const workoutSets = await prisma.workoutSet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutSetWithIdOnly = await prisma.workoutSet.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutSetFindManyArgs>(
      args?: SelectSubset<T, WorkoutSetFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutSet>>, PrismaPromise<Array<WorkoutSetGetPayload<T>>>>

    /**
     * Create a WorkoutSet.
     * @param {WorkoutSetCreateArgs} args - Arguments to create a WorkoutSet.
     * @example
     * // Create one WorkoutSet
     * const WorkoutSet = await prisma.workoutSet.create({
     *   data: {
     *     // ... data to create a WorkoutSet
     *   }
     * })
     * 
    **/
    create<T extends WorkoutSetCreateArgs>(
      args: SelectSubset<T, WorkoutSetCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet>, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T>>>

    /**
     * Create many WorkoutSets.
     *     @param {WorkoutSetCreateManyArgs} args - Arguments to create many WorkoutSets.
     *     @example
     *     // Create many WorkoutSets
     *     const workoutSet = await prisma.workoutSet.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutSetCreateManyArgs>(
      args?: SelectSubset<T, WorkoutSetCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutSet.
     * @param {WorkoutSetDeleteArgs} args - Arguments to delete one WorkoutSet.
     * @example
     * // Delete one WorkoutSet
     * const WorkoutSet = await prisma.workoutSet.delete({
     *   where: {
     *     // ... filter to delete one WorkoutSet
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutSetDeleteArgs>(
      args: SelectSubset<T, WorkoutSetDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet>, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T>>>

    /**
     * Update one WorkoutSet.
     * @param {WorkoutSetUpdateArgs} args - Arguments to update one WorkoutSet.
     * @example
     * // Update one WorkoutSet
     * const workoutSet = await prisma.workoutSet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutSetUpdateArgs>(
      args: SelectSubset<T, WorkoutSetUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet>, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T>>>

    /**
     * Delete zero or more WorkoutSets.
     * @param {WorkoutSetDeleteManyArgs} args - Arguments to filter WorkoutSets to delete.
     * @example
     * // Delete a few WorkoutSets
     * const { count } = await prisma.workoutSet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutSetDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutSetDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutSets
     * const workoutSet = await prisma.workoutSet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutSetUpdateManyArgs>(
      args: SelectSubset<T, WorkoutSetUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutSet.
     * @param {WorkoutSetUpsertArgs} args - Arguments to update or create a WorkoutSet.
     * @example
     * // Update or create a WorkoutSet
     * const workoutSet = await prisma.workoutSet.upsert({
     *   create: {
     *     // ... data to create a WorkoutSet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutSet we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutSetUpsertArgs>(
      args: SelectSubset<T, WorkoutSetUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet>, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T>>>

    /**
     * Count the number of WorkoutSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetCountArgs} args - Arguments to filter WorkoutSets to count.
     * @example
     * // Count the number of WorkoutSets
     * const count = await prisma.workoutSet.count({
     *   where: {
     *     // ... the filter for the WorkoutSets we want to count
     *   }
     * })
    **/
    count<T extends WorkoutSetCountArgs>(
      args?: Subset<T, WorkoutSetCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutSetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutSetAggregateArgs>(args: Subset<T, WorkoutSetAggregateArgs>): PrismaPromise<GetWorkoutSetAggregateType<T>>

    /**
     * Group by WorkoutSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutSetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutSetGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutSetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutSetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutSetGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutSet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutSetClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Generators<T extends WorkoutSetGeneratorFindManyArgs = {}>(args?: Subset<T, WorkoutSetGeneratorFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSetGenerator>>, PrismaPromise<Array<WorkoutSetGeneratorGetPayload<T>>>>;

    IntervalBuyIn<T extends WorkoutSetIntervalBuyInArgs = {}>(args?: Subset<T, WorkoutSetIntervalBuyInArgs>): CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn | null >, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T> | null >>;

    WorkoutMoves<T extends WorkoutMoveFindManyArgs = {}>(args?: Subset<T, WorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>;

    WorkoutSection<T extends WorkoutSectionArgs = {}>(args?: Subset<T, WorkoutSectionArgs>): CheckSelect<T, Prisma__WorkoutSectionClient<WorkoutSection | null >, Prisma__WorkoutSectionClient<WorkoutSectionGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutSet findUnique
   */
  export type WorkoutSetFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
    /**
     * Throw an Error if a WorkoutSet can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSet to fetch.
     * 
    **/
    where: WorkoutSetWhereUniqueInput
  }


  /**
   * WorkoutSet findFirst
   */
  export type WorkoutSetFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
    /**
     * Throw an Error if a WorkoutSet can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSet to fetch.
     * 
    **/
    where?: WorkoutSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSets to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutSets.
     * 
    **/
    cursor?: WorkoutSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutSets.
     * 
    **/
    distinct?: Enumerable<WorkoutSetScalarFieldEnum>
  }


  /**
   * WorkoutSet findMany
   */
  export type WorkoutSetFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
    /**
     * Filter, which WorkoutSets to fetch.
     * 
    **/
    where?: WorkoutSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSets to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutSets.
     * 
    **/
    cursor?: WorkoutSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSets.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutSetScalarFieldEnum>
  }


  /**
   * WorkoutSet create
   */
  export type WorkoutSetCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
    /**
     * The data needed to create a WorkoutSet.
     * 
    **/
    data: XOR<WorkoutSetCreateInput, WorkoutSetUncheckedCreateInput>
  }


  /**
   * WorkoutSet createMany
   */
  export type WorkoutSetCreateManyArgs = {
    data: Enumerable<WorkoutSetCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutSet update
   */
  export type WorkoutSetUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
    /**
     * The data needed to update a WorkoutSet.
     * 
    **/
    data: XOR<WorkoutSetUpdateInput, WorkoutSetUncheckedUpdateInput>
    /**
     * Choose, which WorkoutSet to update.
     * 
    **/
    where: WorkoutSetWhereUniqueInput
  }


  /**
   * WorkoutSet updateMany
   */
  export type WorkoutSetUpdateManyArgs = {
    data: XOR<WorkoutSetUpdateManyMutationInput, WorkoutSetUncheckedUpdateManyInput>
    where?: WorkoutSetWhereInput
  }


  /**
   * WorkoutSet upsert
   */
  export type WorkoutSetUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
    /**
     * The filter to search for the WorkoutSet to update in case it exists.
     * 
    **/
    where: WorkoutSetWhereUniqueInput
    /**
     * In case the WorkoutSet found by the `where` argument doesn't exist, create a new WorkoutSet with this data.
     * 
    **/
    create: XOR<WorkoutSetCreateInput, WorkoutSetUncheckedCreateInput>
    /**
     * In case the WorkoutSet was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutSetUpdateInput, WorkoutSetUncheckedUpdateInput>
  }


  /**
   * WorkoutSet delete
   */
  export type WorkoutSetDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
    /**
     * Filter which WorkoutSet to delete.
     * 
    **/
    where: WorkoutSetWhereUniqueInput
  }


  /**
   * WorkoutSet deleteMany
   */
  export type WorkoutSetDeleteManyArgs = {
    where?: WorkoutSetWhereInput
  }


  /**
   * WorkoutSet without action
   */
  export type WorkoutSetArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSet
     * 
    **/
    select?: WorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetInclude | null
  }



  /**
   * Model WorkoutSetIntervalBuyIn
   */


  export type AggregateWorkoutSetIntervalBuyIn = {
    _count: WorkoutSetIntervalBuyInCountAggregateOutputType | null
    count: WorkoutSetIntervalBuyInCountAggregateOutputType | null
    _avg: WorkoutSetIntervalBuyInAvgAggregateOutputType | null
    avg: WorkoutSetIntervalBuyInAvgAggregateOutputType | null
    _sum: WorkoutSetIntervalBuyInSumAggregateOutputType | null
    sum: WorkoutSetIntervalBuyInSumAggregateOutputType | null
    _min: WorkoutSetIntervalBuyInMinAggregateOutputType | null
    min: WorkoutSetIntervalBuyInMinAggregateOutputType | null
    _max: WorkoutSetIntervalBuyInMaxAggregateOutputType | null
    max: WorkoutSetIntervalBuyInMaxAggregateOutputType | null
  }

  export type WorkoutSetIntervalBuyInAvgAggregateOutputType = {
    interval: number | null
  }

  export type WorkoutSetIntervalBuyInSumAggregateOutputType = {
    interval: number | null
  }

  export type WorkoutSetIntervalBuyInMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    interval: number | null
    workoutMoveId: string | null
    workoutSetId: string | null
  }

  export type WorkoutSetIntervalBuyInMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    interval: number | null
    workoutMoveId: string | null
    workoutSetId: string | null
  }

  export type WorkoutSetIntervalBuyInCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    interval: number
    workoutMoveId: number
    workoutSetId: number
    _all: number
  }


  export type WorkoutSetIntervalBuyInAvgAggregateInputType = {
    interval?: true
  }

  export type WorkoutSetIntervalBuyInSumAggregateInputType = {
    interval?: true
  }

  export type WorkoutSetIntervalBuyInMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    interval?: true
    workoutMoveId?: true
    workoutSetId?: true
  }

  export type WorkoutSetIntervalBuyInMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    interval?: true
    workoutMoveId?: true
    workoutSetId?: true
  }

  export type WorkoutSetIntervalBuyInCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    interval?: true
    workoutMoveId?: true
    workoutSetId?: true
    _all?: true
  }

  export type WorkoutSetIntervalBuyInAggregateArgs = {
    /**
     * Filter which WorkoutSetIntervalBuyIn to aggregate.
     * 
    **/
    where?: WorkoutSetIntervalBuyInWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSetIntervalBuyIns to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetIntervalBuyInOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutSetIntervalBuyInWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSetIntervalBuyIns from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSetIntervalBuyIns.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutSetIntervalBuyIns
    **/
    _count?: true | WorkoutSetIntervalBuyInCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutSetIntervalBuyInCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutSetIntervalBuyInAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutSetIntervalBuyInAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutSetIntervalBuyInSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutSetIntervalBuyInSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutSetIntervalBuyInMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutSetIntervalBuyInMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutSetIntervalBuyInMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutSetIntervalBuyInMaxAggregateInputType
  }

  export type GetWorkoutSetIntervalBuyInAggregateType<T extends WorkoutSetIntervalBuyInAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutSetIntervalBuyIn]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutSetIntervalBuyIn[P]>
      : GetScalarType<T[P], AggregateWorkoutSetIntervalBuyIn[P]>
  }


    
    
  export type WorkoutSetIntervalBuyInGroupByArgs = {
    where?: WorkoutSetIntervalBuyInWhereInput
    orderBy?: Enumerable<WorkoutSetIntervalBuyInOrderByInput>
    by: Array<WorkoutSetIntervalBuyInScalarFieldEnum>
    having?: WorkoutSetIntervalBuyInScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutSetIntervalBuyInCountAggregateInputType | true
    _avg?: WorkoutSetIntervalBuyInAvgAggregateInputType
    _sum?: WorkoutSetIntervalBuyInSumAggregateInputType
    _min?: WorkoutSetIntervalBuyInMinAggregateInputType
    _max?: WorkoutSetIntervalBuyInMaxAggregateInputType
  }


  export type WorkoutSetIntervalBuyInGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    interval: number
    workoutMoveId: string
    workoutSetId: string
    _count: WorkoutSetIntervalBuyInCountAggregateOutputType | null
    _avg: WorkoutSetIntervalBuyInAvgAggregateOutputType | null
    _sum: WorkoutSetIntervalBuyInSumAggregateOutputType | null
    _min: WorkoutSetIntervalBuyInMinAggregateOutputType | null
    _max: WorkoutSetIntervalBuyInMaxAggregateOutputType | null
  }

  type GetWorkoutSetIntervalBuyInGroupByPayload<T extends WorkoutSetIntervalBuyInGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutSetIntervalBuyInGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutSetIntervalBuyInGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutSetIntervalBuyInGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutSetIntervalBuyInGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutSetIntervalBuyInSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    interval?: boolean
    WorkoutMove?: boolean | WorkoutMoveArgs
    workoutMoveId?: boolean
    WorkoutSet?: boolean | WorkoutSetArgs
    workoutSetId?: boolean
  }

  export type WorkoutSetIntervalBuyInInclude = {
    User?: boolean | UserArgs
    WorkoutMove?: boolean | WorkoutMoveArgs
    WorkoutSet?: boolean | WorkoutSetArgs
  }

  export type WorkoutSetIntervalBuyInGetPayload<
    S extends boolean | null | undefined | WorkoutSetIntervalBuyInArgs,
    U = keyof S
      > = S extends true
        ? WorkoutSetIntervalBuyIn
    : S extends undefined
    ? never
    : S extends WorkoutSetIntervalBuyInArgs | WorkoutSetIntervalBuyInFindManyArgs
    ?'include' extends U
    ? WorkoutSetIntervalBuyIn  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'WorkoutMove'
        ? WorkoutMoveGetPayload<S['include'][P]> :
        P extends 'WorkoutSet'
        ? WorkoutSetGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutSetIntervalBuyIn ?WorkoutSetIntervalBuyIn [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'WorkoutMove'
        ? WorkoutMoveGetPayload<S['select'][P]> :
        P extends 'WorkoutSet'
        ? WorkoutSetGetPayload<S['select'][P]> : never
  } 
    : WorkoutSetIntervalBuyIn
  : WorkoutSetIntervalBuyIn


  type WorkoutSetIntervalBuyInCountArgs = Merge<
    Omit<WorkoutSetIntervalBuyInFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutSetIntervalBuyInCountAggregateInputType | true
    }
  >

  export interface WorkoutSetIntervalBuyInDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutSetIntervalBuyIn that matches the filter.
     * @param {WorkoutSetIntervalBuyInFindUniqueArgs} args - Arguments to find a WorkoutSetIntervalBuyIn
     * @example
     * // Get one WorkoutSetIntervalBuyIn
     * const workoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutSetIntervalBuyInFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutSetIntervalBuyInFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutSetIntervalBuyIn'> extends True ? CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn>, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn | null >, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T> | null >>

    /**
     * Find the first WorkoutSetIntervalBuyIn that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetIntervalBuyInFindFirstArgs} args - Arguments to find a WorkoutSetIntervalBuyIn
     * @example
     * // Get one WorkoutSetIntervalBuyIn
     * const workoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutSetIntervalBuyInFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutSetIntervalBuyInFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutSetIntervalBuyIn'> extends True ? CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn>, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn | null >, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutSetIntervalBuyIns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetIntervalBuyInFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutSetIntervalBuyIns
     * const workoutSetIntervalBuyIns = await prisma.workoutSetIntervalBuyIn.findMany()
     * 
     * // Get first 10 WorkoutSetIntervalBuyIns
     * const workoutSetIntervalBuyIns = await prisma.workoutSetIntervalBuyIn.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutSetIntervalBuyInWithIdOnly = await prisma.workoutSetIntervalBuyIn.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutSetIntervalBuyInFindManyArgs>(
      args?: SelectSubset<T, WorkoutSetIntervalBuyInFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutSetIntervalBuyIn>>, PrismaPromise<Array<WorkoutSetIntervalBuyInGetPayload<T>>>>

    /**
     * Create a WorkoutSetIntervalBuyIn.
     * @param {WorkoutSetIntervalBuyInCreateArgs} args - Arguments to create a WorkoutSetIntervalBuyIn.
     * @example
     * // Create one WorkoutSetIntervalBuyIn
     * const WorkoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.create({
     *   data: {
     *     // ... data to create a WorkoutSetIntervalBuyIn
     *   }
     * })
     * 
    **/
    create<T extends WorkoutSetIntervalBuyInCreateArgs>(
      args: SelectSubset<T, WorkoutSetIntervalBuyInCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn>, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T>>>

    /**
     * Create many WorkoutSetIntervalBuyIns.
     *     @param {WorkoutSetIntervalBuyInCreateManyArgs} args - Arguments to create many WorkoutSetIntervalBuyIns.
     *     @example
     *     // Create many WorkoutSetIntervalBuyIns
     *     const workoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutSetIntervalBuyInCreateManyArgs>(
      args?: SelectSubset<T, WorkoutSetIntervalBuyInCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutSetIntervalBuyIn.
     * @param {WorkoutSetIntervalBuyInDeleteArgs} args - Arguments to delete one WorkoutSetIntervalBuyIn.
     * @example
     * // Delete one WorkoutSetIntervalBuyIn
     * const WorkoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.delete({
     *   where: {
     *     // ... filter to delete one WorkoutSetIntervalBuyIn
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutSetIntervalBuyInDeleteArgs>(
      args: SelectSubset<T, WorkoutSetIntervalBuyInDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn>, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T>>>

    /**
     * Update one WorkoutSetIntervalBuyIn.
     * @param {WorkoutSetIntervalBuyInUpdateArgs} args - Arguments to update one WorkoutSetIntervalBuyIn.
     * @example
     * // Update one WorkoutSetIntervalBuyIn
     * const workoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutSetIntervalBuyInUpdateArgs>(
      args: SelectSubset<T, WorkoutSetIntervalBuyInUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn>, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T>>>

    /**
     * Delete zero or more WorkoutSetIntervalBuyIns.
     * @param {WorkoutSetIntervalBuyInDeleteManyArgs} args - Arguments to filter WorkoutSetIntervalBuyIns to delete.
     * @example
     * // Delete a few WorkoutSetIntervalBuyIns
     * const { count } = await prisma.workoutSetIntervalBuyIn.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutSetIntervalBuyInDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutSetIntervalBuyInDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutSetIntervalBuyIns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetIntervalBuyInUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutSetIntervalBuyIns
     * const workoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutSetIntervalBuyInUpdateManyArgs>(
      args: SelectSubset<T, WorkoutSetIntervalBuyInUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutSetIntervalBuyIn.
     * @param {WorkoutSetIntervalBuyInUpsertArgs} args - Arguments to update or create a WorkoutSetIntervalBuyIn.
     * @example
     * // Update or create a WorkoutSetIntervalBuyIn
     * const workoutSetIntervalBuyIn = await prisma.workoutSetIntervalBuyIn.upsert({
     *   create: {
     *     // ... data to create a WorkoutSetIntervalBuyIn
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutSetIntervalBuyIn we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutSetIntervalBuyInUpsertArgs>(
      args: SelectSubset<T, WorkoutSetIntervalBuyInUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyIn>, Prisma__WorkoutSetIntervalBuyInClient<WorkoutSetIntervalBuyInGetPayload<T>>>

    /**
     * Count the number of WorkoutSetIntervalBuyIns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetIntervalBuyInCountArgs} args - Arguments to filter WorkoutSetIntervalBuyIns to count.
     * @example
     * // Count the number of WorkoutSetIntervalBuyIns
     * const count = await prisma.workoutSetIntervalBuyIn.count({
     *   where: {
     *     // ... the filter for the WorkoutSetIntervalBuyIns we want to count
     *   }
     * })
    **/
    count<T extends WorkoutSetIntervalBuyInCountArgs>(
      args?: Subset<T, WorkoutSetIntervalBuyInCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutSetIntervalBuyInCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutSetIntervalBuyIn.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetIntervalBuyInAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutSetIntervalBuyInAggregateArgs>(args: Subset<T, WorkoutSetIntervalBuyInAggregateArgs>): PrismaPromise<GetWorkoutSetIntervalBuyInAggregateType<T>>

    /**
     * Group by WorkoutSetIntervalBuyIn.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetIntervalBuyInGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutSetIntervalBuyInGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutSetIntervalBuyInGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutSetIntervalBuyInGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutSetIntervalBuyInGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutSetIntervalBuyInGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutSetIntervalBuyIn.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutSetIntervalBuyInClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    WorkoutMove<T extends WorkoutMoveArgs = {}>(args?: Subset<T, WorkoutMoveArgs>): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove | null >, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T> | null >>;

    WorkoutSet<T extends WorkoutSetArgs = {}>(args?: Subset<T, WorkoutSetArgs>): CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet | null >, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutSetIntervalBuyIn findUnique
   */
  export type WorkoutSetIntervalBuyInFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
    /**
     * Throw an Error if a WorkoutSetIntervalBuyIn can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSetIntervalBuyIn to fetch.
     * 
    **/
    where: WorkoutSetIntervalBuyInWhereUniqueInput
  }


  /**
   * WorkoutSetIntervalBuyIn findFirst
   */
  export type WorkoutSetIntervalBuyInFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
    /**
     * Throw an Error if a WorkoutSetIntervalBuyIn can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSetIntervalBuyIn to fetch.
     * 
    **/
    where?: WorkoutSetIntervalBuyInWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSetIntervalBuyIns to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetIntervalBuyInOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutSetIntervalBuyIns.
     * 
    **/
    cursor?: WorkoutSetIntervalBuyInWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSetIntervalBuyIns from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSetIntervalBuyIns.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutSetIntervalBuyIns.
     * 
    **/
    distinct?: Enumerable<WorkoutSetIntervalBuyInScalarFieldEnum>
  }


  /**
   * WorkoutSetIntervalBuyIn findMany
   */
  export type WorkoutSetIntervalBuyInFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
    /**
     * Filter, which WorkoutSetIntervalBuyIns to fetch.
     * 
    **/
    where?: WorkoutSetIntervalBuyInWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSetIntervalBuyIns to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetIntervalBuyInOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutSetIntervalBuyIns.
     * 
    **/
    cursor?: WorkoutSetIntervalBuyInWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSetIntervalBuyIns from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSetIntervalBuyIns.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutSetIntervalBuyInScalarFieldEnum>
  }


  /**
   * WorkoutSetIntervalBuyIn create
   */
  export type WorkoutSetIntervalBuyInCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
    /**
     * The data needed to create a WorkoutSetIntervalBuyIn.
     * 
    **/
    data: XOR<WorkoutSetIntervalBuyInCreateInput, WorkoutSetIntervalBuyInUncheckedCreateInput>
  }


  /**
   * WorkoutSetIntervalBuyIn createMany
   */
  export type WorkoutSetIntervalBuyInCreateManyArgs = {
    data: Enumerable<WorkoutSetIntervalBuyInCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutSetIntervalBuyIn update
   */
  export type WorkoutSetIntervalBuyInUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
    /**
     * The data needed to update a WorkoutSetIntervalBuyIn.
     * 
    **/
    data: XOR<WorkoutSetIntervalBuyInUpdateInput, WorkoutSetIntervalBuyInUncheckedUpdateInput>
    /**
     * Choose, which WorkoutSetIntervalBuyIn to update.
     * 
    **/
    where: WorkoutSetIntervalBuyInWhereUniqueInput
  }


  /**
   * WorkoutSetIntervalBuyIn updateMany
   */
  export type WorkoutSetIntervalBuyInUpdateManyArgs = {
    data: XOR<WorkoutSetIntervalBuyInUpdateManyMutationInput, WorkoutSetIntervalBuyInUncheckedUpdateManyInput>
    where?: WorkoutSetIntervalBuyInWhereInput
  }


  /**
   * WorkoutSetIntervalBuyIn upsert
   */
  export type WorkoutSetIntervalBuyInUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
    /**
     * The filter to search for the WorkoutSetIntervalBuyIn to update in case it exists.
     * 
    **/
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    /**
     * In case the WorkoutSetIntervalBuyIn found by the `where` argument doesn't exist, create a new WorkoutSetIntervalBuyIn with this data.
     * 
    **/
    create: XOR<WorkoutSetIntervalBuyInCreateInput, WorkoutSetIntervalBuyInUncheckedCreateInput>
    /**
     * In case the WorkoutSetIntervalBuyIn was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutSetIntervalBuyInUpdateInput, WorkoutSetIntervalBuyInUncheckedUpdateInput>
  }


  /**
   * WorkoutSetIntervalBuyIn delete
   */
  export type WorkoutSetIntervalBuyInDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
    /**
     * Filter which WorkoutSetIntervalBuyIn to delete.
     * 
    **/
    where: WorkoutSetIntervalBuyInWhereUniqueInput
  }


  /**
   * WorkoutSetIntervalBuyIn deleteMany
   */
  export type WorkoutSetIntervalBuyInDeleteManyArgs = {
    where?: WorkoutSetIntervalBuyInWhereInput
  }


  /**
   * WorkoutSetIntervalBuyIn without action
   */
  export type WorkoutSetIntervalBuyInArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetIntervalBuyIn
     * 
    **/
    select?: WorkoutSetIntervalBuyInSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetIntervalBuyInInclude | null
  }



  /**
   * Model WorkoutSetGenerator
   */


  export type AggregateWorkoutSetGenerator = {
    _count: WorkoutSetGeneratorCountAggregateOutputType | null
    count: WorkoutSetGeneratorCountAggregateOutputType | null
    _avg: WorkoutSetGeneratorAvgAggregateOutputType | null
    avg: WorkoutSetGeneratorAvgAggregateOutputType | null
    _sum: WorkoutSetGeneratorSumAggregateOutputType | null
    sum: WorkoutSetGeneratorSumAggregateOutputType | null
    _min: WorkoutSetGeneratorMinAggregateOutputType | null
    min: WorkoutSetGeneratorMinAggregateOutputType | null
    _max: WorkoutSetGeneratorMaxAggregateOutputType | null
    max: WorkoutSetGeneratorMaxAggregateOutputType | null
  }

  export type WorkoutSetGeneratorAvgAggregateOutputType = {
    workoutMoveIndex: number | null
    roundFrequency: number | null
    adjustAmount: number | null
  }

  export type WorkoutSetGeneratorSumAggregateOutputType = {
    workoutMoveIndex: number | null
    roundFrequency: number | null
    adjustAmount: number | null
  }

  export type WorkoutSetGeneratorMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    type: WorkoutSetGeneratorType | null
    workoutMoveIndex: number | null
    target: WorkoutSetGeneratorTarget | null
    roundFrequency: number | null
    adjustAmount: number | null
    workoutSetId: string | null
  }

  export type WorkoutSetGeneratorMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    type: WorkoutSetGeneratorType | null
    workoutMoveIndex: number | null
    target: WorkoutSetGeneratorTarget | null
    roundFrequency: number | null
    adjustAmount: number | null
    workoutSetId: string | null
  }

  export type WorkoutSetGeneratorCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    type: number
    workoutMoveIndex: number
    target: number
    roundFrequency: number
    adjustAmount: number
    workoutSetId: number
    _all: number
  }


  export type WorkoutSetGeneratorAvgAggregateInputType = {
    workoutMoveIndex?: true
    roundFrequency?: true
    adjustAmount?: true
  }

  export type WorkoutSetGeneratorSumAggregateInputType = {
    workoutMoveIndex?: true
    roundFrequency?: true
    adjustAmount?: true
  }

  export type WorkoutSetGeneratorMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    type?: true
    workoutMoveIndex?: true
    target?: true
    roundFrequency?: true
    adjustAmount?: true
    workoutSetId?: true
  }

  export type WorkoutSetGeneratorMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    type?: true
    workoutMoveIndex?: true
    target?: true
    roundFrequency?: true
    adjustAmount?: true
    workoutSetId?: true
  }

  export type WorkoutSetGeneratorCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    type?: true
    workoutMoveIndex?: true
    target?: true
    roundFrequency?: true
    adjustAmount?: true
    workoutSetId?: true
    _all?: true
  }

  export type WorkoutSetGeneratorAggregateArgs = {
    /**
     * Filter which WorkoutSetGenerator to aggregate.
     * 
    **/
    where?: WorkoutSetGeneratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSetGenerators to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetGeneratorOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutSetGeneratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSetGenerators from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSetGenerators.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutSetGenerators
    **/
    _count?: true | WorkoutSetGeneratorCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutSetGeneratorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutSetGeneratorAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutSetGeneratorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutSetGeneratorSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutSetGeneratorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutSetGeneratorMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutSetGeneratorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutSetGeneratorMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutSetGeneratorMaxAggregateInputType
  }

  export type GetWorkoutSetGeneratorAggregateType<T extends WorkoutSetGeneratorAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutSetGenerator]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutSetGenerator[P]>
      : GetScalarType<T[P], AggregateWorkoutSetGenerator[P]>
  }


    
    
  export type WorkoutSetGeneratorGroupByArgs = {
    where?: WorkoutSetGeneratorWhereInput
    orderBy?: Enumerable<WorkoutSetGeneratorOrderByInput>
    by: Array<WorkoutSetGeneratorScalarFieldEnum>
    having?: WorkoutSetGeneratorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutSetGeneratorCountAggregateInputType | true
    _avg?: WorkoutSetGeneratorAvgAggregateInputType
    _sum?: WorkoutSetGeneratorSumAggregateInputType
    _min?: WorkoutSetGeneratorMinAggregateInputType
    _max?: WorkoutSetGeneratorMaxAggregateInputType
  }


  export type WorkoutSetGeneratorGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    workoutSetId: string | null
    _count: WorkoutSetGeneratorCountAggregateOutputType | null
    _avg: WorkoutSetGeneratorAvgAggregateOutputType | null
    _sum: WorkoutSetGeneratorSumAggregateOutputType | null
    _min: WorkoutSetGeneratorMinAggregateOutputType | null
    _max: WorkoutSetGeneratorMaxAggregateOutputType | null
  }

  type GetWorkoutSetGeneratorGroupByPayload<T extends WorkoutSetGeneratorGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutSetGeneratorGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutSetGeneratorGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutSetGeneratorGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutSetGeneratorGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutSetGeneratorSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    type?: boolean
    workoutMoveIndex?: boolean
    target?: boolean
    roundFrequency?: boolean
    adjustAmount?: boolean
    WorkoutSet?: boolean | WorkoutSetArgs
    workoutSetId?: boolean
  }

  export type WorkoutSetGeneratorInclude = {
    User?: boolean | UserArgs
    WorkoutSet?: boolean | WorkoutSetArgs
  }

  export type WorkoutSetGeneratorGetPayload<
    S extends boolean | null | undefined | WorkoutSetGeneratorArgs,
    U = keyof S
      > = S extends true
        ? WorkoutSetGenerator
    : S extends undefined
    ? never
    : S extends WorkoutSetGeneratorArgs | WorkoutSetGeneratorFindManyArgs
    ?'include' extends U
    ? WorkoutSetGenerator  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'WorkoutSet'
        ? WorkoutSetGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutSetGenerator ?WorkoutSetGenerator [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'WorkoutSet'
        ? WorkoutSetGetPayload<S['select'][P]> | null : never
  } 
    : WorkoutSetGenerator
  : WorkoutSetGenerator


  type WorkoutSetGeneratorCountArgs = Merge<
    Omit<WorkoutSetGeneratorFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutSetGeneratorCountAggregateInputType | true
    }
  >

  export interface WorkoutSetGeneratorDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutSetGenerator that matches the filter.
     * @param {WorkoutSetGeneratorFindUniqueArgs} args - Arguments to find a WorkoutSetGenerator
     * @example
     * // Get one WorkoutSetGenerator
     * const workoutSetGenerator = await prisma.workoutSetGenerator.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutSetGeneratorFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutSetGeneratorFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutSetGenerator'> extends True ? CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator>, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator | null >, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T> | null >>

    /**
     * Find the first WorkoutSetGenerator that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetGeneratorFindFirstArgs} args - Arguments to find a WorkoutSetGenerator
     * @example
     * // Get one WorkoutSetGenerator
     * const workoutSetGenerator = await prisma.workoutSetGenerator.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutSetGeneratorFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutSetGeneratorFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutSetGenerator'> extends True ? CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator>, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator | null >, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutSetGenerators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetGeneratorFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutSetGenerators
     * const workoutSetGenerators = await prisma.workoutSetGenerator.findMany()
     * 
     * // Get first 10 WorkoutSetGenerators
     * const workoutSetGenerators = await prisma.workoutSetGenerator.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutSetGeneratorWithIdOnly = await prisma.workoutSetGenerator.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutSetGeneratorFindManyArgs>(
      args?: SelectSubset<T, WorkoutSetGeneratorFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutSetGenerator>>, PrismaPromise<Array<WorkoutSetGeneratorGetPayload<T>>>>

    /**
     * Create a WorkoutSetGenerator.
     * @param {WorkoutSetGeneratorCreateArgs} args - Arguments to create a WorkoutSetGenerator.
     * @example
     * // Create one WorkoutSetGenerator
     * const WorkoutSetGenerator = await prisma.workoutSetGenerator.create({
     *   data: {
     *     // ... data to create a WorkoutSetGenerator
     *   }
     * })
     * 
    **/
    create<T extends WorkoutSetGeneratorCreateArgs>(
      args: SelectSubset<T, WorkoutSetGeneratorCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator>, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T>>>

    /**
     * Create many WorkoutSetGenerators.
     *     @param {WorkoutSetGeneratorCreateManyArgs} args - Arguments to create many WorkoutSetGenerators.
     *     @example
     *     // Create many WorkoutSetGenerators
     *     const workoutSetGenerator = await prisma.workoutSetGenerator.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutSetGeneratorCreateManyArgs>(
      args?: SelectSubset<T, WorkoutSetGeneratorCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutSetGenerator.
     * @param {WorkoutSetGeneratorDeleteArgs} args - Arguments to delete one WorkoutSetGenerator.
     * @example
     * // Delete one WorkoutSetGenerator
     * const WorkoutSetGenerator = await prisma.workoutSetGenerator.delete({
     *   where: {
     *     // ... filter to delete one WorkoutSetGenerator
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutSetGeneratorDeleteArgs>(
      args: SelectSubset<T, WorkoutSetGeneratorDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator>, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T>>>

    /**
     * Update one WorkoutSetGenerator.
     * @param {WorkoutSetGeneratorUpdateArgs} args - Arguments to update one WorkoutSetGenerator.
     * @example
     * // Update one WorkoutSetGenerator
     * const workoutSetGenerator = await prisma.workoutSetGenerator.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutSetGeneratorUpdateArgs>(
      args: SelectSubset<T, WorkoutSetGeneratorUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator>, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T>>>

    /**
     * Delete zero or more WorkoutSetGenerators.
     * @param {WorkoutSetGeneratorDeleteManyArgs} args - Arguments to filter WorkoutSetGenerators to delete.
     * @example
     * // Delete a few WorkoutSetGenerators
     * const { count } = await prisma.workoutSetGenerator.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutSetGeneratorDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutSetGeneratorDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutSetGenerators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetGeneratorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutSetGenerators
     * const workoutSetGenerator = await prisma.workoutSetGenerator.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutSetGeneratorUpdateManyArgs>(
      args: SelectSubset<T, WorkoutSetGeneratorUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutSetGenerator.
     * @param {WorkoutSetGeneratorUpsertArgs} args - Arguments to update or create a WorkoutSetGenerator.
     * @example
     * // Update or create a WorkoutSetGenerator
     * const workoutSetGenerator = await prisma.workoutSetGenerator.upsert({
     *   create: {
     *     // ... data to create a WorkoutSetGenerator
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutSetGenerator we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutSetGeneratorUpsertArgs>(
      args: SelectSubset<T, WorkoutSetGeneratorUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutSetGeneratorClient<WorkoutSetGenerator>, Prisma__WorkoutSetGeneratorClient<WorkoutSetGeneratorGetPayload<T>>>

    /**
     * Count the number of WorkoutSetGenerators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetGeneratorCountArgs} args - Arguments to filter WorkoutSetGenerators to count.
     * @example
     * // Count the number of WorkoutSetGenerators
     * const count = await prisma.workoutSetGenerator.count({
     *   where: {
     *     // ... the filter for the WorkoutSetGenerators we want to count
     *   }
     * })
    **/
    count<T extends WorkoutSetGeneratorCountArgs>(
      args?: Subset<T, WorkoutSetGeneratorCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutSetGeneratorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutSetGenerator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetGeneratorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutSetGeneratorAggregateArgs>(args: Subset<T, WorkoutSetGeneratorAggregateArgs>): PrismaPromise<GetWorkoutSetGeneratorAggregateType<T>>

    /**
     * Group by WorkoutSetGenerator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutSetGeneratorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutSetGeneratorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutSetGeneratorGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutSetGeneratorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutSetGeneratorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutSetGeneratorGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutSetGenerator.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutSetGeneratorClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    WorkoutSet<T extends WorkoutSetArgs = {}>(args?: Subset<T, WorkoutSetArgs>): CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet | null >, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutSetGenerator findUnique
   */
  export type WorkoutSetGeneratorFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
    /**
     * Throw an Error if a WorkoutSetGenerator can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSetGenerator to fetch.
     * 
    **/
    where: WorkoutSetGeneratorWhereUniqueInput
  }


  /**
   * WorkoutSetGenerator findFirst
   */
  export type WorkoutSetGeneratorFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
    /**
     * Throw an Error if a WorkoutSetGenerator can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutSetGenerator to fetch.
     * 
    **/
    where?: WorkoutSetGeneratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSetGenerators to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetGeneratorOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutSetGenerators.
     * 
    **/
    cursor?: WorkoutSetGeneratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSetGenerators from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSetGenerators.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutSetGenerators.
     * 
    **/
    distinct?: Enumerable<WorkoutSetGeneratorScalarFieldEnum>
  }


  /**
   * WorkoutSetGenerator findMany
   */
  export type WorkoutSetGeneratorFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
    /**
     * Filter, which WorkoutSetGenerators to fetch.
     * 
    **/
    where?: WorkoutSetGeneratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutSetGenerators to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutSetGeneratorOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutSetGenerators.
     * 
    **/
    cursor?: WorkoutSetGeneratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutSetGenerators from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutSetGenerators.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutSetGeneratorScalarFieldEnum>
  }


  /**
   * WorkoutSetGenerator create
   */
  export type WorkoutSetGeneratorCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
    /**
     * The data needed to create a WorkoutSetGenerator.
     * 
    **/
    data: XOR<WorkoutSetGeneratorCreateInput, WorkoutSetGeneratorUncheckedCreateInput>
  }


  /**
   * WorkoutSetGenerator createMany
   */
  export type WorkoutSetGeneratorCreateManyArgs = {
    data: Enumerable<WorkoutSetGeneratorCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutSetGenerator update
   */
  export type WorkoutSetGeneratorUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
    /**
     * The data needed to update a WorkoutSetGenerator.
     * 
    **/
    data: XOR<WorkoutSetGeneratorUpdateInput, WorkoutSetGeneratorUncheckedUpdateInput>
    /**
     * Choose, which WorkoutSetGenerator to update.
     * 
    **/
    where: WorkoutSetGeneratorWhereUniqueInput
  }


  /**
   * WorkoutSetGenerator updateMany
   */
  export type WorkoutSetGeneratorUpdateManyArgs = {
    data: XOR<WorkoutSetGeneratorUpdateManyMutationInput, WorkoutSetGeneratorUncheckedUpdateManyInput>
    where?: WorkoutSetGeneratorWhereInput
  }


  /**
   * WorkoutSetGenerator upsert
   */
  export type WorkoutSetGeneratorUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
    /**
     * The filter to search for the WorkoutSetGenerator to update in case it exists.
     * 
    **/
    where: WorkoutSetGeneratorWhereUniqueInput
    /**
     * In case the WorkoutSetGenerator found by the `where` argument doesn't exist, create a new WorkoutSetGenerator with this data.
     * 
    **/
    create: XOR<WorkoutSetGeneratorCreateInput, WorkoutSetGeneratorUncheckedCreateInput>
    /**
     * In case the WorkoutSetGenerator was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutSetGeneratorUpdateInput, WorkoutSetGeneratorUncheckedUpdateInput>
  }


  /**
   * WorkoutSetGenerator delete
   */
  export type WorkoutSetGeneratorDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
    /**
     * Filter which WorkoutSetGenerator to delete.
     * 
    **/
    where: WorkoutSetGeneratorWhereUniqueInput
  }


  /**
   * WorkoutSetGenerator deleteMany
   */
  export type WorkoutSetGeneratorDeleteManyArgs = {
    where?: WorkoutSetGeneratorWhereInput
  }


  /**
   * WorkoutSetGenerator without action
   */
  export type WorkoutSetGeneratorArgs = {
    /**
     * Select specific fields to fetch from the WorkoutSetGenerator
     * 
    **/
    select?: WorkoutSetGeneratorSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutSetGeneratorInclude | null
  }



  /**
   * Model WorkoutMove
   */


  export type AggregateWorkoutMove = {
    _count: WorkoutMoveCountAggregateOutputType | null
    count: WorkoutMoveCountAggregateOutputType | null
    _avg: WorkoutMoveAvgAggregateOutputType | null
    avg: WorkoutMoveAvgAggregateOutputType | null
    _sum: WorkoutMoveSumAggregateOutputType | null
    sum: WorkoutMoveSumAggregateOutputType | null
    _min: WorkoutMoveMinAggregateOutputType | null
    min: WorkoutMoveMinAggregateOutputType | null
    _max: WorkoutMoveMaxAggregateOutputType | null
    max: WorkoutMoveMaxAggregateOutputType | null
  }

  export type WorkoutMoveAvgAggregateOutputType = {
    sortPosition: number | null
    reps: number | null
    loadAmount: number | null
  }

  export type WorkoutMoveSumAggregateOutputType = {
    sortPosition: number | null
    reps: number | null
    loadAmount: number | null
  }

  export type WorkoutMoveMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    sortPosition: number | null
    repType: WorkoutMoveRepType | null
    reps: number | null
    distanceUnit: DistanceUnit | null
    timeUnit: TimeUnit | null
    loadAmount: number | null
    loadUnit: LoadUnit | null
    moveId: string | null
    equipmentId: string | null
    workoutSetId: string | null
  }

  export type WorkoutMoveMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    sortPosition: number | null
    repType: WorkoutMoveRepType | null
    reps: number | null
    distanceUnit: DistanceUnit | null
    timeUnit: TimeUnit | null
    loadAmount: number | null
    loadUnit: LoadUnit | null
    moveId: string | null
    equipmentId: string | null
    workoutSetId: string | null
  }

  export type WorkoutMoveCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    sortPosition: number
    repType: number
    reps: number
    distanceUnit: number
    timeUnit: number
    loadAmount: number
    loadUnit: number
    moveId: number
    equipmentId: number
    workoutSetId: number
    _all: number
  }


  export type WorkoutMoveAvgAggregateInputType = {
    sortPosition?: true
    reps?: true
    loadAmount?: true
  }

  export type WorkoutMoveSumAggregateInputType = {
    sortPosition?: true
    reps?: true
    loadAmount?: true
  }

  export type WorkoutMoveMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distanceUnit?: true
    timeUnit?: true
    loadAmount?: true
    loadUnit?: true
    moveId?: true
    equipmentId?: true
    workoutSetId?: true
  }

  export type WorkoutMoveMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distanceUnit?: true
    timeUnit?: true
    loadAmount?: true
    loadUnit?: true
    moveId?: true
    equipmentId?: true
    workoutSetId?: true
  }

  export type WorkoutMoveCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distanceUnit?: true
    timeUnit?: true
    loadAmount?: true
    loadUnit?: true
    moveId?: true
    equipmentId?: true
    workoutSetId?: true
    _all?: true
  }

  export type WorkoutMoveAggregateArgs = {
    /**
     * Filter which WorkoutMove to aggregate.
     * 
    **/
    where?: WorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutMoves to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutMoves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutMoves.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutMoves
    **/
    _count?: true | WorkoutMoveCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutMoveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutMoveAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutMoveAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutMoveSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutMoveSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutMoveMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutMoveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutMoveMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutMoveMaxAggregateInputType
  }

  export type GetWorkoutMoveAggregateType<T extends WorkoutMoveAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutMove]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutMove[P]>
      : GetScalarType<T[P], AggregateWorkoutMove[P]>
  }


    
    
  export type WorkoutMoveGroupByArgs = {
    where?: WorkoutMoveWhereInput
    orderBy?: Enumerable<WorkoutMoveOrderByInput>
    by: Array<WorkoutMoveScalarFieldEnum>
    having?: WorkoutMoveScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutMoveCountAggregateInputType | true
    _avg?: WorkoutMoveAvgAggregateInputType
    _sum?: WorkoutMoveSumAggregateInputType
    _min?: WorkoutMoveMinAggregateInputType
    _max?: WorkoutMoveMaxAggregateInputType
  }


  export type WorkoutMoveGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit: DistanceUnit
    timeUnit: TimeUnit
    loadAmount: number
    loadUnit: LoadUnit
    moveId: string
    equipmentId: string | null
    workoutSetId: string
    _count: WorkoutMoveCountAggregateOutputType | null
    _avg: WorkoutMoveAvgAggregateOutputType | null
    _sum: WorkoutMoveSumAggregateOutputType | null
    _min: WorkoutMoveMinAggregateOutputType | null
    _max: WorkoutMoveMaxAggregateOutputType | null
  }

  type GetWorkoutMoveGroupByPayload<T extends WorkoutMoveGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutMoveGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutMoveGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutMoveGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutMoveGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutMoveSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    sortPosition?: boolean
    repType?: boolean
    reps?: boolean
    distanceUnit?: boolean
    timeUnit?: boolean
    loadAmount?: boolean
    loadUnit?: boolean
    Move?: boolean | MoveArgs
    moveId?: boolean
    Equipment?: boolean | EquipmentArgs
    equipmentId?: boolean
    WorkoutSet?: boolean | WorkoutSetArgs
    workoutSetId?: boolean
    WorkoutSetIntervalBuyIn?: boolean | WorkoutSetIntervalBuyInFindManyArgs
  }

  export type WorkoutMoveInclude = {
    User?: boolean | UserArgs
    Move?: boolean | MoveArgs
    Equipment?: boolean | EquipmentArgs
    WorkoutSet?: boolean | WorkoutSetArgs
    WorkoutSetIntervalBuyIn?: boolean | WorkoutSetIntervalBuyInFindManyArgs
  }

  export type WorkoutMoveGetPayload<
    S extends boolean | null | undefined | WorkoutMoveArgs,
    U = keyof S
      > = S extends true
        ? WorkoutMove
    : S extends undefined
    ? never
    : S extends WorkoutMoveArgs | WorkoutMoveFindManyArgs
    ?'include' extends U
    ? WorkoutMove  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Move'
        ? MoveGetPayload<S['include'][P]> :
        P extends 'Equipment'
        ? EquipmentGetPayload<S['include'][P]> | null :
        P extends 'WorkoutSet'
        ? WorkoutSetGetPayload<S['include'][P]> :
        P extends 'WorkoutSetIntervalBuyIn'
        ? Array < WorkoutSetIntervalBuyInGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutMove ?WorkoutMove [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Move'
        ? MoveGetPayload<S['select'][P]> :
        P extends 'Equipment'
        ? EquipmentGetPayload<S['select'][P]> | null :
        P extends 'WorkoutSet'
        ? WorkoutSetGetPayload<S['select'][P]> :
        P extends 'WorkoutSetIntervalBuyIn'
        ? Array < WorkoutSetIntervalBuyInGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutMove
  : WorkoutMove


  type WorkoutMoveCountArgs = Merge<
    Omit<WorkoutMoveFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutMoveCountAggregateInputType | true
    }
  >

  export interface WorkoutMoveDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutMove that matches the filter.
     * @param {WorkoutMoveFindUniqueArgs} args - Arguments to find a WorkoutMove
     * @example
     * // Get one WorkoutMove
     * const workoutMove = await prisma.workoutMove.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutMoveFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutMoveFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutMove'> extends True ? CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove | null >, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T> | null >>

    /**
     * Find the first WorkoutMove that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveFindFirstArgs} args - Arguments to find a WorkoutMove
     * @example
     * // Get one WorkoutMove
     * const workoutMove = await prisma.workoutMove.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutMoveFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutMoveFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutMove'> extends True ? CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove | null >, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutMoves that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutMoves
     * const workoutMoves = await prisma.workoutMove.findMany()
     * 
     * // Get first 10 WorkoutMoves
     * const workoutMoves = await prisma.workoutMove.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutMoveWithIdOnly = await prisma.workoutMove.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutMoveFindManyArgs>(
      args?: SelectSubset<T, WorkoutMoveFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutMove>>, PrismaPromise<Array<WorkoutMoveGetPayload<T>>>>

    /**
     * Create a WorkoutMove.
     * @param {WorkoutMoveCreateArgs} args - Arguments to create a WorkoutMove.
     * @example
     * // Create one WorkoutMove
     * const WorkoutMove = await prisma.workoutMove.create({
     *   data: {
     *     // ... data to create a WorkoutMove
     *   }
     * })
     * 
    **/
    create<T extends WorkoutMoveCreateArgs>(
      args: SelectSubset<T, WorkoutMoveCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Create many WorkoutMoves.
     *     @param {WorkoutMoveCreateManyArgs} args - Arguments to create many WorkoutMoves.
     *     @example
     *     // Create many WorkoutMoves
     *     const workoutMove = await prisma.workoutMove.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutMoveCreateManyArgs>(
      args?: SelectSubset<T, WorkoutMoveCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutMove.
     * @param {WorkoutMoveDeleteArgs} args - Arguments to delete one WorkoutMove.
     * @example
     * // Delete one WorkoutMove
     * const WorkoutMove = await prisma.workoutMove.delete({
     *   where: {
     *     // ... filter to delete one WorkoutMove
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutMoveDeleteArgs>(
      args: SelectSubset<T, WorkoutMoveDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Update one WorkoutMove.
     * @param {WorkoutMoveUpdateArgs} args - Arguments to update one WorkoutMove.
     * @example
     * // Update one WorkoutMove
     * const workoutMove = await prisma.workoutMove.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutMoveUpdateArgs>(
      args: SelectSubset<T, WorkoutMoveUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Delete zero or more WorkoutMoves.
     * @param {WorkoutMoveDeleteManyArgs} args - Arguments to filter WorkoutMoves to delete.
     * @example
     * // Delete a few WorkoutMoves
     * const { count } = await prisma.workoutMove.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutMoveDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutMoveDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutMoves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutMoves
     * const workoutMove = await prisma.workoutMove.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutMoveUpdateManyArgs>(
      args: SelectSubset<T, WorkoutMoveUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutMove.
     * @param {WorkoutMoveUpsertArgs} args - Arguments to update or create a WorkoutMove.
     * @example
     * // Update or create a WorkoutMove
     * const workoutMove = await prisma.workoutMove.upsert({
     *   create: {
     *     // ... data to create a WorkoutMove
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutMove we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutMoveUpsertArgs>(
      args: SelectSubset<T, WorkoutMoveUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutMoveClient<WorkoutMove>, Prisma__WorkoutMoveClient<WorkoutMoveGetPayload<T>>>

    /**
     * Count the number of WorkoutMoves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveCountArgs} args - Arguments to filter WorkoutMoves to count.
     * @example
     * // Count the number of WorkoutMoves
     * const count = await prisma.workoutMove.count({
     *   where: {
     *     // ... the filter for the WorkoutMoves we want to count
     *   }
     * })
    **/
    count<T extends WorkoutMoveCountArgs>(
      args?: Subset<T, WorkoutMoveCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutMoveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutMove.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutMoveAggregateArgs>(args: Subset<T, WorkoutMoveAggregateArgs>): PrismaPromise<GetWorkoutMoveAggregateType<T>>

    /**
     * Group by WorkoutMove.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutMoveGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutMoveGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutMoveGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutMoveGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutMoveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutMoveGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutMove.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutMoveClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Move<T extends MoveArgs = {}>(args?: Subset<T, MoveArgs>): CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>;

    Equipment<T extends EquipmentArgs = {}>(args?: Subset<T, EquipmentArgs>): CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>;

    WorkoutSet<T extends WorkoutSetArgs = {}>(args?: Subset<T, WorkoutSetArgs>): CheckSelect<T, Prisma__WorkoutSetClient<WorkoutSet | null >, Prisma__WorkoutSetClient<WorkoutSetGetPayload<T> | null >>;

    WorkoutSetIntervalBuyIn<T extends WorkoutSetIntervalBuyInFindManyArgs = {}>(args?: Subset<T, WorkoutSetIntervalBuyInFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutSetIntervalBuyIn>>, PrismaPromise<Array<WorkoutSetIntervalBuyInGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutMove findUnique
   */
  export type WorkoutMoveFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Throw an Error if a WorkoutMove can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutMove to fetch.
     * 
    **/
    where: WorkoutMoveWhereUniqueInput
  }


  /**
   * WorkoutMove findFirst
   */
  export type WorkoutMoveFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Throw an Error if a WorkoutMove can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutMove to fetch.
     * 
    **/
    where?: WorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutMoves to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutMoves.
     * 
    **/
    cursor?: WorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutMoves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutMoves.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutMoves.
     * 
    **/
    distinct?: Enumerable<WorkoutMoveScalarFieldEnum>
  }


  /**
   * WorkoutMove findMany
   */
  export type WorkoutMoveFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Filter, which WorkoutMoves to fetch.
     * 
    **/
    where?: WorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutMoves to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutMoves.
     * 
    **/
    cursor?: WorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutMoves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutMoves.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutMoveScalarFieldEnum>
  }


  /**
   * WorkoutMove create
   */
  export type WorkoutMoveCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
    /**
     * The data needed to create a WorkoutMove.
     * 
    **/
    data: XOR<WorkoutMoveCreateInput, WorkoutMoveUncheckedCreateInput>
  }


  /**
   * WorkoutMove createMany
   */
  export type WorkoutMoveCreateManyArgs = {
    data: Enumerable<WorkoutMoveCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutMove update
   */
  export type WorkoutMoveUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
    /**
     * The data needed to update a WorkoutMove.
     * 
    **/
    data: XOR<WorkoutMoveUpdateInput, WorkoutMoveUncheckedUpdateInput>
    /**
     * Choose, which WorkoutMove to update.
     * 
    **/
    where: WorkoutMoveWhereUniqueInput
  }


  /**
   * WorkoutMove updateMany
   */
  export type WorkoutMoveUpdateManyArgs = {
    data: XOR<WorkoutMoveUpdateManyMutationInput, WorkoutMoveUncheckedUpdateManyInput>
    where?: WorkoutMoveWhereInput
  }


  /**
   * WorkoutMove upsert
   */
  export type WorkoutMoveUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
    /**
     * The filter to search for the WorkoutMove to update in case it exists.
     * 
    **/
    where: WorkoutMoveWhereUniqueInput
    /**
     * In case the WorkoutMove found by the `where` argument doesn't exist, create a new WorkoutMove with this data.
     * 
    **/
    create: XOR<WorkoutMoveCreateInput, WorkoutMoveUncheckedCreateInput>
    /**
     * In case the WorkoutMove was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutMoveUpdateInput, WorkoutMoveUncheckedUpdateInput>
  }


  /**
   * WorkoutMove delete
   */
  export type WorkoutMoveDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
    /**
     * Filter which WorkoutMove to delete.
     * 
    **/
    where: WorkoutMoveWhereUniqueInput
  }


  /**
   * WorkoutMove deleteMany
   */
  export type WorkoutMoveDeleteManyArgs = {
    where?: WorkoutMoveWhereInput
  }


  /**
   * WorkoutMove without action
   */
  export type WorkoutMoveArgs = {
    /**
     * Select specific fields to fetch from the WorkoutMove
     * 
    **/
    select?: WorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutMoveInclude | null
  }



  /**
   * Model WorkoutPlan
   */


  export type AggregateWorkoutPlan = {
    _count: WorkoutPlanCountAggregateOutputType | null
    count: WorkoutPlanCountAggregateOutputType | null
    _avg: WorkoutPlanAvgAggregateOutputType | null
    avg: WorkoutPlanAvgAggregateOutputType | null
    _sum: WorkoutPlanSumAggregateOutputType | null
    sum: WorkoutPlanSumAggregateOutputType | null
    _min: WorkoutPlanMinAggregateOutputType | null
    min: WorkoutPlanMinAggregateOutputType | null
    _max: WorkoutPlanMaxAggregateOutputType | null
    max: WorkoutPlanMaxAggregateOutputType | null
  }

  export type WorkoutPlanAvgAggregateOutputType = {
    lengthWeeks: number | null
    daysPerWeek: number | null
  }

  export type WorkoutPlanSumAggregateOutputType = {
    lengthWeeks: number | null
    daysPerWeek: number | null
  }

  export type WorkoutPlanMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    archived: boolean | null
    name: string | null
    description: string | null
    lengthWeeks: number | null
    daysPerWeek: number | null
    coverImageUri: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    contentAccessScope: ContentAccessScope | null
  }

  export type WorkoutPlanMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    archived: boolean | null
    name: string | null
    description: string | null
    lengthWeeks: number | null
    daysPerWeek: number | null
    coverImageUri: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    contentAccessScope: ContentAccessScope | null
  }

  export type WorkoutPlanCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    archived: number
    name: number
    description: number
    lengthWeeks: number
    daysPerWeek: number
    coverImageUri: number
    introVideoUri: number
    introVideoThumbUri: number
    introAudioUri: number
    contentAccessScope: number
    _all: number
  }


  export type WorkoutPlanAvgAggregateInputType = {
    lengthWeeks?: true
    daysPerWeek?: true
  }

  export type WorkoutPlanSumAggregateInputType = {
    lengthWeeks?: true
    daysPerWeek?: true
  }

  export type WorkoutPlanMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    archived?: true
    name?: true
    description?: true
    lengthWeeks?: true
    daysPerWeek?: true
    coverImageUri?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    contentAccessScope?: true
  }

  export type WorkoutPlanMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    archived?: true
    name?: true
    description?: true
    lengthWeeks?: true
    daysPerWeek?: true
    coverImageUri?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    contentAccessScope?: true
  }

  export type WorkoutPlanCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    archived?: true
    name?: true
    description?: true
    lengthWeeks?: true
    daysPerWeek?: true
    coverImageUri?: true
    introVideoUri?: true
    introVideoThumbUri?: true
    introAudioUri?: true
    contentAccessScope?: true
    _all?: true
  }

  export type WorkoutPlanAggregateArgs = {
    /**
     * Filter which WorkoutPlan to aggregate.
     * 
    **/
    where?: WorkoutPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlans to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlans from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlans.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutPlans
    **/
    _count?: true | WorkoutPlanCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutPlanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutPlanAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutPlanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutPlanSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutPlanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutPlanMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutPlanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutPlanMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutPlanMaxAggregateInputType
  }

  export type GetWorkoutPlanAggregateType<T extends WorkoutPlanAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutPlan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutPlan[P]>
      : GetScalarType<T[P], AggregateWorkoutPlan[P]>
  }


    
    
  export type WorkoutPlanGroupByArgs = {
    where?: WorkoutPlanWhereInput
    orderBy?: Enumerable<WorkoutPlanOrderByInput>
    by: Array<WorkoutPlanScalarFieldEnum>
    having?: WorkoutPlanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutPlanCountAggregateInputType | true
    _avg?: WorkoutPlanAvgAggregateInputType
    _sum?: WorkoutPlanSumAggregateInputType
    _min?: WorkoutPlanMinAggregateInputType
    _max?: WorkoutPlanMaxAggregateInputType
  }


  export type WorkoutPlanGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    archived: boolean
    name: string
    description: string | null
    lengthWeeks: number
    daysPerWeek: number
    coverImageUri: string | null
    introVideoUri: string | null
    introVideoThumbUri: string | null
    introAudioUri: string | null
    contentAccessScope: ContentAccessScope
    _count: WorkoutPlanCountAggregateOutputType | null
    _avg: WorkoutPlanAvgAggregateOutputType | null
    _sum: WorkoutPlanSumAggregateOutputType | null
    _min: WorkoutPlanMinAggregateOutputType | null
    _max: WorkoutPlanMaxAggregateOutputType | null
  }

  type GetWorkoutPlanGroupByPayload<T extends WorkoutPlanGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutPlanGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutPlanGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutPlanGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutPlanGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutPlanSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    archived?: boolean
    name?: boolean
    description?: boolean
    lengthWeeks?: boolean
    daysPerWeek?: boolean
    coverImageUri?: boolean
    introVideoUri?: boolean
    introVideoThumbUri?: boolean
    introAudioUri?: boolean
    contentAccessScope?: boolean
    Enrolments?: boolean | WorkoutPlanEnrolmentFindManyArgs
    WorkoutPlanReviews?: boolean | WorkoutPlanReviewFindManyArgs
    WorkoutTags?: boolean | WorkoutTagFindManyArgs
    WorkoutPlanDays?: boolean | WorkoutPlanDayFindManyArgs
    Collections?: boolean | CollectionFindManyArgs
    DiscoverWorkoutPlans?: boolean | DiscoverWorkoutPlanFindManyArgs
  }

  export type WorkoutPlanInclude = {
    User?: boolean | UserArgs
    Enrolments?: boolean | WorkoutPlanEnrolmentFindManyArgs
    WorkoutPlanReviews?: boolean | WorkoutPlanReviewFindManyArgs
    WorkoutTags?: boolean | WorkoutTagFindManyArgs
    WorkoutPlanDays?: boolean | WorkoutPlanDayFindManyArgs
    Collections?: boolean | CollectionFindManyArgs
    DiscoverWorkoutPlans?: boolean | DiscoverWorkoutPlanFindManyArgs
  }

  export type WorkoutPlanGetPayload<
    S extends boolean | null | undefined | WorkoutPlanArgs,
    U = keyof S
      > = S extends true
        ? WorkoutPlan
    : S extends undefined
    ? never
    : S extends WorkoutPlanArgs | WorkoutPlanFindManyArgs
    ?'include' extends U
    ? WorkoutPlan  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Enrolments'
        ? Array < WorkoutPlanEnrolmentGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlanReviews'
        ? Array < WorkoutPlanReviewGetPayload<S['include'][P]>>  :
        P extends 'WorkoutTags'
        ? Array < WorkoutTagGetPayload<S['include'][P]>>  :
        P extends 'WorkoutPlanDays'
        ? Array < WorkoutPlanDayGetPayload<S['include'][P]>>  :
        P extends 'Collections'
        ? Array < CollectionGetPayload<S['include'][P]>>  :
        P extends 'DiscoverWorkoutPlans'
        ? Array < DiscoverWorkoutPlanGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutPlan ?WorkoutPlan [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Enrolments'
        ? Array < WorkoutPlanEnrolmentGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlanReviews'
        ? Array < WorkoutPlanReviewGetPayload<S['select'][P]>>  :
        P extends 'WorkoutTags'
        ? Array < WorkoutTagGetPayload<S['select'][P]>>  :
        P extends 'WorkoutPlanDays'
        ? Array < WorkoutPlanDayGetPayload<S['select'][P]>>  :
        P extends 'Collections'
        ? Array < CollectionGetPayload<S['select'][P]>>  :
        P extends 'DiscoverWorkoutPlans'
        ? Array < DiscoverWorkoutPlanGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutPlan
  : WorkoutPlan


  type WorkoutPlanCountArgs = Merge<
    Omit<WorkoutPlanFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutPlanCountAggregateInputType | true
    }
  >

  export interface WorkoutPlanDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutPlan that matches the filter.
     * @param {WorkoutPlanFindUniqueArgs} args - Arguments to find a WorkoutPlan
     * @example
     * // Get one WorkoutPlan
     * const workoutPlan = await prisma.workoutPlan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutPlanFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutPlanFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutPlan'> extends True ? CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan>, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan | null >, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T> | null >>

    /**
     * Find the first WorkoutPlan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanFindFirstArgs} args - Arguments to find a WorkoutPlan
     * @example
     * // Get one WorkoutPlan
     * const workoutPlan = await prisma.workoutPlan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutPlanFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutPlanFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutPlan'> extends True ? CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan>, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan | null >, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutPlans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutPlans
     * const workoutPlans = await prisma.workoutPlan.findMany()
     * 
     * // Get first 10 WorkoutPlans
     * const workoutPlans = await prisma.workoutPlan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutPlanWithIdOnly = await prisma.workoutPlan.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutPlanFindManyArgs>(
      args?: SelectSubset<T, WorkoutPlanFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutPlan>>, PrismaPromise<Array<WorkoutPlanGetPayload<T>>>>

    /**
     * Create a WorkoutPlan.
     * @param {WorkoutPlanCreateArgs} args - Arguments to create a WorkoutPlan.
     * @example
     * // Create one WorkoutPlan
     * const WorkoutPlan = await prisma.workoutPlan.create({
     *   data: {
     *     // ... data to create a WorkoutPlan
     *   }
     * })
     * 
    **/
    create<T extends WorkoutPlanCreateArgs>(
      args: SelectSubset<T, WorkoutPlanCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan>, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T>>>

    /**
     * Create many WorkoutPlans.
     *     @param {WorkoutPlanCreateManyArgs} args - Arguments to create many WorkoutPlans.
     *     @example
     *     // Create many WorkoutPlans
     *     const workoutPlan = await prisma.workoutPlan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutPlanCreateManyArgs>(
      args?: SelectSubset<T, WorkoutPlanCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutPlan.
     * @param {WorkoutPlanDeleteArgs} args - Arguments to delete one WorkoutPlan.
     * @example
     * // Delete one WorkoutPlan
     * const WorkoutPlan = await prisma.workoutPlan.delete({
     *   where: {
     *     // ... filter to delete one WorkoutPlan
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutPlanDeleteArgs>(
      args: SelectSubset<T, WorkoutPlanDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan>, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T>>>

    /**
     * Update one WorkoutPlan.
     * @param {WorkoutPlanUpdateArgs} args - Arguments to update one WorkoutPlan.
     * @example
     * // Update one WorkoutPlan
     * const workoutPlan = await prisma.workoutPlan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutPlanUpdateArgs>(
      args: SelectSubset<T, WorkoutPlanUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan>, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T>>>

    /**
     * Delete zero or more WorkoutPlans.
     * @param {WorkoutPlanDeleteManyArgs} args - Arguments to filter WorkoutPlans to delete.
     * @example
     * // Delete a few WorkoutPlans
     * const { count } = await prisma.workoutPlan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutPlanDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutPlanDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutPlans
     * const workoutPlan = await prisma.workoutPlan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutPlanUpdateManyArgs>(
      args: SelectSubset<T, WorkoutPlanUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutPlan.
     * @param {WorkoutPlanUpsertArgs} args - Arguments to update or create a WorkoutPlan.
     * @example
     * // Update or create a WorkoutPlan
     * const workoutPlan = await prisma.workoutPlan.upsert({
     *   create: {
     *     // ... data to create a WorkoutPlan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutPlan we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutPlanUpsertArgs>(
      args: SelectSubset<T, WorkoutPlanUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan>, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T>>>

    /**
     * Count the number of WorkoutPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanCountArgs} args - Arguments to filter WorkoutPlans to count.
     * @example
     * // Count the number of WorkoutPlans
     * const count = await prisma.workoutPlan.count({
     *   where: {
     *     // ... the filter for the WorkoutPlans we want to count
     *   }
     * })
    **/
    count<T extends WorkoutPlanCountArgs>(
      args?: Subset<T, WorkoutPlanCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutPlanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutPlanAggregateArgs>(args: Subset<T, WorkoutPlanAggregateArgs>): PrismaPromise<GetWorkoutPlanAggregateType<T>>

    /**
     * Group by WorkoutPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutPlanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutPlanGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutPlanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutPlanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutPlanGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutPlan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutPlanClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Enrolments<T extends WorkoutPlanEnrolmentFindManyArgs = {}>(args?: Subset<T, WorkoutPlanEnrolmentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanEnrolment>>, PrismaPromise<Array<WorkoutPlanEnrolmentGetPayload<T>>>>;

    WorkoutPlanReviews<T extends WorkoutPlanReviewFindManyArgs = {}>(args?: Subset<T, WorkoutPlanReviewFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanReview>>, PrismaPromise<Array<WorkoutPlanReviewGetPayload<T>>>>;

    WorkoutTags<T extends WorkoutTagFindManyArgs = {}>(args?: Subset<T, WorkoutTagFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutTag>>, PrismaPromise<Array<WorkoutTagGetPayload<T>>>>;

    WorkoutPlanDays<T extends WorkoutPlanDayFindManyArgs = {}>(args?: Subset<T, WorkoutPlanDayFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanDay>>, PrismaPromise<Array<WorkoutPlanDayGetPayload<T>>>>;

    Collections<T extends CollectionFindManyArgs = {}>(args?: Subset<T, CollectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Collection>>, PrismaPromise<Array<CollectionGetPayload<T>>>>;

    DiscoverWorkoutPlans<T extends DiscoverWorkoutPlanFindManyArgs = {}>(args?: Subset<T, DiscoverWorkoutPlanFindManyArgs>): CheckSelect<T, PrismaPromise<Array<DiscoverWorkoutPlan>>, PrismaPromise<Array<DiscoverWorkoutPlanGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutPlan findUnique
   */
  export type WorkoutPlanFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
    /**
     * Throw an Error if a WorkoutPlan can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlan to fetch.
     * 
    **/
    where: WorkoutPlanWhereUniqueInput
  }


  /**
   * WorkoutPlan findFirst
   */
  export type WorkoutPlanFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
    /**
     * Throw an Error if a WorkoutPlan can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlan to fetch.
     * 
    **/
    where?: WorkoutPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlans to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutPlans.
     * 
    **/
    cursor?: WorkoutPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlans from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlans.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutPlans.
     * 
    **/
    distinct?: Enumerable<WorkoutPlanScalarFieldEnum>
  }


  /**
   * WorkoutPlan findMany
   */
  export type WorkoutPlanFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
    /**
     * Filter, which WorkoutPlans to fetch.
     * 
    **/
    where?: WorkoutPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlans to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutPlans.
     * 
    **/
    cursor?: WorkoutPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlans from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlans.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutPlanScalarFieldEnum>
  }


  /**
   * WorkoutPlan create
   */
  export type WorkoutPlanCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
    /**
     * The data needed to create a WorkoutPlan.
     * 
    **/
    data: XOR<WorkoutPlanCreateInput, WorkoutPlanUncheckedCreateInput>
  }


  /**
   * WorkoutPlan createMany
   */
  export type WorkoutPlanCreateManyArgs = {
    data: Enumerable<WorkoutPlanCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutPlan update
   */
  export type WorkoutPlanUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
    /**
     * The data needed to update a WorkoutPlan.
     * 
    **/
    data: XOR<WorkoutPlanUpdateInput, WorkoutPlanUncheckedUpdateInput>
    /**
     * Choose, which WorkoutPlan to update.
     * 
    **/
    where: WorkoutPlanWhereUniqueInput
  }


  /**
   * WorkoutPlan updateMany
   */
  export type WorkoutPlanUpdateManyArgs = {
    data: XOR<WorkoutPlanUpdateManyMutationInput, WorkoutPlanUncheckedUpdateManyInput>
    where?: WorkoutPlanWhereInput
  }


  /**
   * WorkoutPlan upsert
   */
  export type WorkoutPlanUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
    /**
     * The filter to search for the WorkoutPlan to update in case it exists.
     * 
    **/
    where: WorkoutPlanWhereUniqueInput
    /**
     * In case the WorkoutPlan found by the `where` argument doesn't exist, create a new WorkoutPlan with this data.
     * 
    **/
    create: XOR<WorkoutPlanCreateInput, WorkoutPlanUncheckedCreateInput>
    /**
     * In case the WorkoutPlan was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutPlanUpdateInput, WorkoutPlanUncheckedUpdateInput>
  }


  /**
   * WorkoutPlan delete
   */
  export type WorkoutPlanDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
    /**
     * Filter which WorkoutPlan to delete.
     * 
    **/
    where: WorkoutPlanWhereUniqueInput
  }


  /**
   * WorkoutPlan deleteMany
   */
  export type WorkoutPlanDeleteManyArgs = {
    where?: WorkoutPlanWhereInput
  }


  /**
   * WorkoutPlan without action
   */
  export type WorkoutPlanArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlan
     * 
    **/
    select?: WorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanInclude | null
  }



  /**
   * Model WorkoutPlanDay
   */


  export type AggregateWorkoutPlanDay = {
    _count: WorkoutPlanDayCountAggregateOutputType | null
    count: WorkoutPlanDayCountAggregateOutputType | null
    _avg: WorkoutPlanDayAvgAggregateOutputType | null
    avg: WorkoutPlanDayAvgAggregateOutputType | null
    _sum: WorkoutPlanDaySumAggregateOutputType | null
    sum: WorkoutPlanDaySumAggregateOutputType | null
    _min: WorkoutPlanDayMinAggregateOutputType | null
    min: WorkoutPlanDayMinAggregateOutputType | null
    _max: WorkoutPlanDayMaxAggregateOutputType | null
    max: WorkoutPlanDayMaxAggregateOutputType | null
  }

  export type WorkoutPlanDayAvgAggregateOutputType = {
    dayNumber: number | null
  }

  export type WorkoutPlanDaySumAggregateOutputType = {
    dayNumber: number | null
  }

  export type WorkoutPlanDayMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    dayNumber: number | null
    workoutPlanId: string | null
  }

  export type WorkoutPlanDayMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    dayNumber: number | null
    workoutPlanId: string | null
  }

  export type WorkoutPlanDayCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    note: number
    dayNumber: number
    workoutPlanId: number
    _all: number
  }


  export type WorkoutPlanDayAvgAggregateInputType = {
    dayNumber?: true
  }

  export type WorkoutPlanDaySumAggregateInputType = {
    dayNumber?: true
  }

  export type WorkoutPlanDayMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    dayNumber?: true
    workoutPlanId?: true
  }

  export type WorkoutPlanDayMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    dayNumber?: true
    workoutPlanId?: true
  }

  export type WorkoutPlanDayCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    dayNumber?: true
    workoutPlanId?: true
    _all?: true
  }

  export type WorkoutPlanDayAggregateArgs = {
    /**
     * Filter which WorkoutPlanDay to aggregate.
     * 
    **/
    where?: WorkoutPlanDayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanDays to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanDayOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutPlanDayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanDays from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanDays.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutPlanDays
    **/
    _count?: true | WorkoutPlanDayCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutPlanDayCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutPlanDayAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutPlanDayAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutPlanDaySumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutPlanDaySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutPlanDayMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutPlanDayMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutPlanDayMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutPlanDayMaxAggregateInputType
  }

  export type GetWorkoutPlanDayAggregateType<T extends WorkoutPlanDayAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutPlanDay]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutPlanDay[P]>
      : GetScalarType<T[P], AggregateWorkoutPlanDay[P]>
  }


    
    
  export type WorkoutPlanDayGroupByArgs = {
    where?: WorkoutPlanDayWhereInput
    orderBy?: Enumerable<WorkoutPlanDayOrderByInput>
    by: Array<WorkoutPlanDayScalarFieldEnum>
    having?: WorkoutPlanDayScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutPlanDayCountAggregateInputType | true
    _avg?: WorkoutPlanDayAvgAggregateInputType
    _sum?: WorkoutPlanDaySumAggregateInputType
    _min?: WorkoutPlanDayMinAggregateInputType
    _max?: WorkoutPlanDayMaxAggregateInputType
  }


  export type WorkoutPlanDayGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    note: string | null
    dayNumber: number
    workoutPlanId: string
    _count: WorkoutPlanDayCountAggregateOutputType | null
    _avg: WorkoutPlanDayAvgAggregateOutputType | null
    _sum: WorkoutPlanDaySumAggregateOutputType | null
    _min: WorkoutPlanDayMinAggregateOutputType | null
    _max: WorkoutPlanDayMaxAggregateOutputType | null
  }

  type GetWorkoutPlanDayGroupByPayload<T extends WorkoutPlanDayGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutPlanDayGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutPlanDayGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutPlanDayGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutPlanDayGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutPlanDaySelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    note?: boolean
    dayNumber?: boolean
    WorkoutPlan?: boolean | WorkoutPlanArgs
    workoutPlanId?: boolean
    WorkoutPlanDayWorkouts?: boolean | WorkoutPlanDayWorkoutFindManyArgs
  }

  export type WorkoutPlanDayInclude = {
    User?: boolean | UserArgs
    WorkoutPlan?: boolean | WorkoutPlanArgs
    WorkoutPlanDayWorkouts?: boolean | WorkoutPlanDayWorkoutFindManyArgs
  }

  export type WorkoutPlanDayGetPayload<
    S extends boolean | null | undefined | WorkoutPlanDayArgs,
    U = keyof S
      > = S extends true
        ? WorkoutPlanDay
    : S extends undefined
    ? never
    : S extends WorkoutPlanDayArgs | WorkoutPlanDayFindManyArgs
    ?'include' extends U
    ? WorkoutPlanDay  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['include'][P]> :
        P extends 'WorkoutPlanDayWorkouts'
        ? Array < WorkoutPlanDayWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutPlanDay ?WorkoutPlanDay [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['select'][P]> :
        P extends 'WorkoutPlanDayWorkouts'
        ? Array < WorkoutPlanDayWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutPlanDay
  : WorkoutPlanDay


  type WorkoutPlanDayCountArgs = Merge<
    Omit<WorkoutPlanDayFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutPlanDayCountAggregateInputType | true
    }
  >

  export interface WorkoutPlanDayDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutPlanDay that matches the filter.
     * @param {WorkoutPlanDayFindUniqueArgs} args - Arguments to find a WorkoutPlanDay
     * @example
     * // Get one WorkoutPlanDay
     * const workoutPlanDay = await prisma.workoutPlanDay.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutPlanDayFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutPlanDayFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutPlanDay'> extends True ? CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay>, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay | null >, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T> | null >>

    /**
     * Find the first WorkoutPlanDay that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayFindFirstArgs} args - Arguments to find a WorkoutPlanDay
     * @example
     * // Get one WorkoutPlanDay
     * const workoutPlanDay = await prisma.workoutPlanDay.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutPlanDayFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutPlanDayFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutPlanDay'> extends True ? CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay>, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay | null >, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutPlanDays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutPlanDays
     * const workoutPlanDays = await prisma.workoutPlanDay.findMany()
     * 
     * // Get first 10 WorkoutPlanDays
     * const workoutPlanDays = await prisma.workoutPlanDay.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutPlanDayWithIdOnly = await prisma.workoutPlanDay.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutPlanDayFindManyArgs>(
      args?: SelectSubset<T, WorkoutPlanDayFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutPlanDay>>, PrismaPromise<Array<WorkoutPlanDayGetPayload<T>>>>

    /**
     * Create a WorkoutPlanDay.
     * @param {WorkoutPlanDayCreateArgs} args - Arguments to create a WorkoutPlanDay.
     * @example
     * // Create one WorkoutPlanDay
     * const WorkoutPlanDay = await prisma.workoutPlanDay.create({
     *   data: {
     *     // ... data to create a WorkoutPlanDay
     *   }
     * })
     * 
    **/
    create<T extends WorkoutPlanDayCreateArgs>(
      args: SelectSubset<T, WorkoutPlanDayCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay>, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T>>>

    /**
     * Create many WorkoutPlanDays.
     *     @param {WorkoutPlanDayCreateManyArgs} args - Arguments to create many WorkoutPlanDays.
     *     @example
     *     // Create many WorkoutPlanDays
     *     const workoutPlanDay = await prisma.workoutPlanDay.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutPlanDayCreateManyArgs>(
      args?: SelectSubset<T, WorkoutPlanDayCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutPlanDay.
     * @param {WorkoutPlanDayDeleteArgs} args - Arguments to delete one WorkoutPlanDay.
     * @example
     * // Delete one WorkoutPlanDay
     * const WorkoutPlanDay = await prisma.workoutPlanDay.delete({
     *   where: {
     *     // ... filter to delete one WorkoutPlanDay
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutPlanDayDeleteArgs>(
      args: SelectSubset<T, WorkoutPlanDayDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay>, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T>>>

    /**
     * Update one WorkoutPlanDay.
     * @param {WorkoutPlanDayUpdateArgs} args - Arguments to update one WorkoutPlanDay.
     * @example
     * // Update one WorkoutPlanDay
     * const workoutPlanDay = await prisma.workoutPlanDay.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutPlanDayUpdateArgs>(
      args: SelectSubset<T, WorkoutPlanDayUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay>, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T>>>

    /**
     * Delete zero or more WorkoutPlanDays.
     * @param {WorkoutPlanDayDeleteManyArgs} args - Arguments to filter WorkoutPlanDays to delete.
     * @example
     * // Delete a few WorkoutPlanDays
     * const { count } = await prisma.workoutPlanDay.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutPlanDayDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutPlanDayDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutPlanDays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutPlanDays
     * const workoutPlanDay = await prisma.workoutPlanDay.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutPlanDayUpdateManyArgs>(
      args: SelectSubset<T, WorkoutPlanDayUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutPlanDay.
     * @param {WorkoutPlanDayUpsertArgs} args - Arguments to update or create a WorkoutPlanDay.
     * @example
     * // Update or create a WorkoutPlanDay
     * const workoutPlanDay = await prisma.workoutPlanDay.upsert({
     *   create: {
     *     // ... data to create a WorkoutPlanDay
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutPlanDay we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutPlanDayUpsertArgs>(
      args: SelectSubset<T, WorkoutPlanDayUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay>, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T>>>

    /**
     * Count the number of WorkoutPlanDays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayCountArgs} args - Arguments to filter WorkoutPlanDays to count.
     * @example
     * // Count the number of WorkoutPlanDays
     * const count = await prisma.workoutPlanDay.count({
     *   where: {
     *     // ... the filter for the WorkoutPlanDays we want to count
     *   }
     * })
    **/
    count<T extends WorkoutPlanDayCountArgs>(
      args?: Subset<T, WorkoutPlanDayCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutPlanDayCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutPlanDay.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutPlanDayAggregateArgs>(args: Subset<T, WorkoutPlanDayAggregateArgs>): PrismaPromise<GetWorkoutPlanDayAggregateType<T>>

    /**
     * Group by WorkoutPlanDay.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutPlanDayGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutPlanDayGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutPlanDayGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutPlanDayGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutPlanDayGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutPlanDay.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutPlanDayClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    WorkoutPlan<T extends WorkoutPlanArgs = {}>(args?: Subset<T, WorkoutPlanArgs>): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan | null >, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T> | null >>;

    WorkoutPlanDayWorkouts<T extends WorkoutPlanDayWorkoutFindManyArgs = {}>(args?: Subset<T, WorkoutPlanDayWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<WorkoutPlanDayWorkout>>, PrismaPromise<Array<WorkoutPlanDayWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutPlanDay findUnique
   */
  export type WorkoutPlanDayFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
    /**
     * Throw an Error if a WorkoutPlanDay can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanDay to fetch.
     * 
    **/
    where: WorkoutPlanDayWhereUniqueInput
  }


  /**
   * WorkoutPlanDay findFirst
   */
  export type WorkoutPlanDayFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
    /**
     * Throw an Error if a WorkoutPlanDay can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanDay to fetch.
     * 
    **/
    where?: WorkoutPlanDayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanDays to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanDayOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutPlanDays.
     * 
    **/
    cursor?: WorkoutPlanDayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanDays from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanDays.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutPlanDays.
     * 
    **/
    distinct?: Enumerable<WorkoutPlanDayScalarFieldEnum>
  }


  /**
   * WorkoutPlanDay findMany
   */
  export type WorkoutPlanDayFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
    /**
     * Filter, which WorkoutPlanDays to fetch.
     * 
    **/
    where?: WorkoutPlanDayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanDays to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanDayOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutPlanDays.
     * 
    **/
    cursor?: WorkoutPlanDayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanDays from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanDays.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutPlanDayScalarFieldEnum>
  }


  /**
   * WorkoutPlanDay create
   */
  export type WorkoutPlanDayCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
    /**
     * The data needed to create a WorkoutPlanDay.
     * 
    **/
    data: XOR<WorkoutPlanDayCreateInput, WorkoutPlanDayUncheckedCreateInput>
  }


  /**
   * WorkoutPlanDay createMany
   */
  export type WorkoutPlanDayCreateManyArgs = {
    data: Enumerable<WorkoutPlanDayCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutPlanDay update
   */
  export type WorkoutPlanDayUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
    /**
     * The data needed to update a WorkoutPlanDay.
     * 
    **/
    data: XOR<WorkoutPlanDayUpdateInput, WorkoutPlanDayUncheckedUpdateInput>
    /**
     * Choose, which WorkoutPlanDay to update.
     * 
    **/
    where: WorkoutPlanDayWhereUniqueInput
  }


  /**
   * WorkoutPlanDay updateMany
   */
  export type WorkoutPlanDayUpdateManyArgs = {
    data: XOR<WorkoutPlanDayUpdateManyMutationInput, WorkoutPlanDayUncheckedUpdateManyInput>
    where?: WorkoutPlanDayWhereInput
  }


  /**
   * WorkoutPlanDay upsert
   */
  export type WorkoutPlanDayUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
    /**
     * The filter to search for the WorkoutPlanDay to update in case it exists.
     * 
    **/
    where: WorkoutPlanDayWhereUniqueInput
    /**
     * In case the WorkoutPlanDay found by the `where` argument doesn't exist, create a new WorkoutPlanDay with this data.
     * 
    **/
    create: XOR<WorkoutPlanDayCreateInput, WorkoutPlanDayUncheckedCreateInput>
    /**
     * In case the WorkoutPlanDay was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutPlanDayUpdateInput, WorkoutPlanDayUncheckedUpdateInput>
  }


  /**
   * WorkoutPlanDay delete
   */
  export type WorkoutPlanDayDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
    /**
     * Filter which WorkoutPlanDay to delete.
     * 
    **/
    where: WorkoutPlanDayWhereUniqueInput
  }


  /**
   * WorkoutPlanDay deleteMany
   */
  export type WorkoutPlanDayDeleteManyArgs = {
    where?: WorkoutPlanDayWhereInput
  }


  /**
   * WorkoutPlanDay without action
   */
  export type WorkoutPlanDayArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDay
     * 
    **/
    select?: WorkoutPlanDaySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayInclude | null
  }



  /**
   * Model WorkoutPlanDayWorkout
   */


  export type AggregateWorkoutPlanDayWorkout = {
    _count: WorkoutPlanDayWorkoutCountAggregateOutputType | null
    count: WorkoutPlanDayWorkoutCountAggregateOutputType | null
    _avg: WorkoutPlanDayWorkoutAvgAggregateOutputType | null
    avg: WorkoutPlanDayWorkoutAvgAggregateOutputType | null
    _sum: WorkoutPlanDayWorkoutSumAggregateOutputType | null
    sum: WorkoutPlanDayWorkoutSumAggregateOutputType | null
    _min: WorkoutPlanDayWorkoutMinAggregateOutputType | null
    min: WorkoutPlanDayWorkoutMinAggregateOutputType | null
    _max: WorkoutPlanDayWorkoutMaxAggregateOutputType | null
    max: WorkoutPlanDayWorkoutMaxAggregateOutputType | null
  }

  export type WorkoutPlanDayWorkoutAvgAggregateOutputType = {
    sortPosition: number | null
  }

  export type WorkoutPlanDayWorkoutSumAggregateOutputType = {
    sortPosition: number | null
  }

  export type WorkoutPlanDayWorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    sortPosition: number | null
    workoutId: string | null
    workoutPlanDayId: string | null
  }

  export type WorkoutPlanDayWorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    sortPosition: number | null
    workoutId: string | null
    workoutPlanDayId: string | null
  }

  export type WorkoutPlanDayWorkoutCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    note: number
    sortPosition: number
    workoutId: number
    workoutPlanDayId: number
    _all: number
  }


  export type WorkoutPlanDayWorkoutAvgAggregateInputType = {
    sortPosition?: true
  }

  export type WorkoutPlanDayWorkoutSumAggregateInputType = {
    sortPosition?: true
  }

  export type WorkoutPlanDayWorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    sortPosition?: true
    workoutId?: true
    workoutPlanDayId?: true
  }

  export type WorkoutPlanDayWorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    sortPosition?: true
    workoutId?: true
    workoutPlanDayId?: true
  }

  export type WorkoutPlanDayWorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    sortPosition?: true
    workoutId?: true
    workoutPlanDayId?: true
    _all?: true
  }

  export type WorkoutPlanDayWorkoutAggregateArgs = {
    /**
     * Filter which WorkoutPlanDayWorkout to aggregate.
     * 
    **/
    where?: WorkoutPlanDayWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanDayWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanDayWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutPlanDayWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanDayWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanDayWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutPlanDayWorkouts
    **/
    _count?: true | WorkoutPlanDayWorkoutCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutPlanDayWorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutPlanDayWorkoutAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutPlanDayWorkoutAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutPlanDayWorkoutSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutPlanDayWorkoutSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutPlanDayWorkoutMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutPlanDayWorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutPlanDayWorkoutMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutPlanDayWorkoutMaxAggregateInputType
  }

  export type GetWorkoutPlanDayWorkoutAggregateType<T extends WorkoutPlanDayWorkoutAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutPlanDayWorkout]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutPlanDayWorkout[P]>
      : GetScalarType<T[P], AggregateWorkoutPlanDayWorkout[P]>
  }


    
    
  export type WorkoutPlanDayWorkoutGroupByArgs = {
    where?: WorkoutPlanDayWorkoutWhereInput
    orderBy?: Enumerable<WorkoutPlanDayWorkoutOrderByInput>
    by: Array<WorkoutPlanDayWorkoutScalarFieldEnum>
    having?: WorkoutPlanDayWorkoutScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutPlanDayWorkoutCountAggregateInputType | true
    _avg?: WorkoutPlanDayWorkoutAvgAggregateInputType
    _sum?: WorkoutPlanDayWorkoutSumAggregateInputType
    _min?: WorkoutPlanDayWorkoutMinAggregateInputType
    _max?: WorkoutPlanDayWorkoutMaxAggregateInputType
  }


  export type WorkoutPlanDayWorkoutGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    note: string | null
    sortPosition: number
    workoutId: string
    workoutPlanDayId: string
    _count: WorkoutPlanDayWorkoutCountAggregateOutputType | null
    _avg: WorkoutPlanDayWorkoutAvgAggregateOutputType | null
    _sum: WorkoutPlanDayWorkoutSumAggregateOutputType | null
    _min: WorkoutPlanDayWorkoutMinAggregateOutputType | null
    _max: WorkoutPlanDayWorkoutMaxAggregateOutputType | null
  }

  type GetWorkoutPlanDayWorkoutGroupByPayload<T extends WorkoutPlanDayWorkoutGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutPlanDayWorkoutGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutPlanDayWorkoutGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutPlanDayWorkoutGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutPlanDayWorkoutGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutPlanDayWorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    note?: boolean
    sortPosition?: boolean
    Workout?: boolean | WorkoutArgs
    workoutId?: boolean
    WorkoutPlanDay?: boolean | WorkoutPlanDayArgs
    workoutPlanDayId?: boolean
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
  }

  export type WorkoutPlanDayWorkoutInclude = {
    User?: boolean | UserArgs
    Workout?: boolean | WorkoutArgs
    WorkoutPlanDay?: boolean | WorkoutPlanDayArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
  }

  export type WorkoutPlanDayWorkoutGetPayload<
    S extends boolean | null | undefined | WorkoutPlanDayWorkoutArgs,
    U = keyof S
      > = S extends true
        ? WorkoutPlanDayWorkout
    : S extends undefined
    ? never
    : S extends WorkoutPlanDayWorkoutArgs | WorkoutPlanDayWorkoutFindManyArgs
    ?'include' extends U
    ? WorkoutPlanDayWorkout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Workout'
        ? WorkoutGetPayload<S['include'][P]> :
        P extends 'WorkoutPlanDay'
        ? WorkoutPlanDayGetPayload<S['include'][P]> :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutPlanDayWorkout ?WorkoutPlanDayWorkout [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Workout'
        ? WorkoutGetPayload<S['select'][P]> :
        P extends 'WorkoutPlanDay'
        ? WorkoutPlanDayGetPayload<S['select'][P]> :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutPlanDayWorkout
  : WorkoutPlanDayWorkout


  type WorkoutPlanDayWorkoutCountArgs = Merge<
    Omit<WorkoutPlanDayWorkoutFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutPlanDayWorkoutCountAggregateInputType | true
    }
  >

  export interface WorkoutPlanDayWorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutPlanDayWorkout that matches the filter.
     * @param {WorkoutPlanDayWorkoutFindUniqueArgs} args - Arguments to find a WorkoutPlanDayWorkout
     * @example
     * // Get one WorkoutPlanDayWorkout
     * const workoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutPlanDayWorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutPlanDayWorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutPlanDayWorkout'> extends True ? CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout>, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout | null >, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T> | null >>

    /**
     * Find the first WorkoutPlanDayWorkout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayWorkoutFindFirstArgs} args - Arguments to find a WorkoutPlanDayWorkout
     * @example
     * // Get one WorkoutPlanDayWorkout
     * const workoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutPlanDayWorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutPlanDayWorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutPlanDayWorkout'> extends True ? CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout>, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout | null >, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutPlanDayWorkouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayWorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutPlanDayWorkouts
     * const workoutPlanDayWorkouts = await prisma.workoutPlanDayWorkout.findMany()
     * 
     * // Get first 10 WorkoutPlanDayWorkouts
     * const workoutPlanDayWorkouts = await prisma.workoutPlanDayWorkout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutPlanDayWorkoutWithIdOnly = await prisma.workoutPlanDayWorkout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutPlanDayWorkoutFindManyArgs>(
      args?: SelectSubset<T, WorkoutPlanDayWorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutPlanDayWorkout>>, PrismaPromise<Array<WorkoutPlanDayWorkoutGetPayload<T>>>>

    /**
     * Create a WorkoutPlanDayWorkout.
     * @param {WorkoutPlanDayWorkoutCreateArgs} args - Arguments to create a WorkoutPlanDayWorkout.
     * @example
     * // Create one WorkoutPlanDayWorkout
     * const WorkoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.create({
     *   data: {
     *     // ... data to create a WorkoutPlanDayWorkout
     *   }
     * })
     * 
    **/
    create<T extends WorkoutPlanDayWorkoutCreateArgs>(
      args: SelectSubset<T, WorkoutPlanDayWorkoutCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout>, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T>>>

    /**
     * Create many WorkoutPlanDayWorkouts.
     *     @param {WorkoutPlanDayWorkoutCreateManyArgs} args - Arguments to create many WorkoutPlanDayWorkouts.
     *     @example
     *     // Create many WorkoutPlanDayWorkouts
     *     const workoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutPlanDayWorkoutCreateManyArgs>(
      args?: SelectSubset<T, WorkoutPlanDayWorkoutCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutPlanDayWorkout.
     * @param {WorkoutPlanDayWorkoutDeleteArgs} args - Arguments to delete one WorkoutPlanDayWorkout.
     * @example
     * // Delete one WorkoutPlanDayWorkout
     * const WorkoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.delete({
     *   where: {
     *     // ... filter to delete one WorkoutPlanDayWorkout
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutPlanDayWorkoutDeleteArgs>(
      args: SelectSubset<T, WorkoutPlanDayWorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout>, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T>>>

    /**
     * Update one WorkoutPlanDayWorkout.
     * @param {WorkoutPlanDayWorkoutUpdateArgs} args - Arguments to update one WorkoutPlanDayWorkout.
     * @example
     * // Update one WorkoutPlanDayWorkout
     * const workoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutPlanDayWorkoutUpdateArgs>(
      args: SelectSubset<T, WorkoutPlanDayWorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout>, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T>>>

    /**
     * Delete zero or more WorkoutPlanDayWorkouts.
     * @param {WorkoutPlanDayWorkoutDeleteManyArgs} args - Arguments to filter WorkoutPlanDayWorkouts to delete.
     * @example
     * // Delete a few WorkoutPlanDayWorkouts
     * const { count } = await prisma.workoutPlanDayWorkout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutPlanDayWorkoutDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutPlanDayWorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutPlanDayWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayWorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutPlanDayWorkouts
     * const workoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutPlanDayWorkoutUpdateManyArgs>(
      args: SelectSubset<T, WorkoutPlanDayWorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutPlanDayWorkout.
     * @param {WorkoutPlanDayWorkoutUpsertArgs} args - Arguments to update or create a WorkoutPlanDayWorkout.
     * @example
     * // Update or create a WorkoutPlanDayWorkout
     * const workoutPlanDayWorkout = await prisma.workoutPlanDayWorkout.upsert({
     *   create: {
     *     // ... data to create a WorkoutPlanDayWorkout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutPlanDayWorkout we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutPlanDayWorkoutUpsertArgs>(
      args: SelectSubset<T, WorkoutPlanDayWorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkout>, Prisma__WorkoutPlanDayWorkoutClient<WorkoutPlanDayWorkoutGetPayload<T>>>

    /**
     * Count the number of WorkoutPlanDayWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayWorkoutCountArgs} args - Arguments to filter WorkoutPlanDayWorkouts to count.
     * @example
     * // Count the number of WorkoutPlanDayWorkouts
     * const count = await prisma.workoutPlanDayWorkout.count({
     *   where: {
     *     // ... the filter for the WorkoutPlanDayWorkouts we want to count
     *   }
     * })
    **/
    count<T extends WorkoutPlanDayWorkoutCountArgs>(
      args?: Subset<T, WorkoutPlanDayWorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutPlanDayWorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutPlanDayWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayWorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutPlanDayWorkoutAggregateArgs>(args: Subset<T, WorkoutPlanDayWorkoutAggregateArgs>): PrismaPromise<GetWorkoutPlanDayWorkoutAggregateType<T>>

    /**
     * Group by WorkoutPlanDayWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanDayWorkoutGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutPlanDayWorkoutGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutPlanDayWorkoutGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutPlanDayWorkoutGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutPlanDayWorkoutGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutPlanDayWorkoutGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutPlanDayWorkout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutPlanDayWorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    WorkoutPlanDay<T extends WorkoutPlanDayArgs = {}>(args?: Subset<T, WorkoutPlanDayArgs>): CheckSelect<T, Prisma__WorkoutPlanDayClient<WorkoutPlanDay | null >, Prisma__WorkoutPlanDayClient<WorkoutPlanDayGetPayload<T> | null >>;

    ScheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutPlanDayWorkout findUnique
   */
  export type WorkoutPlanDayWorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
    /**
     * Throw an Error if a WorkoutPlanDayWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanDayWorkout to fetch.
     * 
    **/
    where: WorkoutPlanDayWorkoutWhereUniqueInput
  }


  /**
   * WorkoutPlanDayWorkout findFirst
   */
  export type WorkoutPlanDayWorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
    /**
     * Throw an Error if a WorkoutPlanDayWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanDayWorkout to fetch.
     * 
    **/
    where?: WorkoutPlanDayWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanDayWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanDayWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutPlanDayWorkouts.
     * 
    **/
    cursor?: WorkoutPlanDayWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanDayWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanDayWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutPlanDayWorkouts.
     * 
    **/
    distinct?: Enumerable<WorkoutPlanDayWorkoutScalarFieldEnum>
  }


  /**
   * WorkoutPlanDayWorkout findMany
   */
  export type WorkoutPlanDayWorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
    /**
     * Filter, which WorkoutPlanDayWorkouts to fetch.
     * 
    **/
    where?: WorkoutPlanDayWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanDayWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanDayWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutPlanDayWorkouts.
     * 
    **/
    cursor?: WorkoutPlanDayWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanDayWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanDayWorkouts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutPlanDayWorkoutScalarFieldEnum>
  }


  /**
   * WorkoutPlanDayWorkout create
   */
  export type WorkoutPlanDayWorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
    /**
     * The data needed to create a WorkoutPlanDayWorkout.
     * 
    **/
    data: XOR<WorkoutPlanDayWorkoutCreateInput, WorkoutPlanDayWorkoutUncheckedCreateInput>
  }


  /**
   * WorkoutPlanDayWorkout createMany
   */
  export type WorkoutPlanDayWorkoutCreateManyArgs = {
    data: Enumerable<WorkoutPlanDayWorkoutCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutPlanDayWorkout update
   */
  export type WorkoutPlanDayWorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
    /**
     * The data needed to update a WorkoutPlanDayWorkout.
     * 
    **/
    data: XOR<WorkoutPlanDayWorkoutUpdateInput, WorkoutPlanDayWorkoutUncheckedUpdateInput>
    /**
     * Choose, which WorkoutPlanDayWorkout to update.
     * 
    **/
    where: WorkoutPlanDayWorkoutWhereUniqueInput
  }


  /**
   * WorkoutPlanDayWorkout updateMany
   */
  export type WorkoutPlanDayWorkoutUpdateManyArgs = {
    data: XOR<WorkoutPlanDayWorkoutUpdateManyMutationInput, WorkoutPlanDayWorkoutUncheckedUpdateManyInput>
    where?: WorkoutPlanDayWorkoutWhereInput
  }


  /**
   * WorkoutPlanDayWorkout upsert
   */
  export type WorkoutPlanDayWorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
    /**
     * The filter to search for the WorkoutPlanDayWorkout to update in case it exists.
     * 
    **/
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    /**
     * In case the WorkoutPlanDayWorkout found by the `where` argument doesn't exist, create a new WorkoutPlanDayWorkout with this data.
     * 
    **/
    create: XOR<WorkoutPlanDayWorkoutCreateInput, WorkoutPlanDayWorkoutUncheckedCreateInput>
    /**
     * In case the WorkoutPlanDayWorkout was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutPlanDayWorkoutUpdateInput, WorkoutPlanDayWorkoutUncheckedUpdateInput>
  }


  /**
   * WorkoutPlanDayWorkout delete
   */
  export type WorkoutPlanDayWorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
    /**
     * Filter which WorkoutPlanDayWorkout to delete.
     * 
    **/
    where: WorkoutPlanDayWorkoutWhereUniqueInput
  }


  /**
   * WorkoutPlanDayWorkout deleteMany
   */
  export type WorkoutPlanDayWorkoutDeleteManyArgs = {
    where?: WorkoutPlanDayWorkoutWhereInput
  }


  /**
   * WorkoutPlanDayWorkout without action
   */
  export type WorkoutPlanDayWorkoutArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanDayWorkout
     * 
    **/
    select?: WorkoutPlanDayWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanDayWorkoutInclude | null
  }



  /**
   * Model WorkoutPlanEnrolment
   */


  export type AggregateWorkoutPlanEnrolment = {
    _count: WorkoutPlanEnrolmentCountAggregateOutputType | null
    count: WorkoutPlanEnrolmentCountAggregateOutputType | null
    _min: WorkoutPlanEnrolmentMinAggregateOutputType | null
    min: WorkoutPlanEnrolmentMinAggregateOutputType | null
    _max: WorkoutPlanEnrolmentMaxAggregateOutputType | null
    max: WorkoutPlanEnrolmentMaxAggregateOutputType | null
  }

  export type WorkoutPlanEnrolmentMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    startDate: Date | null
    workoutPlanId: string | null
    userId: string | null
  }

  export type WorkoutPlanEnrolmentMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    startDate: Date | null
    workoutPlanId: string | null
    userId: string | null
  }

  export type WorkoutPlanEnrolmentCountAggregateOutputType = {
    id: number
    createdAt: number
    startDate: number
    completedPlanDayWorkoutIds: number
    workoutPlanId: number
    userId: number
    _all: number
  }


  export type WorkoutPlanEnrolmentMinAggregateInputType = {
    id?: true
    createdAt?: true
    startDate?: true
    workoutPlanId?: true
    userId?: true
  }

  export type WorkoutPlanEnrolmentMaxAggregateInputType = {
    id?: true
    createdAt?: true
    startDate?: true
    workoutPlanId?: true
    userId?: true
  }

  export type WorkoutPlanEnrolmentCountAggregateInputType = {
    id?: true
    createdAt?: true
    startDate?: true
    completedPlanDayWorkoutIds?: true
    workoutPlanId?: true
    userId?: true
    _all?: true
  }

  export type WorkoutPlanEnrolmentAggregateArgs = {
    /**
     * Filter which WorkoutPlanEnrolment to aggregate.
     * 
    **/
    where?: WorkoutPlanEnrolmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanEnrolments to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanEnrolmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutPlanEnrolmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanEnrolments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanEnrolments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutPlanEnrolments
    **/
    _count?: true | WorkoutPlanEnrolmentCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutPlanEnrolmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutPlanEnrolmentMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutPlanEnrolmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutPlanEnrolmentMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutPlanEnrolmentMaxAggregateInputType
  }

  export type GetWorkoutPlanEnrolmentAggregateType<T extends WorkoutPlanEnrolmentAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutPlanEnrolment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutPlanEnrolment[P]>
      : GetScalarType<T[P], AggregateWorkoutPlanEnrolment[P]>
  }


    
    
  export type WorkoutPlanEnrolmentGroupByArgs = {
    where?: WorkoutPlanEnrolmentWhereInput
    orderBy?: Enumerable<WorkoutPlanEnrolmentOrderByInput>
    by: Array<WorkoutPlanEnrolmentScalarFieldEnum>
    having?: WorkoutPlanEnrolmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutPlanEnrolmentCountAggregateInputType | true
    _min?: WorkoutPlanEnrolmentMinAggregateInputType
    _max?: WorkoutPlanEnrolmentMaxAggregateInputType
  }


  export type WorkoutPlanEnrolmentGroupByOutputType = {
    id: string
    createdAt: Date
    startDate: Date
    completedPlanDayWorkoutIds: string[]
    workoutPlanId: string
    userId: string
    _count: WorkoutPlanEnrolmentCountAggregateOutputType | null
    _min: WorkoutPlanEnrolmentMinAggregateOutputType | null
    _max: WorkoutPlanEnrolmentMaxAggregateOutputType | null
  }

  type GetWorkoutPlanEnrolmentGroupByPayload<T extends WorkoutPlanEnrolmentGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutPlanEnrolmentGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutPlanEnrolmentGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutPlanEnrolmentGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutPlanEnrolmentGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutPlanEnrolmentSelect = {
    id?: boolean
    createdAt?: boolean
    startDate?: boolean
    completedPlanDayWorkoutIds?: boolean
    WorkoutPlan?: boolean | WorkoutPlanArgs
    workoutPlanId?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
  }

  export type WorkoutPlanEnrolmentInclude = {
    WorkoutPlan?: boolean | WorkoutPlanArgs
    User?: boolean | UserArgs
    ScheduledWorkouts?: boolean | ScheduledWorkoutFindManyArgs
  }

  export type WorkoutPlanEnrolmentGetPayload<
    S extends boolean | null | undefined | WorkoutPlanEnrolmentArgs,
    U = keyof S
      > = S extends true
        ? WorkoutPlanEnrolment
    : S extends undefined
    ? never
    : S extends WorkoutPlanEnrolmentArgs | WorkoutPlanEnrolmentFindManyArgs
    ?'include' extends U
    ? WorkoutPlanEnrolment  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['include'][P]> :
        P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutPlanEnrolment ?WorkoutPlanEnrolment [P]
  : 
          P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['select'][P]> :
        P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'ScheduledWorkouts'
        ? Array < ScheduledWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : WorkoutPlanEnrolment
  : WorkoutPlanEnrolment


  type WorkoutPlanEnrolmentCountArgs = Merge<
    Omit<WorkoutPlanEnrolmentFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutPlanEnrolmentCountAggregateInputType | true
    }
  >

  export interface WorkoutPlanEnrolmentDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutPlanEnrolment that matches the filter.
     * @param {WorkoutPlanEnrolmentFindUniqueArgs} args - Arguments to find a WorkoutPlanEnrolment
     * @example
     * // Get one WorkoutPlanEnrolment
     * const workoutPlanEnrolment = await prisma.workoutPlanEnrolment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutPlanEnrolmentFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutPlanEnrolmentFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutPlanEnrolment'> extends True ? CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment>, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment | null >, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T> | null >>

    /**
     * Find the first WorkoutPlanEnrolment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanEnrolmentFindFirstArgs} args - Arguments to find a WorkoutPlanEnrolment
     * @example
     * // Get one WorkoutPlanEnrolment
     * const workoutPlanEnrolment = await prisma.workoutPlanEnrolment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutPlanEnrolmentFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutPlanEnrolmentFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutPlanEnrolment'> extends True ? CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment>, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment | null >, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutPlanEnrolments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanEnrolmentFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutPlanEnrolments
     * const workoutPlanEnrolments = await prisma.workoutPlanEnrolment.findMany()
     * 
     * // Get first 10 WorkoutPlanEnrolments
     * const workoutPlanEnrolments = await prisma.workoutPlanEnrolment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutPlanEnrolmentWithIdOnly = await prisma.workoutPlanEnrolment.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutPlanEnrolmentFindManyArgs>(
      args?: SelectSubset<T, WorkoutPlanEnrolmentFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutPlanEnrolment>>, PrismaPromise<Array<WorkoutPlanEnrolmentGetPayload<T>>>>

    /**
     * Create a WorkoutPlanEnrolment.
     * @param {WorkoutPlanEnrolmentCreateArgs} args - Arguments to create a WorkoutPlanEnrolment.
     * @example
     * // Create one WorkoutPlanEnrolment
     * const WorkoutPlanEnrolment = await prisma.workoutPlanEnrolment.create({
     *   data: {
     *     // ... data to create a WorkoutPlanEnrolment
     *   }
     * })
     * 
    **/
    create<T extends WorkoutPlanEnrolmentCreateArgs>(
      args: SelectSubset<T, WorkoutPlanEnrolmentCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment>, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T>>>

    /**
     * Create many WorkoutPlanEnrolments.
     *     @param {WorkoutPlanEnrolmentCreateManyArgs} args - Arguments to create many WorkoutPlanEnrolments.
     *     @example
     *     // Create many WorkoutPlanEnrolments
     *     const workoutPlanEnrolment = await prisma.workoutPlanEnrolment.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutPlanEnrolmentCreateManyArgs>(
      args?: SelectSubset<T, WorkoutPlanEnrolmentCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutPlanEnrolment.
     * @param {WorkoutPlanEnrolmentDeleteArgs} args - Arguments to delete one WorkoutPlanEnrolment.
     * @example
     * // Delete one WorkoutPlanEnrolment
     * const WorkoutPlanEnrolment = await prisma.workoutPlanEnrolment.delete({
     *   where: {
     *     // ... filter to delete one WorkoutPlanEnrolment
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutPlanEnrolmentDeleteArgs>(
      args: SelectSubset<T, WorkoutPlanEnrolmentDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment>, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T>>>

    /**
     * Update one WorkoutPlanEnrolment.
     * @param {WorkoutPlanEnrolmentUpdateArgs} args - Arguments to update one WorkoutPlanEnrolment.
     * @example
     * // Update one WorkoutPlanEnrolment
     * const workoutPlanEnrolment = await prisma.workoutPlanEnrolment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutPlanEnrolmentUpdateArgs>(
      args: SelectSubset<T, WorkoutPlanEnrolmentUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment>, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T>>>

    /**
     * Delete zero or more WorkoutPlanEnrolments.
     * @param {WorkoutPlanEnrolmentDeleteManyArgs} args - Arguments to filter WorkoutPlanEnrolments to delete.
     * @example
     * // Delete a few WorkoutPlanEnrolments
     * const { count } = await prisma.workoutPlanEnrolment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutPlanEnrolmentDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutPlanEnrolmentDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutPlanEnrolments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanEnrolmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutPlanEnrolments
     * const workoutPlanEnrolment = await prisma.workoutPlanEnrolment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutPlanEnrolmentUpdateManyArgs>(
      args: SelectSubset<T, WorkoutPlanEnrolmentUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutPlanEnrolment.
     * @param {WorkoutPlanEnrolmentUpsertArgs} args - Arguments to update or create a WorkoutPlanEnrolment.
     * @example
     * // Update or create a WorkoutPlanEnrolment
     * const workoutPlanEnrolment = await prisma.workoutPlanEnrolment.upsert({
     *   create: {
     *     // ... data to create a WorkoutPlanEnrolment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutPlanEnrolment we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutPlanEnrolmentUpsertArgs>(
      args: SelectSubset<T, WorkoutPlanEnrolmentUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolment>, Prisma__WorkoutPlanEnrolmentClient<WorkoutPlanEnrolmentGetPayload<T>>>

    /**
     * Count the number of WorkoutPlanEnrolments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanEnrolmentCountArgs} args - Arguments to filter WorkoutPlanEnrolments to count.
     * @example
     * // Count the number of WorkoutPlanEnrolments
     * const count = await prisma.workoutPlanEnrolment.count({
     *   where: {
     *     // ... the filter for the WorkoutPlanEnrolments we want to count
     *   }
     * })
    **/
    count<T extends WorkoutPlanEnrolmentCountArgs>(
      args?: Subset<T, WorkoutPlanEnrolmentCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutPlanEnrolmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutPlanEnrolment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanEnrolmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutPlanEnrolmentAggregateArgs>(args: Subset<T, WorkoutPlanEnrolmentAggregateArgs>): PrismaPromise<GetWorkoutPlanEnrolmentAggregateType<T>>

    /**
     * Group by WorkoutPlanEnrolment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanEnrolmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutPlanEnrolmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutPlanEnrolmentGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutPlanEnrolmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutPlanEnrolmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutPlanEnrolmentGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutPlanEnrolment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutPlanEnrolmentClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    WorkoutPlan<T extends WorkoutPlanArgs = {}>(args?: Subset<T, WorkoutPlanArgs>): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan | null >, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T> | null >>;

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    ScheduledWorkouts<T extends ScheduledWorkoutFindManyArgs = {}>(args?: Subset<T, ScheduledWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ScheduledWorkout>>, PrismaPromise<Array<ScheduledWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutPlanEnrolment findUnique
   */
  export type WorkoutPlanEnrolmentFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
    /**
     * Throw an Error if a WorkoutPlanEnrolment can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanEnrolment to fetch.
     * 
    **/
    where: WorkoutPlanEnrolmentWhereUniqueInput
  }


  /**
   * WorkoutPlanEnrolment findFirst
   */
  export type WorkoutPlanEnrolmentFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
    /**
     * Throw an Error if a WorkoutPlanEnrolment can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanEnrolment to fetch.
     * 
    **/
    where?: WorkoutPlanEnrolmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanEnrolments to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanEnrolmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutPlanEnrolments.
     * 
    **/
    cursor?: WorkoutPlanEnrolmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanEnrolments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanEnrolments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutPlanEnrolments.
     * 
    **/
    distinct?: Enumerable<WorkoutPlanEnrolmentScalarFieldEnum>
  }


  /**
   * WorkoutPlanEnrolment findMany
   */
  export type WorkoutPlanEnrolmentFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
    /**
     * Filter, which WorkoutPlanEnrolments to fetch.
     * 
    **/
    where?: WorkoutPlanEnrolmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanEnrolments to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanEnrolmentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutPlanEnrolments.
     * 
    **/
    cursor?: WorkoutPlanEnrolmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanEnrolments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanEnrolments.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutPlanEnrolmentScalarFieldEnum>
  }


  /**
   * WorkoutPlanEnrolment create
   */
  export type WorkoutPlanEnrolmentCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
    /**
     * The data needed to create a WorkoutPlanEnrolment.
     * 
    **/
    data: XOR<WorkoutPlanEnrolmentCreateInput, WorkoutPlanEnrolmentUncheckedCreateInput>
  }


  /**
   * WorkoutPlanEnrolment createMany
   */
  export type WorkoutPlanEnrolmentCreateManyArgs = {
    data: Enumerable<WorkoutPlanEnrolmentCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutPlanEnrolment update
   */
  export type WorkoutPlanEnrolmentUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
    /**
     * The data needed to update a WorkoutPlanEnrolment.
     * 
    **/
    data: XOR<WorkoutPlanEnrolmentUpdateInput, WorkoutPlanEnrolmentUncheckedUpdateInput>
    /**
     * Choose, which WorkoutPlanEnrolment to update.
     * 
    **/
    where: WorkoutPlanEnrolmentWhereUniqueInput
  }


  /**
   * WorkoutPlanEnrolment updateMany
   */
  export type WorkoutPlanEnrolmentUpdateManyArgs = {
    data: XOR<WorkoutPlanEnrolmentUpdateManyMutationInput, WorkoutPlanEnrolmentUncheckedUpdateManyInput>
    where?: WorkoutPlanEnrolmentWhereInput
  }


  /**
   * WorkoutPlanEnrolment upsert
   */
  export type WorkoutPlanEnrolmentUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
    /**
     * The filter to search for the WorkoutPlanEnrolment to update in case it exists.
     * 
    **/
    where: WorkoutPlanEnrolmentWhereUniqueInput
    /**
     * In case the WorkoutPlanEnrolment found by the `where` argument doesn't exist, create a new WorkoutPlanEnrolment with this data.
     * 
    **/
    create: XOR<WorkoutPlanEnrolmentCreateInput, WorkoutPlanEnrolmentUncheckedCreateInput>
    /**
     * In case the WorkoutPlanEnrolment was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutPlanEnrolmentUpdateInput, WorkoutPlanEnrolmentUncheckedUpdateInput>
  }


  /**
   * WorkoutPlanEnrolment delete
   */
  export type WorkoutPlanEnrolmentDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
    /**
     * Filter which WorkoutPlanEnrolment to delete.
     * 
    **/
    where: WorkoutPlanEnrolmentWhereUniqueInput
  }


  /**
   * WorkoutPlanEnrolment deleteMany
   */
  export type WorkoutPlanEnrolmentDeleteManyArgs = {
    where?: WorkoutPlanEnrolmentWhereInput
  }


  /**
   * WorkoutPlanEnrolment without action
   */
  export type WorkoutPlanEnrolmentArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanEnrolment
     * 
    **/
    select?: WorkoutPlanEnrolmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanEnrolmentInclude | null
  }



  /**
   * Model WorkoutPlanReview
   */


  export type AggregateWorkoutPlanReview = {
    _count: WorkoutPlanReviewCountAggregateOutputType | null
    count: WorkoutPlanReviewCountAggregateOutputType | null
    _avg: WorkoutPlanReviewAvgAggregateOutputType | null
    avg: WorkoutPlanReviewAvgAggregateOutputType | null
    _sum: WorkoutPlanReviewSumAggregateOutputType | null
    sum: WorkoutPlanReviewSumAggregateOutputType | null
    _min: WorkoutPlanReviewMinAggregateOutputType | null
    min: WorkoutPlanReviewMinAggregateOutputType | null
    _max: WorkoutPlanReviewMaxAggregateOutputType | null
    max: WorkoutPlanReviewMaxAggregateOutputType | null
  }

  export type WorkoutPlanReviewAvgAggregateOutputType = {
    score: number | null
  }

  export type WorkoutPlanReviewSumAggregateOutputType = {
    score: number | null
  }

  export type WorkoutPlanReviewMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    score: number | null
    comment: string | null
    workoutPlanId: string | null
  }

  export type WorkoutPlanReviewMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    score: number | null
    comment: string | null
    workoutPlanId: string | null
  }

  export type WorkoutPlanReviewCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    score: number
    comment: number
    workoutPlanId: number
    _all: number
  }


  export type WorkoutPlanReviewAvgAggregateInputType = {
    score?: true
  }

  export type WorkoutPlanReviewSumAggregateInputType = {
    score?: true
  }

  export type WorkoutPlanReviewMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    score?: true
    comment?: true
    workoutPlanId?: true
  }

  export type WorkoutPlanReviewMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    score?: true
    comment?: true
    workoutPlanId?: true
  }

  export type WorkoutPlanReviewCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    score?: true
    comment?: true
    workoutPlanId?: true
    _all?: true
  }

  export type WorkoutPlanReviewAggregateArgs = {
    /**
     * Filter which WorkoutPlanReview to aggregate.
     * 
    **/
    where?: WorkoutPlanReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanReviews to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanReviewOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: WorkoutPlanReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanReviews from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanReviews.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkoutPlanReviews
    **/
    _count?: true | WorkoutPlanReviewCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | WorkoutPlanReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkoutPlanReviewAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: WorkoutPlanReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkoutPlanReviewSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: WorkoutPlanReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkoutPlanReviewMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: WorkoutPlanReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkoutPlanReviewMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: WorkoutPlanReviewMaxAggregateInputType
  }

  export type GetWorkoutPlanReviewAggregateType<T extends WorkoutPlanReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkoutPlanReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkoutPlanReview[P]>
      : GetScalarType<T[P], AggregateWorkoutPlanReview[P]>
  }


    
    
  export type WorkoutPlanReviewGroupByArgs = {
    where?: WorkoutPlanReviewWhereInput
    orderBy?: Enumerable<WorkoutPlanReviewOrderByInput>
    by: Array<WorkoutPlanReviewScalarFieldEnum>
    having?: WorkoutPlanReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkoutPlanReviewCountAggregateInputType | true
    _avg?: WorkoutPlanReviewAvgAggregateInputType
    _sum?: WorkoutPlanReviewSumAggregateInputType
    _min?: WorkoutPlanReviewMinAggregateInputType
    _max?: WorkoutPlanReviewMaxAggregateInputType
  }


  export type WorkoutPlanReviewGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    score: number
    comment: string | null
    workoutPlanId: string
    _count: WorkoutPlanReviewCountAggregateOutputType | null
    _avg: WorkoutPlanReviewAvgAggregateOutputType | null
    _sum: WorkoutPlanReviewSumAggregateOutputType | null
    _min: WorkoutPlanReviewMinAggregateOutputType | null
    _max: WorkoutPlanReviewMaxAggregateOutputType | null
  }

  type GetWorkoutPlanReviewGroupByPayload<T extends WorkoutPlanReviewGroupByArgs> = Promise<
    Array<
      PickArray<WorkoutPlanReviewGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof WorkoutPlanReviewGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], WorkoutPlanReviewGroupByOutputType[P]> 
            : GetScalarType<T[P], WorkoutPlanReviewGroupByOutputType[P]>
        }
      > 
    >


  export type WorkoutPlanReviewSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    score?: boolean
    comment?: boolean
    WorkoutPlan?: boolean | WorkoutPlanArgs
    workoutPlanId?: boolean
  }

  export type WorkoutPlanReviewInclude = {
    User?: boolean | UserArgs
    WorkoutPlan?: boolean | WorkoutPlanArgs
  }

  export type WorkoutPlanReviewGetPayload<
    S extends boolean | null | undefined | WorkoutPlanReviewArgs,
    U = keyof S
      > = S extends true
        ? WorkoutPlanReview
    : S extends undefined
    ? never
    : S extends WorkoutPlanReviewArgs | WorkoutPlanReviewFindManyArgs
    ?'include' extends U
    ? WorkoutPlanReview  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WorkoutPlanReview ?WorkoutPlanReview [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['select'][P]> : never
  } 
    : WorkoutPlanReview
  : WorkoutPlanReview


  type WorkoutPlanReviewCountArgs = Merge<
    Omit<WorkoutPlanReviewFindManyArgs, 'select' | 'include'> & {
      select?: WorkoutPlanReviewCountAggregateInputType | true
    }
  >

  export interface WorkoutPlanReviewDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one WorkoutPlanReview that matches the filter.
     * @param {WorkoutPlanReviewFindUniqueArgs} args - Arguments to find a WorkoutPlanReview
     * @example
     * // Get one WorkoutPlanReview
     * const workoutPlanReview = await prisma.workoutPlanReview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends WorkoutPlanReviewFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, WorkoutPlanReviewFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'WorkoutPlanReview'> extends True ? CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview>, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview | null >, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T> | null >>

    /**
     * Find the first WorkoutPlanReview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanReviewFindFirstArgs} args - Arguments to find a WorkoutPlanReview
     * @example
     * // Get one WorkoutPlanReview
     * const workoutPlanReview = await prisma.workoutPlanReview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends WorkoutPlanReviewFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, WorkoutPlanReviewFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'WorkoutPlanReview'> extends True ? CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview>, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T>>> : CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview | null >, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T> | null >>

    /**
     * Find zero or more WorkoutPlanReviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanReviewFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkoutPlanReviews
     * const workoutPlanReviews = await prisma.workoutPlanReview.findMany()
     * 
     * // Get first 10 WorkoutPlanReviews
     * const workoutPlanReviews = await prisma.workoutPlanReview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workoutPlanReviewWithIdOnly = await prisma.workoutPlanReview.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends WorkoutPlanReviewFindManyArgs>(
      args?: SelectSubset<T, WorkoutPlanReviewFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<WorkoutPlanReview>>, PrismaPromise<Array<WorkoutPlanReviewGetPayload<T>>>>

    /**
     * Create a WorkoutPlanReview.
     * @param {WorkoutPlanReviewCreateArgs} args - Arguments to create a WorkoutPlanReview.
     * @example
     * // Create one WorkoutPlanReview
     * const WorkoutPlanReview = await prisma.workoutPlanReview.create({
     *   data: {
     *     // ... data to create a WorkoutPlanReview
     *   }
     * })
     * 
    **/
    create<T extends WorkoutPlanReviewCreateArgs>(
      args: SelectSubset<T, WorkoutPlanReviewCreateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview>, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T>>>

    /**
     * Create many WorkoutPlanReviews.
     *     @param {WorkoutPlanReviewCreateManyArgs} args - Arguments to create many WorkoutPlanReviews.
     *     @example
     *     // Create many WorkoutPlanReviews
     *     const workoutPlanReview = await prisma.workoutPlanReview.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends WorkoutPlanReviewCreateManyArgs>(
      args?: SelectSubset<T, WorkoutPlanReviewCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a WorkoutPlanReview.
     * @param {WorkoutPlanReviewDeleteArgs} args - Arguments to delete one WorkoutPlanReview.
     * @example
     * // Delete one WorkoutPlanReview
     * const WorkoutPlanReview = await prisma.workoutPlanReview.delete({
     *   where: {
     *     // ... filter to delete one WorkoutPlanReview
     *   }
     * })
     * 
    **/
    delete<T extends WorkoutPlanReviewDeleteArgs>(
      args: SelectSubset<T, WorkoutPlanReviewDeleteArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview>, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T>>>

    /**
     * Update one WorkoutPlanReview.
     * @param {WorkoutPlanReviewUpdateArgs} args - Arguments to update one WorkoutPlanReview.
     * @example
     * // Update one WorkoutPlanReview
     * const workoutPlanReview = await prisma.workoutPlanReview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WorkoutPlanReviewUpdateArgs>(
      args: SelectSubset<T, WorkoutPlanReviewUpdateArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview>, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T>>>

    /**
     * Delete zero or more WorkoutPlanReviews.
     * @param {WorkoutPlanReviewDeleteManyArgs} args - Arguments to filter WorkoutPlanReviews to delete.
     * @example
     * // Delete a few WorkoutPlanReviews
     * const { count } = await prisma.workoutPlanReview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WorkoutPlanReviewDeleteManyArgs>(
      args?: SelectSubset<T, WorkoutPlanReviewDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkoutPlanReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkoutPlanReviews
     * const workoutPlanReview = await prisma.workoutPlanReview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WorkoutPlanReviewUpdateManyArgs>(
      args: SelectSubset<T, WorkoutPlanReviewUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one WorkoutPlanReview.
     * @param {WorkoutPlanReviewUpsertArgs} args - Arguments to update or create a WorkoutPlanReview.
     * @example
     * // Update or create a WorkoutPlanReview
     * const workoutPlanReview = await prisma.workoutPlanReview.upsert({
     *   create: {
     *     // ... data to create a WorkoutPlanReview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkoutPlanReview we want to update
     *   }
     * })
    **/
    upsert<T extends WorkoutPlanReviewUpsertArgs>(
      args: SelectSubset<T, WorkoutPlanReviewUpsertArgs>
    ): CheckSelect<T, Prisma__WorkoutPlanReviewClient<WorkoutPlanReview>, Prisma__WorkoutPlanReviewClient<WorkoutPlanReviewGetPayload<T>>>

    /**
     * Count the number of WorkoutPlanReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanReviewCountArgs} args - Arguments to filter WorkoutPlanReviews to count.
     * @example
     * // Count the number of WorkoutPlanReviews
     * const count = await prisma.workoutPlanReview.count({
     *   where: {
     *     // ... the filter for the WorkoutPlanReviews we want to count
     *   }
     * })
    **/
    count<T extends WorkoutPlanReviewCountArgs>(
      args?: Subset<T, WorkoutPlanReviewCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkoutPlanReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkoutPlanReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkoutPlanReviewAggregateArgs>(args: Subset<T, WorkoutPlanReviewAggregateArgs>): PrismaPromise<GetWorkoutPlanReviewAggregateType<T>>

    /**
     * Group by WorkoutPlanReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkoutPlanReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkoutPlanReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkoutPlanReviewGroupByArgs['orderBy'] }
        : { orderBy?: WorkoutPlanReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkoutPlanReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkoutPlanReviewGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkoutPlanReview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WorkoutPlanReviewClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    WorkoutPlan<T extends WorkoutPlanArgs = {}>(args?: Subset<T, WorkoutPlanArgs>): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan | null >, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WorkoutPlanReview findUnique
   */
  export type WorkoutPlanReviewFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
    /**
     * Throw an Error if a WorkoutPlanReview can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanReview to fetch.
     * 
    **/
    where: WorkoutPlanReviewWhereUniqueInput
  }


  /**
   * WorkoutPlanReview findFirst
   */
  export type WorkoutPlanReviewFindFirstArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
    /**
     * Throw an Error if a WorkoutPlanReview can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which WorkoutPlanReview to fetch.
     * 
    **/
    where?: WorkoutPlanReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanReviews to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanReviewOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkoutPlanReviews.
     * 
    **/
    cursor?: WorkoutPlanReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanReviews from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanReviews.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkoutPlanReviews.
     * 
    **/
    distinct?: Enumerable<WorkoutPlanReviewScalarFieldEnum>
  }


  /**
   * WorkoutPlanReview findMany
   */
  export type WorkoutPlanReviewFindManyArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
    /**
     * Filter, which WorkoutPlanReviews to fetch.
     * 
    **/
    where?: WorkoutPlanReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkoutPlanReviews to fetch.
     * 
    **/
    orderBy?: Enumerable<WorkoutPlanReviewOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkoutPlanReviews.
     * 
    **/
    cursor?: WorkoutPlanReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkoutPlanReviews from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkoutPlanReviews.
     * 
    **/
    skip?: number
    distinct?: Enumerable<WorkoutPlanReviewScalarFieldEnum>
  }


  /**
   * WorkoutPlanReview create
   */
  export type WorkoutPlanReviewCreateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
    /**
     * The data needed to create a WorkoutPlanReview.
     * 
    **/
    data: XOR<WorkoutPlanReviewCreateInput, WorkoutPlanReviewUncheckedCreateInput>
  }


  /**
   * WorkoutPlanReview createMany
   */
  export type WorkoutPlanReviewCreateManyArgs = {
    data: Enumerable<WorkoutPlanReviewCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * WorkoutPlanReview update
   */
  export type WorkoutPlanReviewUpdateArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
    /**
     * The data needed to update a WorkoutPlanReview.
     * 
    **/
    data: XOR<WorkoutPlanReviewUpdateInput, WorkoutPlanReviewUncheckedUpdateInput>
    /**
     * Choose, which WorkoutPlanReview to update.
     * 
    **/
    where: WorkoutPlanReviewWhereUniqueInput
  }


  /**
   * WorkoutPlanReview updateMany
   */
  export type WorkoutPlanReviewUpdateManyArgs = {
    data: XOR<WorkoutPlanReviewUpdateManyMutationInput, WorkoutPlanReviewUncheckedUpdateManyInput>
    where?: WorkoutPlanReviewWhereInput
  }


  /**
   * WorkoutPlanReview upsert
   */
  export type WorkoutPlanReviewUpsertArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
    /**
     * The filter to search for the WorkoutPlanReview to update in case it exists.
     * 
    **/
    where: WorkoutPlanReviewWhereUniqueInput
    /**
     * In case the WorkoutPlanReview found by the `where` argument doesn't exist, create a new WorkoutPlanReview with this data.
     * 
    **/
    create: XOR<WorkoutPlanReviewCreateInput, WorkoutPlanReviewUncheckedCreateInput>
    /**
     * In case the WorkoutPlanReview was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<WorkoutPlanReviewUpdateInput, WorkoutPlanReviewUncheckedUpdateInput>
  }


  /**
   * WorkoutPlanReview delete
   */
  export type WorkoutPlanReviewDeleteArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
    /**
     * Filter which WorkoutPlanReview to delete.
     * 
    **/
    where: WorkoutPlanReviewWhereUniqueInput
  }


  /**
   * WorkoutPlanReview deleteMany
   */
  export type WorkoutPlanReviewDeleteManyArgs = {
    where?: WorkoutPlanReviewWhereInput
  }


  /**
   * WorkoutPlanReview without action
   */
  export type WorkoutPlanReviewArgs = {
    /**
     * Select specific fields to fetch from the WorkoutPlanReview
     * 
    **/
    select?: WorkoutPlanReviewSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: WorkoutPlanReviewInclude | null
  }



  /**
   * Model LoggedWorkout
   */


  export type AggregateLoggedWorkout = {
    _count: LoggedWorkoutCountAggregateOutputType | null
    count: LoggedWorkoutCountAggregateOutputType | null
    _min: LoggedWorkoutMinAggregateOutputType | null
    min: LoggedWorkoutMinAggregateOutputType | null
    _max: LoggedWorkoutMaxAggregateOutputType | null
    max: LoggedWorkoutMaxAggregateOutputType | null
  }

  export type LoggedWorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    completedOn: Date | null
    userId: string | null
    name: string | null
    note: string | null
    gymProfileId: string | null
    workoutId: string | null
  }

  export type LoggedWorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    completedOn: Date | null
    userId: string | null
    name: string | null
    note: string | null
    gymProfileId: string | null
    workoutId: string | null
  }

  export type LoggedWorkoutCountAggregateOutputType = {
    id: number
    createdAt: number
    completedOn: number
    userId: number
    name: number
    note: number
    gymProfileId: number
    workoutId: number
    _all: number
  }


  export type LoggedWorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    completedOn?: true
    userId?: true
    name?: true
    note?: true
    gymProfileId?: true
    workoutId?: true
  }

  export type LoggedWorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    completedOn?: true
    userId?: true
    name?: true
    note?: true
    gymProfileId?: true
    workoutId?: true
  }

  export type LoggedWorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    completedOn?: true
    userId?: true
    name?: true
    note?: true
    gymProfileId?: true
    workoutId?: true
    _all?: true
  }

  export type LoggedWorkoutAggregateArgs = {
    /**
     * Filter which LoggedWorkout to aggregate.
     * 
    **/
    where?: LoggedWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: LoggedWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LoggedWorkouts
    **/
    _count?: true | LoggedWorkoutCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | LoggedWorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoggedWorkoutMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: LoggedWorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoggedWorkoutMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: LoggedWorkoutMaxAggregateInputType
  }

  export type GetLoggedWorkoutAggregateType<T extends LoggedWorkoutAggregateArgs> = {
        [P in keyof T & keyof AggregateLoggedWorkout]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoggedWorkout[P]>
      : GetScalarType<T[P], AggregateLoggedWorkout[P]>
  }


    
    
  export type LoggedWorkoutGroupByArgs = {
    where?: LoggedWorkoutWhereInput
    orderBy?: Enumerable<LoggedWorkoutOrderByInput>
    by: Array<LoggedWorkoutScalarFieldEnum>
    having?: LoggedWorkoutScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoggedWorkoutCountAggregateInputType | true
    _min?: LoggedWorkoutMinAggregateInputType
    _max?: LoggedWorkoutMaxAggregateInputType
  }


  export type LoggedWorkoutGroupByOutputType = {
    id: string
    createdAt: Date
    completedOn: Date
    userId: string
    name: string
    note: string | null
    gymProfileId: string | null
    workoutId: string | null
    _count: LoggedWorkoutCountAggregateOutputType | null
    _min: LoggedWorkoutMinAggregateOutputType | null
    _max: LoggedWorkoutMaxAggregateOutputType | null
  }

  type GetLoggedWorkoutGroupByPayload<T extends LoggedWorkoutGroupByArgs> = Promise<
    Array<
      PickArray<LoggedWorkoutGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof LoggedWorkoutGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], LoggedWorkoutGroupByOutputType[P]> 
            : GetScalarType<T[P], LoggedWorkoutGroupByOutputType[P]>
        }
      > 
    >


  export type LoggedWorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    completedOn?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    note?: boolean
    GymProfile?: boolean | GymProfileArgs
    gymProfileId?: boolean
    LoggedWorkoutSections?: boolean | LoggedWorkoutSectionFindManyArgs
    ScheduledWorkout?: boolean | ScheduledWorkoutArgs
    Workout?: boolean | WorkoutArgs
    workoutId?: boolean
  }

  export type LoggedWorkoutInclude = {
    User?: boolean | UserArgs
    GymProfile?: boolean | GymProfileArgs
    LoggedWorkoutSections?: boolean | LoggedWorkoutSectionFindManyArgs
    ScheduledWorkout?: boolean | ScheduledWorkoutArgs
    Workout?: boolean | WorkoutArgs
  }

  export type LoggedWorkoutGetPayload<
    S extends boolean | null | undefined | LoggedWorkoutArgs,
    U = keyof S
      > = S extends true
        ? LoggedWorkout
    : S extends undefined
    ? never
    : S extends LoggedWorkoutArgs | LoggedWorkoutFindManyArgs
    ?'include' extends U
    ? LoggedWorkout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'GymProfile'
        ? GymProfileGetPayload<S['include'][P]> | null :
        P extends 'LoggedWorkoutSections'
        ? Array < LoggedWorkoutSectionGetPayload<S['include'][P]>>  :
        P extends 'ScheduledWorkout'
        ? ScheduledWorkoutGetPayload<S['include'][P]> | null :
        P extends 'Workout'
        ? WorkoutGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof LoggedWorkout ?LoggedWorkout [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'GymProfile'
        ? GymProfileGetPayload<S['select'][P]> | null :
        P extends 'LoggedWorkoutSections'
        ? Array < LoggedWorkoutSectionGetPayload<S['select'][P]>>  :
        P extends 'ScheduledWorkout'
        ? ScheduledWorkoutGetPayload<S['select'][P]> | null :
        P extends 'Workout'
        ? WorkoutGetPayload<S['select'][P]> | null : never
  } 
    : LoggedWorkout
  : LoggedWorkout


  type LoggedWorkoutCountArgs = Merge<
    Omit<LoggedWorkoutFindManyArgs, 'select' | 'include'> & {
      select?: LoggedWorkoutCountAggregateInputType | true
    }
  >

  export interface LoggedWorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one LoggedWorkout that matches the filter.
     * @param {LoggedWorkoutFindUniqueArgs} args - Arguments to find a LoggedWorkout
     * @example
     * // Get one LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LoggedWorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, LoggedWorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'LoggedWorkout'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>

    /**
     * Find the first LoggedWorkout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutFindFirstArgs} args - Arguments to find a LoggedWorkout
     * @example
     * // Get one LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LoggedWorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, LoggedWorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'LoggedWorkout'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>

    /**
     * Find zero or more LoggedWorkouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LoggedWorkouts
     * const loggedWorkouts = await prisma.loggedWorkout.findMany()
     * 
     * // Get first 10 LoggedWorkouts
     * const loggedWorkouts = await prisma.loggedWorkout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loggedWorkoutWithIdOnly = await prisma.loggedWorkout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LoggedWorkoutFindManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<LoggedWorkout>>, PrismaPromise<Array<LoggedWorkoutGetPayload<T>>>>

    /**
     * Create a LoggedWorkout.
     * @param {LoggedWorkoutCreateArgs} args - Arguments to create a LoggedWorkout.
     * @example
     * // Create one LoggedWorkout
     * const LoggedWorkout = await prisma.loggedWorkout.create({
     *   data: {
     *     // ... data to create a LoggedWorkout
     *   }
     * })
     * 
    **/
    create<T extends LoggedWorkoutCreateArgs>(
      args: SelectSubset<T, LoggedWorkoutCreateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Create many LoggedWorkouts.
     *     @param {LoggedWorkoutCreateManyArgs} args - Arguments to create many LoggedWorkouts.
     *     @example
     *     // Create many LoggedWorkouts
     *     const loggedWorkout = await prisma.loggedWorkout.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LoggedWorkoutCreateManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a LoggedWorkout.
     * @param {LoggedWorkoutDeleteArgs} args - Arguments to delete one LoggedWorkout.
     * @example
     * // Delete one LoggedWorkout
     * const LoggedWorkout = await prisma.loggedWorkout.delete({
     *   where: {
     *     // ... filter to delete one LoggedWorkout
     *   }
     * })
     * 
    **/
    delete<T extends LoggedWorkoutDeleteArgs>(
      args: SelectSubset<T, LoggedWorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Update one LoggedWorkout.
     * @param {LoggedWorkoutUpdateArgs} args - Arguments to update one LoggedWorkout.
     * @example
     * // Update one LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LoggedWorkoutUpdateArgs>(
      args: SelectSubset<T, LoggedWorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Delete zero or more LoggedWorkouts.
     * @param {LoggedWorkoutDeleteManyArgs} args - Arguments to filter LoggedWorkouts to delete.
     * @example
     * // Delete a few LoggedWorkouts
     * const { count } = await prisma.loggedWorkout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LoggedWorkoutDeleteManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more LoggedWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LoggedWorkouts
     * const loggedWorkout = await prisma.loggedWorkout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LoggedWorkoutUpdateManyArgs>(
      args: SelectSubset<T, LoggedWorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one LoggedWorkout.
     * @param {LoggedWorkoutUpsertArgs} args - Arguments to update or create a LoggedWorkout.
     * @example
     * // Update or create a LoggedWorkout
     * const loggedWorkout = await prisma.loggedWorkout.upsert({
     *   create: {
     *     // ... data to create a LoggedWorkout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LoggedWorkout we want to update
     *   }
     * })
    **/
    upsert<T extends LoggedWorkoutUpsertArgs>(
      args: SelectSubset<T, LoggedWorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout>, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T>>>

    /**
     * Count the number of LoggedWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutCountArgs} args - Arguments to filter LoggedWorkouts to count.
     * @example
     * // Count the number of LoggedWorkouts
     * const count = await prisma.loggedWorkout.count({
     *   where: {
     *     // ... the filter for the LoggedWorkouts we want to count
     *   }
     * })
    **/
    count<T extends LoggedWorkoutCountArgs>(
      args?: Subset<T, LoggedWorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoggedWorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LoggedWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoggedWorkoutAggregateArgs>(args: Subset<T, LoggedWorkoutAggregateArgs>): PrismaPromise<GetLoggedWorkoutAggregateType<T>>

    /**
     * Group by LoggedWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoggedWorkoutGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoggedWorkoutGroupByArgs['orderBy'] }
        : { orderBy?: LoggedWorkoutGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoggedWorkoutGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoggedWorkoutGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for LoggedWorkout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__LoggedWorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    GymProfile<T extends GymProfileArgs = {}>(args?: Subset<T, GymProfileArgs>): CheckSelect<T, Prisma__GymProfileClient<GymProfile | null >, Prisma__GymProfileClient<GymProfileGetPayload<T> | null >>;

    LoggedWorkoutSections<T extends LoggedWorkoutSectionFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutSectionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutSection>>, PrismaPromise<Array<LoggedWorkoutSectionGetPayload<T>>>>;

    ScheduledWorkout<T extends ScheduledWorkoutArgs = {}>(args?: Subset<T, ScheduledWorkoutArgs>): CheckSelect<T, Prisma__ScheduledWorkoutClient<ScheduledWorkout | null >, Prisma__ScheduledWorkoutClient<ScheduledWorkoutGetPayload<T> | null >>;

    Workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * LoggedWorkout findUnique
   */
  export type LoggedWorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Throw an Error if a LoggedWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkout to fetch.
     * 
    **/
    where: LoggedWorkoutWhereUniqueInput
  }


  /**
   * LoggedWorkout findFirst
   */
  export type LoggedWorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Throw an Error if a LoggedWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkout to fetch.
     * 
    **/
    where?: LoggedWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LoggedWorkouts.
     * 
    **/
    cursor?: LoggedWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LoggedWorkouts.
     * 
    **/
    distinct?: Enumerable<LoggedWorkoutScalarFieldEnum>
  }


  /**
   * LoggedWorkout findMany
   */
  export type LoggedWorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Filter, which LoggedWorkouts to fetch.
     * 
    **/
    where?: LoggedWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LoggedWorkouts.
     * 
    **/
    cursor?: LoggedWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkouts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<LoggedWorkoutScalarFieldEnum>
  }


  /**
   * LoggedWorkout create
   */
  export type LoggedWorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * The data needed to create a LoggedWorkout.
     * 
    **/
    data: XOR<LoggedWorkoutCreateInput, LoggedWorkoutUncheckedCreateInput>
  }


  /**
   * LoggedWorkout createMany
   */
  export type LoggedWorkoutCreateManyArgs = {
    data: Enumerable<LoggedWorkoutCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * LoggedWorkout update
   */
  export type LoggedWorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * The data needed to update a LoggedWorkout.
     * 
    **/
    data: XOR<LoggedWorkoutUpdateInput, LoggedWorkoutUncheckedUpdateInput>
    /**
     * Choose, which LoggedWorkout to update.
     * 
    **/
    where: LoggedWorkoutWhereUniqueInput
  }


  /**
   * LoggedWorkout updateMany
   */
  export type LoggedWorkoutUpdateManyArgs = {
    data: XOR<LoggedWorkoutUpdateManyMutationInput, LoggedWorkoutUncheckedUpdateManyInput>
    where?: LoggedWorkoutWhereInput
  }


  /**
   * LoggedWorkout upsert
   */
  export type LoggedWorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * The filter to search for the LoggedWorkout to update in case it exists.
     * 
    **/
    where: LoggedWorkoutWhereUniqueInput
    /**
     * In case the LoggedWorkout found by the `where` argument doesn't exist, create a new LoggedWorkout with this data.
     * 
    **/
    create: XOR<LoggedWorkoutCreateInput, LoggedWorkoutUncheckedCreateInput>
    /**
     * In case the LoggedWorkout was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<LoggedWorkoutUpdateInput, LoggedWorkoutUncheckedUpdateInput>
  }


  /**
   * LoggedWorkout delete
   */
  export type LoggedWorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
    /**
     * Filter which LoggedWorkout to delete.
     * 
    **/
    where: LoggedWorkoutWhereUniqueInput
  }


  /**
   * LoggedWorkout deleteMany
   */
  export type LoggedWorkoutDeleteManyArgs = {
    where?: LoggedWorkoutWhereInput
  }


  /**
   * LoggedWorkout without action
   */
  export type LoggedWorkoutArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkout
     * 
    **/
    select?: LoggedWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutInclude | null
  }



  /**
   * Model LoggedWorkoutSection
   */


  export type AggregateLoggedWorkoutSection = {
    _count: LoggedWorkoutSectionCountAggregateOutputType | null
    count: LoggedWorkoutSectionCountAggregateOutputType | null
    _avg: LoggedWorkoutSectionAvgAggregateOutputType | null
    avg: LoggedWorkoutSectionAvgAggregateOutputType | null
    _sum: LoggedWorkoutSectionSumAggregateOutputType | null
    sum: LoggedWorkoutSectionSumAggregateOutputType | null
    _min: LoggedWorkoutSectionMinAggregateOutputType | null
    min: LoggedWorkoutSectionMinAggregateOutputType | null
    _max: LoggedWorkoutSectionMaxAggregateOutputType | null
    max: LoggedWorkoutSectionMaxAggregateOutputType | null
  }

  export type LoggedWorkoutSectionAvgAggregateOutputType = {
    timecap: number | null
    sortPosition: number | null
    timeTakenMs: number | null
    repScore: number | null
  }

  export type LoggedWorkoutSectionSumAggregateOutputType = {
    timecap: number | null
    sortPosition: number | null
    timeTakenMs: number | null
    repScore: number | null
  }

  export type LoggedWorkoutSectionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    note: string | null
    timecap: number | null
    sortPosition: number | null
    timeTakenMs: number | null
    repScore: number | null
    loggedWorkoutId: string | null
    workoutSectionTypeId: string | null
  }

  export type LoggedWorkoutSectionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    note: string | null
    timecap: number | null
    sortPosition: number | null
    timeTakenMs: number | null
    repScore: number | null
    loggedWorkoutId: string | null
    workoutSectionTypeId: string | null
  }

  export type LoggedWorkoutSectionCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    name: number
    note: number
    timecap: number
    sortPosition: number
    timeTakenMs: number
    lapTimesMs: number
    repScore: number
    loggedWorkoutId: number
    workoutSectionTypeId: number
    _all: number
  }


  export type LoggedWorkoutSectionAvgAggregateInputType = {
    timecap?: true
    sortPosition?: true
    timeTakenMs?: true
    repScore?: true
  }

  export type LoggedWorkoutSectionSumAggregateInputType = {
    timecap?: true
    sortPosition?: true
    timeTakenMs?: true
    repScore?: true
  }

  export type LoggedWorkoutSectionMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    note?: true
    timecap?: true
    sortPosition?: true
    timeTakenMs?: true
    repScore?: true
    loggedWorkoutId?: true
    workoutSectionTypeId?: true
  }

  export type LoggedWorkoutSectionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    note?: true
    timecap?: true
    sortPosition?: true
    timeTakenMs?: true
    repScore?: true
    loggedWorkoutId?: true
    workoutSectionTypeId?: true
  }

  export type LoggedWorkoutSectionCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    note?: true
    timecap?: true
    sortPosition?: true
    timeTakenMs?: true
    lapTimesMs?: true
    repScore?: true
    loggedWorkoutId?: true
    workoutSectionTypeId?: true
    _all?: true
  }

  export type LoggedWorkoutSectionAggregateArgs = {
    /**
     * Filter which LoggedWorkoutSection to aggregate.
     * 
    **/
    where?: LoggedWorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutSections to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: LoggedWorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutSections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutSections.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LoggedWorkoutSections
    **/
    _count?: true | LoggedWorkoutSectionCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | LoggedWorkoutSectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoggedWorkoutSectionAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: LoggedWorkoutSectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoggedWorkoutSectionSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: LoggedWorkoutSectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoggedWorkoutSectionMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: LoggedWorkoutSectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoggedWorkoutSectionMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: LoggedWorkoutSectionMaxAggregateInputType
  }

  export type GetLoggedWorkoutSectionAggregateType<T extends LoggedWorkoutSectionAggregateArgs> = {
        [P in keyof T & keyof AggregateLoggedWorkoutSection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoggedWorkoutSection[P]>
      : GetScalarType<T[P], AggregateLoggedWorkoutSection[P]>
  }


    
    
  export type LoggedWorkoutSectionGroupByArgs = {
    where?: LoggedWorkoutSectionWhereInput
    orderBy?: Enumerable<LoggedWorkoutSectionOrderByInput>
    by: Array<LoggedWorkoutSectionScalarFieldEnum>
    having?: LoggedWorkoutSectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoggedWorkoutSectionCountAggregateInputType | true
    _avg?: LoggedWorkoutSectionAvgAggregateInputType
    _sum?: LoggedWorkoutSectionSumAggregateInputType
    _min?: LoggedWorkoutSectionMinAggregateInputType
    _max?: LoggedWorkoutSectionMaxAggregateInputType
  }


  export type LoggedWorkoutSectionGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    name: string | null
    note: string | null
    timecap: number | null
    sortPosition: number
    timeTakenMs: number | null
    lapTimesMs: JsonValue
    repScore: number | null
    loggedWorkoutId: string
    workoutSectionTypeId: string
    _count: LoggedWorkoutSectionCountAggregateOutputType | null
    _avg: LoggedWorkoutSectionAvgAggregateOutputType | null
    _sum: LoggedWorkoutSectionSumAggregateOutputType | null
    _min: LoggedWorkoutSectionMinAggregateOutputType | null
    _max: LoggedWorkoutSectionMaxAggregateOutputType | null
  }

  type GetLoggedWorkoutSectionGroupByPayload<T extends LoggedWorkoutSectionGroupByArgs> = Promise<
    Array<
      PickArray<LoggedWorkoutSectionGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof LoggedWorkoutSectionGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], LoggedWorkoutSectionGroupByOutputType[P]> 
            : GetScalarType<T[P], LoggedWorkoutSectionGroupByOutputType[P]>
        }
      > 
    >


  export type LoggedWorkoutSectionSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    note?: boolean
    timecap?: boolean
    sortPosition?: boolean
    timeTakenMs?: boolean
    lapTimesMs?: boolean
    repScore?: boolean
    LoggedWorkoutSets?: boolean | LoggedWorkoutSetFindManyArgs
    LoggedWorkout?: boolean | LoggedWorkoutArgs
    loggedWorkoutId?: boolean
    WorkoutSectionType?: boolean | WorkoutSectionTypeArgs
    workoutSectionTypeId?: boolean
  }

  export type LoggedWorkoutSectionInclude = {
    User?: boolean | UserArgs
    LoggedWorkoutSets?: boolean | LoggedWorkoutSetFindManyArgs
    LoggedWorkout?: boolean | LoggedWorkoutArgs
    WorkoutSectionType?: boolean | WorkoutSectionTypeArgs
  }

  export type LoggedWorkoutSectionGetPayload<
    S extends boolean | null | undefined | LoggedWorkoutSectionArgs,
    U = keyof S
      > = S extends true
        ? LoggedWorkoutSection
    : S extends undefined
    ? never
    : S extends LoggedWorkoutSectionArgs | LoggedWorkoutSectionFindManyArgs
    ?'include' extends U
    ? LoggedWorkoutSection  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'LoggedWorkoutSets'
        ? Array < LoggedWorkoutSetGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkout'
        ? LoggedWorkoutGetPayload<S['include'][P]> :
        P extends 'WorkoutSectionType'
        ? WorkoutSectionTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof LoggedWorkoutSection ?LoggedWorkoutSection [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'LoggedWorkoutSets'
        ? Array < LoggedWorkoutSetGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkout'
        ? LoggedWorkoutGetPayload<S['select'][P]> :
        P extends 'WorkoutSectionType'
        ? WorkoutSectionTypeGetPayload<S['select'][P]> : never
  } 
    : LoggedWorkoutSection
  : LoggedWorkoutSection


  type LoggedWorkoutSectionCountArgs = Merge<
    Omit<LoggedWorkoutSectionFindManyArgs, 'select' | 'include'> & {
      select?: LoggedWorkoutSectionCountAggregateInputType | true
    }
  >

  export interface LoggedWorkoutSectionDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one LoggedWorkoutSection that matches the filter.
     * @param {LoggedWorkoutSectionFindUniqueArgs} args - Arguments to find a LoggedWorkoutSection
     * @example
     * // Get one LoggedWorkoutSection
     * const loggedWorkoutSection = await prisma.loggedWorkoutSection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LoggedWorkoutSectionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, LoggedWorkoutSectionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'LoggedWorkoutSection'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection>, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection | null >, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T> | null >>

    /**
     * Find the first LoggedWorkoutSection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSectionFindFirstArgs} args - Arguments to find a LoggedWorkoutSection
     * @example
     * // Get one LoggedWorkoutSection
     * const loggedWorkoutSection = await prisma.loggedWorkoutSection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LoggedWorkoutSectionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, LoggedWorkoutSectionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'LoggedWorkoutSection'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection>, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection | null >, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T> | null >>

    /**
     * Find zero or more LoggedWorkoutSections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSectionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LoggedWorkoutSections
     * const loggedWorkoutSections = await prisma.loggedWorkoutSection.findMany()
     * 
     * // Get first 10 LoggedWorkoutSections
     * const loggedWorkoutSections = await prisma.loggedWorkoutSection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loggedWorkoutSectionWithIdOnly = await prisma.loggedWorkoutSection.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LoggedWorkoutSectionFindManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutSectionFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutSection>>, PrismaPromise<Array<LoggedWorkoutSectionGetPayload<T>>>>

    /**
     * Create a LoggedWorkoutSection.
     * @param {LoggedWorkoutSectionCreateArgs} args - Arguments to create a LoggedWorkoutSection.
     * @example
     * // Create one LoggedWorkoutSection
     * const LoggedWorkoutSection = await prisma.loggedWorkoutSection.create({
     *   data: {
     *     // ... data to create a LoggedWorkoutSection
     *   }
     * })
     * 
    **/
    create<T extends LoggedWorkoutSectionCreateArgs>(
      args: SelectSubset<T, LoggedWorkoutSectionCreateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection>, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T>>>

    /**
     * Create many LoggedWorkoutSections.
     *     @param {LoggedWorkoutSectionCreateManyArgs} args - Arguments to create many LoggedWorkoutSections.
     *     @example
     *     // Create many LoggedWorkoutSections
     *     const loggedWorkoutSection = await prisma.loggedWorkoutSection.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LoggedWorkoutSectionCreateManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutSectionCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a LoggedWorkoutSection.
     * @param {LoggedWorkoutSectionDeleteArgs} args - Arguments to delete one LoggedWorkoutSection.
     * @example
     * // Delete one LoggedWorkoutSection
     * const LoggedWorkoutSection = await prisma.loggedWorkoutSection.delete({
     *   where: {
     *     // ... filter to delete one LoggedWorkoutSection
     *   }
     * })
     * 
    **/
    delete<T extends LoggedWorkoutSectionDeleteArgs>(
      args: SelectSubset<T, LoggedWorkoutSectionDeleteArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection>, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T>>>

    /**
     * Update one LoggedWorkoutSection.
     * @param {LoggedWorkoutSectionUpdateArgs} args - Arguments to update one LoggedWorkoutSection.
     * @example
     * // Update one LoggedWorkoutSection
     * const loggedWorkoutSection = await prisma.loggedWorkoutSection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LoggedWorkoutSectionUpdateArgs>(
      args: SelectSubset<T, LoggedWorkoutSectionUpdateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection>, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T>>>

    /**
     * Delete zero or more LoggedWorkoutSections.
     * @param {LoggedWorkoutSectionDeleteManyArgs} args - Arguments to filter LoggedWorkoutSections to delete.
     * @example
     * // Delete a few LoggedWorkoutSections
     * const { count } = await prisma.loggedWorkoutSection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LoggedWorkoutSectionDeleteManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutSectionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more LoggedWorkoutSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LoggedWorkoutSections
     * const loggedWorkoutSection = await prisma.loggedWorkoutSection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LoggedWorkoutSectionUpdateManyArgs>(
      args: SelectSubset<T, LoggedWorkoutSectionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one LoggedWorkoutSection.
     * @param {LoggedWorkoutSectionUpsertArgs} args - Arguments to update or create a LoggedWorkoutSection.
     * @example
     * // Update or create a LoggedWorkoutSection
     * const loggedWorkoutSection = await prisma.loggedWorkoutSection.upsert({
     *   create: {
     *     // ... data to create a LoggedWorkoutSection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LoggedWorkoutSection we want to update
     *   }
     * })
    **/
    upsert<T extends LoggedWorkoutSectionUpsertArgs>(
      args: SelectSubset<T, LoggedWorkoutSectionUpsertArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection>, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T>>>

    /**
     * Count the number of LoggedWorkoutSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSectionCountArgs} args - Arguments to filter LoggedWorkoutSections to count.
     * @example
     * // Count the number of LoggedWorkoutSections
     * const count = await prisma.loggedWorkoutSection.count({
     *   where: {
     *     // ... the filter for the LoggedWorkoutSections we want to count
     *   }
     * })
    **/
    count<T extends LoggedWorkoutSectionCountArgs>(
      args?: Subset<T, LoggedWorkoutSectionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoggedWorkoutSectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LoggedWorkoutSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoggedWorkoutSectionAggregateArgs>(args: Subset<T, LoggedWorkoutSectionAggregateArgs>): PrismaPromise<GetLoggedWorkoutSectionAggregateType<T>>

    /**
     * Group by LoggedWorkoutSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoggedWorkoutSectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoggedWorkoutSectionGroupByArgs['orderBy'] }
        : { orderBy?: LoggedWorkoutSectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoggedWorkoutSectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoggedWorkoutSectionGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for LoggedWorkoutSection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__LoggedWorkoutSectionClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    LoggedWorkoutSets<T extends LoggedWorkoutSetFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutSetFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutSet>>, PrismaPromise<Array<LoggedWorkoutSetGetPayload<T>>>>;

    LoggedWorkout<T extends LoggedWorkoutArgs = {}>(args?: Subset<T, LoggedWorkoutArgs>): CheckSelect<T, Prisma__LoggedWorkoutClient<LoggedWorkout | null >, Prisma__LoggedWorkoutClient<LoggedWorkoutGetPayload<T> | null >>;

    WorkoutSectionType<T extends WorkoutSectionTypeArgs = {}>(args?: Subset<T, WorkoutSectionTypeArgs>): CheckSelect<T, Prisma__WorkoutSectionTypeClient<WorkoutSectionType | null >, Prisma__WorkoutSectionTypeClient<WorkoutSectionTypeGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * LoggedWorkoutSection findUnique
   */
  export type LoggedWorkoutSectionFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
    /**
     * Throw an Error if a LoggedWorkoutSection can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkoutSection to fetch.
     * 
    **/
    where: LoggedWorkoutSectionWhereUniqueInput
  }


  /**
   * LoggedWorkoutSection findFirst
   */
  export type LoggedWorkoutSectionFindFirstArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
    /**
     * Throw an Error if a LoggedWorkoutSection can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkoutSection to fetch.
     * 
    **/
    where?: LoggedWorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutSections to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LoggedWorkoutSections.
     * 
    **/
    cursor?: LoggedWorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutSections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutSections.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LoggedWorkoutSections.
     * 
    **/
    distinct?: Enumerable<LoggedWorkoutSectionScalarFieldEnum>
  }


  /**
   * LoggedWorkoutSection findMany
   */
  export type LoggedWorkoutSectionFindManyArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
    /**
     * Filter, which LoggedWorkoutSections to fetch.
     * 
    **/
    where?: LoggedWorkoutSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutSections to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutSectionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LoggedWorkoutSections.
     * 
    **/
    cursor?: LoggedWorkoutSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutSections from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutSections.
     * 
    **/
    skip?: number
    distinct?: Enumerable<LoggedWorkoutSectionScalarFieldEnum>
  }


  /**
   * LoggedWorkoutSection create
   */
  export type LoggedWorkoutSectionCreateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
    /**
     * The data needed to create a LoggedWorkoutSection.
     * 
    **/
    data: XOR<LoggedWorkoutSectionCreateInput, LoggedWorkoutSectionUncheckedCreateInput>
  }


  /**
   * LoggedWorkoutSection createMany
   */
  export type LoggedWorkoutSectionCreateManyArgs = {
    data: Enumerable<LoggedWorkoutSectionCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * LoggedWorkoutSection update
   */
  export type LoggedWorkoutSectionUpdateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
    /**
     * The data needed to update a LoggedWorkoutSection.
     * 
    **/
    data: XOR<LoggedWorkoutSectionUpdateInput, LoggedWorkoutSectionUncheckedUpdateInput>
    /**
     * Choose, which LoggedWorkoutSection to update.
     * 
    **/
    where: LoggedWorkoutSectionWhereUniqueInput
  }


  /**
   * LoggedWorkoutSection updateMany
   */
  export type LoggedWorkoutSectionUpdateManyArgs = {
    data: XOR<LoggedWorkoutSectionUpdateManyMutationInput, LoggedWorkoutSectionUncheckedUpdateManyInput>
    where?: LoggedWorkoutSectionWhereInput
  }


  /**
   * LoggedWorkoutSection upsert
   */
  export type LoggedWorkoutSectionUpsertArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
    /**
     * The filter to search for the LoggedWorkoutSection to update in case it exists.
     * 
    **/
    where: LoggedWorkoutSectionWhereUniqueInput
    /**
     * In case the LoggedWorkoutSection found by the `where` argument doesn't exist, create a new LoggedWorkoutSection with this data.
     * 
    **/
    create: XOR<LoggedWorkoutSectionCreateInput, LoggedWorkoutSectionUncheckedCreateInput>
    /**
     * In case the LoggedWorkoutSection was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<LoggedWorkoutSectionUpdateInput, LoggedWorkoutSectionUncheckedUpdateInput>
  }


  /**
   * LoggedWorkoutSection delete
   */
  export type LoggedWorkoutSectionDeleteArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
    /**
     * Filter which LoggedWorkoutSection to delete.
     * 
    **/
    where: LoggedWorkoutSectionWhereUniqueInput
  }


  /**
   * LoggedWorkoutSection deleteMany
   */
  export type LoggedWorkoutSectionDeleteManyArgs = {
    where?: LoggedWorkoutSectionWhereInput
  }


  /**
   * LoggedWorkoutSection without action
   */
  export type LoggedWorkoutSectionArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSection
     * 
    **/
    select?: LoggedWorkoutSectionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSectionInclude | null
  }



  /**
   * Model LoggedWorkoutSet
   */


  export type AggregateLoggedWorkoutSet = {
    _count: LoggedWorkoutSetCountAggregateOutputType | null
    count: LoggedWorkoutSetCountAggregateOutputType | null
    _avg: LoggedWorkoutSetAvgAggregateOutputType | null
    avg: LoggedWorkoutSetAvgAggregateOutputType | null
    _sum: LoggedWorkoutSetSumAggregateOutputType | null
    sum: LoggedWorkoutSetSumAggregateOutputType | null
    _min: LoggedWorkoutSetMinAggregateOutputType | null
    min: LoggedWorkoutSetMinAggregateOutputType | null
    _max: LoggedWorkoutSetMaxAggregateOutputType | null
    max: LoggedWorkoutSetMaxAggregateOutputType | null
  }

  export type LoggedWorkoutSetAvgAggregateOutputType = {
    roundNumber: number | null
    sortPosition: number | null
    duration: number | null
    roundsCompleted: number | null
  }

  export type LoggedWorkoutSetSumAggregateOutputType = {
    roundNumber: number | null
    sortPosition: number | null
    duration: number | null
    roundsCompleted: number | null
  }

  export type LoggedWorkoutSetMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    roundNumber: number | null
    sortPosition: number | null
    duration: number | null
    roundsCompleted: number | null
    loggedWorkoutSectionId: string | null
  }

  export type LoggedWorkoutSetMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    roundNumber: number | null
    sortPosition: number | null
    duration: number | null
    roundsCompleted: number | null
    loggedWorkoutSectionId: string | null
  }

  export type LoggedWorkoutSetCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    note: number
    roundNumber: number
    sortPosition: number
    duration: number
    roundsCompleted: number
    loggedWorkoutSectionId: number
    _all: number
  }


  export type LoggedWorkoutSetAvgAggregateInputType = {
    roundNumber?: true
    sortPosition?: true
    duration?: true
    roundsCompleted?: true
  }

  export type LoggedWorkoutSetSumAggregateInputType = {
    roundNumber?: true
    sortPosition?: true
    duration?: true
    roundsCompleted?: true
  }

  export type LoggedWorkoutSetMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    roundNumber?: true
    sortPosition?: true
    duration?: true
    roundsCompleted?: true
    loggedWorkoutSectionId?: true
  }

  export type LoggedWorkoutSetMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    roundNumber?: true
    sortPosition?: true
    duration?: true
    roundsCompleted?: true
    loggedWorkoutSectionId?: true
  }

  export type LoggedWorkoutSetCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    roundNumber?: true
    sortPosition?: true
    duration?: true
    roundsCompleted?: true
    loggedWorkoutSectionId?: true
    _all?: true
  }

  export type LoggedWorkoutSetAggregateArgs = {
    /**
     * Filter which LoggedWorkoutSet to aggregate.
     * 
    **/
    where?: LoggedWorkoutSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutSets to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: LoggedWorkoutSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutSets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutSets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LoggedWorkoutSets
    **/
    _count?: true | LoggedWorkoutSetCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | LoggedWorkoutSetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoggedWorkoutSetAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: LoggedWorkoutSetAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoggedWorkoutSetSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: LoggedWorkoutSetSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoggedWorkoutSetMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: LoggedWorkoutSetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoggedWorkoutSetMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: LoggedWorkoutSetMaxAggregateInputType
  }

  export type GetLoggedWorkoutSetAggregateType<T extends LoggedWorkoutSetAggregateArgs> = {
        [P in keyof T & keyof AggregateLoggedWorkoutSet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoggedWorkoutSet[P]>
      : GetScalarType<T[P], AggregateLoggedWorkoutSet[P]>
  }


    
    
  export type LoggedWorkoutSetGroupByArgs = {
    where?: LoggedWorkoutSetWhereInput
    orderBy?: Enumerable<LoggedWorkoutSetOrderByInput>
    by: Array<LoggedWorkoutSetScalarFieldEnum>
    having?: LoggedWorkoutSetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoggedWorkoutSetCountAggregateInputType | true
    _avg?: LoggedWorkoutSetAvgAggregateInputType
    _sum?: LoggedWorkoutSetSumAggregateInputType
    _min?: LoggedWorkoutSetMinAggregateInputType
    _max?: LoggedWorkoutSetMaxAggregateInputType
  }


  export type LoggedWorkoutSetGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    note: string | null
    roundNumber: number
    sortPosition: number
    duration: number | null
    roundsCompleted: number
    loggedWorkoutSectionId: string
    _count: LoggedWorkoutSetCountAggregateOutputType | null
    _avg: LoggedWorkoutSetAvgAggregateOutputType | null
    _sum: LoggedWorkoutSetSumAggregateOutputType | null
    _min: LoggedWorkoutSetMinAggregateOutputType | null
    _max: LoggedWorkoutSetMaxAggregateOutputType | null
  }

  type GetLoggedWorkoutSetGroupByPayload<T extends LoggedWorkoutSetGroupByArgs> = Promise<
    Array<
      PickArray<LoggedWorkoutSetGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof LoggedWorkoutSetGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], LoggedWorkoutSetGroupByOutputType[P]> 
            : GetScalarType<T[P], LoggedWorkoutSetGroupByOutputType[P]>
        }
      > 
    >


  export type LoggedWorkoutSetSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    note?: boolean
    roundNumber?: boolean
    sortPosition?: boolean
    duration?: boolean
    roundsCompleted?: boolean
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    LoggedWorkoutSection?: boolean | LoggedWorkoutSectionArgs
    loggedWorkoutSectionId?: boolean
  }

  export type LoggedWorkoutSetInclude = {
    User?: boolean | UserArgs
    LoggedWorkoutMoves?: boolean | LoggedWorkoutMoveFindManyArgs
    LoggedWorkoutSection?: boolean | LoggedWorkoutSectionArgs
  }

  export type LoggedWorkoutSetGetPayload<
    S extends boolean | null | undefined | LoggedWorkoutSetArgs,
    U = keyof S
      > = S extends true
        ? LoggedWorkoutSet
    : S extends undefined
    ? never
    : S extends LoggedWorkoutSetArgs | LoggedWorkoutSetFindManyArgs
    ?'include' extends U
    ? LoggedWorkoutSet  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['include'][P]>>  :
        P extends 'LoggedWorkoutSection'
        ? LoggedWorkoutSectionGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof LoggedWorkoutSet ?LoggedWorkoutSet [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'LoggedWorkoutMoves'
        ? Array < LoggedWorkoutMoveGetPayload<S['select'][P]>>  :
        P extends 'LoggedWorkoutSection'
        ? LoggedWorkoutSectionGetPayload<S['select'][P]> : never
  } 
    : LoggedWorkoutSet
  : LoggedWorkoutSet


  type LoggedWorkoutSetCountArgs = Merge<
    Omit<LoggedWorkoutSetFindManyArgs, 'select' | 'include'> & {
      select?: LoggedWorkoutSetCountAggregateInputType | true
    }
  >

  export interface LoggedWorkoutSetDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one LoggedWorkoutSet that matches the filter.
     * @param {LoggedWorkoutSetFindUniqueArgs} args - Arguments to find a LoggedWorkoutSet
     * @example
     * // Get one LoggedWorkoutSet
     * const loggedWorkoutSet = await prisma.loggedWorkoutSet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LoggedWorkoutSetFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, LoggedWorkoutSetFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'LoggedWorkoutSet'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet>, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet | null >, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T> | null >>

    /**
     * Find the first LoggedWorkoutSet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSetFindFirstArgs} args - Arguments to find a LoggedWorkoutSet
     * @example
     * // Get one LoggedWorkoutSet
     * const loggedWorkoutSet = await prisma.loggedWorkoutSet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LoggedWorkoutSetFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, LoggedWorkoutSetFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'LoggedWorkoutSet'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet>, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet | null >, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T> | null >>

    /**
     * Find zero or more LoggedWorkoutSets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSetFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LoggedWorkoutSets
     * const loggedWorkoutSets = await prisma.loggedWorkoutSet.findMany()
     * 
     * // Get first 10 LoggedWorkoutSets
     * const loggedWorkoutSets = await prisma.loggedWorkoutSet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loggedWorkoutSetWithIdOnly = await prisma.loggedWorkoutSet.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LoggedWorkoutSetFindManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutSetFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutSet>>, PrismaPromise<Array<LoggedWorkoutSetGetPayload<T>>>>

    /**
     * Create a LoggedWorkoutSet.
     * @param {LoggedWorkoutSetCreateArgs} args - Arguments to create a LoggedWorkoutSet.
     * @example
     * // Create one LoggedWorkoutSet
     * const LoggedWorkoutSet = await prisma.loggedWorkoutSet.create({
     *   data: {
     *     // ... data to create a LoggedWorkoutSet
     *   }
     * })
     * 
    **/
    create<T extends LoggedWorkoutSetCreateArgs>(
      args: SelectSubset<T, LoggedWorkoutSetCreateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet>, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T>>>

    /**
     * Create many LoggedWorkoutSets.
     *     @param {LoggedWorkoutSetCreateManyArgs} args - Arguments to create many LoggedWorkoutSets.
     *     @example
     *     // Create many LoggedWorkoutSets
     *     const loggedWorkoutSet = await prisma.loggedWorkoutSet.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LoggedWorkoutSetCreateManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutSetCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a LoggedWorkoutSet.
     * @param {LoggedWorkoutSetDeleteArgs} args - Arguments to delete one LoggedWorkoutSet.
     * @example
     * // Delete one LoggedWorkoutSet
     * const LoggedWorkoutSet = await prisma.loggedWorkoutSet.delete({
     *   where: {
     *     // ... filter to delete one LoggedWorkoutSet
     *   }
     * })
     * 
    **/
    delete<T extends LoggedWorkoutSetDeleteArgs>(
      args: SelectSubset<T, LoggedWorkoutSetDeleteArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet>, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T>>>

    /**
     * Update one LoggedWorkoutSet.
     * @param {LoggedWorkoutSetUpdateArgs} args - Arguments to update one LoggedWorkoutSet.
     * @example
     * // Update one LoggedWorkoutSet
     * const loggedWorkoutSet = await prisma.loggedWorkoutSet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LoggedWorkoutSetUpdateArgs>(
      args: SelectSubset<T, LoggedWorkoutSetUpdateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet>, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T>>>

    /**
     * Delete zero or more LoggedWorkoutSets.
     * @param {LoggedWorkoutSetDeleteManyArgs} args - Arguments to filter LoggedWorkoutSets to delete.
     * @example
     * // Delete a few LoggedWorkoutSets
     * const { count } = await prisma.loggedWorkoutSet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LoggedWorkoutSetDeleteManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutSetDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more LoggedWorkoutSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LoggedWorkoutSets
     * const loggedWorkoutSet = await prisma.loggedWorkoutSet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LoggedWorkoutSetUpdateManyArgs>(
      args: SelectSubset<T, LoggedWorkoutSetUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one LoggedWorkoutSet.
     * @param {LoggedWorkoutSetUpsertArgs} args - Arguments to update or create a LoggedWorkoutSet.
     * @example
     * // Update or create a LoggedWorkoutSet
     * const loggedWorkoutSet = await prisma.loggedWorkoutSet.upsert({
     *   create: {
     *     // ... data to create a LoggedWorkoutSet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LoggedWorkoutSet we want to update
     *   }
     * })
    **/
    upsert<T extends LoggedWorkoutSetUpsertArgs>(
      args: SelectSubset<T, LoggedWorkoutSetUpsertArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet>, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T>>>

    /**
     * Count the number of LoggedWorkoutSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSetCountArgs} args - Arguments to filter LoggedWorkoutSets to count.
     * @example
     * // Count the number of LoggedWorkoutSets
     * const count = await prisma.loggedWorkoutSet.count({
     *   where: {
     *     // ... the filter for the LoggedWorkoutSets we want to count
     *   }
     * })
    **/
    count<T extends LoggedWorkoutSetCountArgs>(
      args?: Subset<T, LoggedWorkoutSetCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoggedWorkoutSetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LoggedWorkoutSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoggedWorkoutSetAggregateArgs>(args: Subset<T, LoggedWorkoutSetAggregateArgs>): PrismaPromise<GetLoggedWorkoutSetAggregateType<T>>

    /**
     * Group by LoggedWorkoutSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutSetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoggedWorkoutSetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoggedWorkoutSetGroupByArgs['orderBy'] }
        : { orderBy?: LoggedWorkoutSetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoggedWorkoutSetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoggedWorkoutSetGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for LoggedWorkoutSet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__LoggedWorkoutSetClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    LoggedWorkoutMoves<T extends LoggedWorkoutMoveFindManyArgs = {}>(args?: Subset<T, LoggedWorkoutMoveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutMove>>, PrismaPromise<Array<LoggedWorkoutMoveGetPayload<T>>>>;

    LoggedWorkoutSection<T extends LoggedWorkoutSectionArgs = {}>(args?: Subset<T, LoggedWorkoutSectionArgs>): CheckSelect<T, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSection | null >, Prisma__LoggedWorkoutSectionClient<LoggedWorkoutSectionGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * LoggedWorkoutSet findUnique
   */
  export type LoggedWorkoutSetFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
    /**
     * Throw an Error if a LoggedWorkoutSet can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkoutSet to fetch.
     * 
    **/
    where: LoggedWorkoutSetWhereUniqueInput
  }


  /**
   * LoggedWorkoutSet findFirst
   */
  export type LoggedWorkoutSetFindFirstArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
    /**
     * Throw an Error if a LoggedWorkoutSet can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkoutSet to fetch.
     * 
    **/
    where?: LoggedWorkoutSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutSets to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LoggedWorkoutSets.
     * 
    **/
    cursor?: LoggedWorkoutSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutSets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutSets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LoggedWorkoutSets.
     * 
    **/
    distinct?: Enumerable<LoggedWorkoutSetScalarFieldEnum>
  }


  /**
   * LoggedWorkoutSet findMany
   */
  export type LoggedWorkoutSetFindManyArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
    /**
     * Filter, which LoggedWorkoutSets to fetch.
     * 
    **/
    where?: LoggedWorkoutSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutSets to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LoggedWorkoutSets.
     * 
    **/
    cursor?: LoggedWorkoutSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutSets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutSets.
     * 
    **/
    skip?: number
    distinct?: Enumerable<LoggedWorkoutSetScalarFieldEnum>
  }


  /**
   * LoggedWorkoutSet create
   */
  export type LoggedWorkoutSetCreateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
    /**
     * The data needed to create a LoggedWorkoutSet.
     * 
    **/
    data: XOR<LoggedWorkoutSetCreateInput, LoggedWorkoutSetUncheckedCreateInput>
  }


  /**
   * LoggedWorkoutSet createMany
   */
  export type LoggedWorkoutSetCreateManyArgs = {
    data: Enumerable<LoggedWorkoutSetCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * LoggedWorkoutSet update
   */
  export type LoggedWorkoutSetUpdateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
    /**
     * The data needed to update a LoggedWorkoutSet.
     * 
    **/
    data: XOR<LoggedWorkoutSetUpdateInput, LoggedWorkoutSetUncheckedUpdateInput>
    /**
     * Choose, which LoggedWorkoutSet to update.
     * 
    **/
    where: LoggedWorkoutSetWhereUniqueInput
  }


  /**
   * LoggedWorkoutSet updateMany
   */
  export type LoggedWorkoutSetUpdateManyArgs = {
    data: XOR<LoggedWorkoutSetUpdateManyMutationInput, LoggedWorkoutSetUncheckedUpdateManyInput>
    where?: LoggedWorkoutSetWhereInput
  }


  /**
   * LoggedWorkoutSet upsert
   */
  export type LoggedWorkoutSetUpsertArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
    /**
     * The filter to search for the LoggedWorkoutSet to update in case it exists.
     * 
    **/
    where: LoggedWorkoutSetWhereUniqueInput
    /**
     * In case the LoggedWorkoutSet found by the `where` argument doesn't exist, create a new LoggedWorkoutSet with this data.
     * 
    **/
    create: XOR<LoggedWorkoutSetCreateInput, LoggedWorkoutSetUncheckedCreateInput>
    /**
     * In case the LoggedWorkoutSet was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<LoggedWorkoutSetUpdateInput, LoggedWorkoutSetUncheckedUpdateInput>
  }


  /**
   * LoggedWorkoutSet delete
   */
  export type LoggedWorkoutSetDeleteArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
    /**
     * Filter which LoggedWorkoutSet to delete.
     * 
    **/
    where: LoggedWorkoutSetWhereUniqueInput
  }


  /**
   * LoggedWorkoutSet deleteMany
   */
  export type LoggedWorkoutSetDeleteManyArgs = {
    where?: LoggedWorkoutSetWhereInput
  }


  /**
   * LoggedWorkoutSet without action
   */
  export type LoggedWorkoutSetArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutSet
     * 
    **/
    select?: LoggedWorkoutSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutSetInclude | null
  }



  /**
   * Model LoggedWorkoutMove
   */


  export type AggregateLoggedWorkoutMove = {
    _count: LoggedWorkoutMoveCountAggregateOutputType | null
    count: LoggedWorkoutMoveCountAggregateOutputType | null
    _avg: LoggedWorkoutMoveAvgAggregateOutputType | null
    avg: LoggedWorkoutMoveAvgAggregateOutputType | null
    _sum: LoggedWorkoutMoveSumAggregateOutputType | null
    sum: LoggedWorkoutMoveSumAggregateOutputType | null
    _min: LoggedWorkoutMoveMinAggregateOutputType | null
    min: LoggedWorkoutMoveMinAggregateOutputType | null
    _max: LoggedWorkoutMoveMaxAggregateOutputType | null
    max: LoggedWorkoutMoveMaxAggregateOutputType | null
  }

  export type LoggedWorkoutMoveAvgAggregateOutputType = {
    sortPosition: number | null
    reps: number | null
    distance: number | null
    loadAmount: number | null
  }

  export type LoggedWorkoutMoveSumAggregateOutputType = {
    sortPosition: number | null
    reps: number | null
    distance: number | null
    loadAmount: number | null
  }

  export type LoggedWorkoutMoveMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    sortPosition: number | null
    repType: WorkoutMoveRepType | null
    reps: number | null
    distance: number | null
    distanceUnit: DistanceUnit | null
    loadAmount: number | null
    loadUnit: LoadUnit | null
    timeUnit: TimeUnit | null
    moveId: string | null
    equipmentId: string | null
    loggedWorkoutSetId: string | null
  }

  export type LoggedWorkoutMoveMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    sortPosition: number | null
    repType: WorkoutMoveRepType | null
    reps: number | null
    distance: number | null
    distanceUnit: DistanceUnit | null
    loadAmount: number | null
    loadUnit: LoadUnit | null
    timeUnit: TimeUnit | null
    moveId: string | null
    equipmentId: string | null
    loggedWorkoutSetId: string | null
  }

  export type LoggedWorkoutMoveCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    sortPosition: number
    repType: number
    reps: number
    distance: number
    distanceUnit: number
    loadAmount: number
    loadUnit: number
    timeUnit: number
    moveId: number
    equipmentId: number
    loggedWorkoutSetId: number
    _all: number
  }


  export type LoggedWorkoutMoveAvgAggregateInputType = {
    sortPosition?: true
    reps?: true
    distance?: true
    loadAmount?: true
  }

  export type LoggedWorkoutMoveSumAggregateInputType = {
    sortPosition?: true
    reps?: true
    distance?: true
    loadAmount?: true
  }

  export type LoggedWorkoutMoveMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distance?: true
    distanceUnit?: true
    loadAmount?: true
    loadUnit?: true
    timeUnit?: true
    moveId?: true
    equipmentId?: true
    loggedWorkoutSetId?: true
  }

  export type LoggedWorkoutMoveMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distance?: true
    distanceUnit?: true
    loadAmount?: true
    loadUnit?: true
    timeUnit?: true
    moveId?: true
    equipmentId?: true
    loggedWorkoutSetId?: true
  }

  export type LoggedWorkoutMoveCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    sortPosition?: true
    repType?: true
    reps?: true
    distance?: true
    distanceUnit?: true
    loadAmount?: true
    loadUnit?: true
    timeUnit?: true
    moveId?: true
    equipmentId?: true
    loggedWorkoutSetId?: true
    _all?: true
  }

  export type LoggedWorkoutMoveAggregateArgs = {
    /**
     * Filter which LoggedWorkoutMove to aggregate.
     * 
    **/
    where?: LoggedWorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutMoves to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: LoggedWorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutMoves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutMoves.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LoggedWorkoutMoves
    **/
    _count?: true | LoggedWorkoutMoveCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | LoggedWorkoutMoveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoggedWorkoutMoveAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: LoggedWorkoutMoveAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoggedWorkoutMoveSumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: LoggedWorkoutMoveSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoggedWorkoutMoveMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: LoggedWorkoutMoveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoggedWorkoutMoveMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: LoggedWorkoutMoveMaxAggregateInputType
  }

  export type GetLoggedWorkoutMoveAggregateType<T extends LoggedWorkoutMoveAggregateArgs> = {
        [P in keyof T & keyof AggregateLoggedWorkoutMove]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoggedWorkoutMove[P]>
      : GetScalarType<T[P], AggregateLoggedWorkoutMove[P]>
  }


    
    
  export type LoggedWorkoutMoveGroupByArgs = {
    where?: LoggedWorkoutMoveWhereInput
    orderBy?: Enumerable<LoggedWorkoutMoveOrderByInput>
    by: Array<LoggedWorkoutMoveScalarFieldEnum>
    having?: LoggedWorkoutMoveScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoggedWorkoutMoveCountAggregateInputType | true
    _avg?: LoggedWorkoutMoveAvgAggregateInputType
    _sum?: LoggedWorkoutMoveSumAggregateInputType
    _min?: LoggedWorkoutMoveMinAggregateInputType
    _max?: LoggedWorkoutMoveMaxAggregateInputType
  }


  export type LoggedWorkoutMoveGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance: number | null
    distanceUnit: DistanceUnit
    loadAmount: number | null
    loadUnit: LoadUnit
    timeUnit: TimeUnit
    moveId: string
    equipmentId: string | null
    loggedWorkoutSetId: string
    _count: LoggedWorkoutMoveCountAggregateOutputType | null
    _avg: LoggedWorkoutMoveAvgAggregateOutputType | null
    _sum: LoggedWorkoutMoveSumAggregateOutputType | null
    _min: LoggedWorkoutMoveMinAggregateOutputType | null
    _max: LoggedWorkoutMoveMaxAggregateOutputType | null
  }

  type GetLoggedWorkoutMoveGroupByPayload<T extends LoggedWorkoutMoveGroupByArgs> = Promise<
    Array<
      PickArray<LoggedWorkoutMoveGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof LoggedWorkoutMoveGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], LoggedWorkoutMoveGroupByOutputType[P]> 
            : GetScalarType<T[P], LoggedWorkoutMoveGroupByOutputType[P]>
        }
      > 
    >


  export type LoggedWorkoutMoveSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    sortPosition?: boolean
    repType?: boolean
    reps?: boolean
    distance?: boolean
    distanceUnit?: boolean
    loadAmount?: boolean
    loadUnit?: boolean
    timeUnit?: boolean
    Move?: boolean | MoveArgs
    moveId?: boolean
    Equipment?: boolean | EquipmentArgs
    equipmentId?: boolean
    LoggedWorkoutSet?: boolean | LoggedWorkoutSetArgs
    loggedWorkoutSetId?: boolean
  }

  export type LoggedWorkoutMoveInclude = {
    User?: boolean | UserArgs
    Move?: boolean | MoveArgs
    Equipment?: boolean | EquipmentArgs
    LoggedWorkoutSet?: boolean | LoggedWorkoutSetArgs
  }

  export type LoggedWorkoutMoveGetPayload<
    S extends boolean | null | undefined | LoggedWorkoutMoveArgs,
    U = keyof S
      > = S extends true
        ? LoggedWorkoutMove
    : S extends undefined
    ? never
    : S extends LoggedWorkoutMoveArgs | LoggedWorkoutMoveFindManyArgs
    ?'include' extends U
    ? LoggedWorkoutMove  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'Move'
        ? MoveGetPayload<S['include'][P]> :
        P extends 'Equipment'
        ? EquipmentGetPayload<S['include'][P]> | null :
        P extends 'LoggedWorkoutSet'
        ? LoggedWorkoutSetGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof LoggedWorkoutMove ?LoggedWorkoutMove [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'Move'
        ? MoveGetPayload<S['select'][P]> :
        P extends 'Equipment'
        ? EquipmentGetPayload<S['select'][P]> | null :
        P extends 'LoggedWorkoutSet'
        ? LoggedWorkoutSetGetPayload<S['select'][P]> : never
  } 
    : LoggedWorkoutMove
  : LoggedWorkoutMove


  type LoggedWorkoutMoveCountArgs = Merge<
    Omit<LoggedWorkoutMoveFindManyArgs, 'select' | 'include'> & {
      select?: LoggedWorkoutMoveCountAggregateInputType | true
    }
  >

  export interface LoggedWorkoutMoveDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one LoggedWorkoutMove that matches the filter.
     * @param {LoggedWorkoutMoveFindUniqueArgs} args - Arguments to find a LoggedWorkoutMove
     * @example
     * // Get one LoggedWorkoutMove
     * const loggedWorkoutMove = await prisma.loggedWorkoutMove.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LoggedWorkoutMoveFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, LoggedWorkoutMoveFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'LoggedWorkoutMove'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove>, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove | null >, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T> | null >>

    /**
     * Find the first LoggedWorkoutMove that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutMoveFindFirstArgs} args - Arguments to find a LoggedWorkoutMove
     * @example
     * // Get one LoggedWorkoutMove
     * const loggedWorkoutMove = await prisma.loggedWorkoutMove.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LoggedWorkoutMoveFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, LoggedWorkoutMoveFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'LoggedWorkoutMove'> extends True ? CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove>, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T>>> : CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove | null >, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T> | null >>

    /**
     * Find zero or more LoggedWorkoutMoves that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutMoveFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LoggedWorkoutMoves
     * const loggedWorkoutMoves = await prisma.loggedWorkoutMove.findMany()
     * 
     * // Get first 10 LoggedWorkoutMoves
     * const loggedWorkoutMoves = await prisma.loggedWorkoutMove.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loggedWorkoutMoveWithIdOnly = await prisma.loggedWorkoutMove.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LoggedWorkoutMoveFindManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutMoveFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<LoggedWorkoutMove>>, PrismaPromise<Array<LoggedWorkoutMoveGetPayload<T>>>>

    /**
     * Create a LoggedWorkoutMove.
     * @param {LoggedWorkoutMoveCreateArgs} args - Arguments to create a LoggedWorkoutMove.
     * @example
     * // Create one LoggedWorkoutMove
     * const LoggedWorkoutMove = await prisma.loggedWorkoutMove.create({
     *   data: {
     *     // ... data to create a LoggedWorkoutMove
     *   }
     * })
     * 
    **/
    create<T extends LoggedWorkoutMoveCreateArgs>(
      args: SelectSubset<T, LoggedWorkoutMoveCreateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove>, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T>>>

    /**
     * Create many LoggedWorkoutMoves.
     *     @param {LoggedWorkoutMoveCreateManyArgs} args - Arguments to create many LoggedWorkoutMoves.
     *     @example
     *     // Create many LoggedWorkoutMoves
     *     const loggedWorkoutMove = await prisma.loggedWorkoutMove.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LoggedWorkoutMoveCreateManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutMoveCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a LoggedWorkoutMove.
     * @param {LoggedWorkoutMoveDeleteArgs} args - Arguments to delete one LoggedWorkoutMove.
     * @example
     * // Delete one LoggedWorkoutMove
     * const LoggedWorkoutMove = await prisma.loggedWorkoutMove.delete({
     *   where: {
     *     // ... filter to delete one LoggedWorkoutMove
     *   }
     * })
     * 
    **/
    delete<T extends LoggedWorkoutMoveDeleteArgs>(
      args: SelectSubset<T, LoggedWorkoutMoveDeleteArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove>, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T>>>

    /**
     * Update one LoggedWorkoutMove.
     * @param {LoggedWorkoutMoveUpdateArgs} args - Arguments to update one LoggedWorkoutMove.
     * @example
     * // Update one LoggedWorkoutMove
     * const loggedWorkoutMove = await prisma.loggedWorkoutMove.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LoggedWorkoutMoveUpdateArgs>(
      args: SelectSubset<T, LoggedWorkoutMoveUpdateArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove>, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T>>>

    /**
     * Delete zero or more LoggedWorkoutMoves.
     * @param {LoggedWorkoutMoveDeleteManyArgs} args - Arguments to filter LoggedWorkoutMoves to delete.
     * @example
     * // Delete a few LoggedWorkoutMoves
     * const { count } = await prisma.loggedWorkoutMove.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LoggedWorkoutMoveDeleteManyArgs>(
      args?: SelectSubset<T, LoggedWorkoutMoveDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more LoggedWorkoutMoves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutMoveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LoggedWorkoutMoves
     * const loggedWorkoutMove = await prisma.loggedWorkoutMove.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LoggedWorkoutMoveUpdateManyArgs>(
      args: SelectSubset<T, LoggedWorkoutMoveUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one LoggedWorkoutMove.
     * @param {LoggedWorkoutMoveUpsertArgs} args - Arguments to update or create a LoggedWorkoutMove.
     * @example
     * // Update or create a LoggedWorkoutMove
     * const loggedWorkoutMove = await prisma.loggedWorkoutMove.upsert({
     *   create: {
     *     // ... data to create a LoggedWorkoutMove
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LoggedWorkoutMove we want to update
     *   }
     * })
    **/
    upsert<T extends LoggedWorkoutMoveUpsertArgs>(
      args: SelectSubset<T, LoggedWorkoutMoveUpsertArgs>
    ): CheckSelect<T, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMove>, Prisma__LoggedWorkoutMoveClient<LoggedWorkoutMoveGetPayload<T>>>

    /**
     * Count the number of LoggedWorkoutMoves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutMoveCountArgs} args - Arguments to filter LoggedWorkoutMoves to count.
     * @example
     * // Count the number of LoggedWorkoutMoves
     * const count = await prisma.loggedWorkoutMove.count({
     *   where: {
     *     // ... the filter for the LoggedWorkoutMoves we want to count
     *   }
     * })
    **/
    count<T extends LoggedWorkoutMoveCountArgs>(
      args?: Subset<T, LoggedWorkoutMoveCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoggedWorkoutMoveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LoggedWorkoutMove.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutMoveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoggedWorkoutMoveAggregateArgs>(args: Subset<T, LoggedWorkoutMoveAggregateArgs>): PrismaPromise<GetLoggedWorkoutMoveAggregateType<T>>

    /**
     * Group by LoggedWorkoutMove.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoggedWorkoutMoveGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoggedWorkoutMoveGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoggedWorkoutMoveGroupByArgs['orderBy'] }
        : { orderBy?: LoggedWorkoutMoveGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoggedWorkoutMoveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoggedWorkoutMoveGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for LoggedWorkoutMove.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__LoggedWorkoutMoveClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    Move<T extends MoveArgs = {}>(args?: Subset<T, MoveArgs>): CheckSelect<T, Prisma__MoveClient<Move | null >, Prisma__MoveClient<MoveGetPayload<T> | null >>;

    Equipment<T extends EquipmentArgs = {}>(args?: Subset<T, EquipmentArgs>): CheckSelect<T, Prisma__EquipmentClient<Equipment | null >, Prisma__EquipmentClient<EquipmentGetPayload<T> | null >>;

    LoggedWorkoutSet<T extends LoggedWorkoutSetArgs = {}>(args?: Subset<T, LoggedWorkoutSetArgs>): CheckSelect<T, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSet | null >, Prisma__LoggedWorkoutSetClient<LoggedWorkoutSetGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * LoggedWorkoutMove findUnique
   */
  export type LoggedWorkoutMoveFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
    /**
     * Throw an Error if a LoggedWorkoutMove can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkoutMove to fetch.
     * 
    **/
    where: LoggedWorkoutMoveWhereUniqueInput
  }


  /**
   * LoggedWorkoutMove findFirst
   */
  export type LoggedWorkoutMoveFindFirstArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
    /**
     * Throw an Error if a LoggedWorkoutMove can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which LoggedWorkoutMove to fetch.
     * 
    **/
    where?: LoggedWorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutMoves to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LoggedWorkoutMoves.
     * 
    **/
    cursor?: LoggedWorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutMoves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutMoves.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LoggedWorkoutMoves.
     * 
    **/
    distinct?: Enumerable<LoggedWorkoutMoveScalarFieldEnum>
  }


  /**
   * LoggedWorkoutMove findMany
   */
  export type LoggedWorkoutMoveFindManyArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
    /**
     * Filter, which LoggedWorkoutMoves to fetch.
     * 
    **/
    where?: LoggedWorkoutMoveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoggedWorkoutMoves to fetch.
     * 
    **/
    orderBy?: Enumerable<LoggedWorkoutMoveOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LoggedWorkoutMoves.
     * 
    **/
    cursor?: LoggedWorkoutMoveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoggedWorkoutMoves from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoggedWorkoutMoves.
     * 
    **/
    skip?: number
    distinct?: Enumerable<LoggedWorkoutMoveScalarFieldEnum>
  }


  /**
   * LoggedWorkoutMove create
   */
  export type LoggedWorkoutMoveCreateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
    /**
     * The data needed to create a LoggedWorkoutMove.
     * 
    **/
    data: XOR<LoggedWorkoutMoveCreateInput, LoggedWorkoutMoveUncheckedCreateInput>
  }


  /**
   * LoggedWorkoutMove createMany
   */
  export type LoggedWorkoutMoveCreateManyArgs = {
    data: Enumerable<LoggedWorkoutMoveCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * LoggedWorkoutMove update
   */
  export type LoggedWorkoutMoveUpdateArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
    /**
     * The data needed to update a LoggedWorkoutMove.
     * 
    **/
    data: XOR<LoggedWorkoutMoveUpdateInput, LoggedWorkoutMoveUncheckedUpdateInput>
    /**
     * Choose, which LoggedWorkoutMove to update.
     * 
    **/
    where: LoggedWorkoutMoveWhereUniqueInput
  }


  /**
   * LoggedWorkoutMove updateMany
   */
  export type LoggedWorkoutMoveUpdateManyArgs = {
    data: XOR<LoggedWorkoutMoveUpdateManyMutationInput, LoggedWorkoutMoveUncheckedUpdateManyInput>
    where?: LoggedWorkoutMoveWhereInput
  }


  /**
   * LoggedWorkoutMove upsert
   */
  export type LoggedWorkoutMoveUpsertArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
    /**
     * The filter to search for the LoggedWorkoutMove to update in case it exists.
     * 
    **/
    where: LoggedWorkoutMoveWhereUniqueInput
    /**
     * In case the LoggedWorkoutMove found by the `where` argument doesn't exist, create a new LoggedWorkoutMove with this data.
     * 
    **/
    create: XOR<LoggedWorkoutMoveCreateInput, LoggedWorkoutMoveUncheckedCreateInput>
    /**
     * In case the LoggedWorkoutMove was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<LoggedWorkoutMoveUpdateInput, LoggedWorkoutMoveUncheckedUpdateInput>
  }


  /**
   * LoggedWorkoutMove delete
   */
  export type LoggedWorkoutMoveDeleteArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
    /**
     * Filter which LoggedWorkoutMove to delete.
     * 
    **/
    where: LoggedWorkoutMoveWhereUniqueInput
  }


  /**
   * LoggedWorkoutMove deleteMany
   */
  export type LoggedWorkoutMoveDeleteManyArgs = {
    where?: LoggedWorkoutMoveWhereInput
  }


  /**
   * LoggedWorkoutMove without action
   */
  export type LoggedWorkoutMoveArgs = {
    /**
     * Select specific fields to fetch from the LoggedWorkoutMove
     * 
    **/
    select?: LoggedWorkoutMoveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LoggedWorkoutMoveInclude | null
  }



  /**
   * Model ProgressJournal
   */


  export type AggregateProgressJournal = {
    _count: ProgressJournalCountAggregateOutputType | null
    count: ProgressJournalCountAggregateOutputType | null
    _min: ProgressJournalMinAggregateOutputType | null
    min: ProgressJournalMinAggregateOutputType | null
    _max: ProgressJournalMaxAggregateOutputType | null
    max: ProgressJournalMaxAggregateOutputType | null
  }

  export type ProgressJournalMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type ProgressJournalMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
  }

  export type ProgressJournalCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    name: number
    description: number
    _all: number
  }


  export type ProgressJournalMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type ProgressJournalMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
  }

  export type ProgressJournalCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    _all?: true
  }

  export type ProgressJournalAggregateArgs = {
    /**
     * Filter which ProgressJournal to aggregate.
     * 
    **/
    where?: ProgressJournalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournals to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProgressJournalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournals
    **/
    _count?: true | ProgressJournalCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | ProgressJournalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgressJournalMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: ProgressJournalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgressJournalMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: ProgressJournalMaxAggregateInputType
  }

  export type GetProgressJournalAggregateType<T extends ProgressJournalAggregateArgs> = {
        [P in keyof T & keyof AggregateProgressJournal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournal[P]>
      : GetScalarType<T[P], AggregateProgressJournal[P]>
  }


    
    
  export type ProgressJournalGroupByArgs = {
    where?: ProgressJournalWhereInput
    orderBy?: Enumerable<ProgressJournalOrderByInput>
    by: Array<ProgressJournalScalarFieldEnum>
    having?: ProgressJournalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgressJournalCountAggregateInputType | true
    _min?: ProgressJournalMinAggregateInputType
    _max?: ProgressJournalMaxAggregateInputType
  }


  export type ProgressJournalGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    name: string
    description: string | null
    _count: ProgressJournalCountAggregateOutputType | null
    _min: ProgressJournalMinAggregateOutputType | null
    _max: ProgressJournalMaxAggregateOutputType | null
  }

  type GetProgressJournalGroupByPayload<T extends ProgressJournalGroupByArgs> = Promise<
    Array<
      PickArray<ProgressJournalGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof ProgressJournalGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], ProgressJournalGroupByOutputType[P]> 
            : GetScalarType<T[P], ProgressJournalGroupByOutputType[P]>
        }
      > 
    >


  export type ProgressJournalSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    ProgressJournalEntries?: boolean | ProgressJournalEntryFindManyArgs
    ProgressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalInclude = {
    User?: boolean | UserArgs
    ProgressJournalEntries?: boolean | ProgressJournalEntryFindManyArgs
    ProgressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalGetPayload<
    S extends boolean | null | undefined | ProgressJournalArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournal
    : S extends undefined
    ? never
    : S extends ProgressJournalArgs | ProgressJournalFindManyArgs
    ?'include' extends U
    ? ProgressJournal  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'ProgressJournalEntries'
        ? Array < ProgressJournalEntryGetPayload<S['include'][P]>>  :
        P extends 'ProgressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournal ?ProgressJournal [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'ProgressJournalEntries'
        ? Array < ProgressJournalEntryGetPayload<S['select'][P]>>  :
        P extends 'ProgressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['select'][P]>>  : never
  } 
    : ProgressJournal
  : ProgressJournal


  type ProgressJournalCountArgs = Merge<
    Omit<ProgressJournalFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalCountAggregateInputType | true
    }
  >

  export interface ProgressJournalDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournal that matches the filter.
     * @param {ProgressJournalFindUniqueArgs} args - Arguments to find a ProgressJournal
     * @example
     * // Get one ProgressJournal
     * const progressJournal = await prisma.progressJournal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournal'> extends True ? CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>

    /**
     * Find the first ProgressJournal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalFindFirstArgs} args - Arguments to find a ProgressJournal
     * @example
     * // Get one ProgressJournal
     * const progressJournal = await prisma.progressJournal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournal'> extends True ? CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournals
     * const progressJournals = await prisma.progressJournal.findMany()
     * 
     * // Get first 10 ProgressJournals
     * const progressJournals = await prisma.progressJournal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalWithIdOnly = await prisma.progressJournal.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournal>>, PrismaPromise<Array<ProgressJournalGetPayload<T>>>>

    /**
     * Create a ProgressJournal.
     * @param {ProgressJournalCreateArgs} args - Arguments to create a ProgressJournal.
     * @example
     * // Create one ProgressJournal
     * const ProgressJournal = await prisma.progressJournal.create({
     *   data: {
     *     // ... data to create a ProgressJournal
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalCreateArgs>(
      args: SelectSubset<T, ProgressJournalCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Create many ProgressJournals.
     *     @param {ProgressJournalCreateManyArgs} args - Arguments to create many ProgressJournals.
     *     @example
     *     // Create many ProgressJournals
     *     const progressJournal = await prisma.progressJournal.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProgressJournalCreateManyArgs>(
      args?: SelectSubset<T, ProgressJournalCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ProgressJournal.
     * @param {ProgressJournalDeleteArgs} args - Arguments to delete one ProgressJournal.
     * @example
     * // Delete one ProgressJournal
     * const ProgressJournal = await prisma.progressJournal.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournal
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalDeleteArgs>(
      args: SelectSubset<T, ProgressJournalDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Update one ProgressJournal.
     * @param {ProgressJournalUpdateArgs} args - Arguments to update one ProgressJournal.
     * @example
     * // Update one ProgressJournal
     * const progressJournal = await prisma.progressJournal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalUpdateArgs>(
      args: SelectSubset<T, ProgressJournalUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournals.
     * @param {ProgressJournalDeleteManyArgs} args - Arguments to filter ProgressJournals to delete.
     * @example
     * // Delete a few ProgressJournals
     * const { count } = await prisma.progressJournal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournals
     * const progressJournal = await prisma.progressJournal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournal.
     * @param {ProgressJournalUpsertArgs} args - Arguments to update or create a ProgressJournal.
     * @example
     * // Update or create a ProgressJournal
     * const progressJournal = await prisma.progressJournal.upsert({
     *   create: {
     *     // ... data to create a ProgressJournal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournal we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalUpsertArgs>(
      args: SelectSubset<T, ProgressJournalUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal>, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T>>>

    /**
     * Count the number of ProgressJournals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalCountArgs} args - Arguments to filter ProgressJournals to count.
     * @example
     * // Count the number of ProgressJournals
     * const count = await prisma.progressJournal.count({
     *   where: {
     *     // ... the filter for the ProgressJournals we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalCountArgs>(
      args?: Subset<T, ProgressJournalCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalAggregateArgs>(args: Subset<T, ProgressJournalAggregateArgs>): PrismaPromise<GetProgressJournalAggregateType<T>>

    /**
     * Group by ProgressJournal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgressJournalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgressJournalGroupByArgs['orderBy'] }
        : { orderBy?: ProgressJournalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgressJournalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgressJournalGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    ProgressJournalEntries<T extends ProgressJournalEntryFindManyArgs = {}>(args?: Subset<T, ProgressJournalEntryFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalEntry>>, PrismaPromise<Array<ProgressJournalEntryGetPayload<T>>>>;

    ProgressJournalGoals<T extends ProgressJournalGoalFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoal>>, PrismaPromise<Array<ProgressJournalGoalGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournal findUnique
   */
  export type ProgressJournalFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
    /**
     * Throw an Error if a ProgressJournal can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournal to fetch.
     * 
    **/
    where: ProgressJournalWhereUniqueInput
  }


  /**
   * ProgressJournal findFirst
   */
  export type ProgressJournalFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
    /**
     * Throw an Error if a ProgressJournal can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournal to fetch.
     * 
    **/
    where?: ProgressJournalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournals to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournals.
     * 
    **/
    cursor?: ProgressJournalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournals.
     * 
    **/
    distinct?: Enumerable<ProgressJournalScalarFieldEnum>
  }


  /**
   * ProgressJournal findMany
   */
  export type ProgressJournalFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
    /**
     * Filter, which ProgressJournals to fetch.
     * 
    **/
    where?: ProgressJournalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournals to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournals.
     * 
    **/
    cursor?: ProgressJournalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournals.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalScalarFieldEnum>
  }


  /**
   * ProgressJournal create
   */
  export type ProgressJournalCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
    /**
     * The data needed to create a ProgressJournal.
     * 
    **/
    data: XOR<ProgressJournalCreateInput, ProgressJournalUncheckedCreateInput>
  }


  /**
   * ProgressJournal createMany
   */
  export type ProgressJournalCreateManyArgs = {
    data: Enumerable<ProgressJournalCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ProgressJournal update
   */
  export type ProgressJournalUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
    /**
     * The data needed to update a ProgressJournal.
     * 
    **/
    data: XOR<ProgressJournalUpdateInput, ProgressJournalUncheckedUpdateInput>
    /**
     * Choose, which ProgressJournal to update.
     * 
    **/
    where: ProgressJournalWhereUniqueInput
  }


  /**
   * ProgressJournal updateMany
   */
  export type ProgressJournalUpdateManyArgs = {
    data: XOR<ProgressJournalUpdateManyMutationInput, ProgressJournalUncheckedUpdateManyInput>
    where?: ProgressJournalWhereInput
  }


  /**
   * ProgressJournal upsert
   */
  export type ProgressJournalUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
    /**
     * The filter to search for the ProgressJournal to update in case it exists.
     * 
    **/
    where: ProgressJournalWhereUniqueInput
    /**
     * In case the ProgressJournal found by the `where` argument doesn't exist, create a new ProgressJournal with this data.
     * 
    **/
    create: XOR<ProgressJournalCreateInput, ProgressJournalUncheckedCreateInput>
    /**
     * In case the ProgressJournal was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProgressJournalUpdateInput, ProgressJournalUncheckedUpdateInput>
  }


  /**
   * ProgressJournal delete
   */
  export type ProgressJournalDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
    /**
     * Filter which ProgressJournal to delete.
     * 
    **/
    where: ProgressJournalWhereUniqueInput
  }


  /**
   * ProgressJournal deleteMany
   */
  export type ProgressJournalDeleteManyArgs = {
    where?: ProgressJournalWhereInput
  }


  /**
   * ProgressJournal without action
   */
  export type ProgressJournalArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournal
     * 
    **/
    select?: ProgressJournalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalInclude | null
  }



  /**
   * Model ProgressJournalEntry
   */


  export type AggregateProgressJournalEntry = {
    _count: ProgressJournalEntryCountAggregateOutputType | null
    count: ProgressJournalEntryCountAggregateOutputType | null
    _avg: ProgressJournalEntryAvgAggregateOutputType | null
    avg: ProgressJournalEntryAvgAggregateOutputType | null
    _sum: ProgressJournalEntrySumAggregateOutputType | null
    sum: ProgressJournalEntrySumAggregateOutputType | null
    _min: ProgressJournalEntryMinAggregateOutputType | null
    min: ProgressJournalEntryMinAggregateOutputType | null
    _max: ProgressJournalEntryMaxAggregateOutputType | null
    max: ProgressJournalEntryMaxAggregateOutputType | null
  }

  export type ProgressJournalEntryAvgAggregateOutputType = {
    bodyweight: number | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
  }

  export type ProgressJournalEntrySumAggregateOutputType = {
    bodyweight: number | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
  }

  export type ProgressJournalEntryMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    voiceNoteUri: string | null
    bodyweight: number | null
    bodyweightUnit: BodyweightUnit | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
    progressJournalId: string | null
  }

  export type ProgressJournalEntryMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    note: string | null
    voiceNoteUri: string | null
    bodyweight: number | null
    bodyweightUnit: BodyweightUnit | null
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
    progressJournalId: string | null
  }

  export type ProgressJournalEntryCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    note: number
    voiceNoteUri: number
    bodyweight: number
    bodyweightUnit: number
    moodScore: number
    energyScore: number
    stressScore: number
    motivationScore: number
    progressPhotoUris: number
    progressJournalId: number
    _all: number
  }


  export type ProgressJournalEntryAvgAggregateInputType = {
    bodyweight?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
  }

  export type ProgressJournalEntrySumAggregateInputType = {
    bodyweight?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
  }

  export type ProgressJournalEntryMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    voiceNoteUri?: true
    bodyweight?: true
    bodyweightUnit?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
    progressJournalId?: true
  }

  export type ProgressJournalEntryMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    voiceNoteUri?: true
    bodyweight?: true
    bodyweightUnit?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
    progressJournalId?: true
  }

  export type ProgressJournalEntryCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    note?: true
    voiceNoteUri?: true
    bodyweight?: true
    bodyweightUnit?: true
    moodScore?: true
    energyScore?: true
    stressScore?: true
    motivationScore?: true
    progressPhotoUris?: true
    progressJournalId?: true
    _all?: true
  }

  export type ProgressJournalEntryAggregateArgs = {
    /**
     * Filter which ProgressJournalEntry to aggregate.
     * 
    **/
    where?: ProgressJournalEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProgressJournalEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalEntries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournalEntries
    **/
    _count?: true | ProgressJournalEntryCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | ProgressJournalEntryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProgressJournalEntryAvgAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_avg`
    **/
    avg?: ProgressJournalEntryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProgressJournalEntrySumAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_sum`
    **/
    sum?: ProgressJournalEntrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgressJournalEntryMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: ProgressJournalEntryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgressJournalEntryMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: ProgressJournalEntryMaxAggregateInputType
  }

  export type GetProgressJournalEntryAggregateType<T extends ProgressJournalEntryAggregateArgs> = {
        [P in keyof T & keyof AggregateProgressJournalEntry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournalEntry[P]>
      : GetScalarType<T[P], AggregateProgressJournalEntry[P]>
  }


    
    
  export type ProgressJournalEntryGroupByArgs = {
    where?: ProgressJournalEntryWhereInput
    orderBy?: Enumerable<ProgressJournalEntryOrderByInput>
    by: Array<ProgressJournalEntryScalarFieldEnum>
    having?: ProgressJournalEntryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgressJournalEntryCountAggregateInputType | true
    _avg?: ProgressJournalEntryAvgAggregateInputType
    _sum?: ProgressJournalEntrySumAggregateInputType
    _min?: ProgressJournalEntryMinAggregateInputType
    _max?: ProgressJournalEntryMaxAggregateInputType
  }


  export type ProgressJournalEntryGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    note: string | null
    voiceNoteUri: string | null
    bodyweight: number | null
    bodyweightUnit: BodyweightUnit
    moodScore: number | null
    energyScore: number | null
    stressScore: number | null
    motivationScore: number | null
    progressPhotoUris: string[]
    progressJournalId: string
    _count: ProgressJournalEntryCountAggregateOutputType | null
    _avg: ProgressJournalEntryAvgAggregateOutputType | null
    _sum: ProgressJournalEntrySumAggregateOutputType | null
    _min: ProgressJournalEntryMinAggregateOutputType | null
    _max: ProgressJournalEntryMaxAggregateOutputType | null
  }

  type GetProgressJournalEntryGroupByPayload<T extends ProgressJournalEntryGroupByArgs> = Promise<
    Array<
      PickArray<ProgressJournalEntryGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof ProgressJournalEntryGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], ProgressJournalEntryGroupByOutputType[P]> 
            : GetScalarType<T[P], ProgressJournalEntryGroupByOutputType[P]>
        }
      > 
    >


  export type ProgressJournalEntrySelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    note?: boolean
    voiceNoteUri?: boolean
    bodyweight?: boolean
    bodyweightUnit?: boolean
    moodScore?: boolean
    energyScore?: boolean
    stressScore?: boolean
    motivationScore?: boolean
    progressPhotoUris?: boolean
    ProgressJournal?: boolean | ProgressJournalArgs
    progressJournalId?: boolean
  }

  export type ProgressJournalEntryInclude = {
    User?: boolean | UserArgs
    ProgressJournal?: boolean | ProgressJournalArgs
  }

  export type ProgressJournalEntryGetPayload<
    S extends boolean | null | undefined | ProgressJournalEntryArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournalEntry
    : S extends undefined
    ? never
    : S extends ProgressJournalEntryArgs | ProgressJournalEntryFindManyArgs
    ?'include' extends U
    ? ProgressJournalEntry  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'ProgressJournal'
        ? ProgressJournalGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournalEntry ?ProgressJournalEntry [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'ProgressJournal'
        ? ProgressJournalGetPayload<S['select'][P]> : never
  } 
    : ProgressJournalEntry
  : ProgressJournalEntry


  type ProgressJournalEntryCountArgs = Merge<
    Omit<ProgressJournalEntryFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalEntryCountAggregateInputType | true
    }
  >

  export interface ProgressJournalEntryDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournalEntry that matches the filter.
     * @param {ProgressJournalEntryFindUniqueArgs} args - Arguments to find a ProgressJournalEntry
     * @example
     * // Get one ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalEntryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalEntryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournalEntry'> extends True ? CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry | null >, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T> | null >>

    /**
     * Find the first ProgressJournalEntry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryFindFirstArgs} args - Arguments to find a ProgressJournalEntry
     * @example
     * // Get one ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalEntryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalEntryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournalEntry'> extends True ? CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry | null >, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournalEntries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournalEntries
     * const progressJournalEntries = await prisma.progressJournalEntry.findMany()
     * 
     * // Get first 10 ProgressJournalEntries
     * const progressJournalEntries = await prisma.progressJournalEntry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalEntryWithIdOnly = await prisma.progressJournalEntry.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalEntryFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalEntryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournalEntry>>, PrismaPromise<Array<ProgressJournalEntryGetPayload<T>>>>

    /**
     * Create a ProgressJournalEntry.
     * @param {ProgressJournalEntryCreateArgs} args - Arguments to create a ProgressJournalEntry.
     * @example
     * // Create one ProgressJournalEntry
     * const ProgressJournalEntry = await prisma.progressJournalEntry.create({
     *   data: {
     *     // ... data to create a ProgressJournalEntry
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalEntryCreateArgs>(
      args: SelectSubset<T, ProgressJournalEntryCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Create many ProgressJournalEntries.
     *     @param {ProgressJournalEntryCreateManyArgs} args - Arguments to create many ProgressJournalEntries.
     *     @example
     *     // Create many ProgressJournalEntries
     *     const progressJournalEntry = await prisma.progressJournalEntry.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProgressJournalEntryCreateManyArgs>(
      args?: SelectSubset<T, ProgressJournalEntryCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ProgressJournalEntry.
     * @param {ProgressJournalEntryDeleteArgs} args - Arguments to delete one ProgressJournalEntry.
     * @example
     * // Delete one ProgressJournalEntry
     * const ProgressJournalEntry = await prisma.progressJournalEntry.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournalEntry
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalEntryDeleteArgs>(
      args: SelectSubset<T, ProgressJournalEntryDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Update one ProgressJournalEntry.
     * @param {ProgressJournalEntryUpdateArgs} args - Arguments to update one ProgressJournalEntry.
     * @example
     * // Update one ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalEntryUpdateArgs>(
      args: SelectSubset<T, ProgressJournalEntryUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournalEntries.
     * @param {ProgressJournalEntryDeleteManyArgs} args - Arguments to filter ProgressJournalEntries to delete.
     * @example
     * // Delete a few ProgressJournalEntries
     * const { count } = await prisma.progressJournalEntry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalEntryDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalEntryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournalEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournalEntries
     * const progressJournalEntry = await prisma.progressJournalEntry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalEntryUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalEntryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournalEntry.
     * @param {ProgressJournalEntryUpsertArgs} args - Arguments to update or create a ProgressJournalEntry.
     * @example
     * // Update or create a ProgressJournalEntry
     * const progressJournalEntry = await prisma.progressJournalEntry.upsert({
     *   create: {
     *     // ... data to create a ProgressJournalEntry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournalEntry we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalEntryUpsertArgs>(
      args: SelectSubset<T, ProgressJournalEntryUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalEntryClient<ProgressJournalEntry>, Prisma__ProgressJournalEntryClient<ProgressJournalEntryGetPayload<T>>>

    /**
     * Count the number of ProgressJournalEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryCountArgs} args - Arguments to filter ProgressJournalEntries to count.
     * @example
     * // Count the number of ProgressJournalEntries
     * const count = await prisma.progressJournalEntry.count({
     *   where: {
     *     // ... the filter for the ProgressJournalEntries we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalEntryCountArgs>(
      args?: Subset<T, ProgressJournalEntryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalEntryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournalEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalEntryAggregateArgs>(args: Subset<T, ProgressJournalEntryAggregateArgs>): PrismaPromise<GetProgressJournalEntryAggregateType<T>>

    /**
     * Group by ProgressJournalEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalEntryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgressJournalEntryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgressJournalEntryGroupByArgs['orderBy'] }
        : { orderBy?: ProgressJournalEntryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgressJournalEntryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgressJournalEntryGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournalEntry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalEntryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    ProgressJournal<T extends ProgressJournalArgs = {}>(args?: Subset<T, ProgressJournalArgs>): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournalEntry findUnique
   */
  export type ProgressJournalEntryFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Throw an Error if a ProgressJournalEntry can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalEntry to fetch.
     * 
    **/
    where: ProgressJournalEntryWhereUniqueInput
  }


  /**
   * ProgressJournalEntry findFirst
   */
  export type ProgressJournalEntryFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Throw an Error if a ProgressJournalEntry can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalEntry to fetch.
     * 
    **/
    where?: ProgressJournalEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournalEntries.
     * 
    **/
    cursor?: ProgressJournalEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalEntries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournalEntries.
     * 
    **/
    distinct?: Enumerable<ProgressJournalEntryScalarFieldEnum>
  }


  /**
   * ProgressJournalEntry findMany
   */
  export type ProgressJournalEntryFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Filter, which ProgressJournalEntries to fetch.
     * 
    **/
    where?: ProgressJournalEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalEntryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournalEntries.
     * 
    **/
    cursor?: ProgressJournalEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalEntries.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalEntryScalarFieldEnum>
  }


  /**
   * ProgressJournalEntry create
   */
  export type ProgressJournalEntryCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * The data needed to create a ProgressJournalEntry.
     * 
    **/
    data: XOR<ProgressJournalEntryCreateInput, ProgressJournalEntryUncheckedCreateInput>
  }


  /**
   * ProgressJournalEntry createMany
   */
  export type ProgressJournalEntryCreateManyArgs = {
    data: Enumerable<ProgressJournalEntryCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ProgressJournalEntry update
   */
  export type ProgressJournalEntryUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * The data needed to update a ProgressJournalEntry.
     * 
    **/
    data: XOR<ProgressJournalEntryUpdateInput, ProgressJournalEntryUncheckedUpdateInput>
    /**
     * Choose, which ProgressJournalEntry to update.
     * 
    **/
    where: ProgressJournalEntryWhereUniqueInput
  }


  /**
   * ProgressJournalEntry updateMany
   */
  export type ProgressJournalEntryUpdateManyArgs = {
    data: XOR<ProgressJournalEntryUpdateManyMutationInput, ProgressJournalEntryUncheckedUpdateManyInput>
    where?: ProgressJournalEntryWhereInput
  }


  /**
   * ProgressJournalEntry upsert
   */
  export type ProgressJournalEntryUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * The filter to search for the ProgressJournalEntry to update in case it exists.
     * 
    **/
    where: ProgressJournalEntryWhereUniqueInput
    /**
     * In case the ProgressJournalEntry found by the `where` argument doesn't exist, create a new ProgressJournalEntry with this data.
     * 
    **/
    create: XOR<ProgressJournalEntryCreateInput, ProgressJournalEntryUncheckedCreateInput>
    /**
     * In case the ProgressJournalEntry was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProgressJournalEntryUpdateInput, ProgressJournalEntryUncheckedUpdateInput>
  }


  /**
   * ProgressJournalEntry delete
   */
  export type ProgressJournalEntryDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
    /**
     * Filter which ProgressJournalEntry to delete.
     * 
    **/
    where: ProgressJournalEntryWhereUniqueInput
  }


  /**
   * ProgressJournalEntry deleteMany
   */
  export type ProgressJournalEntryDeleteManyArgs = {
    where?: ProgressJournalEntryWhereInput
  }


  /**
   * ProgressJournalEntry without action
   */
  export type ProgressJournalEntryArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalEntry
     * 
    **/
    select?: ProgressJournalEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalEntryInclude | null
  }



  /**
   * Model ProgressJournalGoal
   */


  export type AggregateProgressJournalGoal = {
    _count: ProgressJournalGoalCountAggregateOutputType | null
    count: ProgressJournalGoalCountAggregateOutputType | null
    _min: ProgressJournalGoalMinAggregateOutputType | null
    min: ProgressJournalGoalMinAggregateOutputType | null
    _max: ProgressJournalGoalMaxAggregateOutputType | null
    max: ProgressJournalGoalMaxAggregateOutputType | null
  }

  export type ProgressJournalGoalMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
    deadline: Date | null
    completedDate: Date | null
    progressJournalId: string | null
  }

  export type ProgressJournalGoalMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    userId: string | null
    name: string | null
    description: string | null
    deadline: Date | null
    completedDate: Date | null
    progressJournalId: string | null
  }

  export type ProgressJournalGoalCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    name: number
    description: number
    deadline: number
    completedDate: number
    progressJournalId: number
    _all: number
  }


  export type ProgressJournalGoalMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    deadline?: true
    completedDate?: true
    progressJournalId?: true
  }

  export type ProgressJournalGoalMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    deadline?: true
    completedDate?: true
    progressJournalId?: true
  }

  export type ProgressJournalGoalCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    name?: true
    description?: true
    deadline?: true
    completedDate?: true
    progressJournalId?: true
    _all?: true
  }

  export type ProgressJournalGoalAggregateArgs = {
    /**
     * Filter which ProgressJournalGoal to aggregate.
     * 
    **/
    where?: ProgressJournalGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoals to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProgressJournalGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournalGoals
    **/
    _count?: true | ProgressJournalGoalCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | ProgressJournalGoalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgressJournalGoalMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: ProgressJournalGoalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgressJournalGoalMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: ProgressJournalGoalMaxAggregateInputType
  }

  export type GetProgressJournalGoalAggregateType<T extends ProgressJournalGoalAggregateArgs> = {
        [P in keyof T & keyof AggregateProgressJournalGoal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournalGoal[P]>
      : GetScalarType<T[P], AggregateProgressJournalGoal[P]>
  }


    
    
  export type ProgressJournalGoalGroupByArgs = {
    where?: ProgressJournalGoalWhereInput
    orderBy?: Enumerable<ProgressJournalGoalOrderByInput>
    by: Array<ProgressJournalGoalScalarFieldEnum>
    having?: ProgressJournalGoalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgressJournalGoalCountAggregateInputType | true
    _min?: ProgressJournalGoalMinAggregateInputType
    _max?: ProgressJournalGoalMaxAggregateInputType
  }


  export type ProgressJournalGoalGroupByOutputType = {
    id: string
    createdAt: Date
    userId: string
    name: string
    description: string | null
    deadline: Date | null
    completedDate: Date | null
    progressJournalId: string
    _count: ProgressJournalGoalCountAggregateOutputType | null
    _min: ProgressJournalGoalMinAggregateOutputType | null
    _max: ProgressJournalGoalMaxAggregateOutputType | null
  }

  type GetProgressJournalGoalGroupByPayload<T extends ProgressJournalGoalGroupByArgs> = Promise<
    Array<
      PickArray<ProgressJournalGoalGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof ProgressJournalGoalGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], ProgressJournalGoalGroupByOutputType[P]> 
            : GetScalarType<T[P], ProgressJournalGoalGroupByOutputType[P]>
        }
      > 
    >


  export type ProgressJournalGoalSelect = {
    id?: boolean
    createdAt?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    name?: boolean
    description?: boolean
    deadline?: boolean
    completedDate?: boolean
    ProgressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
    ProgressJournal?: boolean | ProgressJournalArgs
    progressJournalId?: boolean
  }

  export type ProgressJournalGoalInclude = {
    User?: boolean | UserArgs
    ProgressJournalGoalTags?: boolean | ProgressJournalGoalTagFindManyArgs
    ProgressJournal?: boolean | ProgressJournalArgs
  }

  export type ProgressJournalGoalGetPayload<
    S extends boolean | null | undefined | ProgressJournalGoalArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournalGoal
    : S extends undefined
    ? never
    : S extends ProgressJournalGoalArgs | ProgressJournalGoalFindManyArgs
    ?'include' extends U
    ? ProgressJournalGoal  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'ProgressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['include'][P]>>  :
        P extends 'ProgressJournal'
        ? ProgressJournalGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournalGoal ?ProgressJournalGoal [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'ProgressJournalGoalTags'
        ? Array < ProgressJournalGoalTagGetPayload<S['select'][P]>>  :
        P extends 'ProgressJournal'
        ? ProgressJournalGetPayload<S['select'][P]> : never
  } 
    : ProgressJournalGoal
  : ProgressJournalGoal


  type ProgressJournalGoalCountArgs = Merge<
    Omit<ProgressJournalGoalFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalGoalCountAggregateInputType | true
    }
  >

  export interface ProgressJournalGoalDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournalGoal that matches the filter.
     * @param {ProgressJournalGoalFindUniqueArgs} args - Arguments to find a ProgressJournalGoal
     * @example
     * // Get one ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalGoalFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalGoalFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournalGoal'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal | null >, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T> | null >>

    /**
     * Find the first ProgressJournalGoal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalFindFirstArgs} args - Arguments to find a ProgressJournalGoal
     * @example
     * // Get one ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalGoalFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalGoalFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournalGoal'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal | null >, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournalGoals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournalGoals
     * const progressJournalGoals = await prisma.progressJournalGoal.findMany()
     * 
     * // Get first 10 ProgressJournalGoals
     * const progressJournalGoals = await prisma.progressJournalGoal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalGoalWithIdOnly = await prisma.progressJournalGoal.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalGoalFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoal>>, PrismaPromise<Array<ProgressJournalGoalGetPayload<T>>>>

    /**
     * Create a ProgressJournalGoal.
     * @param {ProgressJournalGoalCreateArgs} args - Arguments to create a ProgressJournalGoal.
     * @example
     * // Create one ProgressJournalGoal
     * const ProgressJournalGoal = await prisma.progressJournalGoal.create({
     *   data: {
     *     // ... data to create a ProgressJournalGoal
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalGoalCreateArgs>(
      args: SelectSubset<T, ProgressJournalGoalCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Create many ProgressJournalGoals.
     *     @param {ProgressJournalGoalCreateManyArgs} args - Arguments to create many ProgressJournalGoals.
     *     @example
     *     // Create many ProgressJournalGoals
     *     const progressJournalGoal = await prisma.progressJournalGoal.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProgressJournalGoalCreateManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ProgressJournalGoal.
     * @param {ProgressJournalGoalDeleteArgs} args - Arguments to delete one ProgressJournalGoal.
     * @example
     * // Delete one ProgressJournalGoal
     * const ProgressJournalGoal = await prisma.progressJournalGoal.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournalGoal
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalGoalDeleteArgs>(
      args: SelectSubset<T, ProgressJournalGoalDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Update one ProgressJournalGoal.
     * @param {ProgressJournalGoalUpdateArgs} args - Arguments to update one ProgressJournalGoal.
     * @example
     * // Update one ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalGoalUpdateArgs>(
      args: SelectSubset<T, ProgressJournalGoalUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournalGoals.
     * @param {ProgressJournalGoalDeleteManyArgs} args - Arguments to filter ProgressJournalGoals to delete.
     * @example
     * // Delete a few ProgressJournalGoals
     * const { count } = await prisma.progressJournalGoal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalGoalDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournalGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournalGoals
     * const progressJournalGoal = await prisma.progressJournalGoal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalGoalUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalGoalUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournalGoal.
     * @param {ProgressJournalGoalUpsertArgs} args - Arguments to update or create a ProgressJournalGoal.
     * @example
     * // Update or create a ProgressJournalGoal
     * const progressJournalGoal = await prisma.progressJournalGoal.upsert({
     *   create: {
     *     // ... data to create a ProgressJournalGoal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournalGoal we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalGoalUpsertArgs>(
      args: SelectSubset<T, ProgressJournalGoalUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalClient<ProgressJournalGoal>, Prisma__ProgressJournalGoalClient<ProgressJournalGoalGetPayload<T>>>

    /**
     * Count the number of ProgressJournalGoals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalCountArgs} args - Arguments to filter ProgressJournalGoals to count.
     * @example
     * // Count the number of ProgressJournalGoals
     * const count = await prisma.progressJournalGoal.count({
     *   where: {
     *     // ... the filter for the ProgressJournalGoals we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalGoalCountArgs>(
      args?: Subset<T, ProgressJournalGoalCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalGoalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournalGoal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalGoalAggregateArgs>(args: Subset<T, ProgressJournalGoalAggregateArgs>): PrismaPromise<GetProgressJournalGoalAggregateType<T>>

    /**
     * Group by ProgressJournalGoal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgressJournalGoalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgressJournalGoalGroupByArgs['orderBy'] }
        : { orderBy?: ProgressJournalGoalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgressJournalGoalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgressJournalGoalGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournalGoal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalGoalClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    ProgressJournalGoalTags<T extends ProgressJournalGoalTagFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalTagFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoalTag>>, PrismaPromise<Array<ProgressJournalGoalTagGetPayload<T>>>>;

    ProgressJournal<T extends ProgressJournalArgs = {}>(args?: Subset<T, ProgressJournalArgs>): CheckSelect<T, Prisma__ProgressJournalClient<ProgressJournal | null >, Prisma__ProgressJournalClient<ProgressJournalGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournalGoal findUnique
   */
  export type ProgressJournalGoalFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Throw an Error if a ProgressJournalGoal can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoal to fetch.
     * 
    **/
    where: ProgressJournalGoalWhereUniqueInput
  }


  /**
   * ProgressJournalGoal findFirst
   */
  export type ProgressJournalGoalFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Throw an Error if a ProgressJournalGoal can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoal to fetch.
     * 
    **/
    where?: ProgressJournalGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoals to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournalGoals.
     * 
    **/
    cursor?: ProgressJournalGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournalGoals.
     * 
    **/
    distinct?: Enumerable<ProgressJournalGoalScalarFieldEnum>
  }


  /**
   * ProgressJournalGoal findMany
   */
  export type ProgressJournalGoalFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Filter, which ProgressJournalGoals to fetch.
     * 
    **/
    where?: ProgressJournalGoalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoals to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalGoalOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournalGoals.
     * 
    **/
    cursor?: ProgressJournalGoalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoals.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalGoalScalarFieldEnum>
  }


  /**
   * ProgressJournalGoal create
   */
  export type ProgressJournalGoalCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * The data needed to create a ProgressJournalGoal.
     * 
    **/
    data: XOR<ProgressJournalGoalCreateInput, ProgressJournalGoalUncheckedCreateInput>
  }


  /**
   * ProgressJournalGoal createMany
   */
  export type ProgressJournalGoalCreateManyArgs = {
    data: Enumerable<ProgressJournalGoalCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ProgressJournalGoal update
   */
  export type ProgressJournalGoalUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * The data needed to update a ProgressJournalGoal.
     * 
    **/
    data: XOR<ProgressJournalGoalUpdateInput, ProgressJournalGoalUncheckedUpdateInput>
    /**
     * Choose, which ProgressJournalGoal to update.
     * 
    **/
    where: ProgressJournalGoalWhereUniqueInput
  }


  /**
   * ProgressJournalGoal updateMany
   */
  export type ProgressJournalGoalUpdateManyArgs = {
    data: XOR<ProgressJournalGoalUpdateManyMutationInput, ProgressJournalGoalUncheckedUpdateManyInput>
    where?: ProgressJournalGoalWhereInput
  }


  /**
   * ProgressJournalGoal upsert
   */
  export type ProgressJournalGoalUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * The filter to search for the ProgressJournalGoal to update in case it exists.
     * 
    **/
    where: ProgressJournalGoalWhereUniqueInput
    /**
     * In case the ProgressJournalGoal found by the `where` argument doesn't exist, create a new ProgressJournalGoal with this data.
     * 
    **/
    create: XOR<ProgressJournalGoalCreateInput, ProgressJournalGoalUncheckedCreateInput>
    /**
     * In case the ProgressJournalGoal was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProgressJournalGoalUpdateInput, ProgressJournalGoalUncheckedUpdateInput>
  }


  /**
   * ProgressJournalGoal delete
   */
  export type ProgressJournalGoalDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
    /**
     * Filter which ProgressJournalGoal to delete.
     * 
    **/
    where: ProgressJournalGoalWhereUniqueInput
  }


  /**
   * ProgressJournalGoal deleteMany
   */
  export type ProgressJournalGoalDeleteManyArgs = {
    where?: ProgressJournalGoalWhereInput
  }


  /**
   * ProgressJournalGoal without action
   */
  export type ProgressJournalGoalArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoal
     * 
    **/
    select?: ProgressJournalGoalSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalInclude | null
  }



  /**
   * Model ProgressJournalGoalTag
   */


  export type AggregateProgressJournalGoalTag = {
    _count: ProgressJournalGoalTagCountAggregateOutputType | null
    count: ProgressJournalGoalTagCountAggregateOutputType | null
    _min: ProgressJournalGoalTagMinAggregateOutputType | null
    min: ProgressJournalGoalTagMinAggregateOutputType | null
    _max: ProgressJournalGoalTagMaxAggregateOutputType | null
    max: ProgressJournalGoalTagMaxAggregateOutputType | null
  }

  export type ProgressJournalGoalTagMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    tag: string | null
    hexColor: string | null
    userId: string | null
  }

  export type ProgressJournalGoalTagMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    tag: string | null
    hexColor: string | null
    userId: string | null
  }

  export type ProgressJournalGoalTagCountAggregateOutputType = {
    id: number
    createdAt: number
    tag: number
    hexColor: number
    userId: number
    _all: number
  }


  export type ProgressJournalGoalTagMinAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    hexColor?: true
    userId?: true
  }

  export type ProgressJournalGoalTagMaxAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    hexColor?: true
    userId?: true
  }

  export type ProgressJournalGoalTagCountAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    hexColor?: true
    userId?: true
    _all?: true
  }

  export type ProgressJournalGoalTagAggregateArgs = {
    /**
     * Filter which ProgressJournalGoalTag to aggregate.
     * 
    **/
    where?: ProgressJournalGoalTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoalTags to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalGoalTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProgressJournalGoalTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoalTags from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoalTags.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgressJournalGoalTags
    **/
    _count?: true | ProgressJournalGoalTagCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | ProgressJournalGoalTagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgressJournalGoalTagMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: ProgressJournalGoalTagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgressJournalGoalTagMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: ProgressJournalGoalTagMaxAggregateInputType
  }

  export type GetProgressJournalGoalTagAggregateType<T extends ProgressJournalGoalTagAggregateArgs> = {
        [P in keyof T & keyof AggregateProgressJournalGoalTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgressJournalGoalTag[P]>
      : GetScalarType<T[P], AggregateProgressJournalGoalTag[P]>
  }


    
    
  export type ProgressJournalGoalTagGroupByArgs = {
    where?: ProgressJournalGoalTagWhereInput
    orderBy?: Enumerable<ProgressJournalGoalTagOrderByInput>
    by: Array<ProgressJournalGoalTagScalarFieldEnum>
    having?: ProgressJournalGoalTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgressJournalGoalTagCountAggregateInputType | true
    _min?: ProgressJournalGoalTagMinAggregateInputType
    _max?: ProgressJournalGoalTagMaxAggregateInputType
  }


  export type ProgressJournalGoalTagGroupByOutputType = {
    id: string
    createdAt: Date
    tag: string
    hexColor: string
    userId: string
    _count: ProgressJournalGoalTagCountAggregateOutputType | null
    _min: ProgressJournalGoalTagMinAggregateOutputType | null
    _max: ProgressJournalGoalTagMaxAggregateOutputType | null
  }

  type GetProgressJournalGoalTagGroupByPayload<T extends ProgressJournalGoalTagGroupByArgs> = Promise<
    Array<
      PickArray<ProgressJournalGoalTagGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof ProgressJournalGoalTagGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], ProgressJournalGoalTagGroupByOutputType[P]> 
            : GetScalarType<T[P], ProgressJournalGoalTagGroupByOutputType[P]>
        }
      > 
    >


  export type ProgressJournalGoalTagSelect = {
    id?: boolean
    createdAt?: boolean
    tag?: boolean
    hexColor?: boolean
    User?: boolean | UserArgs
    userId?: boolean
    ProgressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalGoalTagInclude = {
    User?: boolean | UserArgs
    ProgressJournalGoals?: boolean | ProgressJournalGoalFindManyArgs
  }

  export type ProgressJournalGoalTagGetPayload<
    S extends boolean | null | undefined | ProgressJournalGoalTagArgs,
    U = keyof S
      > = S extends true
        ? ProgressJournalGoalTag
    : S extends undefined
    ? never
    : S extends ProgressJournalGoalTagArgs | ProgressJournalGoalTagFindManyArgs
    ?'include' extends U
    ? ProgressJournalGoalTag  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'User'
        ? UserGetPayload<S['include'][P]> :
        P extends 'ProgressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProgressJournalGoalTag ?ProgressJournalGoalTag [P]
  : 
          P extends 'User'
        ? UserGetPayload<S['select'][P]> :
        P extends 'ProgressJournalGoals'
        ? Array < ProgressJournalGoalGetPayload<S['select'][P]>>  : never
  } 
    : ProgressJournalGoalTag
  : ProgressJournalGoalTag


  type ProgressJournalGoalTagCountArgs = Merge<
    Omit<ProgressJournalGoalTagFindManyArgs, 'select' | 'include'> & {
      select?: ProgressJournalGoalTagCountAggregateInputType | true
    }
  >

  export interface ProgressJournalGoalTagDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ProgressJournalGoalTag that matches the filter.
     * @param {ProgressJournalGoalTagFindUniqueArgs} args - Arguments to find a ProgressJournalGoalTag
     * @example
     * // Get one ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProgressJournalGoalTagFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProgressJournalGoalTagFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProgressJournalGoalTag'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag | null >, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T> | null >>

    /**
     * Find the first ProgressJournalGoalTag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagFindFirstArgs} args - Arguments to find a ProgressJournalGoalTag
     * @example
     * // Get one ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProgressJournalGoalTagFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProgressJournalGoalTagFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProgressJournalGoalTag'> extends True ? CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>> : CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag | null >, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T> | null >>

    /**
     * Find zero or more ProgressJournalGoalTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgressJournalGoalTags
     * const progressJournalGoalTags = await prisma.progressJournalGoalTag.findMany()
     * 
     * // Get first 10 ProgressJournalGoalTags
     * const progressJournalGoalTags = await prisma.progressJournalGoalTag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const progressJournalGoalTagWithIdOnly = await prisma.progressJournalGoalTag.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProgressJournalGoalTagFindManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalTagFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoalTag>>, PrismaPromise<Array<ProgressJournalGoalTagGetPayload<T>>>>

    /**
     * Create a ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagCreateArgs} args - Arguments to create a ProgressJournalGoalTag.
     * @example
     * // Create one ProgressJournalGoalTag
     * const ProgressJournalGoalTag = await prisma.progressJournalGoalTag.create({
     *   data: {
     *     // ... data to create a ProgressJournalGoalTag
     *   }
     * })
     * 
    **/
    create<T extends ProgressJournalGoalTagCreateArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagCreateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Create many ProgressJournalGoalTags.
     *     @param {ProgressJournalGoalTagCreateManyArgs} args - Arguments to create many ProgressJournalGoalTags.
     *     @example
     *     // Create many ProgressJournalGoalTags
     *     const progressJournalGoalTag = await prisma.progressJournalGoalTag.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProgressJournalGoalTagCreateManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalTagCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagDeleteArgs} args - Arguments to delete one ProgressJournalGoalTag.
     * @example
     * // Delete one ProgressJournalGoalTag
     * const ProgressJournalGoalTag = await prisma.progressJournalGoalTag.delete({
     *   where: {
     *     // ... filter to delete one ProgressJournalGoalTag
     *   }
     * })
     * 
    **/
    delete<T extends ProgressJournalGoalTagDeleteArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagDeleteArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Update one ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagUpdateArgs} args - Arguments to update one ProgressJournalGoalTag.
     * @example
     * // Update one ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProgressJournalGoalTagUpdateArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagUpdateArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Delete zero or more ProgressJournalGoalTags.
     * @param {ProgressJournalGoalTagDeleteManyArgs} args - Arguments to filter ProgressJournalGoalTags to delete.
     * @example
     * // Delete a few ProgressJournalGoalTags
     * const { count } = await prisma.progressJournalGoalTag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProgressJournalGoalTagDeleteManyArgs>(
      args?: SelectSubset<T, ProgressJournalGoalTagDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgressJournalGoalTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgressJournalGoalTags
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProgressJournalGoalTagUpdateManyArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProgressJournalGoalTag.
     * @param {ProgressJournalGoalTagUpsertArgs} args - Arguments to update or create a ProgressJournalGoalTag.
     * @example
     * // Update or create a ProgressJournalGoalTag
     * const progressJournalGoalTag = await prisma.progressJournalGoalTag.upsert({
     *   create: {
     *     // ... data to create a ProgressJournalGoalTag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgressJournalGoalTag we want to update
     *   }
     * })
    **/
    upsert<T extends ProgressJournalGoalTagUpsertArgs>(
      args: SelectSubset<T, ProgressJournalGoalTagUpsertArgs>
    ): CheckSelect<T, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTag>, Prisma__ProgressJournalGoalTagClient<ProgressJournalGoalTagGetPayload<T>>>

    /**
     * Count the number of ProgressJournalGoalTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagCountArgs} args - Arguments to filter ProgressJournalGoalTags to count.
     * @example
     * // Count the number of ProgressJournalGoalTags
     * const count = await prisma.progressJournalGoalTag.count({
     *   where: {
     *     // ... the filter for the ProgressJournalGoalTags we want to count
     *   }
     * })
    **/
    count<T extends ProgressJournalGoalTagCountArgs>(
      args?: Subset<T, ProgressJournalGoalTagCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgressJournalGoalTagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgressJournalGoalTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgressJournalGoalTagAggregateArgs>(args: Subset<T, ProgressJournalGoalTagAggregateArgs>): PrismaPromise<GetProgressJournalGoalTagAggregateType<T>>

    /**
     * Group by ProgressJournalGoalTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgressJournalGoalTagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgressJournalGoalTagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgressJournalGoalTagGroupByArgs['orderBy'] }
        : { orderBy?: ProgressJournalGoalTagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgressJournalGoalTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgressJournalGoalTagGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgressJournalGoalTag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProgressJournalGoalTagClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    ProgressJournalGoals<T extends ProgressJournalGoalFindManyArgs = {}>(args?: Subset<T, ProgressJournalGoalFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ProgressJournalGoal>>, PrismaPromise<Array<ProgressJournalGoalGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProgressJournalGoalTag findUnique
   */
  export type ProgressJournalGoalTagFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Throw an Error if a ProgressJournalGoalTag can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoalTag to fetch.
     * 
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
  }


  /**
   * ProgressJournalGoalTag findFirst
   */
  export type ProgressJournalGoalTagFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Throw an Error if a ProgressJournalGoalTag can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ProgressJournalGoalTag to fetch.
     * 
    **/
    where?: ProgressJournalGoalTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoalTags to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalGoalTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgressJournalGoalTags.
     * 
    **/
    cursor?: ProgressJournalGoalTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoalTags from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoalTags.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgressJournalGoalTags.
     * 
    **/
    distinct?: Enumerable<ProgressJournalGoalTagScalarFieldEnum>
  }


  /**
   * ProgressJournalGoalTag findMany
   */
  export type ProgressJournalGoalTagFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Filter, which ProgressJournalGoalTags to fetch.
     * 
    **/
    where?: ProgressJournalGoalTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgressJournalGoalTags to fetch.
     * 
    **/
    orderBy?: Enumerable<ProgressJournalGoalTagOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgressJournalGoalTags.
     * 
    **/
    cursor?: ProgressJournalGoalTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgressJournalGoalTags from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgressJournalGoalTags.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProgressJournalGoalTagScalarFieldEnum>
  }


  /**
   * ProgressJournalGoalTag create
   */
  export type ProgressJournalGoalTagCreateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * The data needed to create a ProgressJournalGoalTag.
     * 
    **/
    data: XOR<ProgressJournalGoalTagCreateInput, ProgressJournalGoalTagUncheckedCreateInput>
  }


  /**
   * ProgressJournalGoalTag createMany
   */
  export type ProgressJournalGoalTagCreateManyArgs = {
    data: Enumerable<ProgressJournalGoalTagCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ProgressJournalGoalTag update
   */
  export type ProgressJournalGoalTagUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * The data needed to update a ProgressJournalGoalTag.
     * 
    **/
    data: XOR<ProgressJournalGoalTagUpdateInput, ProgressJournalGoalTagUncheckedUpdateInput>
    /**
     * Choose, which ProgressJournalGoalTag to update.
     * 
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
  }


  /**
   * ProgressJournalGoalTag updateMany
   */
  export type ProgressJournalGoalTagUpdateManyArgs = {
    data: XOR<ProgressJournalGoalTagUpdateManyMutationInput, ProgressJournalGoalTagUncheckedUpdateManyInput>
    where?: ProgressJournalGoalTagWhereInput
  }


  /**
   * ProgressJournalGoalTag upsert
   */
  export type ProgressJournalGoalTagUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * The filter to search for the ProgressJournalGoalTag to update in case it exists.
     * 
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
    /**
     * In case the ProgressJournalGoalTag found by the `where` argument doesn't exist, create a new ProgressJournalGoalTag with this data.
     * 
    **/
    create: XOR<ProgressJournalGoalTagCreateInput, ProgressJournalGoalTagUncheckedCreateInput>
    /**
     * In case the ProgressJournalGoalTag was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProgressJournalGoalTagUpdateInput, ProgressJournalGoalTagUncheckedUpdateInput>
  }


  /**
   * ProgressJournalGoalTag delete
   */
  export type ProgressJournalGoalTagDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
    /**
     * Filter which ProgressJournalGoalTag to delete.
     * 
    **/
    where: ProgressJournalGoalTagWhereUniqueInput
  }


  /**
   * ProgressJournalGoalTag deleteMany
   */
  export type ProgressJournalGoalTagDeleteManyArgs = {
    where?: ProgressJournalGoalTagWhereInput
  }


  /**
   * ProgressJournalGoalTag without action
   */
  export type ProgressJournalGoalTagArgs = {
    /**
     * Select specific fields to fetch from the ProgressJournalGoalTag
     * 
    **/
    select?: ProgressJournalGoalTagSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProgressJournalGoalTagInclude | null
  }



  /**
   * Model DiscoverFeatured
   */


  export type AggregateDiscoverFeatured = {
    _count: DiscoverFeaturedCountAggregateOutputType | null
    count: DiscoverFeaturedCountAggregateOutputType | null
    _min: DiscoverFeaturedMinAggregateOutputType | null
    min: DiscoverFeaturedMinAggregateOutputType | null
    _max: DiscoverFeaturedMaxAggregateOutputType | null
    max: DiscoverFeaturedMaxAggregateOutputType | null
  }

  export type DiscoverFeaturedMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    tag: string | null
    name: string | null
    tagline: string | null
    description: string | null
    coverImageUri: string | null
  }

  export type DiscoverFeaturedMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    tag: string | null
    name: string | null
    tagline: string | null
    description: string | null
    coverImageUri: string | null
  }

  export type DiscoverFeaturedCountAggregateOutputType = {
    id: number
    createdAt: number
    tag: number
    name: number
    tagline: number
    description: number
    coverImageUri: number
    _all: number
  }


  export type DiscoverFeaturedMinAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
  }

  export type DiscoverFeaturedMaxAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
  }

  export type DiscoverFeaturedCountAggregateInputType = {
    id?: true
    createdAt?: true
    tag?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
    _all?: true
  }

  export type DiscoverFeaturedAggregateArgs = {
    /**
     * Filter which DiscoverFeatured to aggregate.
     * 
    **/
    where?: DiscoverFeaturedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverFeatureds to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverFeaturedOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: DiscoverFeaturedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverFeatureds from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverFeatureds.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoverFeatureds
    **/
    _count?: true | DiscoverFeaturedCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | DiscoverFeaturedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoverFeaturedMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: DiscoverFeaturedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoverFeaturedMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: DiscoverFeaturedMaxAggregateInputType
  }

  export type GetDiscoverFeaturedAggregateType<T extends DiscoverFeaturedAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoverFeatured]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoverFeatured[P]>
      : GetScalarType<T[P], AggregateDiscoverFeatured[P]>
  }


    
    
  export type DiscoverFeaturedGroupByArgs = {
    where?: DiscoverFeaturedWhereInput
    orderBy?: Enumerable<DiscoverFeaturedOrderByInput>
    by: Array<DiscoverFeaturedScalarFieldEnum>
    having?: DiscoverFeaturedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoverFeaturedCountAggregateInputType | true
    _min?: DiscoverFeaturedMinAggregateInputType
    _max?: DiscoverFeaturedMaxAggregateInputType
  }


  export type DiscoverFeaturedGroupByOutputType = {
    id: string
    createdAt: Date
    tag: string
    name: string
    tagline: string
    description: string
    coverImageUri: string
    _count: DiscoverFeaturedCountAggregateOutputType | null
    _min: DiscoverFeaturedMinAggregateOutputType | null
    _max: DiscoverFeaturedMaxAggregateOutputType | null
  }

  type GetDiscoverFeaturedGroupByPayload<T extends DiscoverFeaturedGroupByArgs> = Promise<
    Array<
      PickArray<DiscoverFeaturedGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof DiscoverFeaturedGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], DiscoverFeaturedGroupByOutputType[P]> 
            : GetScalarType<T[P], DiscoverFeaturedGroupByOutputType[P]>
        }
      > 
    >


  export type DiscoverFeaturedSelect = {
    id?: boolean
    createdAt?: boolean
    tag?: boolean
    name?: boolean
    tagline?: boolean
    description?: boolean
    coverImageUri?: boolean
  }

  export type DiscoverFeaturedGetPayload<
    S extends boolean | null | undefined | DiscoverFeaturedArgs,
    U = keyof S
      > = S extends true
        ? DiscoverFeatured
    : S extends undefined
    ? never
    : S extends DiscoverFeaturedArgs | DiscoverFeaturedFindManyArgs
    ?'include' extends U
    ? DiscoverFeatured 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof DiscoverFeatured ?DiscoverFeatured [P]
  : 
     never
  } 
    : DiscoverFeatured
  : DiscoverFeatured


  type DiscoverFeaturedCountArgs = Merge<
    Omit<DiscoverFeaturedFindManyArgs, 'select' | 'include'> & {
      select?: DiscoverFeaturedCountAggregateInputType | true
    }
  >

  export interface DiscoverFeaturedDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one DiscoverFeatured that matches the filter.
     * @param {DiscoverFeaturedFindUniqueArgs} args - Arguments to find a DiscoverFeatured
     * @example
     * // Get one DiscoverFeatured
     * const discoverFeatured = await prisma.discoverFeatured.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DiscoverFeaturedFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, DiscoverFeaturedFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'DiscoverFeatured'> extends True ? CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured>, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured | null >, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T> | null >>

    /**
     * Find the first DiscoverFeatured that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverFeaturedFindFirstArgs} args - Arguments to find a DiscoverFeatured
     * @example
     * // Get one DiscoverFeatured
     * const discoverFeatured = await prisma.discoverFeatured.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DiscoverFeaturedFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, DiscoverFeaturedFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'DiscoverFeatured'> extends True ? CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured>, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured | null >, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T> | null >>

    /**
     * Find zero or more DiscoverFeatureds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverFeaturedFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoverFeatureds
     * const discoverFeatureds = await prisma.discoverFeatured.findMany()
     * 
     * // Get first 10 DiscoverFeatureds
     * const discoverFeatureds = await prisma.discoverFeatured.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoverFeaturedWithIdOnly = await prisma.discoverFeatured.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DiscoverFeaturedFindManyArgs>(
      args?: SelectSubset<T, DiscoverFeaturedFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<DiscoverFeatured>>, PrismaPromise<Array<DiscoverFeaturedGetPayload<T>>>>

    /**
     * Create a DiscoverFeatured.
     * @param {DiscoverFeaturedCreateArgs} args - Arguments to create a DiscoverFeatured.
     * @example
     * // Create one DiscoverFeatured
     * const DiscoverFeatured = await prisma.discoverFeatured.create({
     *   data: {
     *     // ... data to create a DiscoverFeatured
     *   }
     * })
     * 
    **/
    create<T extends DiscoverFeaturedCreateArgs>(
      args: SelectSubset<T, DiscoverFeaturedCreateArgs>
    ): CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured>, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T>>>

    /**
     * Create many DiscoverFeatureds.
     *     @param {DiscoverFeaturedCreateManyArgs} args - Arguments to create many DiscoverFeatureds.
     *     @example
     *     // Create many DiscoverFeatureds
     *     const discoverFeatured = await prisma.discoverFeatured.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DiscoverFeaturedCreateManyArgs>(
      args?: SelectSubset<T, DiscoverFeaturedCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a DiscoverFeatured.
     * @param {DiscoverFeaturedDeleteArgs} args - Arguments to delete one DiscoverFeatured.
     * @example
     * // Delete one DiscoverFeatured
     * const DiscoverFeatured = await prisma.discoverFeatured.delete({
     *   where: {
     *     // ... filter to delete one DiscoverFeatured
     *   }
     * })
     * 
    **/
    delete<T extends DiscoverFeaturedDeleteArgs>(
      args: SelectSubset<T, DiscoverFeaturedDeleteArgs>
    ): CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured>, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T>>>

    /**
     * Update one DiscoverFeatured.
     * @param {DiscoverFeaturedUpdateArgs} args - Arguments to update one DiscoverFeatured.
     * @example
     * // Update one DiscoverFeatured
     * const discoverFeatured = await prisma.discoverFeatured.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DiscoverFeaturedUpdateArgs>(
      args: SelectSubset<T, DiscoverFeaturedUpdateArgs>
    ): CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured>, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T>>>

    /**
     * Delete zero or more DiscoverFeatureds.
     * @param {DiscoverFeaturedDeleteManyArgs} args - Arguments to filter DiscoverFeatureds to delete.
     * @example
     * // Delete a few DiscoverFeatureds
     * const { count } = await prisma.discoverFeatured.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DiscoverFeaturedDeleteManyArgs>(
      args?: SelectSubset<T, DiscoverFeaturedDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoverFeatureds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverFeaturedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoverFeatureds
     * const discoverFeatured = await prisma.discoverFeatured.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DiscoverFeaturedUpdateManyArgs>(
      args: SelectSubset<T, DiscoverFeaturedUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one DiscoverFeatured.
     * @param {DiscoverFeaturedUpsertArgs} args - Arguments to update or create a DiscoverFeatured.
     * @example
     * // Update or create a DiscoverFeatured
     * const discoverFeatured = await prisma.discoverFeatured.upsert({
     *   create: {
     *     // ... data to create a DiscoverFeatured
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoverFeatured we want to update
     *   }
     * })
    **/
    upsert<T extends DiscoverFeaturedUpsertArgs>(
      args: SelectSubset<T, DiscoverFeaturedUpsertArgs>
    ): CheckSelect<T, Prisma__DiscoverFeaturedClient<DiscoverFeatured>, Prisma__DiscoverFeaturedClient<DiscoverFeaturedGetPayload<T>>>

    /**
     * Count the number of DiscoverFeatureds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverFeaturedCountArgs} args - Arguments to filter DiscoverFeatureds to count.
     * @example
     * // Count the number of DiscoverFeatureds
     * const count = await prisma.discoverFeatured.count({
     *   where: {
     *     // ... the filter for the DiscoverFeatureds we want to count
     *   }
     * })
    **/
    count<T extends DiscoverFeaturedCountArgs>(
      args?: Subset<T, DiscoverFeaturedCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoverFeaturedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoverFeatured.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverFeaturedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoverFeaturedAggregateArgs>(args: Subset<T, DiscoverFeaturedAggregateArgs>): PrismaPromise<GetDiscoverFeaturedAggregateType<T>>

    /**
     * Group by DiscoverFeatured.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverFeaturedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoverFeaturedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoverFeaturedGroupByArgs['orderBy'] }
        : { orderBy?: DiscoverFeaturedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoverFeaturedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoverFeaturedGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoverFeatured.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DiscoverFeaturedClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * DiscoverFeatured findUnique
   */
  export type DiscoverFeaturedFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
    /**
     * Throw an Error if a DiscoverFeatured can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverFeatured to fetch.
     * 
    **/
    where: DiscoverFeaturedWhereUniqueInput
  }


  /**
   * DiscoverFeatured findFirst
   */
  export type DiscoverFeaturedFindFirstArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
    /**
     * Throw an Error if a DiscoverFeatured can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverFeatured to fetch.
     * 
    **/
    where?: DiscoverFeaturedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverFeatureds to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverFeaturedOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoverFeatureds.
     * 
    **/
    cursor?: DiscoverFeaturedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverFeatureds from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverFeatureds.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoverFeatureds.
     * 
    **/
    distinct?: Enumerable<DiscoverFeaturedScalarFieldEnum>
  }


  /**
   * DiscoverFeatured findMany
   */
  export type DiscoverFeaturedFindManyArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
    /**
     * Filter, which DiscoverFeatureds to fetch.
     * 
    **/
    where?: DiscoverFeaturedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverFeatureds to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverFeaturedOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoverFeatureds.
     * 
    **/
    cursor?: DiscoverFeaturedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverFeatureds from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverFeatureds.
     * 
    **/
    skip?: number
    distinct?: Enumerable<DiscoverFeaturedScalarFieldEnum>
  }


  /**
   * DiscoverFeatured create
   */
  export type DiscoverFeaturedCreateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
    /**
     * The data needed to create a DiscoverFeatured.
     * 
    **/
    data: XOR<DiscoverFeaturedCreateInput, DiscoverFeaturedUncheckedCreateInput>
  }


  /**
   * DiscoverFeatured createMany
   */
  export type DiscoverFeaturedCreateManyArgs = {
    data: Enumerable<DiscoverFeaturedCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * DiscoverFeatured update
   */
  export type DiscoverFeaturedUpdateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
    /**
     * The data needed to update a DiscoverFeatured.
     * 
    **/
    data: XOR<DiscoverFeaturedUpdateInput, DiscoverFeaturedUncheckedUpdateInput>
    /**
     * Choose, which DiscoverFeatured to update.
     * 
    **/
    where: DiscoverFeaturedWhereUniqueInput
  }


  /**
   * DiscoverFeatured updateMany
   */
  export type DiscoverFeaturedUpdateManyArgs = {
    data: XOR<DiscoverFeaturedUpdateManyMutationInput, DiscoverFeaturedUncheckedUpdateManyInput>
    where?: DiscoverFeaturedWhereInput
  }


  /**
   * DiscoverFeatured upsert
   */
  export type DiscoverFeaturedUpsertArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
    /**
     * The filter to search for the DiscoverFeatured to update in case it exists.
     * 
    **/
    where: DiscoverFeaturedWhereUniqueInput
    /**
     * In case the DiscoverFeatured found by the `where` argument doesn't exist, create a new DiscoverFeatured with this data.
     * 
    **/
    create: XOR<DiscoverFeaturedCreateInput, DiscoverFeaturedUncheckedCreateInput>
    /**
     * In case the DiscoverFeatured was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<DiscoverFeaturedUpdateInput, DiscoverFeaturedUncheckedUpdateInput>
  }


  /**
   * DiscoverFeatured delete
   */
  export type DiscoverFeaturedDeleteArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
    /**
     * Filter which DiscoverFeatured to delete.
     * 
    **/
    where: DiscoverFeaturedWhereUniqueInput
  }


  /**
   * DiscoverFeatured deleteMany
   */
  export type DiscoverFeaturedDeleteManyArgs = {
    where?: DiscoverFeaturedWhereInput
  }


  /**
   * DiscoverFeatured without action
   */
  export type DiscoverFeaturedArgs = {
    /**
     * Select specific fields to fetch from the DiscoverFeatured
     * 
    **/
    select?: DiscoverFeaturedSelect | null
  }



  /**
   * Model DiscoverWorkoutCategory
   */


  export type AggregateDiscoverWorkoutCategory = {
    _count: DiscoverWorkoutCategoryCountAggregateOutputType | null
    count: DiscoverWorkoutCategoryCountAggregateOutputType | null
    _min: DiscoverWorkoutCategoryMinAggregateOutputType | null
    min: DiscoverWorkoutCategoryMinAggregateOutputType | null
    _max: DiscoverWorkoutCategoryMaxAggregateOutputType | null
    max: DiscoverWorkoutCategoryMaxAggregateOutputType | null
  }

  export type DiscoverWorkoutCategoryMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    active: boolean | null
    name: string | null
    tagline: string | null
    description: string | null
    coverImageUri: string | null
  }

  export type DiscoverWorkoutCategoryMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    active: boolean | null
    name: string | null
    tagline: string | null
    description: string | null
    coverImageUri: string | null
  }

  export type DiscoverWorkoutCategoryCountAggregateOutputType = {
    id: number
    createdAt: number
    active: number
    name: number
    tagline: number
    description: number
    coverImageUri: number
    _all: number
  }


  export type DiscoverWorkoutCategoryMinAggregateInputType = {
    id?: true
    createdAt?: true
    active?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
  }

  export type DiscoverWorkoutCategoryMaxAggregateInputType = {
    id?: true
    createdAt?: true
    active?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
  }

  export type DiscoverWorkoutCategoryCountAggregateInputType = {
    id?: true
    createdAt?: true
    active?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
    _all?: true
  }

  export type DiscoverWorkoutCategoryAggregateArgs = {
    /**
     * Filter which DiscoverWorkoutCategory to aggregate.
     * 
    **/
    where?: DiscoverWorkoutCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutCategoryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: DiscoverWorkoutCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutCategories.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoverWorkoutCategories
    **/
    _count?: true | DiscoverWorkoutCategoryCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | DiscoverWorkoutCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoverWorkoutCategoryMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: DiscoverWorkoutCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoverWorkoutCategoryMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: DiscoverWorkoutCategoryMaxAggregateInputType
  }

  export type GetDiscoverWorkoutCategoryAggregateType<T extends DiscoverWorkoutCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoverWorkoutCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoverWorkoutCategory[P]>
      : GetScalarType<T[P], AggregateDiscoverWorkoutCategory[P]>
  }


    
    
  export type DiscoverWorkoutCategoryGroupByArgs = {
    where?: DiscoverWorkoutCategoryWhereInput
    orderBy?: Enumerable<DiscoverWorkoutCategoryOrderByInput>
    by: Array<DiscoverWorkoutCategoryScalarFieldEnum>
    having?: DiscoverWorkoutCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoverWorkoutCategoryCountAggregateInputType | true
    _min?: DiscoverWorkoutCategoryMinAggregateInputType
    _max?: DiscoverWorkoutCategoryMaxAggregateInputType
  }


  export type DiscoverWorkoutCategoryGroupByOutputType = {
    id: string
    createdAt: Date
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
    _count: DiscoverWorkoutCategoryCountAggregateOutputType | null
    _min: DiscoverWorkoutCategoryMinAggregateOutputType | null
    _max: DiscoverWorkoutCategoryMaxAggregateOutputType | null
  }

  type GetDiscoverWorkoutCategoryGroupByPayload<T extends DiscoverWorkoutCategoryGroupByArgs> = Promise<
    Array<
      PickArray<DiscoverWorkoutCategoryGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof DiscoverWorkoutCategoryGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], DiscoverWorkoutCategoryGroupByOutputType[P]> 
            : GetScalarType<T[P], DiscoverWorkoutCategoryGroupByOutputType[P]>
        }
      > 
    >


  export type DiscoverWorkoutCategorySelect = {
    id?: boolean
    createdAt?: boolean
    active?: boolean
    name?: boolean
    tagline?: boolean
    description?: boolean
    coverImageUri?: boolean
    DiscoverWorkouts?: boolean | DiscoverWorkoutFindManyArgs
  }

  export type DiscoverWorkoutCategoryInclude = {
    DiscoverWorkouts?: boolean | DiscoverWorkoutFindManyArgs
  }

  export type DiscoverWorkoutCategoryGetPayload<
    S extends boolean | null | undefined | DiscoverWorkoutCategoryArgs,
    U = keyof S
      > = S extends true
        ? DiscoverWorkoutCategory
    : S extends undefined
    ? never
    : S extends DiscoverWorkoutCategoryArgs | DiscoverWorkoutCategoryFindManyArgs
    ?'include' extends U
    ? DiscoverWorkoutCategory  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'DiscoverWorkouts'
        ? Array < DiscoverWorkoutGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof DiscoverWorkoutCategory ?DiscoverWorkoutCategory [P]
  : 
          P extends 'DiscoverWorkouts'
        ? Array < DiscoverWorkoutGetPayload<S['select'][P]>>  : never
  } 
    : DiscoverWorkoutCategory
  : DiscoverWorkoutCategory


  type DiscoverWorkoutCategoryCountArgs = Merge<
    Omit<DiscoverWorkoutCategoryFindManyArgs, 'select' | 'include'> & {
      select?: DiscoverWorkoutCategoryCountAggregateInputType | true
    }
  >

  export interface DiscoverWorkoutCategoryDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one DiscoverWorkoutCategory that matches the filter.
     * @param {DiscoverWorkoutCategoryFindUniqueArgs} args - Arguments to find a DiscoverWorkoutCategory
     * @example
     * // Get one DiscoverWorkoutCategory
     * const discoverWorkoutCategory = await prisma.discoverWorkoutCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DiscoverWorkoutCategoryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, DiscoverWorkoutCategoryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'DiscoverWorkoutCategory'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory>, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory | null >, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T> | null >>

    /**
     * Find the first DiscoverWorkoutCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutCategoryFindFirstArgs} args - Arguments to find a DiscoverWorkoutCategory
     * @example
     * // Get one DiscoverWorkoutCategory
     * const discoverWorkoutCategory = await prisma.discoverWorkoutCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DiscoverWorkoutCategoryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, DiscoverWorkoutCategoryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'DiscoverWorkoutCategory'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory>, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory | null >, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T> | null >>

    /**
     * Find zero or more DiscoverWorkoutCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutCategoryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoverWorkoutCategories
     * const discoverWorkoutCategories = await prisma.discoverWorkoutCategory.findMany()
     * 
     * // Get first 10 DiscoverWorkoutCategories
     * const discoverWorkoutCategories = await prisma.discoverWorkoutCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoverWorkoutCategoryWithIdOnly = await prisma.discoverWorkoutCategory.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DiscoverWorkoutCategoryFindManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutCategoryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<DiscoverWorkoutCategory>>, PrismaPromise<Array<DiscoverWorkoutCategoryGetPayload<T>>>>

    /**
     * Create a DiscoverWorkoutCategory.
     * @param {DiscoverWorkoutCategoryCreateArgs} args - Arguments to create a DiscoverWorkoutCategory.
     * @example
     * // Create one DiscoverWorkoutCategory
     * const DiscoverWorkoutCategory = await prisma.discoverWorkoutCategory.create({
     *   data: {
     *     // ... data to create a DiscoverWorkoutCategory
     *   }
     * })
     * 
    **/
    create<T extends DiscoverWorkoutCategoryCreateArgs>(
      args: SelectSubset<T, DiscoverWorkoutCategoryCreateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory>, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T>>>

    /**
     * Create many DiscoverWorkoutCategories.
     *     @param {DiscoverWorkoutCategoryCreateManyArgs} args - Arguments to create many DiscoverWorkoutCategories.
     *     @example
     *     // Create many DiscoverWorkoutCategories
     *     const discoverWorkoutCategory = await prisma.discoverWorkoutCategory.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DiscoverWorkoutCategoryCreateManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutCategoryCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a DiscoverWorkoutCategory.
     * @param {DiscoverWorkoutCategoryDeleteArgs} args - Arguments to delete one DiscoverWorkoutCategory.
     * @example
     * // Delete one DiscoverWorkoutCategory
     * const DiscoverWorkoutCategory = await prisma.discoverWorkoutCategory.delete({
     *   where: {
     *     // ... filter to delete one DiscoverWorkoutCategory
     *   }
     * })
     * 
    **/
    delete<T extends DiscoverWorkoutCategoryDeleteArgs>(
      args: SelectSubset<T, DiscoverWorkoutCategoryDeleteArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory>, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T>>>

    /**
     * Update one DiscoverWorkoutCategory.
     * @param {DiscoverWorkoutCategoryUpdateArgs} args - Arguments to update one DiscoverWorkoutCategory.
     * @example
     * // Update one DiscoverWorkoutCategory
     * const discoverWorkoutCategory = await prisma.discoverWorkoutCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DiscoverWorkoutCategoryUpdateArgs>(
      args: SelectSubset<T, DiscoverWorkoutCategoryUpdateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory>, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T>>>

    /**
     * Delete zero or more DiscoverWorkoutCategories.
     * @param {DiscoverWorkoutCategoryDeleteManyArgs} args - Arguments to filter DiscoverWorkoutCategories to delete.
     * @example
     * // Delete a few DiscoverWorkoutCategories
     * const { count } = await prisma.discoverWorkoutCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DiscoverWorkoutCategoryDeleteManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutCategoryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoverWorkoutCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoverWorkoutCategories
     * const discoverWorkoutCategory = await prisma.discoverWorkoutCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DiscoverWorkoutCategoryUpdateManyArgs>(
      args: SelectSubset<T, DiscoverWorkoutCategoryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one DiscoverWorkoutCategory.
     * @param {DiscoverWorkoutCategoryUpsertArgs} args - Arguments to update or create a DiscoverWorkoutCategory.
     * @example
     * // Update or create a DiscoverWorkoutCategory
     * const discoverWorkoutCategory = await prisma.discoverWorkoutCategory.upsert({
     *   create: {
     *     // ... data to create a DiscoverWorkoutCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoverWorkoutCategory we want to update
     *   }
     * })
    **/
    upsert<T extends DiscoverWorkoutCategoryUpsertArgs>(
      args: SelectSubset<T, DiscoverWorkoutCategoryUpsertArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory>, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T>>>

    /**
     * Count the number of DiscoverWorkoutCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutCategoryCountArgs} args - Arguments to filter DiscoverWorkoutCategories to count.
     * @example
     * // Count the number of DiscoverWorkoutCategories
     * const count = await prisma.discoverWorkoutCategory.count({
     *   where: {
     *     // ... the filter for the DiscoverWorkoutCategories we want to count
     *   }
     * })
    **/
    count<T extends DiscoverWorkoutCategoryCountArgs>(
      args?: Subset<T, DiscoverWorkoutCategoryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoverWorkoutCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoverWorkoutCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoverWorkoutCategoryAggregateArgs>(args: Subset<T, DiscoverWorkoutCategoryAggregateArgs>): PrismaPromise<GetDiscoverWorkoutCategoryAggregateType<T>>

    /**
     * Group by DiscoverWorkoutCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoverWorkoutCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoverWorkoutCategoryGroupByArgs['orderBy'] }
        : { orderBy?: DiscoverWorkoutCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoverWorkoutCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoverWorkoutCategoryGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoverWorkoutCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DiscoverWorkoutCategoryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    DiscoverWorkouts<T extends DiscoverWorkoutFindManyArgs = {}>(args?: Subset<T, DiscoverWorkoutFindManyArgs>): CheckSelect<T, PrismaPromise<Array<DiscoverWorkout>>, PrismaPromise<Array<DiscoverWorkoutGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * DiscoverWorkoutCategory findUnique
   */
  export type DiscoverWorkoutCategoryFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
    /**
     * Throw an Error if a DiscoverWorkoutCategory can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkoutCategory to fetch.
     * 
    **/
    where: DiscoverWorkoutCategoryWhereUniqueInput
  }


  /**
   * DiscoverWorkoutCategory findFirst
   */
  export type DiscoverWorkoutCategoryFindFirstArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
    /**
     * Throw an Error if a DiscoverWorkoutCategory can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkoutCategory to fetch.
     * 
    **/
    where?: DiscoverWorkoutCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutCategoryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoverWorkoutCategories.
     * 
    **/
    cursor?: DiscoverWorkoutCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutCategories.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoverWorkoutCategories.
     * 
    **/
    distinct?: Enumerable<DiscoverWorkoutCategoryScalarFieldEnum>
  }


  /**
   * DiscoverWorkoutCategory findMany
   */
  export type DiscoverWorkoutCategoryFindManyArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
    /**
     * Filter, which DiscoverWorkoutCategories to fetch.
     * 
    **/
    where?: DiscoverWorkoutCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutCategoryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoverWorkoutCategories.
     * 
    **/
    cursor?: DiscoverWorkoutCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutCategories.
     * 
    **/
    skip?: number
    distinct?: Enumerable<DiscoverWorkoutCategoryScalarFieldEnum>
  }


  /**
   * DiscoverWorkoutCategory create
   */
  export type DiscoverWorkoutCategoryCreateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
    /**
     * The data needed to create a DiscoverWorkoutCategory.
     * 
    **/
    data: XOR<DiscoverWorkoutCategoryCreateInput, DiscoverWorkoutCategoryUncheckedCreateInput>
  }


  /**
   * DiscoverWorkoutCategory createMany
   */
  export type DiscoverWorkoutCategoryCreateManyArgs = {
    data: Enumerable<DiscoverWorkoutCategoryCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * DiscoverWorkoutCategory update
   */
  export type DiscoverWorkoutCategoryUpdateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
    /**
     * The data needed to update a DiscoverWorkoutCategory.
     * 
    **/
    data: XOR<DiscoverWorkoutCategoryUpdateInput, DiscoverWorkoutCategoryUncheckedUpdateInput>
    /**
     * Choose, which DiscoverWorkoutCategory to update.
     * 
    **/
    where: DiscoverWorkoutCategoryWhereUniqueInput
  }


  /**
   * DiscoverWorkoutCategory updateMany
   */
  export type DiscoverWorkoutCategoryUpdateManyArgs = {
    data: XOR<DiscoverWorkoutCategoryUpdateManyMutationInput, DiscoverWorkoutCategoryUncheckedUpdateManyInput>
    where?: DiscoverWorkoutCategoryWhereInput
  }


  /**
   * DiscoverWorkoutCategory upsert
   */
  export type DiscoverWorkoutCategoryUpsertArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
    /**
     * The filter to search for the DiscoverWorkoutCategory to update in case it exists.
     * 
    **/
    where: DiscoverWorkoutCategoryWhereUniqueInput
    /**
     * In case the DiscoverWorkoutCategory found by the `where` argument doesn't exist, create a new DiscoverWorkoutCategory with this data.
     * 
    **/
    create: XOR<DiscoverWorkoutCategoryCreateInput, DiscoverWorkoutCategoryUncheckedCreateInput>
    /**
     * In case the DiscoverWorkoutCategory was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<DiscoverWorkoutCategoryUpdateInput, DiscoverWorkoutCategoryUncheckedUpdateInput>
  }


  /**
   * DiscoverWorkoutCategory delete
   */
  export type DiscoverWorkoutCategoryDeleteArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
    /**
     * Filter which DiscoverWorkoutCategory to delete.
     * 
    **/
    where: DiscoverWorkoutCategoryWhereUniqueInput
  }


  /**
   * DiscoverWorkoutCategory deleteMany
   */
  export type DiscoverWorkoutCategoryDeleteManyArgs = {
    where?: DiscoverWorkoutCategoryWhereInput
  }


  /**
   * DiscoverWorkoutCategory without action
   */
  export type DiscoverWorkoutCategoryArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutCategory
     * 
    **/
    select?: DiscoverWorkoutCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutCategoryInclude | null
  }



  /**
   * Model DiscoverWorkout
   */


  export type AggregateDiscoverWorkout = {
    _count: DiscoverWorkoutCountAggregateOutputType | null
    count: DiscoverWorkoutCountAggregateOutputType | null
    _min: DiscoverWorkoutMinAggregateOutputType | null
    min: DiscoverWorkoutMinAggregateOutputType | null
    _max: DiscoverWorkoutMaxAggregateOutputType | null
    max: DiscoverWorkoutMaxAggregateOutputType | null
  }

  export type DiscoverWorkoutMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    workoutId: string | null
    discoverWorkoutCategoryId: string | null
  }

  export type DiscoverWorkoutMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    workoutId: string | null
    discoverWorkoutCategoryId: string | null
  }

  export type DiscoverWorkoutCountAggregateOutputType = {
    id: number
    createdAt: number
    workoutId: number
    discoverWorkoutCategoryId: number
    _all: number
  }


  export type DiscoverWorkoutMinAggregateInputType = {
    id?: true
    createdAt?: true
    workoutId?: true
    discoverWorkoutCategoryId?: true
  }

  export type DiscoverWorkoutMaxAggregateInputType = {
    id?: true
    createdAt?: true
    workoutId?: true
    discoverWorkoutCategoryId?: true
  }

  export type DiscoverWorkoutCountAggregateInputType = {
    id?: true
    createdAt?: true
    workoutId?: true
    discoverWorkoutCategoryId?: true
    _all?: true
  }

  export type DiscoverWorkoutAggregateArgs = {
    /**
     * Filter which DiscoverWorkout to aggregate.
     * 
    **/
    where?: DiscoverWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: DiscoverWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoverWorkouts
    **/
    _count?: true | DiscoverWorkoutCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | DiscoverWorkoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoverWorkoutMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: DiscoverWorkoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoverWorkoutMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: DiscoverWorkoutMaxAggregateInputType
  }

  export type GetDiscoverWorkoutAggregateType<T extends DiscoverWorkoutAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoverWorkout]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoverWorkout[P]>
      : GetScalarType<T[P], AggregateDiscoverWorkout[P]>
  }


    
    
  export type DiscoverWorkoutGroupByArgs = {
    where?: DiscoverWorkoutWhereInput
    orderBy?: Enumerable<DiscoverWorkoutOrderByInput>
    by: Array<DiscoverWorkoutScalarFieldEnum>
    having?: DiscoverWorkoutScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoverWorkoutCountAggregateInputType | true
    _min?: DiscoverWorkoutMinAggregateInputType
    _max?: DiscoverWorkoutMaxAggregateInputType
  }


  export type DiscoverWorkoutGroupByOutputType = {
    id: string
    createdAt: Date
    workoutId: string
    discoverWorkoutCategoryId: string
    _count: DiscoverWorkoutCountAggregateOutputType | null
    _min: DiscoverWorkoutMinAggregateOutputType | null
    _max: DiscoverWorkoutMaxAggregateOutputType | null
  }

  type GetDiscoverWorkoutGroupByPayload<T extends DiscoverWorkoutGroupByArgs> = Promise<
    Array<
      PickArray<DiscoverWorkoutGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof DiscoverWorkoutGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], DiscoverWorkoutGroupByOutputType[P]> 
            : GetScalarType<T[P], DiscoverWorkoutGroupByOutputType[P]>
        }
      > 
    >


  export type DiscoverWorkoutSelect = {
    id?: boolean
    createdAt?: boolean
    Workout?: boolean | WorkoutArgs
    workoutId?: boolean
    DiscoverWorkoutCategory?: boolean | DiscoverWorkoutCategoryArgs
    discoverWorkoutCategoryId?: boolean
  }

  export type DiscoverWorkoutInclude = {
    Workout?: boolean | WorkoutArgs
    DiscoverWorkoutCategory?: boolean | DiscoverWorkoutCategoryArgs
  }

  export type DiscoverWorkoutGetPayload<
    S extends boolean | null | undefined | DiscoverWorkoutArgs,
    U = keyof S
      > = S extends true
        ? DiscoverWorkout
    : S extends undefined
    ? never
    : S extends DiscoverWorkoutArgs | DiscoverWorkoutFindManyArgs
    ?'include' extends U
    ? DiscoverWorkout  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'Workout'
        ? WorkoutGetPayload<S['include'][P]> :
        P extends 'DiscoverWorkoutCategory'
        ? DiscoverWorkoutCategoryGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof DiscoverWorkout ?DiscoverWorkout [P]
  : 
          P extends 'Workout'
        ? WorkoutGetPayload<S['select'][P]> :
        P extends 'DiscoverWorkoutCategory'
        ? DiscoverWorkoutCategoryGetPayload<S['select'][P]> : never
  } 
    : DiscoverWorkout
  : DiscoverWorkout


  type DiscoverWorkoutCountArgs = Merge<
    Omit<DiscoverWorkoutFindManyArgs, 'select' | 'include'> & {
      select?: DiscoverWorkoutCountAggregateInputType | true
    }
  >

  export interface DiscoverWorkoutDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one DiscoverWorkout that matches the filter.
     * @param {DiscoverWorkoutFindUniqueArgs} args - Arguments to find a DiscoverWorkout
     * @example
     * // Get one DiscoverWorkout
     * const discoverWorkout = await prisma.discoverWorkout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DiscoverWorkoutFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, DiscoverWorkoutFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'DiscoverWorkout'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout>, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout | null >, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T> | null >>

    /**
     * Find the first DiscoverWorkout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutFindFirstArgs} args - Arguments to find a DiscoverWorkout
     * @example
     * // Get one DiscoverWorkout
     * const discoverWorkout = await prisma.discoverWorkout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DiscoverWorkoutFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, DiscoverWorkoutFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'DiscoverWorkout'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout>, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout | null >, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T> | null >>

    /**
     * Find zero or more DiscoverWorkouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoverWorkouts
     * const discoverWorkouts = await prisma.discoverWorkout.findMany()
     * 
     * // Get first 10 DiscoverWorkouts
     * const discoverWorkouts = await prisma.discoverWorkout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoverWorkoutWithIdOnly = await prisma.discoverWorkout.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DiscoverWorkoutFindManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<DiscoverWorkout>>, PrismaPromise<Array<DiscoverWorkoutGetPayload<T>>>>

    /**
     * Create a DiscoverWorkout.
     * @param {DiscoverWorkoutCreateArgs} args - Arguments to create a DiscoverWorkout.
     * @example
     * // Create one DiscoverWorkout
     * const DiscoverWorkout = await prisma.discoverWorkout.create({
     *   data: {
     *     // ... data to create a DiscoverWorkout
     *   }
     * })
     * 
    **/
    create<T extends DiscoverWorkoutCreateArgs>(
      args: SelectSubset<T, DiscoverWorkoutCreateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout>, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T>>>

    /**
     * Create many DiscoverWorkouts.
     *     @param {DiscoverWorkoutCreateManyArgs} args - Arguments to create many DiscoverWorkouts.
     *     @example
     *     // Create many DiscoverWorkouts
     *     const discoverWorkout = await prisma.discoverWorkout.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DiscoverWorkoutCreateManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a DiscoverWorkout.
     * @param {DiscoverWorkoutDeleteArgs} args - Arguments to delete one DiscoverWorkout.
     * @example
     * // Delete one DiscoverWorkout
     * const DiscoverWorkout = await prisma.discoverWorkout.delete({
     *   where: {
     *     // ... filter to delete one DiscoverWorkout
     *   }
     * })
     * 
    **/
    delete<T extends DiscoverWorkoutDeleteArgs>(
      args: SelectSubset<T, DiscoverWorkoutDeleteArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout>, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T>>>

    /**
     * Update one DiscoverWorkout.
     * @param {DiscoverWorkoutUpdateArgs} args - Arguments to update one DiscoverWorkout.
     * @example
     * // Update one DiscoverWorkout
     * const discoverWorkout = await prisma.discoverWorkout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DiscoverWorkoutUpdateArgs>(
      args: SelectSubset<T, DiscoverWorkoutUpdateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout>, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T>>>

    /**
     * Delete zero or more DiscoverWorkouts.
     * @param {DiscoverWorkoutDeleteManyArgs} args - Arguments to filter DiscoverWorkouts to delete.
     * @example
     * // Delete a few DiscoverWorkouts
     * const { count } = await prisma.discoverWorkout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DiscoverWorkoutDeleteManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoverWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoverWorkouts
     * const discoverWorkout = await prisma.discoverWorkout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DiscoverWorkoutUpdateManyArgs>(
      args: SelectSubset<T, DiscoverWorkoutUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one DiscoverWorkout.
     * @param {DiscoverWorkoutUpsertArgs} args - Arguments to update or create a DiscoverWorkout.
     * @example
     * // Update or create a DiscoverWorkout
     * const discoverWorkout = await prisma.discoverWorkout.upsert({
     *   create: {
     *     // ... data to create a DiscoverWorkout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoverWorkout we want to update
     *   }
     * })
    **/
    upsert<T extends DiscoverWorkoutUpsertArgs>(
      args: SelectSubset<T, DiscoverWorkoutUpsertArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutClient<DiscoverWorkout>, Prisma__DiscoverWorkoutClient<DiscoverWorkoutGetPayload<T>>>

    /**
     * Count the number of DiscoverWorkouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutCountArgs} args - Arguments to filter DiscoverWorkouts to count.
     * @example
     * // Count the number of DiscoverWorkouts
     * const count = await prisma.discoverWorkout.count({
     *   where: {
     *     // ... the filter for the DiscoverWorkouts we want to count
     *   }
     * })
    **/
    count<T extends DiscoverWorkoutCountArgs>(
      args?: Subset<T, DiscoverWorkoutCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoverWorkoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoverWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoverWorkoutAggregateArgs>(args: Subset<T, DiscoverWorkoutAggregateArgs>): PrismaPromise<GetDiscoverWorkoutAggregateType<T>>

    /**
     * Group by DiscoverWorkout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoverWorkoutGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoverWorkoutGroupByArgs['orderBy'] }
        : { orderBy?: DiscoverWorkoutGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoverWorkoutGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoverWorkoutGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoverWorkout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DiscoverWorkoutClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    Workout<T extends WorkoutArgs = {}>(args?: Subset<T, WorkoutArgs>): CheckSelect<T, Prisma__WorkoutClient<Workout | null >, Prisma__WorkoutClient<WorkoutGetPayload<T> | null >>;

    DiscoverWorkoutCategory<T extends DiscoverWorkoutCategoryArgs = {}>(args?: Subset<T, DiscoverWorkoutCategoryArgs>): CheckSelect<T, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategory | null >, Prisma__DiscoverWorkoutCategoryClient<DiscoverWorkoutCategoryGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * DiscoverWorkout findUnique
   */
  export type DiscoverWorkoutFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
    /**
     * Throw an Error if a DiscoverWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkout to fetch.
     * 
    **/
    where: DiscoverWorkoutWhereUniqueInput
  }


  /**
   * DiscoverWorkout findFirst
   */
  export type DiscoverWorkoutFindFirstArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
    /**
     * Throw an Error if a DiscoverWorkout can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkout to fetch.
     * 
    **/
    where?: DiscoverWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoverWorkouts.
     * 
    **/
    cursor?: DiscoverWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkouts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoverWorkouts.
     * 
    **/
    distinct?: Enumerable<DiscoverWorkoutScalarFieldEnum>
  }


  /**
   * DiscoverWorkout findMany
   */
  export type DiscoverWorkoutFindManyArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
    /**
     * Filter, which DiscoverWorkouts to fetch.
     * 
    **/
    where?: DiscoverWorkoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkouts to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoverWorkouts.
     * 
    **/
    cursor?: DiscoverWorkoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkouts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkouts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<DiscoverWorkoutScalarFieldEnum>
  }


  /**
   * DiscoverWorkout create
   */
  export type DiscoverWorkoutCreateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
    /**
     * The data needed to create a DiscoverWorkout.
     * 
    **/
    data: XOR<DiscoverWorkoutCreateInput, DiscoverWorkoutUncheckedCreateInput>
  }


  /**
   * DiscoverWorkout createMany
   */
  export type DiscoverWorkoutCreateManyArgs = {
    data: Enumerable<DiscoverWorkoutCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * DiscoverWorkout update
   */
  export type DiscoverWorkoutUpdateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
    /**
     * The data needed to update a DiscoverWorkout.
     * 
    **/
    data: XOR<DiscoverWorkoutUpdateInput, DiscoverWorkoutUncheckedUpdateInput>
    /**
     * Choose, which DiscoverWorkout to update.
     * 
    **/
    where: DiscoverWorkoutWhereUniqueInput
  }


  /**
   * DiscoverWorkout updateMany
   */
  export type DiscoverWorkoutUpdateManyArgs = {
    data: XOR<DiscoverWorkoutUpdateManyMutationInput, DiscoverWorkoutUncheckedUpdateManyInput>
    where?: DiscoverWorkoutWhereInput
  }


  /**
   * DiscoverWorkout upsert
   */
  export type DiscoverWorkoutUpsertArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
    /**
     * The filter to search for the DiscoverWorkout to update in case it exists.
     * 
    **/
    where: DiscoverWorkoutWhereUniqueInput
    /**
     * In case the DiscoverWorkout found by the `where` argument doesn't exist, create a new DiscoverWorkout with this data.
     * 
    **/
    create: XOR<DiscoverWorkoutCreateInput, DiscoverWorkoutUncheckedCreateInput>
    /**
     * In case the DiscoverWorkout was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<DiscoverWorkoutUpdateInput, DiscoverWorkoutUncheckedUpdateInput>
  }


  /**
   * DiscoverWorkout delete
   */
  export type DiscoverWorkoutDeleteArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
    /**
     * Filter which DiscoverWorkout to delete.
     * 
    **/
    where: DiscoverWorkoutWhereUniqueInput
  }


  /**
   * DiscoverWorkout deleteMany
   */
  export type DiscoverWorkoutDeleteManyArgs = {
    where?: DiscoverWorkoutWhereInput
  }


  /**
   * DiscoverWorkout without action
   */
  export type DiscoverWorkoutArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkout
     * 
    **/
    select?: DiscoverWorkoutSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutInclude | null
  }



  /**
   * Model DiscoverWorkoutPlanCategory
   */


  export type AggregateDiscoverWorkoutPlanCategory = {
    _count: DiscoverWorkoutPlanCategoryCountAggregateOutputType | null
    count: DiscoverWorkoutPlanCategoryCountAggregateOutputType | null
    _min: DiscoverWorkoutPlanCategoryMinAggregateOutputType | null
    min: DiscoverWorkoutPlanCategoryMinAggregateOutputType | null
    _max: DiscoverWorkoutPlanCategoryMaxAggregateOutputType | null
    max: DiscoverWorkoutPlanCategoryMaxAggregateOutputType | null
  }

  export type DiscoverWorkoutPlanCategoryMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    active: boolean | null
    name: string | null
    tagline: string | null
    description: string | null
    coverImageUri: string | null
  }

  export type DiscoverWorkoutPlanCategoryMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    active: boolean | null
    name: string | null
    tagline: string | null
    description: string | null
    coverImageUri: string | null
  }

  export type DiscoverWorkoutPlanCategoryCountAggregateOutputType = {
    id: number
    createdAt: number
    active: number
    name: number
    tagline: number
    description: number
    coverImageUri: number
    _all: number
  }


  export type DiscoverWorkoutPlanCategoryMinAggregateInputType = {
    id?: true
    createdAt?: true
    active?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
  }

  export type DiscoverWorkoutPlanCategoryMaxAggregateInputType = {
    id?: true
    createdAt?: true
    active?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
  }

  export type DiscoverWorkoutPlanCategoryCountAggregateInputType = {
    id?: true
    createdAt?: true
    active?: true
    name?: true
    tagline?: true
    description?: true
    coverImageUri?: true
    _all?: true
  }

  export type DiscoverWorkoutPlanCategoryAggregateArgs = {
    /**
     * Filter which DiscoverWorkoutPlanCategory to aggregate.
     * 
    **/
    where?: DiscoverWorkoutPlanCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutPlanCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutPlanCategoryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: DiscoverWorkoutPlanCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutPlanCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutPlanCategories.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoverWorkoutPlanCategories
    **/
    _count?: true | DiscoverWorkoutPlanCategoryCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | DiscoverWorkoutPlanCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoverWorkoutPlanCategoryMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: DiscoverWorkoutPlanCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoverWorkoutPlanCategoryMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: DiscoverWorkoutPlanCategoryMaxAggregateInputType
  }

  export type GetDiscoverWorkoutPlanCategoryAggregateType<T extends DiscoverWorkoutPlanCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoverWorkoutPlanCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoverWorkoutPlanCategory[P]>
      : GetScalarType<T[P], AggregateDiscoverWorkoutPlanCategory[P]>
  }


    
    
  export type DiscoverWorkoutPlanCategoryGroupByArgs = {
    where?: DiscoverWorkoutPlanCategoryWhereInput
    orderBy?: Enumerable<DiscoverWorkoutPlanCategoryOrderByInput>
    by: Array<DiscoverWorkoutPlanCategoryScalarFieldEnum>
    having?: DiscoverWorkoutPlanCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoverWorkoutPlanCategoryCountAggregateInputType | true
    _min?: DiscoverWorkoutPlanCategoryMinAggregateInputType
    _max?: DiscoverWorkoutPlanCategoryMaxAggregateInputType
  }


  export type DiscoverWorkoutPlanCategoryGroupByOutputType = {
    id: string
    createdAt: Date
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
    _count: DiscoverWorkoutPlanCategoryCountAggregateOutputType | null
    _min: DiscoverWorkoutPlanCategoryMinAggregateOutputType | null
    _max: DiscoverWorkoutPlanCategoryMaxAggregateOutputType | null
  }

  type GetDiscoverWorkoutPlanCategoryGroupByPayload<T extends DiscoverWorkoutPlanCategoryGroupByArgs> = Promise<
    Array<
      PickArray<DiscoverWorkoutPlanCategoryGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof DiscoverWorkoutPlanCategoryGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], DiscoverWorkoutPlanCategoryGroupByOutputType[P]> 
            : GetScalarType<T[P], DiscoverWorkoutPlanCategoryGroupByOutputType[P]>
        }
      > 
    >


  export type DiscoverWorkoutPlanCategorySelect = {
    id?: boolean
    createdAt?: boolean
    active?: boolean
    name?: boolean
    tagline?: boolean
    description?: boolean
    coverImageUri?: boolean
    DiscoverWorkoutPlans?: boolean | DiscoverWorkoutPlanFindManyArgs
  }

  export type DiscoverWorkoutPlanCategoryInclude = {
    DiscoverWorkoutPlans?: boolean | DiscoverWorkoutPlanFindManyArgs
  }

  export type DiscoverWorkoutPlanCategoryGetPayload<
    S extends boolean | null | undefined | DiscoverWorkoutPlanCategoryArgs,
    U = keyof S
      > = S extends true
        ? DiscoverWorkoutPlanCategory
    : S extends undefined
    ? never
    : S extends DiscoverWorkoutPlanCategoryArgs | DiscoverWorkoutPlanCategoryFindManyArgs
    ?'include' extends U
    ? DiscoverWorkoutPlanCategory  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'DiscoverWorkoutPlans'
        ? Array < DiscoverWorkoutPlanGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof DiscoverWorkoutPlanCategory ?DiscoverWorkoutPlanCategory [P]
  : 
          P extends 'DiscoverWorkoutPlans'
        ? Array < DiscoverWorkoutPlanGetPayload<S['select'][P]>>  : never
  } 
    : DiscoverWorkoutPlanCategory
  : DiscoverWorkoutPlanCategory


  type DiscoverWorkoutPlanCategoryCountArgs = Merge<
    Omit<DiscoverWorkoutPlanCategoryFindManyArgs, 'select' | 'include'> & {
      select?: DiscoverWorkoutPlanCategoryCountAggregateInputType | true
    }
  >

  export interface DiscoverWorkoutPlanCategoryDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one DiscoverWorkoutPlanCategory that matches the filter.
     * @param {DiscoverWorkoutPlanCategoryFindUniqueArgs} args - Arguments to find a DiscoverWorkoutPlanCategory
     * @example
     * // Get one DiscoverWorkoutPlanCategory
     * const discoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DiscoverWorkoutPlanCategoryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, DiscoverWorkoutPlanCategoryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'DiscoverWorkoutPlanCategory'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory>, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory | null >, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T> | null >>

    /**
     * Find the first DiscoverWorkoutPlanCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanCategoryFindFirstArgs} args - Arguments to find a DiscoverWorkoutPlanCategory
     * @example
     * // Get one DiscoverWorkoutPlanCategory
     * const discoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DiscoverWorkoutPlanCategoryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, DiscoverWorkoutPlanCategoryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'DiscoverWorkoutPlanCategory'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory>, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory | null >, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T> | null >>

    /**
     * Find zero or more DiscoverWorkoutPlanCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanCategoryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoverWorkoutPlanCategories
     * const discoverWorkoutPlanCategories = await prisma.discoverWorkoutPlanCategory.findMany()
     * 
     * // Get first 10 DiscoverWorkoutPlanCategories
     * const discoverWorkoutPlanCategories = await prisma.discoverWorkoutPlanCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoverWorkoutPlanCategoryWithIdOnly = await prisma.discoverWorkoutPlanCategory.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DiscoverWorkoutPlanCategoryFindManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutPlanCategoryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<DiscoverWorkoutPlanCategory>>, PrismaPromise<Array<DiscoverWorkoutPlanCategoryGetPayload<T>>>>

    /**
     * Create a DiscoverWorkoutPlanCategory.
     * @param {DiscoverWorkoutPlanCategoryCreateArgs} args - Arguments to create a DiscoverWorkoutPlanCategory.
     * @example
     * // Create one DiscoverWorkoutPlanCategory
     * const DiscoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.create({
     *   data: {
     *     // ... data to create a DiscoverWorkoutPlanCategory
     *   }
     * })
     * 
    **/
    create<T extends DiscoverWorkoutPlanCategoryCreateArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanCategoryCreateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory>, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T>>>

    /**
     * Create many DiscoverWorkoutPlanCategories.
     *     @param {DiscoverWorkoutPlanCategoryCreateManyArgs} args - Arguments to create many DiscoverWorkoutPlanCategories.
     *     @example
     *     // Create many DiscoverWorkoutPlanCategories
     *     const discoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DiscoverWorkoutPlanCategoryCreateManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutPlanCategoryCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a DiscoverWorkoutPlanCategory.
     * @param {DiscoverWorkoutPlanCategoryDeleteArgs} args - Arguments to delete one DiscoverWorkoutPlanCategory.
     * @example
     * // Delete one DiscoverWorkoutPlanCategory
     * const DiscoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.delete({
     *   where: {
     *     // ... filter to delete one DiscoverWorkoutPlanCategory
     *   }
     * })
     * 
    **/
    delete<T extends DiscoverWorkoutPlanCategoryDeleteArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanCategoryDeleteArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory>, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T>>>

    /**
     * Update one DiscoverWorkoutPlanCategory.
     * @param {DiscoverWorkoutPlanCategoryUpdateArgs} args - Arguments to update one DiscoverWorkoutPlanCategory.
     * @example
     * // Update one DiscoverWorkoutPlanCategory
     * const discoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DiscoverWorkoutPlanCategoryUpdateArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanCategoryUpdateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory>, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T>>>

    /**
     * Delete zero or more DiscoverWorkoutPlanCategories.
     * @param {DiscoverWorkoutPlanCategoryDeleteManyArgs} args - Arguments to filter DiscoverWorkoutPlanCategories to delete.
     * @example
     * // Delete a few DiscoverWorkoutPlanCategories
     * const { count } = await prisma.discoverWorkoutPlanCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DiscoverWorkoutPlanCategoryDeleteManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutPlanCategoryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoverWorkoutPlanCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoverWorkoutPlanCategories
     * const discoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DiscoverWorkoutPlanCategoryUpdateManyArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanCategoryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one DiscoverWorkoutPlanCategory.
     * @param {DiscoverWorkoutPlanCategoryUpsertArgs} args - Arguments to update or create a DiscoverWorkoutPlanCategory.
     * @example
     * // Update or create a DiscoverWorkoutPlanCategory
     * const discoverWorkoutPlanCategory = await prisma.discoverWorkoutPlanCategory.upsert({
     *   create: {
     *     // ... data to create a DiscoverWorkoutPlanCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoverWorkoutPlanCategory we want to update
     *   }
     * })
    **/
    upsert<T extends DiscoverWorkoutPlanCategoryUpsertArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanCategoryUpsertArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory>, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T>>>

    /**
     * Count the number of DiscoverWorkoutPlanCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanCategoryCountArgs} args - Arguments to filter DiscoverWorkoutPlanCategories to count.
     * @example
     * // Count the number of DiscoverWorkoutPlanCategories
     * const count = await prisma.discoverWorkoutPlanCategory.count({
     *   where: {
     *     // ... the filter for the DiscoverWorkoutPlanCategories we want to count
     *   }
     * })
    **/
    count<T extends DiscoverWorkoutPlanCategoryCountArgs>(
      args?: Subset<T, DiscoverWorkoutPlanCategoryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoverWorkoutPlanCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoverWorkoutPlanCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoverWorkoutPlanCategoryAggregateArgs>(args: Subset<T, DiscoverWorkoutPlanCategoryAggregateArgs>): PrismaPromise<GetDiscoverWorkoutPlanCategoryAggregateType<T>>

    /**
     * Group by DiscoverWorkoutPlanCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoverWorkoutPlanCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoverWorkoutPlanCategoryGroupByArgs['orderBy'] }
        : { orderBy?: DiscoverWorkoutPlanCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoverWorkoutPlanCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoverWorkoutPlanCategoryGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoverWorkoutPlanCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DiscoverWorkoutPlanCategoryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    DiscoverWorkoutPlans<T extends DiscoverWorkoutPlanFindManyArgs = {}>(args?: Subset<T, DiscoverWorkoutPlanFindManyArgs>): CheckSelect<T, PrismaPromise<Array<DiscoverWorkoutPlan>>, PrismaPromise<Array<DiscoverWorkoutPlanGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * DiscoverWorkoutPlanCategory findUnique
   */
  export type DiscoverWorkoutPlanCategoryFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
    /**
     * Throw an Error if a DiscoverWorkoutPlanCategory can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkoutPlanCategory to fetch.
     * 
    **/
    where: DiscoverWorkoutPlanCategoryWhereUniqueInput
  }


  /**
   * DiscoverWorkoutPlanCategory findFirst
   */
  export type DiscoverWorkoutPlanCategoryFindFirstArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
    /**
     * Throw an Error if a DiscoverWorkoutPlanCategory can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkoutPlanCategory to fetch.
     * 
    **/
    where?: DiscoverWorkoutPlanCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutPlanCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutPlanCategoryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoverWorkoutPlanCategories.
     * 
    **/
    cursor?: DiscoverWorkoutPlanCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutPlanCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutPlanCategories.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoverWorkoutPlanCategories.
     * 
    **/
    distinct?: Enumerable<DiscoverWorkoutPlanCategoryScalarFieldEnum>
  }


  /**
   * DiscoverWorkoutPlanCategory findMany
   */
  export type DiscoverWorkoutPlanCategoryFindManyArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
    /**
     * Filter, which DiscoverWorkoutPlanCategories to fetch.
     * 
    **/
    where?: DiscoverWorkoutPlanCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutPlanCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutPlanCategoryOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoverWorkoutPlanCategories.
     * 
    **/
    cursor?: DiscoverWorkoutPlanCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutPlanCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutPlanCategories.
     * 
    **/
    skip?: number
    distinct?: Enumerable<DiscoverWorkoutPlanCategoryScalarFieldEnum>
  }


  /**
   * DiscoverWorkoutPlanCategory create
   */
  export type DiscoverWorkoutPlanCategoryCreateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
    /**
     * The data needed to create a DiscoverWorkoutPlanCategory.
     * 
    **/
    data: XOR<DiscoverWorkoutPlanCategoryCreateInput, DiscoverWorkoutPlanCategoryUncheckedCreateInput>
  }


  /**
   * DiscoverWorkoutPlanCategory createMany
   */
  export type DiscoverWorkoutPlanCategoryCreateManyArgs = {
    data: Enumerable<DiscoverWorkoutPlanCategoryCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * DiscoverWorkoutPlanCategory update
   */
  export type DiscoverWorkoutPlanCategoryUpdateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
    /**
     * The data needed to update a DiscoverWorkoutPlanCategory.
     * 
    **/
    data: XOR<DiscoverWorkoutPlanCategoryUpdateInput, DiscoverWorkoutPlanCategoryUncheckedUpdateInput>
    /**
     * Choose, which DiscoverWorkoutPlanCategory to update.
     * 
    **/
    where: DiscoverWorkoutPlanCategoryWhereUniqueInput
  }


  /**
   * DiscoverWorkoutPlanCategory updateMany
   */
  export type DiscoverWorkoutPlanCategoryUpdateManyArgs = {
    data: XOR<DiscoverWorkoutPlanCategoryUpdateManyMutationInput, DiscoverWorkoutPlanCategoryUncheckedUpdateManyInput>
    where?: DiscoverWorkoutPlanCategoryWhereInput
  }


  /**
   * DiscoverWorkoutPlanCategory upsert
   */
  export type DiscoverWorkoutPlanCategoryUpsertArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
    /**
     * The filter to search for the DiscoverWorkoutPlanCategory to update in case it exists.
     * 
    **/
    where: DiscoverWorkoutPlanCategoryWhereUniqueInput
    /**
     * In case the DiscoverWorkoutPlanCategory found by the `where` argument doesn't exist, create a new DiscoverWorkoutPlanCategory with this data.
     * 
    **/
    create: XOR<DiscoverWorkoutPlanCategoryCreateInput, DiscoverWorkoutPlanCategoryUncheckedCreateInput>
    /**
     * In case the DiscoverWorkoutPlanCategory was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<DiscoverWorkoutPlanCategoryUpdateInput, DiscoverWorkoutPlanCategoryUncheckedUpdateInput>
  }


  /**
   * DiscoverWorkoutPlanCategory delete
   */
  export type DiscoverWorkoutPlanCategoryDeleteArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
    /**
     * Filter which DiscoverWorkoutPlanCategory to delete.
     * 
    **/
    where: DiscoverWorkoutPlanCategoryWhereUniqueInput
  }


  /**
   * DiscoverWorkoutPlanCategory deleteMany
   */
  export type DiscoverWorkoutPlanCategoryDeleteManyArgs = {
    where?: DiscoverWorkoutPlanCategoryWhereInput
  }


  /**
   * DiscoverWorkoutPlanCategory without action
   */
  export type DiscoverWorkoutPlanCategoryArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlanCategory
     * 
    **/
    select?: DiscoverWorkoutPlanCategorySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanCategoryInclude | null
  }



  /**
   * Model DiscoverWorkoutPlan
   */


  export type AggregateDiscoverWorkoutPlan = {
    _count: DiscoverWorkoutPlanCountAggregateOutputType | null
    count: DiscoverWorkoutPlanCountAggregateOutputType | null
    _min: DiscoverWorkoutPlanMinAggregateOutputType | null
    min: DiscoverWorkoutPlanMinAggregateOutputType | null
    _max: DiscoverWorkoutPlanMaxAggregateOutputType | null
    max: DiscoverWorkoutPlanMaxAggregateOutputType | null
  }

  export type DiscoverWorkoutPlanMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    workoutPlanId: string | null
    discoverWorkoutPlanCategoryId: string | null
  }

  export type DiscoverWorkoutPlanMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    workoutPlanId: string | null
    discoverWorkoutPlanCategoryId: string | null
  }

  export type DiscoverWorkoutPlanCountAggregateOutputType = {
    id: number
    createdAt: number
    workoutPlanId: number
    discoverWorkoutPlanCategoryId: number
    _all: number
  }


  export type DiscoverWorkoutPlanMinAggregateInputType = {
    id?: true
    createdAt?: true
    workoutPlanId?: true
    discoverWorkoutPlanCategoryId?: true
  }

  export type DiscoverWorkoutPlanMaxAggregateInputType = {
    id?: true
    createdAt?: true
    workoutPlanId?: true
    discoverWorkoutPlanCategoryId?: true
  }

  export type DiscoverWorkoutPlanCountAggregateInputType = {
    id?: true
    createdAt?: true
    workoutPlanId?: true
    discoverWorkoutPlanCategoryId?: true
    _all?: true
  }

  export type DiscoverWorkoutPlanAggregateArgs = {
    /**
     * Filter which DiscoverWorkoutPlan to aggregate.
     * 
    **/
    where?: DiscoverWorkoutPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutPlans to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutPlanOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: DiscoverWorkoutPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutPlans from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutPlans.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoverWorkoutPlans
    **/
    _count?: true | DiscoverWorkoutPlanCountAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_count`
    **/
    count?: true | DiscoverWorkoutPlanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoverWorkoutPlanMinAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_min`
    **/
    min?: DiscoverWorkoutPlanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoverWorkoutPlanMaxAggregateInputType
    /**
     * @deprecated since 2.23.0 please use `_max`
    **/
    max?: DiscoverWorkoutPlanMaxAggregateInputType
  }

  export type GetDiscoverWorkoutPlanAggregateType<T extends DiscoverWorkoutPlanAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoverWorkoutPlan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoverWorkoutPlan[P]>
      : GetScalarType<T[P], AggregateDiscoverWorkoutPlan[P]>
  }


    
    
  export type DiscoverWorkoutPlanGroupByArgs = {
    where?: DiscoverWorkoutPlanWhereInput
    orderBy?: Enumerable<DiscoverWorkoutPlanOrderByInput>
    by: Array<DiscoverWorkoutPlanScalarFieldEnum>
    having?: DiscoverWorkoutPlanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoverWorkoutPlanCountAggregateInputType | true
    _min?: DiscoverWorkoutPlanMinAggregateInputType
    _max?: DiscoverWorkoutPlanMaxAggregateInputType
  }


  export type DiscoverWorkoutPlanGroupByOutputType = {
    id: string
    createdAt: Date
    workoutPlanId: string
    discoverWorkoutPlanCategoryId: string
    _count: DiscoverWorkoutPlanCountAggregateOutputType | null
    _min: DiscoverWorkoutPlanMinAggregateOutputType | null
    _max: DiscoverWorkoutPlanMaxAggregateOutputType | null
  }

  type GetDiscoverWorkoutPlanGroupByPayload<T extends DiscoverWorkoutPlanGroupByArgs> = Promise<
    Array<
      PickArray<DiscoverWorkoutPlanGroupByOutputType, T['by']> & 
        {
          [P in ((keyof T) & (keyof DiscoverWorkoutPlanGroupByOutputType))]: P extends '_count' 
            ? T[P] extends boolean 
              ? number 
              : GetScalarType<T[P], DiscoverWorkoutPlanGroupByOutputType[P]> 
            : GetScalarType<T[P], DiscoverWorkoutPlanGroupByOutputType[P]>
        }
      > 
    >


  export type DiscoverWorkoutPlanSelect = {
    id?: boolean
    createdAt?: boolean
    WorkoutPlan?: boolean | WorkoutPlanArgs
    workoutPlanId?: boolean
    DiscoverWorkoutPlanCategory?: boolean | DiscoverWorkoutPlanCategoryArgs
    discoverWorkoutPlanCategoryId?: boolean
  }

  export type DiscoverWorkoutPlanInclude = {
    WorkoutPlan?: boolean | WorkoutPlanArgs
    DiscoverWorkoutPlanCategory?: boolean | DiscoverWorkoutPlanCategoryArgs
  }

  export type DiscoverWorkoutPlanGetPayload<
    S extends boolean | null | undefined | DiscoverWorkoutPlanArgs,
    U = keyof S
      > = S extends true
        ? DiscoverWorkoutPlan
    : S extends undefined
    ? never
    : S extends DiscoverWorkoutPlanArgs | DiscoverWorkoutPlanFindManyArgs
    ?'include' extends U
    ? DiscoverWorkoutPlan  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['include'][P]> :
        P extends 'DiscoverWorkoutPlanCategory'
        ? DiscoverWorkoutPlanCategoryGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof DiscoverWorkoutPlan ?DiscoverWorkoutPlan [P]
  : 
          P extends 'WorkoutPlan'
        ? WorkoutPlanGetPayload<S['select'][P]> :
        P extends 'DiscoverWorkoutPlanCategory'
        ? DiscoverWorkoutPlanCategoryGetPayload<S['select'][P]> : never
  } 
    : DiscoverWorkoutPlan
  : DiscoverWorkoutPlan


  type DiscoverWorkoutPlanCountArgs = Merge<
    Omit<DiscoverWorkoutPlanFindManyArgs, 'select' | 'include'> & {
      select?: DiscoverWorkoutPlanCountAggregateInputType | true
    }
  >

  export interface DiscoverWorkoutPlanDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one DiscoverWorkoutPlan that matches the filter.
     * @param {DiscoverWorkoutPlanFindUniqueArgs} args - Arguments to find a DiscoverWorkoutPlan
     * @example
     * // Get one DiscoverWorkoutPlan
     * const discoverWorkoutPlan = await prisma.discoverWorkoutPlan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DiscoverWorkoutPlanFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, DiscoverWorkoutPlanFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'DiscoverWorkoutPlan'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan>, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan | null >, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T> | null >>

    /**
     * Find the first DiscoverWorkoutPlan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanFindFirstArgs} args - Arguments to find a DiscoverWorkoutPlan
     * @example
     * // Get one DiscoverWorkoutPlan
     * const discoverWorkoutPlan = await prisma.discoverWorkoutPlan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DiscoverWorkoutPlanFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, DiscoverWorkoutPlanFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'DiscoverWorkoutPlan'> extends True ? CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan>, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T>>> : CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan | null >, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T> | null >>

    /**
     * Find zero or more DiscoverWorkoutPlans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoverWorkoutPlans
     * const discoverWorkoutPlans = await prisma.discoverWorkoutPlan.findMany()
     * 
     * // Get first 10 DiscoverWorkoutPlans
     * const discoverWorkoutPlans = await prisma.discoverWorkoutPlan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoverWorkoutPlanWithIdOnly = await prisma.discoverWorkoutPlan.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DiscoverWorkoutPlanFindManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutPlanFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<DiscoverWorkoutPlan>>, PrismaPromise<Array<DiscoverWorkoutPlanGetPayload<T>>>>

    /**
     * Create a DiscoverWorkoutPlan.
     * @param {DiscoverWorkoutPlanCreateArgs} args - Arguments to create a DiscoverWorkoutPlan.
     * @example
     * // Create one DiscoverWorkoutPlan
     * const DiscoverWorkoutPlan = await prisma.discoverWorkoutPlan.create({
     *   data: {
     *     // ... data to create a DiscoverWorkoutPlan
     *   }
     * })
     * 
    **/
    create<T extends DiscoverWorkoutPlanCreateArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanCreateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan>, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T>>>

    /**
     * Create many DiscoverWorkoutPlans.
     *     @param {DiscoverWorkoutPlanCreateManyArgs} args - Arguments to create many DiscoverWorkoutPlans.
     *     @example
     *     // Create many DiscoverWorkoutPlans
     *     const discoverWorkoutPlan = await prisma.discoverWorkoutPlan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DiscoverWorkoutPlanCreateManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutPlanCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a DiscoverWorkoutPlan.
     * @param {DiscoverWorkoutPlanDeleteArgs} args - Arguments to delete one DiscoverWorkoutPlan.
     * @example
     * // Delete one DiscoverWorkoutPlan
     * const DiscoverWorkoutPlan = await prisma.discoverWorkoutPlan.delete({
     *   where: {
     *     // ... filter to delete one DiscoverWorkoutPlan
     *   }
     * })
     * 
    **/
    delete<T extends DiscoverWorkoutPlanDeleteArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanDeleteArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan>, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T>>>

    /**
     * Update one DiscoverWorkoutPlan.
     * @param {DiscoverWorkoutPlanUpdateArgs} args - Arguments to update one DiscoverWorkoutPlan.
     * @example
     * // Update one DiscoverWorkoutPlan
     * const discoverWorkoutPlan = await prisma.discoverWorkoutPlan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DiscoverWorkoutPlanUpdateArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanUpdateArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan>, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T>>>

    /**
     * Delete zero or more DiscoverWorkoutPlans.
     * @param {DiscoverWorkoutPlanDeleteManyArgs} args - Arguments to filter DiscoverWorkoutPlans to delete.
     * @example
     * // Delete a few DiscoverWorkoutPlans
     * const { count } = await prisma.discoverWorkoutPlan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DiscoverWorkoutPlanDeleteManyArgs>(
      args?: SelectSubset<T, DiscoverWorkoutPlanDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoverWorkoutPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoverWorkoutPlans
     * const discoverWorkoutPlan = await prisma.discoverWorkoutPlan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DiscoverWorkoutPlanUpdateManyArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one DiscoverWorkoutPlan.
     * @param {DiscoverWorkoutPlanUpsertArgs} args - Arguments to update or create a DiscoverWorkoutPlan.
     * @example
     * // Update or create a DiscoverWorkoutPlan
     * const discoverWorkoutPlan = await prisma.discoverWorkoutPlan.upsert({
     *   create: {
     *     // ... data to create a DiscoverWorkoutPlan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoverWorkoutPlan we want to update
     *   }
     * })
    **/
    upsert<T extends DiscoverWorkoutPlanUpsertArgs>(
      args: SelectSubset<T, DiscoverWorkoutPlanUpsertArgs>
    ): CheckSelect<T, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlan>, Prisma__DiscoverWorkoutPlanClient<DiscoverWorkoutPlanGetPayload<T>>>

    /**
     * Count the number of DiscoverWorkoutPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanCountArgs} args - Arguments to filter DiscoverWorkoutPlans to count.
     * @example
     * // Count the number of DiscoverWorkoutPlans
     * const count = await prisma.discoverWorkoutPlan.count({
     *   where: {
     *     // ... the filter for the DiscoverWorkoutPlans we want to count
     *   }
     * })
    **/
    count<T extends DiscoverWorkoutPlanCountArgs>(
      args?: Subset<T, DiscoverWorkoutPlanCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoverWorkoutPlanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoverWorkoutPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoverWorkoutPlanAggregateArgs>(args: Subset<T, DiscoverWorkoutPlanAggregateArgs>): PrismaPromise<GetDiscoverWorkoutPlanAggregateType<T>>

    /**
     * Group by DiscoverWorkoutPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoverWorkoutPlanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoverWorkoutPlanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoverWorkoutPlanGroupByArgs['orderBy'] }
        : { orderBy?: DiscoverWorkoutPlanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoverWorkoutPlanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoverWorkoutPlanGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoverWorkoutPlan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DiscoverWorkoutPlanClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    WorkoutPlan<T extends WorkoutPlanArgs = {}>(args?: Subset<T, WorkoutPlanArgs>): CheckSelect<T, Prisma__WorkoutPlanClient<WorkoutPlan | null >, Prisma__WorkoutPlanClient<WorkoutPlanGetPayload<T> | null >>;

    DiscoverWorkoutPlanCategory<T extends DiscoverWorkoutPlanCategoryArgs = {}>(args?: Subset<T, DiscoverWorkoutPlanCategoryArgs>): CheckSelect<T, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategory | null >, Prisma__DiscoverWorkoutPlanCategoryClient<DiscoverWorkoutPlanCategoryGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * DiscoverWorkoutPlan findUnique
   */
  export type DiscoverWorkoutPlanFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
    /**
     * Throw an Error if a DiscoverWorkoutPlan can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkoutPlan to fetch.
     * 
    **/
    where: DiscoverWorkoutPlanWhereUniqueInput
  }


  /**
   * DiscoverWorkoutPlan findFirst
   */
  export type DiscoverWorkoutPlanFindFirstArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
    /**
     * Throw an Error if a DiscoverWorkoutPlan can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which DiscoverWorkoutPlan to fetch.
     * 
    **/
    where?: DiscoverWorkoutPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutPlans to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutPlanOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoverWorkoutPlans.
     * 
    **/
    cursor?: DiscoverWorkoutPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutPlans from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutPlans.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoverWorkoutPlans.
     * 
    **/
    distinct?: Enumerable<DiscoverWorkoutPlanScalarFieldEnum>
  }


  /**
   * DiscoverWorkoutPlan findMany
   */
  export type DiscoverWorkoutPlanFindManyArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
    /**
     * Filter, which DiscoverWorkoutPlans to fetch.
     * 
    **/
    where?: DiscoverWorkoutPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverWorkoutPlans to fetch.
     * 
    **/
    orderBy?: Enumerable<DiscoverWorkoutPlanOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoverWorkoutPlans.
     * 
    **/
    cursor?: DiscoverWorkoutPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverWorkoutPlans from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverWorkoutPlans.
     * 
    **/
    skip?: number
    distinct?: Enumerable<DiscoverWorkoutPlanScalarFieldEnum>
  }


  /**
   * DiscoverWorkoutPlan create
   */
  export type DiscoverWorkoutPlanCreateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
    /**
     * The data needed to create a DiscoverWorkoutPlan.
     * 
    **/
    data: XOR<DiscoverWorkoutPlanCreateInput, DiscoverWorkoutPlanUncheckedCreateInput>
  }


  /**
   * DiscoverWorkoutPlan createMany
   */
  export type DiscoverWorkoutPlanCreateManyArgs = {
    data: Enumerable<DiscoverWorkoutPlanCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * DiscoverWorkoutPlan update
   */
  export type DiscoverWorkoutPlanUpdateArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
    /**
     * The data needed to update a DiscoverWorkoutPlan.
     * 
    **/
    data: XOR<DiscoverWorkoutPlanUpdateInput, DiscoverWorkoutPlanUncheckedUpdateInput>
    /**
     * Choose, which DiscoverWorkoutPlan to update.
     * 
    **/
    where: DiscoverWorkoutPlanWhereUniqueInput
  }


  /**
   * DiscoverWorkoutPlan updateMany
   */
  export type DiscoverWorkoutPlanUpdateManyArgs = {
    data: XOR<DiscoverWorkoutPlanUpdateManyMutationInput, DiscoverWorkoutPlanUncheckedUpdateManyInput>
    where?: DiscoverWorkoutPlanWhereInput
  }


  /**
   * DiscoverWorkoutPlan upsert
   */
  export type DiscoverWorkoutPlanUpsertArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
    /**
     * The filter to search for the DiscoverWorkoutPlan to update in case it exists.
     * 
    **/
    where: DiscoverWorkoutPlanWhereUniqueInput
    /**
     * In case the DiscoverWorkoutPlan found by the `where` argument doesn't exist, create a new DiscoverWorkoutPlan with this data.
     * 
    **/
    create: XOR<DiscoverWorkoutPlanCreateInput, DiscoverWorkoutPlanUncheckedCreateInput>
    /**
     * In case the DiscoverWorkoutPlan was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<DiscoverWorkoutPlanUpdateInput, DiscoverWorkoutPlanUncheckedUpdateInput>
  }


  /**
   * DiscoverWorkoutPlan delete
   */
  export type DiscoverWorkoutPlanDeleteArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
    /**
     * Filter which DiscoverWorkoutPlan to delete.
     * 
    **/
    where: DiscoverWorkoutPlanWhereUniqueInput
  }


  /**
   * DiscoverWorkoutPlan deleteMany
   */
  export type DiscoverWorkoutPlanDeleteManyArgs = {
    where?: DiscoverWorkoutPlanWhereInput
  }


  /**
   * DiscoverWorkoutPlan without action
   */
  export type DiscoverWorkoutPlanArgs = {
    /**
     * Select specific fields to fetch from the DiscoverWorkoutPlan
     * 
    **/
    select?: DiscoverWorkoutPlanSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DiscoverWorkoutPlanInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const AdminScalarFieldEnum: {
    id: 'id',
    firebaseUid: 'firebaseUid',
    createdAt: 'createdAt',
    username: 'username'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const BodyAreaScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    altNames: 'altNames',
    frontBack: 'frontBack',
    upperLower: 'upperLower'
  };

  export type BodyAreaScalarFieldEnum = (typeof BodyAreaScalarFieldEnum)[keyof typeof BodyAreaScalarFieldEnum]


  export const BodyAreaMoveScoreScalarFieldEnum: {
    createdAt: 'createdAt',
    moveId: 'moveId',
    bodyAreaId: 'bodyAreaId',
    score: 'score'
  };

  export type BodyAreaMoveScoreScalarFieldEnum = (typeof BodyAreaMoveScoreScalarFieldEnum)[keyof typeof BodyAreaMoveScoreScalarFieldEnum]


  export const EquipmentScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    altNames: 'altNames',
    imageUrl: 'imageUrl',
    loadAdjustable: 'loadAdjustable'
  };

  export type EquipmentScalarFieldEnum = (typeof EquipmentScalarFieldEnum)[keyof typeof EquipmentScalarFieldEnum]


  export const MoveScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    archived: 'archived',
    userId: 'userId',
    scope: 'scope',
    name: 'name',
    searchTerms: 'searchTerms',
    description: 'description',
    demoVideoUri: 'demoVideoUri',
    demoVideoThumbUri: 'demoVideoThumbUri',
    validRepTypes: 'validRepTypes',
    moveTypeId: 'moveTypeId'
  };

  export type MoveScalarFieldEnum = (typeof MoveScalarFieldEnum)[keyof typeof MoveScalarFieldEnum]


  export const MoveTypeScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    description: 'description',
    imageUri: 'imageUri'
  };

  export type MoveTypeScalarFieldEnum = (typeof MoveTypeScalarFieldEnum)[keyof typeof MoveTypeScalarFieldEnum]


  export const WorkoutGoalScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    description: 'description',
    hexColor: 'hexColor'
  };

  export type WorkoutGoalScalarFieldEnum = (typeof WorkoutGoalScalarFieldEnum)[keyof typeof WorkoutGoalScalarFieldEnum]


  export const WorkoutSectionTypeScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    name: 'name',
    subtitle: 'subtitle',
    description: 'description',
    validRepTypes: 'validRepTypes'
  };

  export type WorkoutSectionTypeScalarFieldEnum = (typeof WorkoutSectionTypeScalarFieldEnum)[keyof typeof WorkoutSectionTypeScalarFieldEnum]


  export const CollectionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description'
  };

  export type CollectionScalarFieldEnum = (typeof CollectionScalarFieldEnum)[keyof typeof CollectionScalarFieldEnum]


  export const GymProfileScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description'
  };

  export type GymProfileScalarFieldEnum = (typeof GymProfileScalarFieldEnum)[keyof typeof GymProfileScalarFieldEnum]


  export const ScheduledWorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    note: 'note',
    scheduledAt: 'scheduledAt',
    gymProfileId: 'gymProfileId',
    loggedWorkoutId: 'loggedWorkoutId',
    workoutId: 'workoutId',
    workoutPlanEnrolmentId: 'workoutPlanEnrolmentId',
    workoutPlanDayWorkoutId: 'workoutPlanDayWorkoutId'
  };

  export type ScheduledWorkoutScalarFieldEnum = (typeof ScheduledWorkoutScalarFieldEnum)[keyof typeof ScheduledWorkoutScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    firebaseUid: 'firebaseUid',
    createdAt: 'createdAt',
    hasOnboarded: 'hasOnboarded',
    userProfileScope: 'userProfileScope',
    avatarUri: 'avatarUri',
    introVideoUri: 'introVideoUri',
    introVideoThumbUri: 'introVideoThumbUri',
    displayName: 'displayName',
    firstname: 'firstname',
    lastname: 'lastname',
    bio: 'bio',
    tagline: 'tagline',
    birthdate: 'birthdate',
    gender: 'gender',
    townCity: 'townCity',
    countryCode: 'countryCode',
    instagramUrl: 'instagramUrl',
    tiktokUrl: 'tiktokUrl',
    youtubeUrl: 'youtubeUrl',
    snapUrl: 'snapUrl',
    linkedinUrl: 'linkedinUrl'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserBenchmarkGroupScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description'
  };

  export type UserBenchmarkGroupScalarFieldEnum = (typeof UserBenchmarkGroupScalarFieldEnum)[keyof typeof UserBenchmarkGroupScalarFieldEnum]


  export const UserBenchmarkScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    lastEntryAt: 'lastEntryAt',
    userId: 'userId',
    name: 'name',
    description: 'description',
    reps: 'reps',
    repType: 'repType',
    load: 'load',
    loadUnit: 'loadUnit',
    distanceUnit: 'distanceUnit',
    timeUnit: 'timeUnit',
    equipmentId: 'equipmentId',
    moveId: 'moveId',
    benchmarkType: 'benchmarkType'
  };

  export type UserBenchmarkScalarFieldEnum = (typeof UserBenchmarkScalarFieldEnum)[keyof typeof UserBenchmarkScalarFieldEnum]


  export const UserBenchmarkEntryScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    completedOn: 'completedOn',
    score: 'score',
    note: 'note',
    videoUri: 'videoUri',
    videoThumbUri: 'videoThumbUri',
    userBenchmarkId: 'userBenchmarkId'
  };

  export type UserBenchmarkEntryScalarFieldEnum = (typeof UserBenchmarkEntryScalarFieldEnum)[keyof typeof UserBenchmarkEntryScalarFieldEnum]


  export const WorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    archived: 'archived',
    userId: 'userId',
    name: 'name',
    description: 'description',
    metaData: 'metaData',
    introVideoUri: 'introVideoUri',
    introVideoThumbUri: 'introVideoThumbUri',
    introAudioUri: 'introAudioUri',
    coverImageUri: 'coverImageUri',
    lengthMinutes: 'lengthMinutes',
    difficultyLevel: 'difficultyLevel',
    contentAccessScope: 'contentAccessScope'
  };

  export type WorkoutScalarFieldEnum = (typeof WorkoutScalarFieldEnum)[keyof typeof WorkoutScalarFieldEnum]


  export const WorkoutTagScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    tag: 'tag'
  };

  export type WorkoutTagScalarFieldEnum = (typeof WorkoutTagScalarFieldEnum)[keyof typeof WorkoutTagScalarFieldEnum]


  export const WorkoutSectionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    archived: 'archived',
    userId: 'userId',
    name: 'name',
    note: 'note',
    rounds: 'rounds',
    timecap: 'timecap',
    sortPosition: 'sortPosition',
    introVideoUri: 'introVideoUri',
    introVideoThumbUri: 'introVideoThumbUri',
    introAudioUri: 'introAudioUri',
    classVideoUri: 'classVideoUri',
    classVideoThumbUri: 'classVideoThumbUri',
    classAudioUri: 'classAudioUri',
    outroVideoUri: 'outroVideoUri',
    outroVideoThumbUri: 'outroVideoThumbUri',
    outroAudioUri: 'outroAudioUri',
    workoutId: 'workoutId',
    workoutSectionTypeId: 'workoutSectionTypeId'
  };

  export type WorkoutSectionScalarFieldEnum = (typeof WorkoutSectionScalarFieldEnum)[keyof typeof WorkoutSectionScalarFieldEnum]


  export const WorkoutSetScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    sortPosition: 'sortPosition',
    rounds: 'rounds',
    duration: 'duration',
    workoutSectionId: 'workoutSectionId'
  };

  export type WorkoutSetScalarFieldEnum = (typeof WorkoutSetScalarFieldEnum)[keyof typeof WorkoutSetScalarFieldEnum]


  export const WorkoutSetIntervalBuyInScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    interval: 'interval',
    workoutMoveId: 'workoutMoveId',
    workoutSetId: 'workoutSetId'
  };

  export type WorkoutSetIntervalBuyInScalarFieldEnum = (typeof WorkoutSetIntervalBuyInScalarFieldEnum)[keyof typeof WorkoutSetIntervalBuyInScalarFieldEnum]


  export const WorkoutSetGeneratorScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    type: 'type',
    workoutMoveIndex: 'workoutMoveIndex',
    target: 'target',
    roundFrequency: 'roundFrequency',
    adjustAmount: 'adjustAmount',
    workoutSetId: 'workoutSetId'
  };

  export type WorkoutSetGeneratorScalarFieldEnum = (typeof WorkoutSetGeneratorScalarFieldEnum)[keyof typeof WorkoutSetGeneratorScalarFieldEnum]


  export const WorkoutMoveScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    sortPosition: 'sortPosition',
    repType: 'repType',
    reps: 'reps',
    distanceUnit: 'distanceUnit',
    timeUnit: 'timeUnit',
    loadAmount: 'loadAmount',
    loadUnit: 'loadUnit',
    moveId: 'moveId',
    equipmentId: 'equipmentId',
    workoutSetId: 'workoutSetId'
  };

  export type WorkoutMoveScalarFieldEnum = (typeof WorkoutMoveScalarFieldEnum)[keyof typeof WorkoutMoveScalarFieldEnum]


  export const WorkoutPlanScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    archived: 'archived',
    name: 'name',
    description: 'description',
    lengthWeeks: 'lengthWeeks',
    daysPerWeek: 'daysPerWeek',
    coverImageUri: 'coverImageUri',
    introVideoUri: 'introVideoUri',
    introVideoThumbUri: 'introVideoThumbUri',
    introAudioUri: 'introAudioUri',
    contentAccessScope: 'contentAccessScope'
  };

  export type WorkoutPlanScalarFieldEnum = (typeof WorkoutPlanScalarFieldEnum)[keyof typeof WorkoutPlanScalarFieldEnum]


  export const WorkoutPlanDayScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    note: 'note',
    dayNumber: 'dayNumber',
    workoutPlanId: 'workoutPlanId'
  };

  export type WorkoutPlanDayScalarFieldEnum = (typeof WorkoutPlanDayScalarFieldEnum)[keyof typeof WorkoutPlanDayScalarFieldEnum]


  export const WorkoutPlanDayWorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    note: 'note',
    sortPosition: 'sortPosition',
    workoutId: 'workoutId',
    workoutPlanDayId: 'workoutPlanDayId'
  };

  export type WorkoutPlanDayWorkoutScalarFieldEnum = (typeof WorkoutPlanDayWorkoutScalarFieldEnum)[keyof typeof WorkoutPlanDayWorkoutScalarFieldEnum]


  export const WorkoutPlanEnrolmentScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    startDate: 'startDate',
    completedPlanDayWorkoutIds: 'completedPlanDayWorkoutIds',
    workoutPlanId: 'workoutPlanId',
    userId: 'userId'
  };

  export type WorkoutPlanEnrolmentScalarFieldEnum = (typeof WorkoutPlanEnrolmentScalarFieldEnum)[keyof typeof WorkoutPlanEnrolmentScalarFieldEnum]


  export const WorkoutPlanReviewScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    score: 'score',
    comment: 'comment',
    workoutPlanId: 'workoutPlanId'
  };

  export type WorkoutPlanReviewScalarFieldEnum = (typeof WorkoutPlanReviewScalarFieldEnum)[keyof typeof WorkoutPlanReviewScalarFieldEnum]


  export const LoggedWorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    completedOn: 'completedOn',
    userId: 'userId',
    name: 'name',
    note: 'note',
    gymProfileId: 'gymProfileId',
    workoutId: 'workoutId'
  };

  export type LoggedWorkoutScalarFieldEnum = (typeof LoggedWorkoutScalarFieldEnum)[keyof typeof LoggedWorkoutScalarFieldEnum]


  export const LoggedWorkoutSectionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    note: 'note',
    timecap: 'timecap',
    sortPosition: 'sortPosition',
    timeTakenMs: 'timeTakenMs',
    lapTimesMs: 'lapTimesMs',
    repScore: 'repScore',
    loggedWorkoutId: 'loggedWorkoutId',
    workoutSectionTypeId: 'workoutSectionTypeId'
  };

  export type LoggedWorkoutSectionScalarFieldEnum = (typeof LoggedWorkoutSectionScalarFieldEnum)[keyof typeof LoggedWorkoutSectionScalarFieldEnum]


  export const LoggedWorkoutSetScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    note: 'note',
    roundNumber: 'roundNumber',
    sortPosition: 'sortPosition',
    duration: 'duration',
    roundsCompleted: 'roundsCompleted',
    loggedWorkoutSectionId: 'loggedWorkoutSectionId'
  };

  export type LoggedWorkoutSetScalarFieldEnum = (typeof LoggedWorkoutSetScalarFieldEnum)[keyof typeof LoggedWorkoutSetScalarFieldEnum]


  export const LoggedWorkoutMoveScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    sortPosition: 'sortPosition',
    repType: 'repType',
    reps: 'reps',
    distance: 'distance',
    distanceUnit: 'distanceUnit',
    loadAmount: 'loadAmount',
    loadUnit: 'loadUnit',
    timeUnit: 'timeUnit',
    moveId: 'moveId',
    equipmentId: 'equipmentId',
    loggedWorkoutSetId: 'loggedWorkoutSetId'
  };

  export type LoggedWorkoutMoveScalarFieldEnum = (typeof LoggedWorkoutMoveScalarFieldEnum)[keyof typeof LoggedWorkoutMoveScalarFieldEnum]


  export const ProgressJournalScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description'
  };

  export type ProgressJournalScalarFieldEnum = (typeof ProgressJournalScalarFieldEnum)[keyof typeof ProgressJournalScalarFieldEnum]


  export const ProgressJournalEntryScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    note: 'note',
    voiceNoteUri: 'voiceNoteUri',
    bodyweight: 'bodyweight',
    bodyweightUnit: 'bodyweightUnit',
    moodScore: 'moodScore',
    energyScore: 'energyScore',
    stressScore: 'stressScore',
    motivationScore: 'motivationScore',
    progressPhotoUris: 'progressPhotoUris',
    progressJournalId: 'progressJournalId'
  };

  export type ProgressJournalEntryScalarFieldEnum = (typeof ProgressJournalEntryScalarFieldEnum)[keyof typeof ProgressJournalEntryScalarFieldEnum]


  export const ProgressJournalGoalScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    name: 'name',
    description: 'description',
    deadline: 'deadline',
    completedDate: 'completedDate',
    progressJournalId: 'progressJournalId'
  };

  export type ProgressJournalGoalScalarFieldEnum = (typeof ProgressJournalGoalScalarFieldEnum)[keyof typeof ProgressJournalGoalScalarFieldEnum]


  export const ProgressJournalGoalTagScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    tag: 'tag',
    hexColor: 'hexColor',
    userId: 'userId'
  };

  export type ProgressJournalGoalTagScalarFieldEnum = (typeof ProgressJournalGoalTagScalarFieldEnum)[keyof typeof ProgressJournalGoalTagScalarFieldEnum]


  export const DiscoverFeaturedScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    tag: 'tag',
    name: 'name',
    tagline: 'tagline',
    description: 'description',
    coverImageUri: 'coverImageUri'
  };

  export type DiscoverFeaturedScalarFieldEnum = (typeof DiscoverFeaturedScalarFieldEnum)[keyof typeof DiscoverFeaturedScalarFieldEnum]


  export const DiscoverWorkoutCategoryScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    active: 'active',
    name: 'name',
    tagline: 'tagline',
    description: 'description',
    coverImageUri: 'coverImageUri'
  };

  export type DiscoverWorkoutCategoryScalarFieldEnum = (typeof DiscoverWorkoutCategoryScalarFieldEnum)[keyof typeof DiscoverWorkoutCategoryScalarFieldEnum]


  export const DiscoverWorkoutScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    workoutId: 'workoutId',
    discoverWorkoutCategoryId: 'discoverWorkoutCategoryId'
  };

  export type DiscoverWorkoutScalarFieldEnum = (typeof DiscoverWorkoutScalarFieldEnum)[keyof typeof DiscoverWorkoutScalarFieldEnum]


  export const DiscoverWorkoutPlanCategoryScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    active: 'active',
    name: 'name',
    tagline: 'tagline',
    description: 'description',
    coverImageUri: 'coverImageUri'
  };

  export type DiscoverWorkoutPlanCategoryScalarFieldEnum = (typeof DiscoverWorkoutPlanCategoryScalarFieldEnum)[keyof typeof DiscoverWorkoutPlanCategoryScalarFieldEnum]


  export const DiscoverWorkoutPlanScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    workoutPlanId: 'workoutPlanId',
    discoverWorkoutPlanCategoryId: 'discoverWorkoutPlanCategoryId'
  };

  export type DiscoverWorkoutPlanScalarFieldEnum = (typeof DiscoverWorkoutPlanScalarFieldEnum)[keyof typeof DiscoverWorkoutPlanScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Deep Input Types
   */


  export type AdminWhereInput = {
    AND?: Enumerable<AdminWhereInput>
    OR?: Enumerable<AdminWhereInput>
    NOT?: Enumerable<AdminWhereInput>
    id?: StringFilter | string
    firebaseUid?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    username?: StringFilter | string
  }

  export type AdminOrderByInput = {
    id?: SortOrder
    firebaseUid?: SortOrder
    createdAt?: SortOrder
    username?: SortOrder
  }

  export type AdminWhereUniqueInput = {
    id?: string
    firebaseUid?: string
    username?: string
  }

  export type AdminScalarWhereWithAggregatesInput = {
    AND?: Enumerable<AdminScalarWhereWithAggregatesInput>
    OR?: Enumerable<AdminScalarWhereWithAggregatesInput>
    NOT?: Enumerable<AdminScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    firebaseUid?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    username?: StringWithAggregatesFilter | string
  }

  export type BodyAreaWhereInput = {
    AND?: Enumerable<BodyAreaWhereInput>
    OR?: Enumerable<BodyAreaWhereInput>
    NOT?: Enumerable<BodyAreaWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    altNames?: StringNullableFilter | string | null
    BodyAreaMoveScores?: BodyAreaMoveScoreListRelationFilter
    frontBack?: EnumBodyAreaFrontBackFilter | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFilter | BodyAreaUpperLower
  }

  export type BodyAreaOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    altNames?: SortOrder
    frontBack?: SortOrder
    upperLower?: SortOrder
  }

  export type BodyAreaWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type BodyAreaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<BodyAreaScalarWhereWithAggregatesInput>
    OR?: Enumerable<BodyAreaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<BodyAreaScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    name?: StringWithAggregatesFilter | string
    altNames?: StringNullableWithAggregatesFilter | string | null
    frontBack?: EnumBodyAreaFrontBackWithAggregatesFilter | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerWithAggregatesFilter | BodyAreaUpperLower
  }

  export type BodyAreaMoveScoreWhereInput = {
    AND?: Enumerable<BodyAreaMoveScoreWhereInput>
    OR?: Enumerable<BodyAreaMoveScoreWhereInput>
    NOT?: Enumerable<BodyAreaMoveScoreWhereInput>
    createdAt?: DateTimeFilter | Date | string
    Move?: XOR<MoveRelationFilter, MoveWhereInput>
    moveId?: StringFilter | string
    BodyArea?: XOR<BodyAreaRelationFilter, BodyAreaWhereInput>
    bodyAreaId?: StringFilter | string
    score?: IntFilter | number
  }

  export type BodyAreaMoveScoreOrderByInput = {
    createdAt?: SortOrder
    moveId?: SortOrder
    bodyAreaId?: SortOrder
    score?: SortOrder
  }

  export type BodyAreaMoveScoreWhereUniqueInput = {
    moveId_bodyAreaId?: BodyAreaMoveScoreMoveIdBodyAreaIdCompoundUniqueInput
  }

  export type BodyAreaMoveScoreScalarWhereWithAggregatesInput = {
    AND?: Enumerable<BodyAreaMoveScoreScalarWhereWithAggregatesInput>
    OR?: Enumerable<BodyAreaMoveScoreScalarWhereWithAggregatesInput>
    NOT?: Enumerable<BodyAreaMoveScoreScalarWhereWithAggregatesInput>
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    moveId?: StringWithAggregatesFilter | string
    bodyAreaId?: StringWithAggregatesFilter | string
    score?: IntWithAggregatesFilter | number
  }

  export type EquipmentWhereInput = {
    AND?: Enumerable<EquipmentWhereInput>
    OR?: Enumerable<EquipmentWhereInput>
    NOT?: Enumerable<EquipmentWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    altNames?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    loadAdjustable?: BoolFilter | boolean
    RequiredForMoves?: MoveListRelationFilter
    SelectableForMoves?: MoveListRelationFilter
    GymProfiles?: GymProfileListRelationFilter
    WorkoutMoves?: WorkoutMoveListRelationFilter
    LoggedWorkoutMoves?: LoggedWorkoutMoveListRelationFilter
    UserBenchmarks?: UserBenchmarkListRelationFilter
  }

  export type EquipmentOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    altNames?: SortOrder
    imageUrl?: SortOrder
    loadAdjustable?: SortOrder
  }

  export type EquipmentWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type EquipmentScalarWhereWithAggregatesInput = {
    AND?: Enumerable<EquipmentScalarWhereWithAggregatesInput>
    OR?: Enumerable<EquipmentScalarWhereWithAggregatesInput>
    NOT?: Enumerable<EquipmentScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    name?: StringWithAggregatesFilter | string
    altNames?: StringNullableWithAggregatesFilter | string | null
    imageUrl?: StringNullableWithAggregatesFilter | string | null
    loadAdjustable?: BoolWithAggregatesFilter | boolean
  }

  export type MoveWhereInput = {
    AND?: Enumerable<MoveWhereInput>
    OR?: Enumerable<MoveWhereInput>
    NOT?: Enumerable<MoveWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    userId?: StringNullableFilter | string | null
    scope?: EnumMoveScopeFilter | MoveScope
    name?: StringFilter | string
    searchTerms?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    demoVideoUri?: StringNullableFilter | string | null
    demoVideoThumbUri?: StringNullableFilter | string | null
    validRepTypes?: EnumWorkoutMoveRepTypeNullableListFilter
    MoveType?: XOR<MoveTypeRelationFilter, MoveTypeWhereInput> | null
    moveTypeId?: StringNullableFilter | string | null
    RequiredEquipments?: EquipmentListRelationFilter
    SelectableEquipments?: EquipmentListRelationFilter
    WorkoutMoves?: WorkoutMoveListRelationFilter
    BodyAreaMoveScores?: BodyAreaMoveScoreListRelationFilter
    LoggedWorkoutMoves?: LoggedWorkoutMoveListRelationFilter
    UserBenchmarks?: UserBenchmarkListRelationFilter
  }

  export type MoveOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    archived?: SortOrder
    userId?: SortOrder
    scope?: SortOrder
    name?: SortOrder
    searchTerms?: SortOrder
    description?: SortOrder
    demoVideoUri?: SortOrder
    demoVideoThumbUri?: SortOrder
    validRepTypes?: SortOrder
    moveTypeId?: SortOrder
  }

  export type MoveWhereUniqueInput = {
    id?: string
  }

  export type MoveScalarWhereWithAggregatesInput = {
    AND?: Enumerable<MoveScalarWhereWithAggregatesInput>
    OR?: Enumerable<MoveScalarWhereWithAggregatesInput>
    NOT?: Enumerable<MoveScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    archived?: BoolWithAggregatesFilter | boolean
    userId?: StringNullableWithAggregatesFilter | string | null
    scope?: EnumMoveScopeWithAggregatesFilter | MoveScope
    name?: StringWithAggregatesFilter | string
    searchTerms?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    demoVideoUri?: StringNullableWithAggregatesFilter | string | null
    demoVideoThumbUri?: StringNullableWithAggregatesFilter | string | null
    validRepTypes?: EnumWorkoutMoveRepTypeNullableListFilter
    moveTypeId?: StringNullableWithAggregatesFilter | string | null
  }

  export type MoveTypeWhereInput = {
    AND?: Enumerable<MoveTypeWhereInput>
    OR?: Enumerable<MoveTypeWhereInput>
    NOT?: Enumerable<MoveTypeWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    imageUri?: StringNullableFilter | string | null
    Moves?: MoveListRelationFilter
  }

  export type MoveTypeOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    imageUri?: SortOrder
  }

  export type MoveTypeWhereUniqueInput = {
    id?: string
  }

  export type MoveTypeScalarWhereWithAggregatesInput = {
    AND?: Enumerable<MoveTypeScalarWhereWithAggregatesInput>
    OR?: Enumerable<MoveTypeScalarWhereWithAggregatesInput>
    NOT?: Enumerable<MoveTypeScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    imageUri?: StringNullableWithAggregatesFilter | string | null
  }

  export type WorkoutGoalWhereInput = {
    AND?: Enumerable<WorkoutGoalWhereInput>
    OR?: Enumerable<WorkoutGoalWhereInput>
    NOT?: Enumerable<WorkoutGoalWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringFilter | string
    hexColor?: StringFilter | string
    Workouts?: WorkoutListRelationFilter
  }

  export type WorkoutGoalOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    hexColor?: SortOrder
  }

  export type WorkoutGoalWhereUniqueInput = {
    id?: string
  }

  export type WorkoutGoalScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutGoalScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutGoalScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutGoalScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    name?: StringWithAggregatesFilter | string
    description?: StringWithAggregatesFilter | string
    hexColor?: StringWithAggregatesFilter | string
  }

  export type WorkoutSectionTypeWhereInput = {
    AND?: Enumerable<WorkoutSectionTypeWhereInput>
    OR?: Enumerable<WorkoutSectionTypeWhereInput>
    NOT?: Enumerable<WorkoutSectionTypeWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    subtitle?: StringFilter | string
    description?: StringFilter | string
    validRepTypes?: EnumWorkoutMoveRepTypeNullableListFilter
    WorkoutSections?: WorkoutSectionListRelationFilter
    LoggedWorkoutSections?: LoggedWorkoutSectionListRelationFilter
  }

  export type WorkoutSectionTypeOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    name?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    validRepTypes?: SortOrder
  }

  export type WorkoutSectionTypeWhereUniqueInput = {
    id?: string
  }

  export type WorkoutSectionTypeScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutSectionTypeScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutSectionTypeScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutSectionTypeScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    name?: StringWithAggregatesFilter | string
    subtitle?: StringWithAggregatesFilter | string
    description?: StringWithAggregatesFilter | string
    validRepTypes?: EnumWorkoutMoveRepTypeNullableListFilter
  }

  export type CollectionWhereInput = {
    AND?: Enumerable<CollectionWhereInput>
    OR?: Enumerable<CollectionWhereInput>
    NOT?: Enumerable<CollectionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    Workouts?: WorkoutListRelationFilter
    WorkoutPlans?: WorkoutPlanListRelationFilter
  }

  export type CollectionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type CollectionWhereUniqueInput = {
    id?: string
  }

  export type CollectionScalarWhereWithAggregatesInput = {
    AND?: Enumerable<CollectionScalarWhereWithAggregatesInput>
    OR?: Enumerable<CollectionScalarWhereWithAggregatesInput>
    NOT?: Enumerable<CollectionScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
  }

  export type GymProfileWhereInput = {
    AND?: Enumerable<GymProfileWhereInput>
    OR?: Enumerable<GymProfileWhereInput>
    NOT?: Enumerable<GymProfileWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    Equipments?: EquipmentListRelationFilter
    ScheduledWorkouts?: ScheduledWorkoutListRelationFilter
    LoggedWorkouts?: LoggedWorkoutListRelationFilter
  }

  export type GymProfileOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type GymProfileWhereUniqueInput = {
    id?: string
  }

  export type GymProfileScalarWhereWithAggregatesInput = {
    AND?: Enumerable<GymProfileScalarWhereWithAggregatesInput>
    OR?: Enumerable<GymProfileScalarWhereWithAggregatesInput>
    NOT?: Enumerable<GymProfileScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
  }

  export type ScheduledWorkoutWhereInput = {
    AND?: Enumerable<ScheduledWorkoutWhereInput>
    OR?: Enumerable<ScheduledWorkoutWhereInput>
    NOT?: Enumerable<ScheduledWorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    scheduledAt?: DateTimeFilter | Date | string
    GymProfile?: XOR<GymProfileRelationFilter, GymProfileWhereInput> | null
    gymProfileId?: StringNullableFilter | string | null
    LoggedWorkout?: XOR<LoggedWorkoutRelationFilter, LoggedWorkoutWhereInput> | null
    loggedWorkoutId?: StringNullableFilter | string | null
    Workout?: XOR<WorkoutRelationFilter, WorkoutWhereInput> | null
    workoutId?: StringNullableFilter | string | null
    WorkoutPlanEnrolment?: XOR<WorkoutPlanEnrolmentRelationFilter, WorkoutPlanEnrolmentWhereInput> | null
    workoutPlanEnrolmentId?: StringNullableFilter | string | null
    WorkoutPlanDayWorkout?: XOR<WorkoutPlanDayWorkoutRelationFilter, WorkoutPlanDayWorkoutWhereInput> | null
    workoutPlanDayWorkoutId?: StringNullableFilter | string | null
  }

  export type ScheduledWorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    note?: SortOrder
    scheduledAt?: SortOrder
    gymProfileId?: SortOrder
    loggedWorkoutId?: SortOrder
    workoutId?: SortOrder
    workoutPlanEnrolmentId?: SortOrder
    workoutPlanDayWorkoutId?: SortOrder
  }

  export type ScheduledWorkoutWhereUniqueInput = {
    id?: string
  }

  export type ScheduledWorkoutScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ScheduledWorkoutScalarWhereWithAggregatesInput>
    OR?: Enumerable<ScheduledWorkoutScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ScheduledWorkoutScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    note?: StringNullableWithAggregatesFilter | string | null
    scheduledAt?: DateTimeWithAggregatesFilter | Date | string
    gymProfileId?: StringNullableWithAggregatesFilter | string | null
    loggedWorkoutId?: StringNullableWithAggregatesFilter | string | null
    workoutId?: StringNullableWithAggregatesFilter | string | null
    workoutPlanEnrolmentId?: StringNullableWithAggregatesFilter | string | null
    workoutPlanDayWorkoutId?: StringNullableWithAggregatesFilter | string | null
  }

  export type UserWhereInput = {
    AND?: Enumerable<UserWhereInput>
    OR?: Enumerable<UserWhereInput>
    NOT?: Enumerable<UserWhereInput>
    id?: StringFilter | string
    firebaseUid?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    hasOnboarded?: BoolFilter | boolean
    userProfileScope?: EnumUserProfileScopeFilter | UserProfileScope
    avatarUri?: StringNullableFilter | string | null
    introVideoUri?: StringNullableFilter | string | null
    introVideoThumbUri?: StringNullableFilter | string | null
    displayName?: StringNullableFilter | string | null
    firstname?: StringNullableFilter | string | null
    lastname?: StringNullableFilter | string | null
    bio?: StringNullableFilter | string | null
    tagline?: StringNullableFilter | string | null
    birthdate?: DateTimeNullableFilter | Date | string | null
    gender?: EnumGenderNullableFilter | Gender | null
    townCity?: StringNullableFilter | string | null
    countryCode?: StringNullableFilter | string | null
    instagramUrl?: StringNullableFilter | string | null
    tiktokUrl?: StringNullableFilter | string | null
    youtubeUrl?: StringNullableFilter | string | null
    snapUrl?: StringNullableFilter | string | null
    linkedinUrl?: StringNullableFilter | string | null
    CustomMoves?: MoveListRelationFilter
    Workouts?: WorkoutListRelationFilter
    ScheduledWorkouts?: ScheduledWorkoutListRelationFilter
    LoggedWorkouts?: LoggedWorkoutListRelationFilter
    GymProfiles?: GymProfileListRelationFilter
    ProgressJournals?: ProgressJournalListRelationFilter
    ProgressJournalGoalTags?: ProgressJournalGoalTagListRelationFilter
    LoggedWorkoutSections?: LoggedWorkoutSectionListRelationFilter
    LoggedWorkoutSets?: LoggedWorkoutSetListRelationFilter
    LoggedWorkoutMoves?: LoggedWorkoutMoveListRelationFilter
    ProgressJournalGoals?: ProgressJournalGoalListRelationFilter
    ProgressJournalEntrys?: ProgressJournalEntryListRelationFilter
    WorkoutSections?: WorkoutSectionListRelationFilter
    WorkoutSets?: WorkoutSetListRelationFilter
    WorkoutMoves?: WorkoutMoveListRelationFilter
    WorkoutSetGenerators?: WorkoutSetGeneratorListRelationFilter
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInListRelationFilter
    WorkoutTag?: WorkoutTagListRelationFilter
    UserBenchmarkGroups?: UserBenchmarkGroupListRelationFilter
    UserBenchmarks?: UserBenchmarkListRelationFilter
    UserBenchmarkEntries?: UserBenchmarkEntryListRelationFilter
    WorkoutPlans?: WorkoutPlanListRelationFilter
    WorkoutPlanDays?: WorkoutPlanDayListRelationFilter
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutListRelationFilter
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentListRelationFilter
    WorkoutPlanReviews?: WorkoutPlanReviewListRelationFilter
    Collections?: CollectionListRelationFilter
  }

  export type UserOrderByInput = {
    id?: SortOrder
    firebaseUid?: SortOrder
    createdAt?: SortOrder
    hasOnboarded?: SortOrder
    userProfileScope?: SortOrder
    avatarUri?: SortOrder
    introVideoUri?: SortOrder
    introVideoThumbUri?: SortOrder
    displayName?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    bio?: SortOrder
    tagline?: SortOrder
    birthdate?: SortOrder
    gender?: SortOrder
    townCity?: SortOrder
    countryCode?: SortOrder
    instagramUrl?: SortOrder
    tiktokUrl?: SortOrder
    youtubeUrl?: SortOrder
    snapUrl?: SortOrder
    linkedinUrl?: SortOrder
  }

  export type UserWhereUniqueInput = {
    id?: string
    firebaseUid?: string
    displayName?: string
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    firebaseUid?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    hasOnboarded?: BoolWithAggregatesFilter | boolean
    userProfileScope?: EnumUserProfileScopeWithAggregatesFilter | UserProfileScope
    avatarUri?: StringNullableWithAggregatesFilter | string | null
    introVideoUri?: StringNullableWithAggregatesFilter | string | null
    introVideoThumbUri?: StringNullableWithAggregatesFilter | string | null
    displayName?: StringNullableWithAggregatesFilter | string | null
    firstname?: StringNullableWithAggregatesFilter | string | null
    lastname?: StringNullableWithAggregatesFilter | string | null
    bio?: StringNullableWithAggregatesFilter | string | null
    tagline?: StringNullableWithAggregatesFilter | string | null
    birthdate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    gender?: EnumGenderNullableWithAggregatesFilter | Gender | null
    townCity?: StringNullableWithAggregatesFilter | string | null
    countryCode?: StringNullableWithAggregatesFilter | string | null
    instagramUrl?: StringNullableWithAggregatesFilter | string | null
    tiktokUrl?: StringNullableWithAggregatesFilter | string | null
    youtubeUrl?: StringNullableWithAggregatesFilter | string | null
    snapUrl?: StringNullableWithAggregatesFilter | string | null
    linkedinUrl?: StringNullableWithAggregatesFilter | string | null
  }

  export type UserBenchmarkGroupWhereInput = {
    AND?: Enumerable<UserBenchmarkGroupWhereInput>
    OR?: Enumerable<UserBenchmarkGroupWhereInput>
    NOT?: Enumerable<UserBenchmarkGroupWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    UserBenchmarks?: UserBenchmarkListRelationFilter
  }

  export type UserBenchmarkGroupOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type UserBenchmarkGroupWhereUniqueInput = {
    id?: string
  }

  export type UserBenchmarkGroupScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserBenchmarkGroupScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserBenchmarkGroupScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserBenchmarkGroupScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
  }

  export type UserBenchmarkWhereInput = {
    AND?: Enumerable<UserBenchmarkWhereInput>
    OR?: Enumerable<UserBenchmarkWhereInput>
    NOT?: Enumerable<UserBenchmarkWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    lastEntryAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    reps?: FloatNullableFilter | number | null
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    load?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    timeUnit?: EnumTimeUnitFilter | TimeUnit
    Equipment?: XOR<EquipmentRelationFilter, EquipmentWhereInput> | null
    equipmentId?: StringNullableFilter | string | null
    Move?: XOR<MoveRelationFilter, MoveWhereInput>
    moveId?: StringFilter | string
    benchmarkType?: EnumBenchmarkTypeFilter | BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryListRelationFilter
    UserBenchmarkGroups?: UserBenchmarkGroupListRelationFilter
  }

  export type UserBenchmarkOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    lastEntryAt?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    reps?: SortOrder
    repType?: SortOrder
    load?: SortOrder
    loadUnit?: SortOrder
    distanceUnit?: SortOrder
    timeUnit?: SortOrder
    equipmentId?: SortOrder
    moveId?: SortOrder
    benchmarkType?: SortOrder
  }

  export type UserBenchmarkWhereUniqueInput = {
    id?: string
  }

  export type UserBenchmarkScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserBenchmarkScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserBenchmarkScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserBenchmarkScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    lastEntryAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    reps?: FloatNullableWithAggregatesFilter | number | null
    repType?: EnumWorkoutMoveRepTypeWithAggregatesFilter | WorkoutMoveRepType
    load?: FloatNullableWithAggregatesFilter | number | null
    loadUnit?: EnumLoadUnitWithAggregatesFilter | LoadUnit
    distanceUnit?: EnumDistanceUnitWithAggregatesFilter | DistanceUnit
    timeUnit?: EnumTimeUnitWithAggregatesFilter | TimeUnit
    equipmentId?: StringNullableWithAggregatesFilter | string | null
    moveId?: StringWithAggregatesFilter | string
    benchmarkType?: EnumBenchmarkTypeWithAggregatesFilter | BenchmarkType
  }

  export type UserBenchmarkEntryWhereInput = {
    AND?: Enumerable<UserBenchmarkEntryWhereInput>
    OR?: Enumerable<UserBenchmarkEntryWhereInput>
    NOT?: Enumerable<UserBenchmarkEntryWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    completedOn?: DateTimeFilter | Date | string
    score?: FloatFilter | number
    note?: StringNullableFilter | string | null
    videoUri?: StringNullableFilter | string | null
    videoThumbUri?: StringNullableFilter | string | null
    UserBenchmark?: XOR<UserBenchmarkRelationFilter, UserBenchmarkWhereInput>
    userBenchmarkId?: StringFilter | string
  }

  export type UserBenchmarkEntryOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    completedOn?: SortOrder
    score?: SortOrder
    note?: SortOrder
    videoUri?: SortOrder
    videoThumbUri?: SortOrder
    userBenchmarkId?: SortOrder
  }

  export type UserBenchmarkEntryWhereUniqueInput = {
    id?: string
  }

  export type UserBenchmarkEntryScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserBenchmarkEntryScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserBenchmarkEntryScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserBenchmarkEntryScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    completedOn?: DateTimeWithAggregatesFilter | Date | string
    score?: FloatWithAggregatesFilter | number
    note?: StringNullableWithAggregatesFilter | string | null
    videoUri?: StringNullableWithAggregatesFilter | string | null
    videoThumbUri?: StringNullableWithAggregatesFilter | string | null
    userBenchmarkId?: StringWithAggregatesFilter | string
  }

  export type WorkoutWhereInput = {
    AND?: Enumerable<WorkoutWhereInput>
    OR?: Enumerable<WorkoutWhereInput>
    NOT?: Enumerable<WorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    metaData?: JsonNullableFilter
    introVideoUri?: StringNullableFilter | string | null
    introVideoThumbUri?: StringNullableFilter | string | null
    introAudioUri?: StringNullableFilter | string | null
    coverImageUri?: StringNullableFilter | string | null
    lengthMinutes?: IntNullableFilter | number | null
    difficultyLevel?: EnumDifficultyLevelFilter | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFilter | ContentAccessScope
    WorkoutSections?: WorkoutSectionListRelationFilter
    LoggedWorkouts?: LoggedWorkoutListRelationFilter
    ScheduledWorkouts?: ScheduledWorkoutListRelationFilter
    WorkoutGoals?: WorkoutGoalListRelationFilter
    WorkoutTags?: WorkoutTagListRelationFilter
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutListRelationFilter
    Collections?: CollectionListRelationFilter
    DiscoverWorkouts?: DiscoverWorkoutListRelationFilter
  }

  export type WorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    archived?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    metaData?: SortOrder
    introVideoUri?: SortOrder
    introVideoThumbUri?: SortOrder
    introAudioUri?: SortOrder
    coverImageUri?: SortOrder
    lengthMinutes?: SortOrder
    difficultyLevel?: SortOrder
    contentAccessScope?: SortOrder
  }

  export type WorkoutWhereUniqueInput = {
    id?: string
  }

  export type WorkoutScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    archived?: BoolWithAggregatesFilter | boolean
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    metaData?: JsonNullableWithAggregatesFilter
    introVideoUri?: StringNullableWithAggregatesFilter | string | null
    introVideoThumbUri?: StringNullableWithAggregatesFilter | string | null
    introAudioUri?: StringNullableWithAggregatesFilter | string | null
    coverImageUri?: StringNullableWithAggregatesFilter | string | null
    lengthMinutes?: IntNullableWithAggregatesFilter | number | null
    difficultyLevel?: EnumDifficultyLevelWithAggregatesFilter | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeWithAggregatesFilter | ContentAccessScope
  }

  export type WorkoutTagWhereInput = {
    AND?: Enumerable<WorkoutTagWhereInput>
    OR?: Enumerable<WorkoutTagWhereInput>
    NOT?: Enumerable<WorkoutTagWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    tag?: StringFilter | string
    Workouts?: WorkoutListRelationFilter
    WorkoutPlans?: WorkoutPlanListRelationFilter
  }

  export type WorkoutTagOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    tag?: SortOrder
  }

  export type WorkoutTagWhereUniqueInput = {
    id?: string
  }

  export type WorkoutTagScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutTagScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutTagScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutTagScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    tag?: StringWithAggregatesFilter | string
  }

  export type WorkoutSectionWhereInput = {
    AND?: Enumerable<WorkoutSectionWhereInput>
    OR?: Enumerable<WorkoutSectionWhereInput>
    NOT?: Enumerable<WorkoutSectionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringNullableFilter | string | null
    note?: StringNullableFilter | string | null
    rounds?: IntFilter | number
    timecap?: IntNullableFilter | number | null
    sortPosition?: IntFilter | number
    introVideoUri?: StringNullableFilter | string | null
    introVideoThumbUri?: StringNullableFilter | string | null
    introAudioUri?: StringNullableFilter | string | null
    classVideoUri?: StringNullableFilter | string | null
    classVideoThumbUri?: StringNullableFilter | string | null
    classAudioUri?: StringNullableFilter | string | null
    outroVideoUri?: StringNullableFilter | string | null
    outroVideoThumbUri?: StringNullableFilter | string | null
    outroAudioUri?: StringNullableFilter | string | null
    Workout?: XOR<WorkoutRelationFilter, WorkoutWhereInput>
    workoutId?: StringFilter | string
    WorkoutSectionType?: XOR<WorkoutSectionTypeRelationFilter, WorkoutSectionTypeWhereInput>
    workoutSectionTypeId?: StringFilter | string
    WorkoutSets?: WorkoutSetListRelationFilter
  }

  export type WorkoutSectionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    archived?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    note?: SortOrder
    rounds?: SortOrder
    timecap?: SortOrder
    sortPosition?: SortOrder
    introVideoUri?: SortOrder
    introVideoThumbUri?: SortOrder
    introAudioUri?: SortOrder
    classVideoUri?: SortOrder
    classVideoThumbUri?: SortOrder
    classAudioUri?: SortOrder
    outroVideoUri?: SortOrder
    outroVideoThumbUri?: SortOrder
    outroAudioUri?: SortOrder
    workoutId?: SortOrder
    workoutSectionTypeId?: SortOrder
  }

  export type WorkoutSectionWhereUniqueInput = {
    id?: string
  }

  export type WorkoutSectionScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutSectionScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutSectionScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutSectionScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    archived?: BoolWithAggregatesFilter | boolean
    userId?: StringWithAggregatesFilter | string
    name?: StringNullableWithAggregatesFilter | string | null
    note?: StringNullableWithAggregatesFilter | string | null
    rounds?: IntWithAggregatesFilter | number
    timecap?: IntNullableWithAggregatesFilter | number | null
    sortPosition?: IntWithAggregatesFilter | number
    introVideoUri?: StringNullableWithAggregatesFilter | string | null
    introVideoThumbUri?: StringNullableWithAggregatesFilter | string | null
    introAudioUri?: StringNullableWithAggregatesFilter | string | null
    classVideoUri?: StringNullableWithAggregatesFilter | string | null
    classVideoThumbUri?: StringNullableWithAggregatesFilter | string | null
    classAudioUri?: StringNullableWithAggregatesFilter | string | null
    outroVideoUri?: StringNullableWithAggregatesFilter | string | null
    outroVideoThumbUri?: StringNullableWithAggregatesFilter | string | null
    outroAudioUri?: StringNullableWithAggregatesFilter | string | null
    workoutId?: StringWithAggregatesFilter | string
    workoutSectionTypeId?: StringWithAggregatesFilter | string
  }

  export type WorkoutSetWhereInput = {
    AND?: Enumerable<WorkoutSetWhereInput>
    OR?: Enumerable<WorkoutSetWhereInput>
    NOT?: Enumerable<WorkoutSetWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    sortPosition?: IntFilter | number
    rounds?: IntFilter | number
    duration?: IntNullableFilter | number | null
    Generators?: WorkoutSetGeneratorListRelationFilter
    IntervalBuyIn?: XOR<WorkoutSetIntervalBuyInRelationFilter, WorkoutSetIntervalBuyInWhereInput> | null
    WorkoutMoves?: WorkoutMoveListRelationFilter
    WorkoutSection?: XOR<WorkoutSectionRelationFilter, WorkoutSectionWhereInput>
    workoutSectionId?: StringFilter | string
  }

  export type WorkoutSetOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    sortPosition?: SortOrder
    rounds?: SortOrder
    duration?: SortOrder
    workoutSectionId?: SortOrder
  }

  export type WorkoutSetWhereUniqueInput = {
    id?: string
  }

  export type WorkoutSetScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutSetScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutSetScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutSetScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    sortPosition?: IntWithAggregatesFilter | number
    rounds?: IntWithAggregatesFilter | number
    duration?: IntNullableWithAggregatesFilter | number | null
    workoutSectionId?: StringWithAggregatesFilter | string
  }

  export type WorkoutSetIntervalBuyInWhereInput = {
    AND?: Enumerable<WorkoutSetIntervalBuyInWhereInput>
    OR?: Enumerable<WorkoutSetIntervalBuyInWhereInput>
    NOT?: Enumerable<WorkoutSetIntervalBuyInWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    interval?: IntFilter | number
    WorkoutMove?: XOR<WorkoutMoveRelationFilter, WorkoutMoveWhereInput>
    workoutMoveId?: StringFilter | string
    WorkoutSet?: XOR<WorkoutSetRelationFilter, WorkoutSetWhereInput>
    workoutSetId?: StringFilter | string
  }

  export type WorkoutSetIntervalBuyInOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    interval?: SortOrder
    workoutMoveId?: SortOrder
    workoutSetId?: SortOrder
  }

  export type WorkoutSetIntervalBuyInWhereUniqueInput = {
    id?: string
  }

  export type WorkoutSetIntervalBuyInScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutSetIntervalBuyInScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutSetIntervalBuyInScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutSetIntervalBuyInScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    interval?: IntWithAggregatesFilter | number
    workoutMoveId?: StringWithAggregatesFilter | string
    workoutSetId?: StringWithAggregatesFilter | string
  }

  export type WorkoutSetGeneratorWhereInput = {
    AND?: Enumerable<WorkoutSetGeneratorWhereInput>
    OR?: Enumerable<WorkoutSetGeneratorWhereInput>
    NOT?: Enumerable<WorkoutSetGeneratorWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    type?: EnumWorkoutSetGeneratorTypeFilter | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFilter | number
    target?: EnumWorkoutSetGeneratorTargetFilter | WorkoutSetGeneratorTarget
    roundFrequency?: IntFilter | number
    adjustAmount?: FloatFilter | number
    WorkoutSet?: XOR<WorkoutSetRelationFilter, WorkoutSetWhereInput> | null
    workoutSetId?: StringNullableFilter | string | null
  }

  export type WorkoutSetGeneratorOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    workoutMoveIndex?: SortOrder
    target?: SortOrder
    roundFrequency?: SortOrder
    adjustAmount?: SortOrder
    workoutSetId?: SortOrder
  }

  export type WorkoutSetGeneratorWhereUniqueInput = {
    id?: string
  }

  export type WorkoutSetGeneratorScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutSetGeneratorScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutSetGeneratorScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutSetGeneratorScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    type?: EnumWorkoutSetGeneratorTypeWithAggregatesFilter | WorkoutSetGeneratorType
    workoutMoveIndex?: IntWithAggregatesFilter | number
    target?: EnumWorkoutSetGeneratorTargetWithAggregatesFilter | WorkoutSetGeneratorTarget
    roundFrequency?: IntWithAggregatesFilter | number
    adjustAmount?: FloatWithAggregatesFilter | number
    workoutSetId?: StringNullableWithAggregatesFilter | string | null
  }

  export type WorkoutMoveWhereInput = {
    AND?: Enumerable<WorkoutMoveWhereInput>
    OR?: Enumerable<WorkoutMoveWhereInput>
    NOT?: Enumerable<WorkoutMoveWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    sortPosition?: IntFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    reps?: FloatFilter | number
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    timeUnit?: EnumTimeUnitFilter | TimeUnit
    loadAmount?: FloatFilter | number
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    Move?: XOR<MoveRelationFilter, MoveWhereInput>
    moveId?: StringFilter | string
    Equipment?: XOR<EquipmentRelationFilter, EquipmentWhereInput> | null
    equipmentId?: StringNullableFilter | string | null
    WorkoutSet?: XOR<WorkoutSetRelationFilter, WorkoutSetWhereInput>
    workoutSetId?: StringFilter | string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInListRelationFilter
  }

  export type WorkoutMoveOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    sortPosition?: SortOrder
    repType?: SortOrder
    reps?: SortOrder
    distanceUnit?: SortOrder
    timeUnit?: SortOrder
    loadAmount?: SortOrder
    loadUnit?: SortOrder
    moveId?: SortOrder
    equipmentId?: SortOrder
    workoutSetId?: SortOrder
  }

  export type WorkoutMoveWhereUniqueInput = {
    id?: string
  }

  export type WorkoutMoveScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutMoveScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutMoveScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutMoveScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    sortPosition?: IntWithAggregatesFilter | number
    repType?: EnumWorkoutMoveRepTypeWithAggregatesFilter | WorkoutMoveRepType
    reps?: FloatWithAggregatesFilter | number
    distanceUnit?: EnumDistanceUnitWithAggregatesFilter | DistanceUnit
    timeUnit?: EnumTimeUnitWithAggregatesFilter | TimeUnit
    loadAmount?: FloatWithAggregatesFilter | number
    loadUnit?: EnumLoadUnitWithAggregatesFilter | LoadUnit
    moveId?: StringWithAggregatesFilter | string
    equipmentId?: StringNullableWithAggregatesFilter | string | null
    workoutSetId?: StringWithAggregatesFilter | string
  }

  export type WorkoutPlanWhereInput = {
    AND?: Enumerable<WorkoutPlanWhereInput>
    OR?: Enumerable<WorkoutPlanWhereInput>
    NOT?: Enumerable<WorkoutPlanWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    archived?: BoolFilter | boolean
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    lengthWeeks?: IntFilter | number
    daysPerWeek?: IntFilter | number
    coverImageUri?: StringNullableFilter | string | null
    introVideoUri?: StringNullableFilter | string | null
    introVideoThumbUri?: StringNullableFilter | string | null
    introAudioUri?: StringNullableFilter | string | null
    contentAccessScope?: EnumContentAccessScopeFilter | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentListRelationFilter
    WorkoutPlanReviews?: WorkoutPlanReviewListRelationFilter
    WorkoutTags?: WorkoutTagListRelationFilter
    WorkoutPlanDays?: WorkoutPlanDayListRelationFilter
    Collections?: CollectionListRelationFilter
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanListRelationFilter
  }

  export type WorkoutPlanOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    archived?: SortOrder
    name?: SortOrder
    description?: SortOrder
    lengthWeeks?: SortOrder
    daysPerWeek?: SortOrder
    coverImageUri?: SortOrder
    introVideoUri?: SortOrder
    introVideoThumbUri?: SortOrder
    introAudioUri?: SortOrder
    contentAccessScope?: SortOrder
  }

  export type WorkoutPlanWhereUniqueInput = {
    id?: string
  }

  export type WorkoutPlanScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutPlanScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutPlanScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutPlanScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    archived?: BoolWithAggregatesFilter | boolean
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    lengthWeeks?: IntWithAggregatesFilter | number
    daysPerWeek?: IntWithAggregatesFilter | number
    coverImageUri?: StringNullableWithAggregatesFilter | string | null
    introVideoUri?: StringNullableWithAggregatesFilter | string | null
    introVideoThumbUri?: StringNullableWithAggregatesFilter | string | null
    introAudioUri?: StringNullableWithAggregatesFilter | string | null
    contentAccessScope?: EnumContentAccessScopeWithAggregatesFilter | ContentAccessScope
  }

  export type WorkoutPlanDayWhereInput = {
    AND?: Enumerable<WorkoutPlanDayWhereInput>
    OR?: Enumerable<WorkoutPlanDayWhereInput>
    NOT?: Enumerable<WorkoutPlanDayWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    dayNumber?: IntFilter | number
    WorkoutPlan?: XOR<WorkoutPlanRelationFilter, WorkoutPlanWhereInput>
    workoutPlanId?: StringFilter | string
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutListRelationFilter
  }

  export type WorkoutPlanDayOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    note?: SortOrder
    dayNumber?: SortOrder
    workoutPlanId?: SortOrder
  }

  export type WorkoutPlanDayWhereUniqueInput = {
    id?: string
  }

  export type WorkoutPlanDayScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutPlanDayScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutPlanDayScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutPlanDayScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    note?: StringNullableWithAggregatesFilter | string | null
    dayNumber?: IntWithAggregatesFilter | number
    workoutPlanId?: StringWithAggregatesFilter | string
  }

  export type WorkoutPlanDayWorkoutWhereInput = {
    AND?: Enumerable<WorkoutPlanDayWorkoutWhereInput>
    OR?: Enumerable<WorkoutPlanDayWorkoutWhereInput>
    NOT?: Enumerable<WorkoutPlanDayWorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    sortPosition?: IntFilter | number
    Workout?: XOR<WorkoutRelationFilter, WorkoutWhereInput>
    workoutId?: StringFilter | string
    WorkoutPlanDay?: XOR<WorkoutPlanDayRelationFilter, WorkoutPlanDayWhereInput>
    workoutPlanDayId?: StringFilter | string
    ScheduledWorkouts?: ScheduledWorkoutListRelationFilter
  }

  export type WorkoutPlanDayWorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    note?: SortOrder
    sortPosition?: SortOrder
    workoutId?: SortOrder
    workoutPlanDayId?: SortOrder
  }

  export type WorkoutPlanDayWorkoutWhereUniqueInput = {
    id?: string
  }

  export type WorkoutPlanDayWorkoutScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutPlanDayWorkoutScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutPlanDayWorkoutScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutPlanDayWorkoutScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    note?: StringNullableWithAggregatesFilter | string | null
    sortPosition?: IntWithAggregatesFilter | number
    workoutId?: StringWithAggregatesFilter | string
    workoutPlanDayId?: StringWithAggregatesFilter | string
  }

  export type WorkoutPlanEnrolmentWhereInput = {
    AND?: Enumerable<WorkoutPlanEnrolmentWhereInput>
    OR?: Enumerable<WorkoutPlanEnrolmentWhereInput>
    NOT?: Enumerable<WorkoutPlanEnrolmentWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    startDate?: DateTimeFilter | Date | string
    completedPlanDayWorkoutIds?: StringNullableListFilter
    WorkoutPlan?: XOR<WorkoutPlanRelationFilter, WorkoutPlanWhereInput>
    workoutPlanId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    ScheduledWorkouts?: ScheduledWorkoutListRelationFilter
  }

  export type WorkoutPlanEnrolmentOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    startDate?: SortOrder
    completedPlanDayWorkoutIds?: SortOrder
    workoutPlanId?: SortOrder
    userId?: SortOrder
  }

  export type WorkoutPlanEnrolmentWhereUniqueInput = {
    id?: string
  }

  export type WorkoutPlanEnrolmentScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutPlanEnrolmentScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutPlanEnrolmentScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutPlanEnrolmentScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    startDate?: DateTimeWithAggregatesFilter | Date | string
    completedPlanDayWorkoutIds?: StringNullableListFilter
    workoutPlanId?: StringWithAggregatesFilter | string
    userId?: StringWithAggregatesFilter | string
  }

  export type WorkoutPlanReviewWhereInput = {
    AND?: Enumerable<WorkoutPlanReviewWhereInput>
    OR?: Enumerable<WorkoutPlanReviewWhereInput>
    NOT?: Enumerable<WorkoutPlanReviewWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    score?: FloatFilter | number
    comment?: StringNullableFilter | string | null
    WorkoutPlan?: XOR<WorkoutPlanRelationFilter, WorkoutPlanWhereInput>
    workoutPlanId?: StringFilter | string
  }

  export type WorkoutPlanReviewOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    score?: SortOrder
    comment?: SortOrder
    workoutPlanId?: SortOrder
  }

  export type WorkoutPlanReviewWhereUniqueInput = {
    id?: string
  }

  export type WorkoutPlanReviewScalarWhereWithAggregatesInput = {
    AND?: Enumerable<WorkoutPlanReviewScalarWhereWithAggregatesInput>
    OR?: Enumerable<WorkoutPlanReviewScalarWhereWithAggregatesInput>
    NOT?: Enumerable<WorkoutPlanReviewScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    score?: FloatWithAggregatesFilter | number
    comment?: StringNullableWithAggregatesFilter | string | null
    workoutPlanId?: StringWithAggregatesFilter | string
  }

  export type LoggedWorkoutWhereInput = {
    AND?: Enumerable<LoggedWorkoutWhereInput>
    OR?: Enumerable<LoggedWorkoutWhereInput>
    NOT?: Enumerable<LoggedWorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    completedOn?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    note?: StringNullableFilter | string | null
    GymProfile?: XOR<GymProfileRelationFilter, GymProfileWhereInput> | null
    gymProfileId?: StringNullableFilter | string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionListRelationFilter
    ScheduledWorkout?: XOR<ScheduledWorkoutRelationFilter, ScheduledWorkoutWhereInput> | null
    Workout?: XOR<WorkoutRelationFilter, WorkoutWhereInput> | null
    workoutId?: StringNullableFilter | string | null
  }

  export type LoggedWorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    completedOn?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    note?: SortOrder
    gymProfileId?: SortOrder
    workoutId?: SortOrder
  }

  export type LoggedWorkoutWhereUniqueInput = {
    id?: string
  }

  export type LoggedWorkoutScalarWhereWithAggregatesInput = {
    AND?: Enumerable<LoggedWorkoutScalarWhereWithAggregatesInput>
    OR?: Enumerable<LoggedWorkoutScalarWhereWithAggregatesInput>
    NOT?: Enumerable<LoggedWorkoutScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    completedOn?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    note?: StringNullableWithAggregatesFilter | string | null
    gymProfileId?: StringNullableWithAggregatesFilter | string | null
    workoutId?: StringNullableWithAggregatesFilter | string | null
  }

  export type LoggedWorkoutSectionWhereInput = {
    AND?: Enumerable<LoggedWorkoutSectionWhereInput>
    OR?: Enumerable<LoggedWorkoutSectionWhereInput>
    NOT?: Enumerable<LoggedWorkoutSectionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringNullableFilter | string | null
    note?: StringNullableFilter | string | null
    timecap?: IntNullableFilter | number | null
    sortPosition?: IntFilter | number
    timeTakenMs?: IntNullableFilter | number | null
    lapTimesMs?: JsonFilter
    repScore?: IntNullableFilter | number | null
    LoggedWorkoutSets?: LoggedWorkoutSetListRelationFilter
    LoggedWorkout?: XOR<LoggedWorkoutRelationFilter, LoggedWorkoutWhereInput>
    loggedWorkoutId?: StringFilter | string
    WorkoutSectionType?: XOR<WorkoutSectionTypeRelationFilter, WorkoutSectionTypeWhereInput>
    workoutSectionTypeId?: StringFilter | string
  }

  export type LoggedWorkoutSectionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    note?: SortOrder
    timecap?: SortOrder
    sortPosition?: SortOrder
    timeTakenMs?: SortOrder
    lapTimesMs?: SortOrder
    repScore?: SortOrder
    loggedWorkoutId?: SortOrder
    workoutSectionTypeId?: SortOrder
  }

  export type LoggedWorkoutSectionWhereUniqueInput = {
    id?: string
  }

  export type LoggedWorkoutSectionScalarWhereWithAggregatesInput = {
    AND?: Enumerable<LoggedWorkoutSectionScalarWhereWithAggregatesInput>
    OR?: Enumerable<LoggedWorkoutSectionScalarWhereWithAggregatesInput>
    NOT?: Enumerable<LoggedWorkoutSectionScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringNullableWithAggregatesFilter | string | null
    note?: StringNullableWithAggregatesFilter | string | null
    timecap?: IntNullableWithAggregatesFilter | number | null
    sortPosition?: IntWithAggregatesFilter | number
    timeTakenMs?: IntNullableWithAggregatesFilter | number | null
    lapTimesMs?: JsonWithAggregatesFilter
    repScore?: IntNullableWithAggregatesFilter | number | null
    loggedWorkoutId?: StringWithAggregatesFilter | string
    workoutSectionTypeId?: StringWithAggregatesFilter | string
  }

  export type LoggedWorkoutSetWhereInput = {
    AND?: Enumerable<LoggedWorkoutSetWhereInput>
    OR?: Enumerable<LoggedWorkoutSetWhereInput>
    NOT?: Enumerable<LoggedWorkoutSetWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    roundNumber?: IntFilter | number
    sortPosition?: IntFilter | number
    duration?: IntNullableFilter | number | null
    roundsCompleted?: IntFilter | number
    LoggedWorkoutMoves?: LoggedWorkoutMoveListRelationFilter
    LoggedWorkoutSection?: XOR<LoggedWorkoutSectionRelationFilter, LoggedWorkoutSectionWhereInput>
    loggedWorkoutSectionId?: StringFilter | string
  }

  export type LoggedWorkoutSetOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    note?: SortOrder
    roundNumber?: SortOrder
    sortPosition?: SortOrder
    duration?: SortOrder
    roundsCompleted?: SortOrder
    loggedWorkoutSectionId?: SortOrder
  }

  export type LoggedWorkoutSetWhereUniqueInput = {
    id?: string
  }

  export type LoggedWorkoutSetScalarWhereWithAggregatesInput = {
    AND?: Enumerable<LoggedWorkoutSetScalarWhereWithAggregatesInput>
    OR?: Enumerable<LoggedWorkoutSetScalarWhereWithAggregatesInput>
    NOT?: Enumerable<LoggedWorkoutSetScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    note?: StringNullableWithAggregatesFilter | string | null
    roundNumber?: IntWithAggregatesFilter | number
    sortPosition?: IntWithAggregatesFilter | number
    duration?: IntNullableWithAggregatesFilter | number | null
    roundsCompleted?: IntWithAggregatesFilter | number
    loggedWorkoutSectionId?: StringWithAggregatesFilter | string
  }

  export type LoggedWorkoutMoveWhereInput = {
    AND?: Enumerable<LoggedWorkoutMoveWhereInput>
    OR?: Enumerable<LoggedWorkoutMoveWhereInput>
    NOT?: Enumerable<LoggedWorkoutMoveWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    sortPosition?: IntFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    reps?: FloatFilter | number
    distance?: FloatNullableFilter | number | null
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    loadAmount?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    timeUnit?: EnumTimeUnitFilter | TimeUnit
    Move?: XOR<MoveRelationFilter, MoveWhereInput>
    moveId?: StringFilter | string
    Equipment?: XOR<EquipmentRelationFilter, EquipmentWhereInput> | null
    equipmentId?: StringNullableFilter | string | null
    LoggedWorkoutSet?: XOR<LoggedWorkoutSetRelationFilter, LoggedWorkoutSetWhereInput>
    loggedWorkoutSetId?: StringFilter | string
  }

  export type LoggedWorkoutMoveOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    sortPosition?: SortOrder
    repType?: SortOrder
    reps?: SortOrder
    distance?: SortOrder
    distanceUnit?: SortOrder
    loadAmount?: SortOrder
    loadUnit?: SortOrder
    timeUnit?: SortOrder
    moveId?: SortOrder
    equipmentId?: SortOrder
    loggedWorkoutSetId?: SortOrder
  }

  export type LoggedWorkoutMoveWhereUniqueInput = {
    id?: string
  }

  export type LoggedWorkoutMoveScalarWhereWithAggregatesInput = {
    AND?: Enumerable<LoggedWorkoutMoveScalarWhereWithAggregatesInput>
    OR?: Enumerable<LoggedWorkoutMoveScalarWhereWithAggregatesInput>
    NOT?: Enumerable<LoggedWorkoutMoveScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    sortPosition?: IntWithAggregatesFilter | number
    repType?: EnumWorkoutMoveRepTypeWithAggregatesFilter | WorkoutMoveRepType
    reps?: FloatWithAggregatesFilter | number
    distance?: FloatNullableWithAggregatesFilter | number | null
    distanceUnit?: EnumDistanceUnitWithAggregatesFilter | DistanceUnit
    loadAmount?: FloatNullableWithAggregatesFilter | number | null
    loadUnit?: EnumLoadUnitWithAggregatesFilter | LoadUnit
    timeUnit?: EnumTimeUnitWithAggregatesFilter | TimeUnit
    moveId?: StringWithAggregatesFilter | string
    equipmentId?: StringNullableWithAggregatesFilter | string | null
    loggedWorkoutSetId?: StringWithAggregatesFilter | string
  }

  export type ProgressJournalWhereInput = {
    AND?: Enumerable<ProgressJournalWhereInput>
    OR?: Enumerable<ProgressJournalWhereInput>
    NOT?: Enumerable<ProgressJournalWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    ProgressJournalEntries?: ProgressJournalEntryListRelationFilter
    ProgressJournalGoals?: ProgressJournalGoalListRelationFilter
  }

  export type ProgressJournalOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type ProgressJournalWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProgressJournalScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProgressJournalScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProgressJournalScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
  }

  export type ProgressJournalEntryWhereInput = {
    AND?: Enumerable<ProgressJournalEntryWhereInput>
    OR?: Enumerable<ProgressJournalEntryWhereInput>
    NOT?: Enumerable<ProgressJournalEntryWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    voiceNoteUri?: StringNullableFilter | string | null
    bodyweight?: FloatNullableFilter | number | null
    bodyweightUnit?: EnumBodyweightUnitFilter | BodyweightUnit
    moodScore?: FloatNullableFilter | number | null
    energyScore?: FloatNullableFilter | number | null
    stressScore?: FloatNullableFilter | number | null
    motivationScore?: FloatNullableFilter | number | null
    progressPhotoUris?: StringNullableListFilter
    ProgressJournal?: XOR<ProgressJournalRelationFilter, ProgressJournalWhereInput>
    progressJournalId?: StringFilter | string
  }

  export type ProgressJournalEntryOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    note?: SortOrder
    voiceNoteUri?: SortOrder
    bodyweight?: SortOrder
    bodyweightUnit?: SortOrder
    moodScore?: SortOrder
    energyScore?: SortOrder
    stressScore?: SortOrder
    motivationScore?: SortOrder
    progressPhotoUris?: SortOrder
    progressJournalId?: SortOrder
  }

  export type ProgressJournalEntryWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalEntryScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProgressJournalEntryScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProgressJournalEntryScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProgressJournalEntryScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    note?: StringNullableWithAggregatesFilter | string | null
    voiceNoteUri?: StringNullableWithAggregatesFilter | string | null
    bodyweight?: FloatNullableWithAggregatesFilter | number | null
    bodyweightUnit?: EnumBodyweightUnitWithAggregatesFilter | BodyweightUnit
    moodScore?: FloatNullableWithAggregatesFilter | number | null
    energyScore?: FloatNullableWithAggregatesFilter | number | null
    stressScore?: FloatNullableWithAggregatesFilter | number | null
    motivationScore?: FloatNullableWithAggregatesFilter | number | null
    progressPhotoUris?: StringNullableListFilter
    progressJournalId?: StringWithAggregatesFilter | string
  }

  export type ProgressJournalGoalWhereInput = {
    AND?: Enumerable<ProgressJournalGoalWhereInput>
    OR?: Enumerable<ProgressJournalGoalWhereInput>
    NOT?: Enumerable<ProgressJournalGoalWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    deadline?: DateTimeNullableFilter | Date | string | null
    completedDate?: DateTimeNullableFilter | Date | string | null
    ProgressJournalGoalTags?: ProgressJournalGoalTagListRelationFilter
    ProgressJournal?: XOR<ProgressJournalRelationFilter, ProgressJournalWhereInput>
    progressJournalId?: StringFilter | string
  }

  export type ProgressJournalGoalOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deadline?: SortOrder
    completedDate?: SortOrder
    progressJournalId?: SortOrder
  }

  export type ProgressJournalGoalWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalGoalScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProgressJournalGoalScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProgressJournalGoalScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProgressJournalGoalScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    userId?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    deadline?: DateTimeNullableWithAggregatesFilter | Date | string | null
    completedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    progressJournalId?: StringWithAggregatesFilter | string
  }

  export type ProgressJournalGoalTagWhereInput = {
    AND?: Enumerable<ProgressJournalGoalTagWhereInput>
    OR?: Enumerable<ProgressJournalGoalTagWhereInput>
    NOT?: Enumerable<ProgressJournalGoalTagWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    tag?: StringFilter | string
    hexColor?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    userId?: StringFilter | string
    ProgressJournalGoals?: ProgressJournalGoalListRelationFilter
  }

  export type ProgressJournalGoalTagOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    tag?: SortOrder
    hexColor?: SortOrder
    userId?: SortOrder
  }

  export type ProgressJournalGoalTagWhereUniqueInput = {
    id?: string
  }

  export type ProgressJournalGoalTagScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProgressJournalGoalTagScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProgressJournalGoalTagScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProgressJournalGoalTagScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    tag?: StringWithAggregatesFilter | string
    hexColor?: StringWithAggregatesFilter | string
    userId?: StringWithAggregatesFilter | string
  }

  export type DiscoverFeaturedWhereInput = {
    AND?: Enumerable<DiscoverFeaturedWhereInput>
    OR?: Enumerable<DiscoverFeaturedWhereInput>
    NOT?: Enumerable<DiscoverFeaturedWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    tag?: StringFilter | string
    name?: StringFilter | string
    tagline?: StringFilter | string
    description?: StringFilter | string
    coverImageUri?: StringFilter | string
  }

  export type DiscoverFeaturedOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    tag?: SortOrder
    name?: SortOrder
    tagline?: SortOrder
    description?: SortOrder
    coverImageUri?: SortOrder
  }

  export type DiscoverFeaturedWhereUniqueInput = {
    id?: string
  }

  export type DiscoverFeaturedScalarWhereWithAggregatesInput = {
    AND?: Enumerable<DiscoverFeaturedScalarWhereWithAggregatesInput>
    OR?: Enumerable<DiscoverFeaturedScalarWhereWithAggregatesInput>
    NOT?: Enumerable<DiscoverFeaturedScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    tag?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    tagline?: StringWithAggregatesFilter | string
    description?: StringWithAggregatesFilter | string
    coverImageUri?: StringWithAggregatesFilter | string
  }

  export type DiscoverWorkoutCategoryWhereInput = {
    AND?: Enumerable<DiscoverWorkoutCategoryWhereInput>
    OR?: Enumerable<DiscoverWorkoutCategoryWhereInput>
    NOT?: Enumerable<DiscoverWorkoutCategoryWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    active?: BoolFilter | boolean
    name?: StringFilter | string
    tagline?: StringFilter | string
    description?: StringFilter | string
    coverImageUri?: StringFilter | string
    DiscoverWorkouts?: DiscoverWorkoutListRelationFilter
  }

  export type DiscoverWorkoutCategoryOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    active?: SortOrder
    name?: SortOrder
    tagline?: SortOrder
    description?: SortOrder
    coverImageUri?: SortOrder
  }

  export type DiscoverWorkoutCategoryWhereUniqueInput = {
    id?: string
  }

  export type DiscoverWorkoutCategoryScalarWhereWithAggregatesInput = {
    AND?: Enumerable<DiscoverWorkoutCategoryScalarWhereWithAggregatesInput>
    OR?: Enumerable<DiscoverWorkoutCategoryScalarWhereWithAggregatesInput>
    NOT?: Enumerable<DiscoverWorkoutCategoryScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    active?: BoolWithAggregatesFilter | boolean
    name?: StringWithAggregatesFilter | string
    tagline?: StringWithAggregatesFilter | string
    description?: StringWithAggregatesFilter | string
    coverImageUri?: StringWithAggregatesFilter | string
  }

  export type DiscoverWorkoutWhereInput = {
    AND?: Enumerable<DiscoverWorkoutWhereInput>
    OR?: Enumerable<DiscoverWorkoutWhereInput>
    NOT?: Enumerable<DiscoverWorkoutWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    Workout?: XOR<WorkoutRelationFilter, WorkoutWhereInput>
    workoutId?: StringFilter | string
    DiscoverWorkoutCategory?: XOR<DiscoverWorkoutCategoryRelationFilter, DiscoverWorkoutCategoryWhereInput>
    discoverWorkoutCategoryId?: StringFilter | string
  }

  export type DiscoverWorkoutOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    workoutId?: SortOrder
    discoverWorkoutCategoryId?: SortOrder
  }

  export type DiscoverWorkoutWhereUniqueInput = {
    id?: string
  }

  export type DiscoverWorkoutScalarWhereWithAggregatesInput = {
    AND?: Enumerable<DiscoverWorkoutScalarWhereWithAggregatesInput>
    OR?: Enumerable<DiscoverWorkoutScalarWhereWithAggregatesInput>
    NOT?: Enumerable<DiscoverWorkoutScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    workoutId?: StringWithAggregatesFilter | string
    discoverWorkoutCategoryId?: StringWithAggregatesFilter | string
  }

  export type DiscoverWorkoutPlanCategoryWhereInput = {
    AND?: Enumerable<DiscoverWorkoutPlanCategoryWhereInput>
    OR?: Enumerable<DiscoverWorkoutPlanCategoryWhereInput>
    NOT?: Enumerable<DiscoverWorkoutPlanCategoryWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    active?: BoolFilter | boolean
    name?: StringFilter | string
    tagline?: StringFilter | string
    description?: StringFilter | string
    coverImageUri?: StringFilter | string
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanListRelationFilter
  }

  export type DiscoverWorkoutPlanCategoryOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    active?: SortOrder
    name?: SortOrder
    tagline?: SortOrder
    description?: SortOrder
    coverImageUri?: SortOrder
  }

  export type DiscoverWorkoutPlanCategoryWhereUniqueInput = {
    id?: string
  }

  export type DiscoverWorkoutPlanCategoryScalarWhereWithAggregatesInput = {
    AND?: Enumerable<DiscoverWorkoutPlanCategoryScalarWhereWithAggregatesInput>
    OR?: Enumerable<DiscoverWorkoutPlanCategoryScalarWhereWithAggregatesInput>
    NOT?: Enumerable<DiscoverWorkoutPlanCategoryScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    active?: BoolWithAggregatesFilter | boolean
    name?: StringWithAggregatesFilter | string
    tagline?: StringWithAggregatesFilter | string
    description?: StringWithAggregatesFilter | string
    coverImageUri?: StringWithAggregatesFilter | string
  }

  export type DiscoverWorkoutPlanWhereInput = {
    AND?: Enumerable<DiscoverWorkoutPlanWhereInput>
    OR?: Enumerable<DiscoverWorkoutPlanWhereInput>
    NOT?: Enumerable<DiscoverWorkoutPlanWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    WorkoutPlan?: XOR<WorkoutPlanRelationFilter, WorkoutPlanWhereInput>
    workoutPlanId?: StringFilter | string
    DiscoverWorkoutPlanCategory?: XOR<DiscoverWorkoutPlanCategoryRelationFilter, DiscoverWorkoutPlanCategoryWhereInput>
    discoverWorkoutPlanCategoryId?: StringFilter | string
  }

  export type DiscoverWorkoutPlanOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    workoutPlanId?: SortOrder
    discoverWorkoutPlanCategoryId?: SortOrder
  }

  export type DiscoverWorkoutPlanWhereUniqueInput = {
    id?: string
  }

  export type DiscoverWorkoutPlanScalarWhereWithAggregatesInput = {
    AND?: Enumerable<DiscoverWorkoutPlanScalarWhereWithAggregatesInput>
    OR?: Enumerable<DiscoverWorkoutPlanScalarWhereWithAggregatesInput>
    NOT?: Enumerable<DiscoverWorkoutPlanScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    workoutPlanId?: StringWithAggregatesFilter | string
    discoverWorkoutPlanCategoryId?: StringWithAggregatesFilter | string
  }

  export type AdminCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    username: string
  }

  export type AdminUncheckedCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    username: string
  }

  export type AdminUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminCreateManyInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    username: string
  }

  export type AdminUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type BodyAreaCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutBodyAreaInput
  }

  export type BodyAreaUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutBodyAreaInput
  }

  export type BodyAreaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutBodyAreaInput
  }

  export type BodyAreaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaInput
  }

  export type BodyAreaCreateManyInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
  }

  export type BodyAreaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type BodyAreaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type BodyAreaMoveScoreCreateInput = {
    createdAt?: Date | string
    score?: number
    Move: MoveCreateNestedOneWithoutBodyAreaMoveScoresInput
    BodyArea: BodyAreaCreateNestedOneWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedCreateInput = {
    createdAt?: Date | string
    moveId: string
    bodyAreaId: string
    score?: number
  }

  export type BodyAreaMoveScoreUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
    Move?: MoveUpdateOneRequiredWithoutBodyAreaMoveScoresInput
    BodyArea?: BodyAreaUpdateOneRequiredWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    bodyAreaId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type BodyAreaMoveScoreCreateManyInput = {
    createdAt?: Date | string
    moveId: string
    bodyAreaId: string
    score?: number
  }

  export type BodyAreaMoveScoreUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    bodyAreaId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type EquipmentCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    RequiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileCreateNestedManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    RequiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileUpdateManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutEquipmentInput
  }

  export type EquipmentCreateManyInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
  }

  export type EquipmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EquipmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MoveCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveCreateManyInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreateManyvalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveTypeCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUri?: string | null
    Moves?: MoveCreateNestedManyWithoutMoveTypeInput
  }

  export type MoveTypeUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUri?: string | null
    Moves?: MoveUncheckedCreateNestedManyWithoutMoveTypeInput
  }

  export type MoveTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUri?: NullableStringFieldUpdateOperationsInput | string | null
    Moves?: MoveUpdateManyWithoutMoveTypeInput
  }

  export type MoveTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUri?: NullableStringFieldUpdateOperationsInput | string | null
    Moves?: MoveUncheckedUpdateManyWithoutMoveTypeInput
  }

  export type MoveTypeCreateManyInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUri?: string | null
  }

  export type MoveTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUri?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUri?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutGoalCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    hexColor: string
    Workouts?: WorkoutCreateNestedManyWithoutWorkoutGoalsInput
  }

  export type WorkoutGoalUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    hexColor: string
  }

  export type WorkoutGoalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    Workouts?: WorkoutUpdateManyWithoutWorkoutGoalsInput
  }

  export type WorkoutGoalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutGoalCreateManyInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    hexColor: string
  }

  export type WorkoutGoalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutGoalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSectionTypeCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    validRepTypes?: WorkoutSectionTypeCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutSectionTypeInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    validRepTypes?: WorkoutSectionTypeCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutSectionTypeInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutSectionTypeInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionTypeInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeCreateManyInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    validRepTypes?: WorkoutSectionTypeCreateManyvalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutSectionTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutSectionTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type CollectionCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutCollectionsInput
    Workouts?: WorkoutCreateNestedManyWithoutCollectionsInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type CollectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutCollectionsInput
    Workouts?: WorkoutUpdateManyWithoutCollectionsInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutCollectionsInput
  }

  export type CollectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type CollectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GymProfileCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutGymProfilesInput
    Equipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutGymProfilesInput
    Equipments?: EquipmentUpdateManyWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type GymProfileCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type GymProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GymProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduledWorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    User: UserCreateNestedOneWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    Workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduledWorkoutCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScheduledWorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type UserCreateManyInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkGroupCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutUserBenchmarkGroupsInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserBenchmarkGroupsInput
  }

  export type UserBenchmarkGroupUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type UserBenchmarkGroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutUserBenchmarkGroupsInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserBenchmarkGroupsInput
  }

  export type UserBenchmarkGroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkGroupCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type UserBenchmarkGroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkGroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkCreateInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    benchmarkType?: BenchmarkType
    User: UserCreateNestedOneWithoutUserBenchmarksInput
    Equipment?: EquipmentCreateNestedOneWithoutUserBenchmarksInput
    Move: MoveCreateNestedOneWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    moveId: string
    benchmarkType?: BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    User?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    Equipment?: EquipmentUpdateOneWithoutUserBenchmarksInput
    Move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateManyInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    moveId: string
    benchmarkType?: BenchmarkType
  }

  export type UserBenchmarkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
  }

  export type UserBenchmarkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
  }

  export type UserBenchmarkEntryCreateInput = {
    id?: string
    createdAt?: Date | string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
    User: UserCreateNestedOneWithoutUserBenchmarkEntriesInput
    UserBenchmark: UserBenchmarkCreateNestedOneWithoutUserBenchmarkEntriesInput
  }

  export type UserBenchmarkEntryUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
    userBenchmarkId: string
  }

  export type UserBenchmarkEntryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutUserBenchmarkEntriesInput
    UserBenchmark?: UserBenchmarkUpdateOneRequiredWithoutUserBenchmarkEntriesInput
  }

  export type UserBenchmarkEntryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    userBenchmarkId?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkEntryCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
    userBenchmarkId: string
  }

  export type UserBenchmarkEntryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkEntryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    userBenchmarkId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutCreateManyInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
  }

  export type WorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutTagCreateInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    User: UserCreateNestedOneWithoutWorkoutTagInput
    Workouts?: WorkoutCreateNestedManyWithoutWorkoutTagsInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    tag: string
  }

  export type WorkoutTagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutWorkoutTagInput
    Workouts?: WorkoutUpdateManyWithoutWorkoutTagsInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutTagCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    tag: string
  }

  export type WorkoutTagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutTagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSectionCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    User: UserCreateNestedOneWithoutWorkoutSectionsInput
    Workout: WorkoutCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutId: string
    workoutSectionTypeId: string
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutWorkoutSectionsInput
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionCreateManyInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutId: string
    workoutSectionTypeId: string
  }

  export type WorkoutSectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutSectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSetCreateInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    User: UserCreateNestedOneWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSetInput
    WorkoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    rounds?: number
    duration?: number | null
    workoutSectionId: string
    Generators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSetInput
  }

  export type WorkoutSetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSetInput
    WorkoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
    Generators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSetInput
  }

  export type WorkoutSetCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    rounds?: number
    duration?: number | null
    workoutSectionId: string
  }

  export type WorkoutSetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WorkoutSetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSetIntervalBuyInCreateInput = {
    id?: string
    createdAt?: Date | string
    interval: number
    User: UserCreateNestedOneWithoutWorkoutSetIntervalBuyInInput
    WorkoutMove: WorkoutMoveCreateNestedOneWithoutWorkoutSetIntervalBuyInInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    interval: number
    workoutMoveId: string
    workoutSetId: string
  }

  export type WorkoutSetIntervalBuyInUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput
    WorkoutMove?: WorkoutMoveUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    interval?: IntFieldUpdateOperationsInput | number
    workoutMoveId?: StringFieldUpdateOperationsInput | string
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSetIntervalBuyInCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    interval: number
    workoutMoveId: string
    workoutSetId: string
  }

  export type WorkoutSetIntervalBuyInUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    interval?: IntFieldUpdateOperationsInput | number
    workoutMoveId?: StringFieldUpdateOperationsInput | string
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSetGeneratorCreateInput = {
    id?: string
    createdAt?: Date | string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    User: UserCreateNestedOneWithoutWorkoutSetGeneratorsInput
    WorkoutSet?: WorkoutSetCreateNestedOneWithoutGeneratorsInput
  }

  export type WorkoutSetGeneratorUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    workoutSetId?: string | null
  }

  export type WorkoutSetGeneratorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutSetGeneratorsInput
    WorkoutSet?: WorkoutSetUpdateOneWithoutGeneratorsInput
  }

  export type WorkoutSetGeneratorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
    workoutSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutSetGeneratorCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    workoutSetId?: string | null
  }

  export type WorkoutSetGeneratorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
  }

  export type WorkoutSetGeneratorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
    workoutSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutMoveCreateInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    User: UserCreateNestedOneWithoutWorkoutMovesInput
    Move: MoveCreateNestedOneWithoutWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    equipmentId?: string | null
    workoutSetId: string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    User?: UserUpdateOneRequiredWithoutWorkoutMovesInput
    Move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSetId?: StringFieldUpdateOperationsInput | string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    equipmentId?: string | null
    workoutSetId: string
  }

  export type WorkoutMoveUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
  }

  export type WorkoutMoveUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanCreateInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput
    Collections?: CollectionUpdateManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
  }

  export type WorkoutPlanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutPlanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutPlanDayCreateInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    dayNumber: number
    User: UserCreateNestedOneWithoutWorkoutPlanDaysInput
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutWorkoutPlanDaysInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    dayNumber: number
    workoutPlanId: string
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutPlanDaysInput
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutWorkoutPlanDaysInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    dayNumber: number
    workoutPlanId: string
  }

  export type WorkoutPlanDayUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
  }

  export type WorkoutPlanDayUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanDayWorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    sortPosition: number
    User: UserCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
    Workout: WorkoutCreateNestedOneWithoutWorkoutPlanDayWorkoutInput
    WorkoutPlanDay: WorkoutPlanDayCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    sortPosition: number
    workoutId: string
    workoutPlanDayId: string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutPlanDayWorkoutInput
    WorkoutPlanDay?: WorkoutPlanDayUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutPlanDayId?: StringFieldUpdateOperationsInput | string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    sortPosition: number
    workoutId: string
    workoutPlanDayId: string
  }

  export type WorkoutPlanDayWorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutPlanDayId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanEnrolmentCreateInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutEnrolmentsInput
    User: UserCreateNestedOneWithoutWorkoutPlanEnrolmentsInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    workoutPlanId: string
    userId: string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutEnrolmentsInput
    User?: UserUpdateOneRequiredWithoutWorkoutPlanEnrolmentsInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentCreateManyInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    workoutPlanId: string
    userId: string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreateManycompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanEnrolmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanReviewCreateInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    User: UserCreateNestedOneWithoutWorkoutPlanReviewsInput
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutWorkoutPlanReviewsInput
  }

  export type WorkoutPlanReviewUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    score: number
    comment?: string | null
    workoutPlanId: string
  }

  export type WorkoutPlanReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutWorkoutPlanReviewsInput
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutWorkoutPlanReviewsInput
  }

  export type WorkoutPlanReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanReviewCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    score: number
    comment?: string | null
    workoutPlanId: string
  }

  export type WorkoutPlanReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutPlanReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    User: UserCreateNestedOneWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    gymProfileId?: string | null
    workoutId?: string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    Workout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateManyInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    gymProfileId?: string | null
    workoutId?: string | null
  }

  export type LoggedWorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutSectionCreateInput = {
    id?: string
    createdAt?: Date | string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    User: UserCreateNestedOneWithoutLoggedWorkoutSectionsInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutLoggedWorkoutSectionInput
    LoggedWorkout: LoggedWorkoutCreateNestedOneWithoutLoggedWorkoutSectionsInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    loggedWorkoutId: string
    workoutSectionTypeId: string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutLoggedWorkoutSectionInput
    LoggedWorkout?: LoggedWorkoutUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    loggedWorkoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSectionCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    loggedWorkoutId: string
    workoutSectionTypeId: string
  }

  export type LoggedWorkoutSectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type LoggedWorkoutSectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    loggedWorkoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutSetCreateInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    User: UserCreateNestedOneWithoutLoggedWorkoutSetsInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutLoggedWorkoutSetInput
    LoggedWorkoutSection: LoggedWorkoutSectionCreateNestedOneWithoutLoggedWorkoutSetsInput
  }

  export type LoggedWorkoutSetUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    loggedWorkoutSectionId: string
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutSetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutSetsInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutLoggedWorkoutSetInput
    LoggedWorkoutSection?: LoggedWorkoutSectionUpdateOneRequiredWithoutLoggedWorkoutSetsInput
  }

  export type LoggedWorkoutSetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    loggedWorkoutSectionId?: StringFieldUpdateOperationsInput | string
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutSetCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    loggedWorkoutSectionId: string
  }

  export type LoggedWorkoutSetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
  }

  export type LoggedWorkoutSetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    loggedWorkoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutMoveCreateInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    User: UserCreateNestedOneWithoutLoggedWorkoutMovesInput
    Move: MoveCreateNestedOneWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet: LoggedWorkoutSetCreateNestedOneWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    equipmentId?: string | null
    loggedWorkoutSetId: string
  }

  export type LoggedWorkoutMoveUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    Move?: MoveUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet?: LoggedWorkoutSetUpdateOneRequiredWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutMoveCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    equipmentId?: string | null
    loggedWorkoutSetId: string
  }

  export type LoggedWorkoutMoveUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
  }

  export type LoggedWorkoutMoveUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutProgressJournalsInput
    ProgressJournalEntries?: ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    ProgressJournalEntries?: ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutProgressJournalsInput
    ProgressJournalEntries?: ProgressJournalEntryUpdateManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ProgressJournalEntries?: ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type ProgressJournalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalEntryCreateInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUris?: ProgressJournalEntryCreateprogressPhotoUrisInput | Enumerable<string>
    User: UserCreateNestedOneWithoutProgressJournalEntrysInput
    ProgressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalEntriesInput
  }

  export type ProgressJournalEntryUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressJournalId: string
    progressPhotoUris?: ProgressJournalEntryCreateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
    User?: UserUpdateOneRequiredWithoutProgressJournalEntrysInput
    ProgressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalEntriesInput
  }

  export type ProgressJournalEntryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressJournalId: string
    progressPhotoUris?: ProgressJournalEntryCreateManyprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalGoalCreateInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    User: UserCreateNestedOneWithoutProgressJournalGoalsInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutProgressJournalGoalsInput
    ProgressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalId: string
  }

  export type ProgressJournalGoalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutProgressJournalGoalsInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutProgressJournalGoalsInput
    ProgressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalCreateManyInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalId: string
  }

  export type ProgressJournalGoalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgressJournalGoalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagCreateInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    User: UserCreateNestedOneWithoutProgressJournalGoalTagsInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    userId: string
  }

  export type ProgressJournalGoalTagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutProgressJournalGoalTagsInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagCreateManyInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    userId: string
  }

  export type ProgressJournalGoalTagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverFeaturedCreateInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverFeaturedUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverFeaturedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverFeaturedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverFeaturedCreateManyInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverFeaturedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverFeaturedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutCategoryCreateInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutDiscoverWorkoutCategoryInput
  }

  export type DiscoverWorkoutCategoryUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutDiscoverWorkoutCategoryInput
  }

  export type DiscoverWorkoutCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutDiscoverWorkoutCategoryInput
  }

  export type DiscoverWorkoutCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutDiscoverWorkoutCategoryInput
  }

  export type DiscoverWorkoutCategoryCreateManyInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverWorkoutCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutCreateInput = {
    id?: string
    createdAt?: Date | string
    Workout: WorkoutCreateNestedOneWithoutDiscoverWorkoutsInput
    DiscoverWorkoutCategory: DiscoverWorkoutCategoryCreateNestedOneWithoutDiscoverWorkoutsInput
  }

  export type DiscoverWorkoutUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    workoutId: string
    discoverWorkoutCategoryId: string
  }

  export type DiscoverWorkoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Workout?: WorkoutUpdateOneRequiredWithoutDiscoverWorkoutsInput
    DiscoverWorkoutCategory?: DiscoverWorkoutCategoryUpdateOneRequiredWithoutDiscoverWorkoutsInput
  }

  export type DiscoverWorkoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: StringFieldUpdateOperationsInput | string
    discoverWorkoutCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutCreateManyInput = {
    id?: string
    createdAt?: Date | string
    workoutId: string
    discoverWorkoutCategoryId: string
  }

  export type DiscoverWorkoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscoverWorkoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: StringFieldUpdateOperationsInput | string
    discoverWorkoutCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanCategoryCreateInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutDiscoverWorkoutPlanCategoryInput
  }

  export type DiscoverWorkoutPlanCategoryUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutDiscoverWorkoutPlanCategoryInput
  }

  export type DiscoverWorkoutPlanCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutDiscoverWorkoutPlanCategoryInput
  }

  export type DiscoverWorkoutPlanCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutDiscoverWorkoutPlanCategoryInput
  }

  export type DiscoverWorkoutPlanCategoryCreateManyInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverWorkoutPlanCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanCreateInput = {
    id?: string
    createdAt?: Date | string
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutDiscoverWorkoutPlansInput
    DiscoverWorkoutPlanCategory: DiscoverWorkoutPlanCategoryCreateNestedOneWithoutDiscoverWorkoutPlansInput
  }

  export type DiscoverWorkoutPlanUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    workoutPlanId: string
    discoverWorkoutPlanCategoryId: string
  }

  export type DiscoverWorkoutPlanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutDiscoverWorkoutPlansInput
    DiscoverWorkoutPlanCategory?: DiscoverWorkoutPlanCategoryUpdateOneRequiredWithoutDiscoverWorkoutPlansInput
  }

  export type DiscoverWorkoutPlanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    discoverWorkoutPlanCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanCreateManyInput = {
    id?: string
    createdAt?: Date | string
    workoutPlanId: string
    discoverWorkoutPlanCategoryId: string
  }

  export type DiscoverWorkoutPlanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscoverWorkoutPlanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    discoverWorkoutPlanCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedStringFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedStringFilter
    _max?: NestedStringFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedStringFilter
  }

  export type DateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedDateTimeFilter
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type BodyAreaMoveScoreListRelationFilter = {
    every?: BodyAreaMoveScoreWhereInput
    some?: BodyAreaMoveScoreWhereInput
    none?: BodyAreaMoveScoreWhereInput
  }

  export type EnumBodyAreaFrontBackFilter = {
    equals?: BodyAreaFrontBack
    in?: Enumerable<BodyAreaFrontBack>
    notIn?: Enumerable<BodyAreaFrontBack>
    not?: NestedEnumBodyAreaFrontBackFilter | BodyAreaFrontBack
  }

  export type EnumBodyAreaUpperLowerFilter = {
    equals?: BodyAreaUpperLower
    in?: Enumerable<BodyAreaUpperLower>
    notIn?: Enumerable<BodyAreaUpperLower>
    not?: NestedEnumBodyAreaUpperLowerFilter | BodyAreaUpperLower
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedStringNullableFilter
  }

  export type EnumBodyAreaFrontBackWithAggregatesFilter = {
    equals?: BodyAreaFrontBack
    in?: Enumerable<BodyAreaFrontBack>
    notIn?: Enumerable<BodyAreaFrontBack>
    not?: NestedEnumBodyAreaFrontBackWithAggregatesFilter | BodyAreaFrontBack
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBodyAreaFrontBackFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBodyAreaFrontBackFilter
    _max?: NestedEnumBodyAreaFrontBackFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBodyAreaFrontBackFilter
  }

  export type EnumBodyAreaUpperLowerWithAggregatesFilter = {
    equals?: BodyAreaUpperLower
    in?: Enumerable<BodyAreaUpperLower>
    notIn?: Enumerable<BodyAreaUpperLower>
    not?: NestedEnumBodyAreaUpperLowerWithAggregatesFilter | BodyAreaUpperLower
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBodyAreaUpperLowerFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBodyAreaUpperLowerFilter
    _max?: NestedEnumBodyAreaUpperLowerFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBodyAreaUpperLowerFilter
  }

  export type MoveRelationFilter = {
    is?: MoveWhereInput
    isNot?: MoveWhereInput
  }

  export type BodyAreaRelationFilter = {
    is?: BodyAreaWhereInput
    isNot?: BodyAreaWhereInput
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type BodyAreaMoveScoreMoveIdBodyAreaIdCompoundUniqueInput = {
    moveId: string
    bodyAreaId: string
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _avg?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedIntFilter
    _min?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedIntFilter
    _max?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedIntFilter
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type MoveListRelationFilter = {
    every?: MoveWhereInput
    some?: MoveWhereInput
    none?: MoveWhereInput
  }

  export type GymProfileListRelationFilter = {
    every?: GymProfileWhereInput
    some?: GymProfileWhereInput
    none?: GymProfileWhereInput
  }

  export type WorkoutMoveListRelationFilter = {
    every?: WorkoutMoveWhereInput
    some?: WorkoutMoveWhereInput
    none?: WorkoutMoveWhereInput
  }

  export type LoggedWorkoutMoveListRelationFilter = {
    every?: LoggedWorkoutMoveWhereInput
    some?: LoggedWorkoutMoveWhereInput
    none?: LoggedWorkoutMoveWhereInput
  }

  export type UserBenchmarkListRelationFilter = {
    every?: UserBenchmarkWhereInput
    some?: UserBenchmarkWhereInput
    none?: UserBenchmarkWhereInput
  }

  export type BoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedBoolFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedBoolFilter
    _max?: NestedBoolFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedBoolFilter
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type EnumMoveScopeFilter = {
    equals?: MoveScope
    in?: Enumerable<MoveScope>
    notIn?: Enumerable<MoveScope>
    not?: NestedEnumMoveScopeFilter | MoveScope
  }

  export type EnumWorkoutMoveRepTypeNullableListFilter = {
    equals?: Enumerable<WorkoutMoveRepType> | null
    has?: WorkoutMoveRepType | null
    hasEvery?: Enumerable<WorkoutMoveRepType>
    hasSome?: Enumerable<WorkoutMoveRepType>
    isEmpty?: boolean
  }

  export type MoveTypeRelationFilter = {
    is?: MoveTypeWhereInput | null
    isNot?: MoveTypeWhereInput | null
  }

  export type EquipmentListRelationFilter = {
    every?: EquipmentWhereInput
    some?: EquipmentWhereInput
    none?: EquipmentWhereInput
  }

  export type EnumMoveScopeWithAggregatesFilter = {
    equals?: MoveScope
    in?: Enumerable<MoveScope>
    notIn?: Enumerable<MoveScope>
    not?: NestedEnumMoveScopeWithAggregatesFilter | MoveScope
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumMoveScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumMoveScopeFilter
    _max?: NestedEnumMoveScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumMoveScopeFilter
  }

  export type WorkoutListRelationFilter = {
    every?: WorkoutWhereInput
    some?: WorkoutWhereInput
    none?: WorkoutWhereInput
  }

  export type WorkoutSectionListRelationFilter = {
    every?: WorkoutSectionWhereInput
    some?: WorkoutSectionWhereInput
    none?: WorkoutSectionWhereInput
  }

  export type LoggedWorkoutSectionListRelationFilter = {
    every?: LoggedWorkoutSectionWhereInput
    some?: LoggedWorkoutSectionWhereInput
    none?: LoggedWorkoutSectionWhereInput
  }

  export type WorkoutPlanListRelationFilter = {
    every?: WorkoutPlanWhereInput
    some?: WorkoutPlanWhereInput
    none?: WorkoutPlanWhereInput
  }

  export type ScheduledWorkoutListRelationFilter = {
    every?: ScheduledWorkoutWhereInput
    some?: ScheduledWorkoutWhereInput
    none?: ScheduledWorkoutWhereInput
  }

  export type LoggedWorkoutListRelationFilter = {
    every?: LoggedWorkoutWhereInput
    some?: LoggedWorkoutWhereInput
    none?: LoggedWorkoutWhereInput
  }

  export type GymProfileRelationFilter = {
    is?: GymProfileWhereInput | null
    isNot?: GymProfileWhereInput | null
  }

  export type LoggedWorkoutRelationFilter = {
    is?: LoggedWorkoutWhereInput | null
    isNot?: LoggedWorkoutWhereInput | null
  }

  export type WorkoutRelationFilter = {
    is?: WorkoutWhereInput
    isNot?: WorkoutWhereInput
  }

  export type WorkoutPlanEnrolmentRelationFilter = {
    is?: WorkoutPlanEnrolmentWhereInput | null
    isNot?: WorkoutPlanEnrolmentWhereInput | null
  }

  export type WorkoutPlanDayWorkoutRelationFilter = {
    is?: WorkoutPlanDayWorkoutWhereInput | null
    isNot?: WorkoutPlanDayWorkoutWhereInput | null
  }

  export type EnumUserProfileScopeFilter = {
    equals?: UserProfileScope
    in?: Enumerable<UserProfileScope>
    notIn?: Enumerable<UserProfileScope>
    not?: NestedEnumUserProfileScopeFilter | UserProfileScope
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type EnumGenderNullableFilter = {
    equals?: Gender | null
    in?: Enumerable<Gender> | null
    notIn?: Enumerable<Gender> | null
    not?: NestedEnumGenderNullableFilter | Gender | null
  }

  export type ProgressJournalListRelationFilter = {
    every?: ProgressJournalWhereInput
    some?: ProgressJournalWhereInput
    none?: ProgressJournalWhereInput
  }

  export type ProgressJournalGoalTagListRelationFilter = {
    every?: ProgressJournalGoalTagWhereInput
    some?: ProgressJournalGoalTagWhereInput
    none?: ProgressJournalGoalTagWhereInput
  }

  export type LoggedWorkoutSetListRelationFilter = {
    every?: LoggedWorkoutSetWhereInput
    some?: LoggedWorkoutSetWhereInput
    none?: LoggedWorkoutSetWhereInput
  }

  export type ProgressJournalGoalListRelationFilter = {
    every?: ProgressJournalGoalWhereInput
    some?: ProgressJournalGoalWhereInput
    none?: ProgressJournalGoalWhereInput
  }

  export type ProgressJournalEntryListRelationFilter = {
    every?: ProgressJournalEntryWhereInput
    some?: ProgressJournalEntryWhereInput
    none?: ProgressJournalEntryWhereInput
  }

  export type WorkoutSetListRelationFilter = {
    every?: WorkoutSetWhereInput
    some?: WorkoutSetWhereInput
    none?: WorkoutSetWhereInput
  }

  export type WorkoutSetGeneratorListRelationFilter = {
    every?: WorkoutSetGeneratorWhereInput
    some?: WorkoutSetGeneratorWhereInput
    none?: WorkoutSetGeneratorWhereInput
  }

  export type WorkoutSetIntervalBuyInListRelationFilter = {
    every?: WorkoutSetIntervalBuyInWhereInput
    some?: WorkoutSetIntervalBuyInWhereInput
    none?: WorkoutSetIntervalBuyInWhereInput
  }

  export type WorkoutTagListRelationFilter = {
    every?: WorkoutTagWhereInput
    some?: WorkoutTagWhereInput
    none?: WorkoutTagWhereInput
  }

  export type UserBenchmarkGroupListRelationFilter = {
    every?: UserBenchmarkGroupWhereInput
    some?: UserBenchmarkGroupWhereInput
    none?: UserBenchmarkGroupWhereInput
  }

  export type UserBenchmarkEntryListRelationFilter = {
    every?: UserBenchmarkEntryWhereInput
    some?: UserBenchmarkEntryWhereInput
    none?: UserBenchmarkEntryWhereInput
  }

  export type WorkoutPlanDayListRelationFilter = {
    every?: WorkoutPlanDayWhereInput
    some?: WorkoutPlanDayWhereInput
    none?: WorkoutPlanDayWhereInput
  }

  export type WorkoutPlanDayWorkoutListRelationFilter = {
    every?: WorkoutPlanDayWorkoutWhereInput
    some?: WorkoutPlanDayWorkoutWhereInput
    none?: WorkoutPlanDayWorkoutWhereInput
  }

  export type WorkoutPlanEnrolmentListRelationFilter = {
    every?: WorkoutPlanEnrolmentWhereInput
    some?: WorkoutPlanEnrolmentWhereInput
    none?: WorkoutPlanEnrolmentWhereInput
  }

  export type WorkoutPlanReviewListRelationFilter = {
    every?: WorkoutPlanReviewWhereInput
    some?: WorkoutPlanReviewWhereInput
    none?: WorkoutPlanReviewWhereInput
  }

  export type CollectionListRelationFilter = {
    every?: CollectionWhereInput
    some?: CollectionWhereInput
    none?: CollectionWhereInput
  }

  export type EnumUserProfileScopeWithAggregatesFilter = {
    equals?: UserProfileScope
    in?: Enumerable<UserProfileScope>
    notIn?: Enumerable<UserProfileScope>
    not?: NestedEnumUserProfileScopeWithAggregatesFilter | UserProfileScope
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumUserProfileScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumUserProfileScopeFilter
    _max?: NestedEnumUserProfileScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumUserProfileScopeFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedDateTimeNullableFilter
  }

  export type EnumGenderNullableWithAggregatesFilter = {
    equals?: Gender | null
    in?: Enumerable<Gender> | null
    notIn?: Enumerable<Gender> | null
    not?: NestedEnumGenderNullableWithAggregatesFilter | Gender | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _min?: NestedEnumGenderNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumGenderNullableFilter
    _max?: NestedEnumGenderNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumGenderNullableFilter
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type EnumWorkoutMoveRepTypeFilter = {
    equals?: WorkoutMoveRepType
    in?: Enumerable<WorkoutMoveRepType>
    notIn?: Enumerable<WorkoutMoveRepType>
    not?: NestedEnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
  }

  export type EnumLoadUnitFilter = {
    equals?: LoadUnit
    in?: Enumerable<LoadUnit>
    notIn?: Enumerable<LoadUnit>
    not?: NestedEnumLoadUnitFilter | LoadUnit
  }

  export type EnumDistanceUnitFilter = {
    equals?: DistanceUnit
    in?: Enumerable<DistanceUnit>
    notIn?: Enumerable<DistanceUnit>
    not?: NestedEnumDistanceUnitFilter | DistanceUnit
  }

  export type EnumTimeUnitFilter = {
    equals?: TimeUnit
    in?: Enumerable<TimeUnit>
    notIn?: Enumerable<TimeUnit>
    not?: NestedEnumTimeUnitFilter | TimeUnit
  }

  export type EquipmentRelationFilter = {
    is?: EquipmentWhereInput | null
    isNot?: EquipmentWhereInput | null
  }

  export type EnumBenchmarkTypeFilter = {
    equals?: BenchmarkType
    in?: Enumerable<BenchmarkType>
    notIn?: Enumerable<BenchmarkType>
    not?: NestedEnumBenchmarkTypeFilter | BenchmarkType
  }

  export type FloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedFloatNullableFilter
  }

  export type EnumWorkoutMoveRepTypeWithAggregatesFilter = {
    equals?: WorkoutMoveRepType
    in?: Enumerable<WorkoutMoveRepType>
    notIn?: Enumerable<WorkoutMoveRepType>
    not?: NestedEnumWorkoutMoveRepTypeWithAggregatesFilter | WorkoutMoveRepType
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumWorkoutMoveRepTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumWorkoutMoveRepTypeFilter
    _max?: NestedEnumWorkoutMoveRepTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumWorkoutMoveRepTypeFilter
  }

  export type EnumLoadUnitWithAggregatesFilter = {
    equals?: LoadUnit
    in?: Enumerable<LoadUnit>
    notIn?: Enumerable<LoadUnit>
    not?: NestedEnumLoadUnitWithAggregatesFilter | LoadUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumLoadUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumLoadUnitFilter
    _max?: NestedEnumLoadUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumLoadUnitFilter
  }

  export type EnumDistanceUnitWithAggregatesFilter = {
    equals?: DistanceUnit
    in?: Enumerable<DistanceUnit>
    notIn?: Enumerable<DistanceUnit>
    not?: NestedEnumDistanceUnitWithAggregatesFilter | DistanceUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumDistanceUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumDistanceUnitFilter
    _max?: NestedEnumDistanceUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumDistanceUnitFilter
  }

  export type EnumTimeUnitWithAggregatesFilter = {
    equals?: TimeUnit
    in?: Enumerable<TimeUnit>
    notIn?: Enumerable<TimeUnit>
    not?: NestedEnumTimeUnitWithAggregatesFilter | TimeUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumTimeUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumTimeUnitFilter
    _max?: NestedEnumTimeUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumTimeUnitFilter
  }

  export type EnumBenchmarkTypeWithAggregatesFilter = {
    equals?: BenchmarkType
    in?: Enumerable<BenchmarkType>
    notIn?: Enumerable<BenchmarkType>
    not?: NestedEnumBenchmarkTypeWithAggregatesFilter | BenchmarkType
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBenchmarkTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBenchmarkTypeFilter
    _max?: NestedEnumBenchmarkTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBenchmarkTypeFilter
  }

  export type FloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type UserBenchmarkRelationFilter = {
    is?: UserBenchmarkWhereInput
    isNot?: UserBenchmarkWhereInput
  }

  export type FloatWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatWithAggregatesFilter | number
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _avg?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatFilter
    _sum?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedFloatFilter
    _min?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedFloatFilter
    _max?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedFloatFilter
  }
  export type JsonNullableFilter = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase>, Exclude<keyof Required<JsonNullableFilterBase>, 'path'>>,
        Required<JsonNullableFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase>, 'path'>>

  export type JsonNullableFilterBase = {
    equals?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue
    array_starts_with?: InputJsonValue
    array_ends_with?: InputJsonValue
    not?: InputJsonValue | null
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type EnumDifficultyLevelFilter = {
    equals?: DifficultyLevel
    in?: Enumerable<DifficultyLevel>
    notIn?: Enumerable<DifficultyLevel>
    not?: NestedEnumDifficultyLevelFilter | DifficultyLevel
  }

  export type EnumContentAccessScopeFilter = {
    equals?: ContentAccessScope
    in?: Enumerable<ContentAccessScope>
    notIn?: Enumerable<ContentAccessScope>
    not?: NestedEnumContentAccessScopeFilter | ContentAccessScope
  }

  export type WorkoutGoalListRelationFilter = {
    every?: WorkoutGoalWhereInput
    some?: WorkoutGoalWhereInput
    none?: WorkoutGoalWhereInput
  }

  export type DiscoverWorkoutListRelationFilter = {
    every?: DiscoverWorkoutWhereInput
    some?: DiscoverWorkoutWhereInput
    none?: DiscoverWorkoutWhereInput
  }
  export type JsonNullableWithAggregatesFilter = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase = {
    equals?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue
    array_starts_with?: InputJsonValue
    array_ends_with?: InputJsonValue
    not?: InputJsonValue | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _min?: NestedJsonNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedJsonNullableFilter
    _max?: NestedJsonNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedJsonNullableFilter
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedIntNullableFilter
  }

  export type EnumDifficultyLevelWithAggregatesFilter = {
    equals?: DifficultyLevel
    in?: Enumerable<DifficultyLevel>
    notIn?: Enumerable<DifficultyLevel>
    not?: NestedEnumDifficultyLevelWithAggregatesFilter | DifficultyLevel
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumDifficultyLevelFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumDifficultyLevelFilter
    _max?: NestedEnumDifficultyLevelFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumDifficultyLevelFilter
  }

  export type EnumContentAccessScopeWithAggregatesFilter = {
    equals?: ContentAccessScope
    in?: Enumerable<ContentAccessScope>
    notIn?: Enumerable<ContentAccessScope>
    not?: NestedEnumContentAccessScopeWithAggregatesFilter | ContentAccessScope
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumContentAccessScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumContentAccessScopeFilter
    _max?: NestedEnumContentAccessScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumContentAccessScopeFilter
  }

  export type WorkoutSectionTypeRelationFilter = {
    is?: WorkoutSectionTypeWhereInput
    isNot?: WorkoutSectionTypeWhereInput
  }

  export type WorkoutSetIntervalBuyInRelationFilter = {
    is?: WorkoutSetIntervalBuyInWhereInput | null
    isNot?: WorkoutSetIntervalBuyInWhereInput | null
  }

  export type WorkoutSectionRelationFilter = {
    is?: WorkoutSectionWhereInput
    isNot?: WorkoutSectionWhereInput
  }

  export type WorkoutMoveRelationFilter = {
    is?: WorkoutMoveWhereInput
    isNot?: WorkoutMoveWhereInput
  }

  export type WorkoutSetRelationFilter = {
    is?: WorkoutSetWhereInput | null
    isNot?: WorkoutSetWhereInput | null
  }

  export type EnumWorkoutSetGeneratorTypeFilter = {
    equals?: WorkoutSetGeneratorType
    in?: Enumerable<WorkoutSetGeneratorType>
    notIn?: Enumerable<WorkoutSetGeneratorType>
    not?: NestedEnumWorkoutSetGeneratorTypeFilter | WorkoutSetGeneratorType
  }

  export type EnumWorkoutSetGeneratorTargetFilter = {
    equals?: WorkoutSetGeneratorTarget
    in?: Enumerable<WorkoutSetGeneratorTarget>
    notIn?: Enumerable<WorkoutSetGeneratorTarget>
    not?: NestedEnumWorkoutSetGeneratorTargetFilter | WorkoutSetGeneratorTarget
  }

  export type EnumWorkoutSetGeneratorTypeWithAggregatesFilter = {
    equals?: WorkoutSetGeneratorType
    in?: Enumerable<WorkoutSetGeneratorType>
    notIn?: Enumerable<WorkoutSetGeneratorType>
    not?: NestedEnumWorkoutSetGeneratorTypeWithAggregatesFilter | WorkoutSetGeneratorType
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumWorkoutSetGeneratorTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumWorkoutSetGeneratorTypeFilter
    _max?: NestedEnumWorkoutSetGeneratorTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumWorkoutSetGeneratorTypeFilter
  }

  export type EnumWorkoutSetGeneratorTargetWithAggregatesFilter = {
    equals?: WorkoutSetGeneratorTarget
    in?: Enumerable<WorkoutSetGeneratorTarget>
    notIn?: Enumerable<WorkoutSetGeneratorTarget>
    not?: NestedEnumWorkoutSetGeneratorTargetWithAggregatesFilter | WorkoutSetGeneratorTarget
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumWorkoutSetGeneratorTargetFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumWorkoutSetGeneratorTargetFilter
    _max?: NestedEnumWorkoutSetGeneratorTargetFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumWorkoutSetGeneratorTargetFilter
  }

  export type DiscoverWorkoutPlanListRelationFilter = {
    every?: DiscoverWorkoutPlanWhereInput
    some?: DiscoverWorkoutPlanWhereInput
    none?: DiscoverWorkoutPlanWhereInput
  }

  export type WorkoutPlanRelationFilter = {
    is?: WorkoutPlanWhereInput
    isNot?: WorkoutPlanWhereInput
  }

  export type WorkoutPlanDayRelationFilter = {
    is?: WorkoutPlanDayWhereInput
    isNot?: WorkoutPlanDayWhereInput
  }

  export type StringNullableListFilter = {
    equals?: Enumerable<string> | null
    has?: string | null
    hasEvery?: Enumerable<string>
    hasSome?: Enumerable<string>
    isEmpty?: boolean
  }

  export type ScheduledWorkoutRelationFilter = {
    is?: ScheduledWorkoutWhereInput | null
    isNot?: ScheduledWorkoutWhereInput | null
  }
  export type JsonFilter = 
    | PatchUndefined<
        Either<Required<JsonFilterBase>, Exclude<keyof Required<JsonFilterBase>, 'path'>>,
        Required<JsonFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase>, 'path'>>

  export type JsonFilterBase = {
    equals?: InputJsonValue
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue
    array_starts_with?: InputJsonValue
    array_ends_with?: InputJsonValue
    not?: InputJsonValue
  }
  export type JsonWithAggregatesFilter = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase>, Exclude<keyof Required<JsonWithAggregatesFilterBase>, 'path'>>,
        Required<JsonWithAggregatesFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase>, 'path'>>

  export type JsonWithAggregatesFilterBase = {
    equals?: InputJsonValue
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue
    array_starts_with?: InputJsonValue
    array_ends_with?: InputJsonValue
    not?: InputJsonValue
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedJsonFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedJsonFilter
    _max?: NestedJsonFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedJsonFilter
  }

  export type LoggedWorkoutSectionRelationFilter = {
    is?: LoggedWorkoutSectionWhereInput
    isNot?: LoggedWorkoutSectionWhereInput
  }

  export type LoggedWorkoutSetRelationFilter = {
    is?: LoggedWorkoutSetWhereInput
    isNot?: LoggedWorkoutSetWhereInput
  }

  export type EnumBodyweightUnitFilter = {
    equals?: BodyweightUnit
    in?: Enumerable<BodyweightUnit>
    notIn?: Enumerable<BodyweightUnit>
    not?: NestedEnumBodyweightUnitFilter | BodyweightUnit
  }

  export type ProgressJournalRelationFilter = {
    is?: ProgressJournalWhereInput
    isNot?: ProgressJournalWhereInput
  }

  export type EnumBodyweightUnitWithAggregatesFilter = {
    equals?: BodyweightUnit
    in?: Enumerable<BodyweightUnit>
    notIn?: Enumerable<BodyweightUnit>
    not?: NestedEnumBodyweightUnitWithAggregatesFilter | BodyweightUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBodyweightUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBodyweightUnitFilter
    _max?: NestedEnumBodyweightUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBodyweightUnitFilter
  }

  export type DiscoverWorkoutCategoryRelationFilter = {
    is?: DiscoverWorkoutCategoryWhereInput
    isNot?: DiscoverWorkoutCategoryWhereInput
  }

  export type DiscoverWorkoutPlanCategoryRelationFilter = {
    is?: DiscoverWorkoutPlanCategoryWhereInput
    isNot?: DiscoverWorkoutPlanCategoryWhereInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BodyAreaMoveScoreCreateNestedManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    createMany?: BodyAreaMoveScoreCreateManyBodyAreaInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type BodyAreaMoveScoreUncheckedCreateNestedManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    createMany?: BodyAreaMoveScoreCreateManyBodyAreaInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumBodyAreaFrontBackFieldUpdateOperationsInput = {
    set?: BodyAreaFrontBack
  }

  export type EnumBodyAreaUpperLowerFieldUpdateOperationsInput = {
    set?: BodyAreaUpperLower
  }

  export type BodyAreaMoveScoreUpdateManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutBodyAreaInput>
    createMany?: BodyAreaMoveScoreCreateManyBodyAreaInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutBodyAreaInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutBodyAreaInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutBodyAreaInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutBodyAreaInput>
    createMany?: BodyAreaMoveScoreCreateManyBodyAreaInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutBodyAreaInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutBodyAreaInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type MoveCreateNestedOneWithoutBodyAreaMoveScoresInput = {
    create?: XOR<MoveCreateWithoutBodyAreaMoveScoresInput, MoveUncheckedCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: MoveCreateOrConnectWithoutBodyAreaMoveScoresInput
    connect?: MoveWhereUniqueInput
  }

  export type BodyAreaCreateNestedOneWithoutBodyAreaMoveScoresInput = {
    create?: XOR<BodyAreaCreateWithoutBodyAreaMoveScoresInput, BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: BodyAreaCreateOrConnectWithoutBodyAreaMoveScoresInput
    connect?: BodyAreaWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type MoveUpdateOneRequiredWithoutBodyAreaMoveScoresInput = {
    create?: XOR<MoveCreateWithoutBodyAreaMoveScoresInput, MoveUncheckedCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: MoveCreateOrConnectWithoutBodyAreaMoveScoresInput
    upsert?: MoveUpsertWithoutBodyAreaMoveScoresInput
    connect?: MoveWhereUniqueInput
    update?: XOR<MoveUpdateWithoutBodyAreaMoveScoresInput, MoveUncheckedUpdateWithoutBodyAreaMoveScoresInput>
  }

  export type BodyAreaUpdateOneRequiredWithoutBodyAreaMoveScoresInput = {
    create?: XOR<BodyAreaCreateWithoutBodyAreaMoveScoresInput, BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput>
    connectOrCreate?: BodyAreaCreateOrConnectWithoutBodyAreaMoveScoresInput
    upsert?: BodyAreaUpsertWithoutBodyAreaMoveScoresInput
    connect?: BodyAreaWhereUniqueInput
    update?: XOR<BodyAreaUpdateWithoutBodyAreaMoveScoresInput, BodyAreaUncheckedUpdateWithoutBodyAreaMoveScoresInput>
  }

  export type MoveCreateNestedManyWithoutRequiredEquipmentsInput = {
    create?: XOR<Enumerable<MoveCreateWithoutRequiredEquipmentsInput>, Enumerable<MoveUncheckedCreateWithoutRequiredEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutRequiredEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type MoveCreateNestedManyWithoutSelectableEquipmentsInput = {
    create?: XOR<Enumerable<MoveCreateWithoutSelectableEquipmentsInput>, Enumerable<MoveUncheckedCreateWithoutSelectableEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutSelectableEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type GymProfileCreateNestedManyWithoutEquipmentsInput = {
    create?: XOR<Enumerable<GymProfileCreateWithoutEquipmentsInput>, Enumerable<GymProfileUncheckedCreateWithoutEquipmentsInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutEquipmentsInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
  }

  export type WorkoutMoveCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutEquipmentInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutEquipmentInput>
    createMany?: WorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type LoggedWorkoutMoveCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutEquipmentInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutEquipmentInput>
    createMany?: LoggedWorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type UserBenchmarkCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutEquipmentInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutEquipmentInput>
    createMany?: UserBenchmarkCreateManyEquipmentInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type WorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutEquipmentInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutEquipmentInput>
    createMany?: WorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type LoggedWorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutEquipmentInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutEquipmentInput>
    createMany?: LoggedWorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type UserBenchmarkUncheckedCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutEquipmentInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutEquipmentInput>
    createMany?: UserBenchmarkCreateManyEquipmentInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type MoveUpdateManyWithoutRequiredEquipmentsInput = {
    create?: XOR<Enumerable<MoveCreateWithoutRequiredEquipmentsInput>, Enumerable<MoveUncheckedCreateWithoutRequiredEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutRequiredEquipmentsInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutRequiredEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutRequiredEquipmentsInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutRequiredEquipmentsInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type MoveUpdateManyWithoutSelectableEquipmentsInput = {
    create?: XOR<Enumerable<MoveCreateWithoutSelectableEquipmentsInput>, Enumerable<MoveUncheckedCreateWithoutSelectableEquipmentsInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutSelectableEquipmentsInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutSelectableEquipmentsInput>
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutSelectableEquipmentsInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutSelectableEquipmentsInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type GymProfileUpdateManyWithoutEquipmentsInput = {
    create?: XOR<Enumerable<GymProfileCreateWithoutEquipmentsInput>, Enumerable<GymProfileUncheckedCreateWithoutEquipmentsInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutEquipmentsInput>
    upsert?: Enumerable<GymProfileUpsertWithWhereUniqueWithoutEquipmentsInput>
    connect?: Enumerable<GymProfileWhereUniqueInput>
    set?: Enumerable<GymProfileWhereUniqueInput>
    disconnect?: Enumerable<GymProfileWhereUniqueInput>
    delete?: Enumerable<GymProfileWhereUniqueInput>
    update?: Enumerable<GymProfileUpdateWithWhereUniqueWithoutEquipmentsInput>
    updateMany?: Enumerable<GymProfileUpdateManyWithWhereWithoutEquipmentsInput>
    deleteMany?: Enumerable<GymProfileScalarWhereInput>
  }

  export type WorkoutMoveUpdateManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutEquipmentInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: WorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutEquipmentInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: LoggedWorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type UserBenchmarkUpdateManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutEquipmentInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: UserBenchmarkCreateManyEquipmentInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutEquipmentInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: WorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type LoggedWorkoutMoveUncheckedUpdateManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutEquipmentInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: LoggedWorkoutMoveCreateManyEquipmentInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type UserBenchmarkUncheckedUpdateManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutEquipmentInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: UserBenchmarkCreateManyEquipmentInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type MoveCreatevalidRepTypesInput = {
    set: Enumerable<WorkoutMoveRepType>
  }

  export type UserCreateNestedOneWithoutCustomMovesInput = {
    create?: XOR<UserCreateWithoutCustomMovesInput, UserUncheckedCreateWithoutCustomMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomMovesInput
    connect?: UserWhereUniqueInput
  }

  export type MoveTypeCreateNestedOneWithoutMovesInput = {
    create?: XOR<MoveTypeCreateWithoutMovesInput, MoveTypeUncheckedCreateWithoutMovesInput>
    connectOrCreate?: MoveTypeCreateOrConnectWithoutMovesInput
    connect?: MoveTypeWhereUniqueInput
  }

  export type EquipmentCreateNestedManyWithoutRequiredForMovesInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutRequiredForMovesInput>, Enumerable<EquipmentUncheckedCreateWithoutRequiredForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutRequiredForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentCreateNestedManyWithoutSelectableForMovesInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutSelectableForMovesInput>, Enumerable<EquipmentUncheckedCreateWithoutSelectableForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutSelectableForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type WorkoutMoveCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutMoveInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    createMany?: WorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type BodyAreaMoveScoreCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    createMany?: BodyAreaMoveScoreCreateManyMoveInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type LoggedWorkoutMoveCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutMoveInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutMoveInput>
    createMany?: LoggedWorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type UserBenchmarkCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutMoveInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    createMany?: UserBenchmarkCreateManyMoveInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutMoveInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    createMany?: WorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    createMany?: BodyAreaMoveScoreCreateManyMoveInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
  }

  export type LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutMoveInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutMoveInput>
    createMany?: LoggedWorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutMoveInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    createMany?: UserBenchmarkCreateManyMoveInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type EnumMoveScopeFieldUpdateOperationsInput = {
    set?: MoveScope
  }

  export type MoveUpdatevalidRepTypesInput = {
    set?: Enumerable<WorkoutMoveRepType>
    push?: Enumerable<WorkoutMoveRepType>
  }

  export type UserUpdateOneWithoutCustomMovesInput = {
    create?: XOR<UserCreateWithoutCustomMovesInput, UserUncheckedCreateWithoutCustomMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomMovesInput
    upsert?: UserUpsertWithoutCustomMovesInput
    connect?: UserWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<UserUpdateWithoutCustomMovesInput, UserUncheckedUpdateWithoutCustomMovesInput>
  }

  export type MoveTypeUpdateOneWithoutMovesInput = {
    create?: XOR<MoveTypeCreateWithoutMovesInput, MoveTypeUncheckedCreateWithoutMovesInput>
    connectOrCreate?: MoveTypeCreateOrConnectWithoutMovesInput
    upsert?: MoveTypeUpsertWithoutMovesInput
    connect?: MoveTypeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<MoveTypeUpdateWithoutMovesInput, MoveTypeUncheckedUpdateWithoutMovesInput>
  }

  export type EquipmentUpdateManyWithoutRequiredForMovesInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutRequiredForMovesInput>, Enumerable<EquipmentUncheckedCreateWithoutRequiredForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutRequiredForMovesInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutRequiredForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutRequiredForMovesInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutRequiredForMovesInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentUpdateManyWithoutSelectableForMovesInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutSelectableForMovesInput>, Enumerable<EquipmentUncheckedCreateWithoutSelectableForMovesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutSelectableForMovesInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutSelectableForMovesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutSelectableForMovesInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutSelectableForMovesInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type WorkoutMoveUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutMoveInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: WorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type BodyAreaMoveScoreUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: BodyAreaMoveScoreCreateManyMoveInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutMoveInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: LoggedWorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type UserBenchmarkUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutMoveInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: UserBenchmarkCreateManyMoveInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutMoveInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: WorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<BodyAreaMoveScoreCreateWithoutMoveInput>, Enumerable<BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<BodyAreaMoveScoreCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<BodyAreaMoveScoreUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: BodyAreaMoveScoreCreateManyMoveInputEnvelope
    connect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    set?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    disconnect?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    delete?: Enumerable<BodyAreaMoveScoreWhereUniqueInput>
    update?: Enumerable<BodyAreaMoveScoreUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<BodyAreaMoveScoreUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
  }

  export type LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutMoveInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: LoggedWorkoutMoveCreateManyMoveInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type UserBenchmarkUncheckedUpdateManyWithoutMoveInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutMoveInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutMoveInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutMoveInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutMoveInput>
    createMany?: UserBenchmarkCreateManyMoveInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutMoveInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutMoveInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type MoveCreateManyvalidRepTypesInput = {
    set: Enumerable<WorkoutMoveRepType>
  }

  export type MoveCreateNestedManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveCreateWithoutMoveTypeInput>, Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    createMany?: MoveCreateManyMoveTypeInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type MoveUncheckedCreateNestedManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveCreateWithoutMoveTypeInput>, Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    createMany?: MoveCreateManyMoveTypeInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type MoveUpdateManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveCreateWithoutMoveTypeInput>, Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutMoveTypeInput>
    createMany?: MoveCreateManyMoveTypeInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutMoveTypeInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutMoveTypeInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type MoveUncheckedUpdateManyWithoutMoveTypeInput = {
    create?: XOR<Enumerable<MoveCreateWithoutMoveTypeInput>, Enumerable<MoveUncheckedCreateWithoutMoveTypeInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutMoveTypeInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutMoveTypeInput>
    createMany?: MoveCreateManyMoveTypeInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutMoveTypeInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutMoveTypeInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type WorkoutCreateNestedManyWithoutWorkoutGoalsInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutWorkoutGoalsInput>, Enumerable<WorkoutUncheckedCreateWithoutWorkoutGoalsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutGoalsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type WorkoutUpdateManyWithoutWorkoutGoalsInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutWorkoutGoalsInput>, Enumerable<WorkoutUncheckedCreateWithoutWorkoutGoalsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutGoalsInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutWorkoutGoalsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutWorkoutGoalsInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutWorkoutGoalsInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type WorkoutSectionTypeCreatevalidRepTypesInput = {
    set: Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutSectionCreateNestedManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    createMany?: WorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type LoggedWorkoutSectionCreateNestedManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    createMany?: LoggedWorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
  }

  export type WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    createMany?: WorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type LoggedWorkoutSectionUncheckedCreateNestedManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    createMany?: LoggedWorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
  }

  export type WorkoutSectionTypeUpdatevalidRepTypesInput = {
    set?: Enumerable<WorkoutMoveRepType>
    push?: Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutSectionUpdateManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutSectionTypeInput>
    createMany?: WorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutSectionTypeInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutWorkoutSectionTypeInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type LoggedWorkoutSectionUpdateManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    upsert?: Enumerable<LoggedWorkoutSectionUpsertWithWhereUniqueWithoutWorkoutSectionTypeInput>
    createMany?: LoggedWorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSectionUpdateWithWhereUniqueWithoutWorkoutSectionTypeInput>
    updateMany?: Enumerable<LoggedWorkoutSectionUpdateManyWithWhereWithoutWorkoutSectionTypeInput>
    deleteMany?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
  }

  export type WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutSectionTypeInput>
    createMany?: WorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutSectionTypeInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutWorkoutSectionTypeInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type LoggedWorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionTypeInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutWorkoutSectionTypeInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput>
    upsert?: Enumerable<LoggedWorkoutSectionUpsertWithWhereUniqueWithoutWorkoutSectionTypeInput>
    createMany?: LoggedWorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSectionUpdateWithWhereUniqueWithoutWorkoutSectionTypeInput>
    updateMany?: Enumerable<LoggedWorkoutSectionUpdateManyWithWhereWithoutWorkoutSectionTypeInput>
    deleteMany?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
  }

  export type WorkoutSectionTypeCreateManyvalidRepTypesInput = {
    set: Enumerable<WorkoutMoveRepType>
  }

  export type UserCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutCollectionsInput>, Enumerable<WorkoutUncheckedCreateWithoutCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutCollectionsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type WorkoutPlanCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutCollectionsInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutCollectionsInput>
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutCollectionsInput = {
    create?: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    upsert?: UserUpsertWithoutCollectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutCollectionsInput, UserUncheckedUpdateWithoutCollectionsInput>
  }

  export type WorkoutUpdateManyWithoutCollectionsInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutCollectionsInput>, Enumerable<WorkoutUncheckedCreateWithoutCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutCollectionsInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutCollectionsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutCollectionsInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutCollectionsInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type WorkoutPlanUpdateManyWithoutCollectionsInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutCollectionsInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutCollectionsInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutCollectionsInput>
    upsert?: Enumerable<WorkoutPlanUpsertWithWhereUniqueWithoutCollectionsInput>
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
    set?: Enumerable<WorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanWhereUniqueInput>
    update?: Enumerable<WorkoutPlanUpdateWithWhereUniqueWithoutCollectionsInput>
    updateMany?: Enumerable<WorkoutPlanUpdateManyWithWhereWithoutCollectionsInput>
    deleteMany?: Enumerable<WorkoutPlanScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutGymProfilesInput = {
    create?: XOR<UserCreateWithoutGymProfilesInput, UserUncheckedCreateWithoutGymProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutGymProfilesInput
    connect?: UserWhereUniqueInput
  }

  export type EquipmentCreateNestedManyWithoutGymProfilesInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutGymProfilesInput>, Enumerable<EquipmentUncheckedCreateWithoutGymProfilesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutGymProfilesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type ScheduledWorkoutCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    createMany?: ScheduledWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    createMany?: LoggedWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    createMany?: ScheduledWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    createMany?: LoggedWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutGymProfilesInput = {
    create?: XOR<UserCreateWithoutGymProfilesInput, UserUncheckedCreateWithoutGymProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutGymProfilesInput
    upsert?: UserUpsertWithoutGymProfilesInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutGymProfilesInput, UserUncheckedUpdateWithoutGymProfilesInput>
  }

  export type EquipmentUpdateManyWithoutGymProfilesInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutGymProfilesInput>, Enumerable<EquipmentUncheckedCreateWithoutGymProfilesInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutGymProfilesInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutGymProfilesInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutGymProfilesInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutGymProfilesInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    createMany?: ScheduledWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    createMany?: LoggedWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutGymProfileInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    createMany?: ScheduledWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutGymProfileInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutGymProfileInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutGymProfileInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutGymProfileInput>
    createMany?: LoggedWorkoutCreateManyGymProfileInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutGymProfileInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutGymProfileInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<UserCreateWithoutScheduledWorkoutsInput, UserUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: UserWhereUniqueInput
  }

  export type GymProfileCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<GymProfileCreateWithoutScheduledWorkoutsInput, GymProfileUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: GymProfileWhereUniqueInput
  }

  export type LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput = {
    create?: XOR<LoggedWorkoutCreateWithoutScheduledWorkoutInput, LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutScheduledWorkoutInput
    connect?: LoggedWorkoutWhereUniqueInput
  }

  export type WorkoutCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutCreateWithoutScheduledWorkoutsInput, WorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type WorkoutPlanEnrolmentCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutPlanEnrolmentCreateWithoutScheduledWorkoutsInput, WorkoutPlanEnrolmentUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutPlanEnrolmentCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: WorkoutPlanEnrolmentWhereUniqueInput
  }

  export type WorkoutPlanDayWorkoutCreateNestedOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutPlanDayWorkoutCreateWithoutScheduledWorkoutsInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutPlanDayWorkoutCreateOrConnectWithoutScheduledWorkoutsInput
    connect?: WorkoutPlanDayWorkoutWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutScheduledWorkoutsInput = {
    create?: XOR<UserCreateWithoutScheduledWorkoutsInput, UserUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: UserUpsertWithoutScheduledWorkoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutScheduledWorkoutsInput, UserUncheckedUpdateWithoutScheduledWorkoutsInput>
  }

  export type GymProfileUpdateOneWithoutScheduledWorkoutsInput = {
    create?: XOR<GymProfileCreateWithoutScheduledWorkoutsInput, GymProfileUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: GymProfileUpsertWithoutScheduledWorkoutsInput
    connect?: GymProfileWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<GymProfileUpdateWithoutScheduledWorkoutsInput, GymProfileUncheckedUpdateWithoutScheduledWorkoutsInput>
  }

  export type LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput = {
    create?: XOR<LoggedWorkoutCreateWithoutScheduledWorkoutInput, LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutScheduledWorkoutInput
    upsert?: LoggedWorkoutUpsertWithoutScheduledWorkoutInput
    connect?: LoggedWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<LoggedWorkoutUpdateWithoutScheduledWorkoutInput, LoggedWorkoutUncheckedUpdateWithoutScheduledWorkoutInput>
  }

  export type WorkoutUpdateOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutCreateWithoutScheduledWorkoutsInput, WorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: WorkoutUpsertWithoutScheduledWorkoutsInput
    connect?: WorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutUpdateWithoutScheduledWorkoutsInput, WorkoutUncheckedUpdateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutPlanEnrolmentUpdateOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutPlanEnrolmentCreateWithoutScheduledWorkoutsInput, WorkoutPlanEnrolmentUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutPlanEnrolmentCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: WorkoutPlanEnrolmentUpsertWithoutScheduledWorkoutsInput
    connect?: WorkoutPlanEnrolmentWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutPlanEnrolmentUpdateWithoutScheduledWorkoutsInput, WorkoutPlanEnrolmentUncheckedUpdateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutPlanDayWorkoutUpdateOneWithoutScheduledWorkoutsInput = {
    create?: XOR<WorkoutPlanDayWorkoutCreateWithoutScheduledWorkoutsInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
    connectOrCreate?: WorkoutPlanDayWorkoutCreateOrConnectWithoutScheduledWorkoutsInput
    upsert?: WorkoutPlanDayWorkoutUpsertWithoutScheduledWorkoutsInput
    connect?: WorkoutPlanDayWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutPlanDayWorkoutUpdateWithoutScheduledWorkoutsInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutScheduledWorkoutsInput>
  }

  export type MoveCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveCreateWithoutUserInput>, Enumerable<MoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutUserInput>
    createMany?: MoveCreateManyUserInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type WorkoutCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutUserInput>, Enumerable<WorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutUserInput>
    createMany?: WorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutUserInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    createMany?: ScheduledWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutUserInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type GymProfileCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileCreateWithoutUserInput>, Enumerable<GymProfileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    createMany?: GymProfileCreateManyUserInputEnvelope
    connect?: Enumerable<GymProfileWhereUniqueInput>
  }

  export type ProgressJournalCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalCreateWithoutUserInput>, Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
  }

  export type ProgressJournalGoalTagCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalGoalTagCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
  }

  export type LoggedWorkoutSectionCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutUserInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
  }

  export type LoggedWorkoutSetCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutUserInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
  }

  export type LoggedWorkoutMoveCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutUserInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type ProgressJournalGoalCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutUserInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalGoalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type ProgressJournalEntryCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutUserInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalEntryCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
  }

  export type WorkoutSectionCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutUserInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type WorkoutSetCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutUserInput>, Enumerable<WorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
  }

  export type WorkoutMoveCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutUserInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutUserInput>
    createMany?: WorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type WorkoutSetGeneratorCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutUserInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSetGeneratorCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
  }

  export type WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutUserInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
  }

  export type WorkoutTagCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutUserInput>, Enumerable<WorkoutTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutUserInput>
    createMany?: WorkoutTagCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
  }

  export type UserBenchmarkGroupCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkGroupCreateWithoutUserInput>, Enumerable<UserBenchmarkGroupUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkGroupCreateOrConnectWithoutUserInput>
    createMany?: UserBenchmarkGroupCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
  }

  export type UserBenchmarkCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutUserInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutUserInput>
    createMany?: UserBenchmarkCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type UserBenchmarkEntryCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserInput>
    createMany?: UserBenchmarkEntryCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
  }

  export type WorkoutPlanCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutUserInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
  }

  export type WorkoutPlanDayCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutUserInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanDayCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
  }

  export type WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutUserInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
  }

  export type WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutUserInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanEnrolmentCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
  }

  export type WorkoutPlanReviewCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutUserInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanReviewCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
  }

  export type CollectionCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutUserInput>, Enumerable<CollectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutUserInput>
    createMany?: CollectionCreateManyUserInputEnvelope
    connect?: Enumerable<CollectionWhereUniqueInput>
  }

  export type MoveUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveCreateWithoutUserInput>, Enumerable<MoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutUserInput>
    createMany?: MoveCreateManyUserInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
  }

  export type WorkoutUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutUserInput>, Enumerable<WorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutUserInput>
    createMany?: WorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutUserInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    createMany?: ScheduledWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutUserInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type GymProfileUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileCreateWithoutUserInput>, Enumerable<GymProfileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    createMany?: GymProfileCreateManyUserInputEnvelope
    connect?: Enumerable<GymProfileWhereUniqueInput>
  }

  export type ProgressJournalUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalCreateWithoutUserInput>, Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
  }

  export type ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalGoalTagCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
  }

  export type LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutUserInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
  }

  export type LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutUserInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
  }

  export type LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutUserInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutUserInput>
    createMany?: LoggedWorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutUserInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalGoalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutUserInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutUserInput>
    createMany?: ProgressJournalEntryCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
  }

  export type WorkoutSectionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutUserInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type WorkoutSetUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutUserInput>, Enumerable<WorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
  }

  export type WorkoutMoveUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutUserInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutUserInput>
    createMany?: WorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutUserInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSetGeneratorCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
  }

  export type WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutUserInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutUserInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
  }

  export type WorkoutTagUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutUserInput>, Enumerable<WorkoutTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutUserInput>
    createMany?: WorkoutTagCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
  }

  export type UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkGroupCreateWithoutUserInput>, Enumerable<UserBenchmarkGroupUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkGroupCreateOrConnectWithoutUserInput>
    createMany?: UserBenchmarkGroupCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
  }

  export type UserBenchmarkUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutUserInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutUserInput>
    createMany?: UserBenchmarkCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserInput>
    createMany?: UserBenchmarkEntryCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
  }

  export type WorkoutPlanUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutUserInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
  }

  export type WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutUserInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanDayCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutUserInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
  }

  export type WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutUserInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanEnrolmentCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
  }

  export type WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutUserInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutUserInput>
    createMany?: WorkoutPlanReviewCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
  }

  export type CollectionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutUserInput>, Enumerable<CollectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutUserInput>
    createMany?: CollectionCreateManyUserInputEnvelope
    connect?: Enumerable<CollectionWhereUniqueInput>
  }

  export type EnumUserProfileScopeFieldUpdateOperationsInput = {
    set?: UserProfileScope
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableEnumGenderFieldUpdateOperationsInput = {
    set?: Gender | null
  }

  export type MoveUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveCreateWithoutUserInput>, Enumerable<MoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutUserInput>
    createMany?: MoveCreateManyUserInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type WorkoutUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutUserInput>, Enumerable<WorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutUserInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ScheduledWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutUserInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type GymProfileUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileCreateWithoutUserInput>, Enumerable<GymProfileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<GymProfileUpsertWithWhereUniqueWithoutUserInput>
    createMany?: GymProfileCreateManyUserInputEnvelope
    connect?: Enumerable<GymProfileWhereUniqueInput>
    set?: Enumerable<GymProfileWhereUniqueInput>
    disconnect?: Enumerable<GymProfileWhereUniqueInput>
    delete?: Enumerable<GymProfileWhereUniqueInput>
    update?: Enumerable<GymProfileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<GymProfileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<GymProfileScalarWhereInput>
  }

  export type ProgressJournalUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalCreateWithoutUserInput>, Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
    set?: Enumerable<ProgressJournalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalWhereUniqueInput>
    update?: Enumerable<ProgressJournalUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalScalarWhereInput>
  }

  export type ProgressJournalGoalTagUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalGoalTagUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalGoalTagCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalTagUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalGoalTagUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
  }

  export type LoggedWorkoutSectionUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutUserInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutSectionUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSectionUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutSectionUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
  }

  export type LoggedWorkoutSetUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutUserInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutSetUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSetUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutSetUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutSetScalarWhereInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutUserInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type ProgressJournalGoalUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutUserInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalGoalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type ProgressJournalEntryUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutUserInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalEntryUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalEntryCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    set?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    delete?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    update?: Enumerable<ProgressJournalEntryUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalEntryUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalEntryScalarWhereInput>
  }

  export type WorkoutSectionUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutUserInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type WorkoutSetUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutUserInput>, Enumerable<WorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSetUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
    set?: Enumerable<WorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetWhereUniqueInput>
    delete?: Enumerable<WorkoutSetWhereUniqueInput>
    update?: Enumerable<WorkoutSetUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSetUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSetScalarWhereInput>
  }

  export type WorkoutMoveUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutUserInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type WorkoutSetGeneratorUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutUserInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSetGeneratorUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSetGeneratorCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    set?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    delete?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    update?: Enumerable<WorkoutSetGeneratorUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSetGeneratorUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSetGeneratorScalarWhereInput>
  }

  export type WorkoutSetIntervalBuyInUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutUserInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSetIntervalBuyInUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    set?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    delete?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    update?: Enumerable<WorkoutSetIntervalBuyInUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSetIntervalBuyInUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSetIntervalBuyInScalarWhereInput>
  }

  export type WorkoutTagUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutUserInput>, Enumerable<WorkoutTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutTagUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutTagCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
    set?: Enumerable<WorkoutTagWhereUniqueInput>
    disconnect?: Enumerable<WorkoutTagWhereUniqueInput>
    delete?: Enumerable<WorkoutTagWhereUniqueInput>
    update?: Enumerable<WorkoutTagUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutTagUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutTagScalarWhereInput>
  }

  export type UserBenchmarkGroupUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkGroupCreateWithoutUserInput>, Enumerable<UserBenchmarkGroupUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkGroupCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<UserBenchmarkGroupUpsertWithWhereUniqueWithoutUserInput>
    createMany?: UserBenchmarkGroupCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    set?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    update?: Enumerable<UserBenchmarkGroupUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<UserBenchmarkGroupUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<UserBenchmarkGroupScalarWhereInput>
  }

  export type UserBenchmarkUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutUserInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutUserInput>
    createMany?: UserBenchmarkCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type UserBenchmarkEntryUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserInput>
    createMany?: UserBenchmarkEntryCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    set?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    update?: Enumerable<UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<UserBenchmarkEntryUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<UserBenchmarkEntryScalarWhereInput>
  }

  export type WorkoutPlanUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutUserInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
    set?: Enumerable<WorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanWhereUniqueInput>
    update?: Enumerable<WorkoutPlanUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanScalarWhereInput>
  }

  export type WorkoutPlanDayUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutUserInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanDayUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanDayCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanDayUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanDayScalarWhereInput>
  }

  export type WorkoutPlanDayWorkoutUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutUserInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
  }

  export type WorkoutPlanEnrolmentUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutUserInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanEnrolmentUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanEnrolmentCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutPlanEnrolmentUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanEnrolmentUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanEnrolmentScalarWhereInput>
  }

  export type WorkoutPlanReviewUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutUserInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanReviewUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanReviewCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    set?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    update?: Enumerable<WorkoutPlanReviewUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanReviewUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanReviewScalarWhereInput>
  }

  export type CollectionUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutUserInput>, Enumerable<CollectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<CollectionUpsertWithWhereUniqueWithoutUserInput>
    createMany?: CollectionCreateManyUserInputEnvelope
    connect?: Enumerable<CollectionWhereUniqueInput>
    set?: Enumerable<CollectionWhereUniqueInput>
    disconnect?: Enumerable<CollectionWhereUniqueInput>
    delete?: Enumerable<CollectionWhereUniqueInput>
    update?: Enumerable<CollectionUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<CollectionUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<CollectionScalarWhereInput>
  }

  export type MoveUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<MoveCreateWithoutUserInput>, Enumerable<MoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<MoveCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<MoveUpsertWithWhereUniqueWithoutUserInput>
    createMany?: MoveCreateManyUserInputEnvelope
    connect?: Enumerable<MoveWhereUniqueInput>
    set?: Enumerable<MoveWhereUniqueInput>
    disconnect?: Enumerable<MoveWhereUniqueInput>
    delete?: Enumerable<MoveWhereUniqueInput>
    update?: Enumerable<MoveUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<MoveUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<MoveScalarWhereInput>
  }

  export type WorkoutUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutUserInput>, Enumerable<WorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutUserInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ScheduledWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutUserInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type GymProfileUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<GymProfileCreateWithoutUserInput>, Enumerable<GymProfileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<GymProfileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<GymProfileUpsertWithWhereUniqueWithoutUserInput>
    createMany?: GymProfileCreateManyUserInputEnvelope
    connect?: Enumerable<GymProfileWhereUniqueInput>
    set?: Enumerable<GymProfileWhereUniqueInput>
    disconnect?: Enumerable<GymProfileWhereUniqueInput>
    delete?: Enumerable<GymProfileWhereUniqueInput>
    update?: Enumerable<GymProfileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<GymProfileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<GymProfileScalarWhereInput>
  }

  export type ProgressJournalUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalCreateWithoutUserInput>, Enumerable<ProgressJournalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalWhereUniqueInput>
    set?: Enumerable<ProgressJournalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalWhereUniqueInput>
    update?: Enumerable<ProgressJournalUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalScalarWhereInput>
  }

  export type ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagCreateWithoutUserInput>, Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalGoalTagUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalGoalTagCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalTagUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalGoalTagUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
  }

  export type LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutUserInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutSectionUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSectionUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutSectionUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
  }

  export type LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutUserInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutSetUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSetUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutSetUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutSetScalarWhereInput>
  }

  export type LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutUserInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LoggedWorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type ProgressJournalGoalUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutUserInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalGoalCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type ProgressJournalEntryUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutUserInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProgressJournalEntryUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProgressJournalEntryCreateManyUserInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    set?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    delete?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    update?: Enumerable<ProgressJournalEntryUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProgressJournalEntryUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProgressJournalEntryScalarWhereInput>
  }

  export type WorkoutSectionUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutUserInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSectionCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type WorkoutSetUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutUserInput>, Enumerable<WorkoutSetUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSetUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSetCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
    set?: Enumerable<WorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetWhereUniqueInput>
    delete?: Enumerable<WorkoutSetWhereUniqueInput>
    update?: Enumerable<WorkoutSetUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSetUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSetScalarWhereInput>
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutUserInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutMoveCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutUserInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSetGeneratorUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSetGeneratorCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    set?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    delete?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    update?: Enumerable<WorkoutSetGeneratorUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSetGeneratorUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSetGeneratorScalarWhereInput>
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutUserInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutSetIntervalBuyInUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    set?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    delete?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    update?: Enumerable<WorkoutSetIntervalBuyInUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutSetIntervalBuyInUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutSetIntervalBuyInScalarWhereInput>
  }

  export type WorkoutTagUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutUserInput>, Enumerable<WorkoutTagUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutTagUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutTagCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
    set?: Enumerable<WorkoutTagWhereUniqueInput>
    disconnect?: Enumerable<WorkoutTagWhereUniqueInput>
    delete?: Enumerable<WorkoutTagWhereUniqueInput>
    update?: Enumerable<WorkoutTagUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutTagUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutTagScalarWhereInput>
  }

  export type UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkGroupCreateWithoutUserInput>, Enumerable<UserBenchmarkGroupUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkGroupCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<UserBenchmarkGroupUpsertWithWhereUniqueWithoutUserInput>
    createMany?: UserBenchmarkGroupCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    set?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    update?: Enumerable<UserBenchmarkGroupUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<UserBenchmarkGroupUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<UserBenchmarkGroupScalarWhereInput>
  }

  export type UserBenchmarkUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutUserInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutUserInput>
    createMany?: UserBenchmarkCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserInput>
    createMany?: UserBenchmarkEntryCreateManyUserInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    set?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    update?: Enumerable<UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<UserBenchmarkEntryUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<UserBenchmarkEntryScalarWhereInput>
  }

  export type WorkoutPlanUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutUserInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
    set?: Enumerable<WorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanWhereUniqueInput>
    update?: Enumerable<WorkoutPlanUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanScalarWhereInput>
  }

  export type WorkoutPlanDayUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutUserInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanDayUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanDayCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanDayUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanDayScalarWhereInput>
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutUserInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutUserInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanEnrolmentUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanEnrolmentCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutPlanEnrolmentUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanEnrolmentUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanEnrolmentScalarWhereInput>
  }

  export type WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutUserInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<WorkoutPlanReviewUpsertWithWhereUniqueWithoutUserInput>
    createMany?: WorkoutPlanReviewCreateManyUserInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    set?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    update?: Enumerable<WorkoutPlanReviewUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<WorkoutPlanReviewUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<WorkoutPlanReviewScalarWhereInput>
  }

  export type CollectionUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutUserInput>, Enumerable<CollectionUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<CollectionUpsertWithWhereUniqueWithoutUserInput>
    createMany?: CollectionCreateManyUserInputEnvelope
    connect?: Enumerable<CollectionWhereUniqueInput>
    set?: Enumerable<CollectionWhereUniqueInput>
    disconnect?: Enumerable<CollectionWhereUniqueInput>
    delete?: Enumerable<CollectionWhereUniqueInput>
    update?: Enumerable<CollectionUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<CollectionUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<CollectionScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutUserBenchmarkGroupsInput = {
    create?: XOR<UserCreateWithoutUserBenchmarkGroupsInput, UserUncheckedCreateWithoutUserBenchmarkGroupsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarkGroupsInput
    connect?: UserWhereUniqueInput
  }

  export type UserBenchmarkCreateNestedManyWithoutUserBenchmarkGroupsInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutUserBenchmarkGroupsInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutUserBenchmarkGroupsInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutUserBenchmarkGroupsInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutUserBenchmarkGroupsInput = {
    create?: XOR<UserCreateWithoutUserBenchmarkGroupsInput, UserUncheckedCreateWithoutUserBenchmarkGroupsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarkGroupsInput
    upsert?: UserUpsertWithoutUserBenchmarkGroupsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserBenchmarkGroupsInput, UserUncheckedUpdateWithoutUserBenchmarkGroupsInput>
  }

  export type UserBenchmarkUpdateManyWithoutUserBenchmarkGroupsInput = {
    create?: XOR<Enumerable<UserBenchmarkCreateWithoutUserBenchmarkGroupsInput>, Enumerable<UserBenchmarkUncheckedCreateWithoutUserBenchmarkGroupsInput>>
    connectOrCreate?: Enumerable<UserBenchmarkCreateOrConnectWithoutUserBenchmarkGroupsInput>
    upsert?: Enumerable<UserBenchmarkUpsertWithWhereUniqueWithoutUserBenchmarkGroupsInput>
    connect?: Enumerable<UserBenchmarkWhereUniqueInput>
    set?: Enumerable<UserBenchmarkWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkWhereUniqueInput>
    update?: Enumerable<UserBenchmarkUpdateWithWhereUniqueWithoutUserBenchmarkGroupsInput>
    updateMany?: Enumerable<UserBenchmarkUpdateManyWithWhereWithoutUserBenchmarkGroupsInput>
    deleteMany?: Enumerable<UserBenchmarkScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutUserBenchmarksInput = {
    create?: XOR<UserCreateWithoutUserBenchmarksInput, UserUncheckedCreateWithoutUserBenchmarksInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarksInput
    connect?: UserWhereUniqueInput
  }

  export type EquipmentCreateNestedOneWithoutUserBenchmarksInput = {
    create?: XOR<EquipmentCreateWithoutUserBenchmarksInput, EquipmentUncheckedCreateWithoutUserBenchmarksInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutUserBenchmarksInput
    connect?: EquipmentWhereUniqueInput
  }

  export type MoveCreateNestedOneWithoutUserBenchmarksInput = {
    create?: XOR<MoveCreateWithoutUserBenchmarksInput, MoveUncheckedCreateWithoutUserBenchmarksInput>
    connectOrCreate?: MoveCreateOrConnectWithoutUserBenchmarksInput
    connect?: MoveWhereUniqueInput
  }

  export type UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    createMany?: UserBenchmarkEntryCreateManyUserBenchmarkInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
  }

  export type UserBenchmarkGroupCreateNestedManyWithoutUserBenchmarksInput = {
    create?: XOR<Enumerable<UserBenchmarkGroupCreateWithoutUserBenchmarksInput>, Enumerable<UserBenchmarkGroupUncheckedCreateWithoutUserBenchmarksInput>>
    connectOrCreate?: Enumerable<UserBenchmarkGroupCreateOrConnectWithoutUserBenchmarksInput>
    connect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
  }

  export type UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    createMany?: UserBenchmarkEntryCreateManyUserBenchmarkInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumWorkoutMoveRepTypeFieldUpdateOperationsInput = {
    set?: WorkoutMoveRepType
  }

  export type EnumLoadUnitFieldUpdateOperationsInput = {
    set?: LoadUnit
  }

  export type EnumDistanceUnitFieldUpdateOperationsInput = {
    set?: DistanceUnit
  }

  export type EnumTimeUnitFieldUpdateOperationsInput = {
    set?: TimeUnit
  }

  export type EnumBenchmarkTypeFieldUpdateOperationsInput = {
    set?: BenchmarkType
  }

  export type UserUpdateOneRequiredWithoutUserBenchmarksInput = {
    create?: XOR<UserCreateWithoutUserBenchmarksInput, UserUncheckedCreateWithoutUserBenchmarksInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarksInput
    upsert?: UserUpsertWithoutUserBenchmarksInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserBenchmarksInput, UserUncheckedUpdateWithoutUserBenchmarksInput>
  }

  export type EquipmentUpdateOneWithoutUserBenchmarksInput = {
    create?: XOR<EquipmentCreateWithoutUserBenchmarksInput, EquipmentUncheckedCreateWithoutUserBenchmarksInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutUserBenchmarksInput
    upsert?: EquipmentUpsertWithoutUserBenchmarksInput
    connect?: EquipmentWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<EquipmentUpdateWithoutUserBenchmarksInput, EquipmentUncheckedUpdateWithoutUserBenchmarksInput>
  }

  export type MoveUpdateOneRequiredWithoutUserBenchmarksInput = {
    create?: XOR<MoveCreateWithoutUserBenchmarksInput, MoveUncheckedCreateWithoutUserBenchmarksInput>
    connectOrCreate?: MoveCreateOrConnectWithoutUserBenchmarksInput
    upsert?: MoveUpsertWithoutUserBenchmarksInput
    connect?: MoveWhereUniqueInput
    update?: XOR<MoveUpdateWithoutUserBenchmarksInput, MoveUncheckedUpdateWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    upsert?: Enumerable<UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserBenchmarkInput>
    createMany?: UserBenchmarkEntryCreateManyUserBenchmarkInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    set?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    update?: Enumerable<UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserBenchmarkInput>
    updateMany?: Enumerable<UserBenchmarkEntryUpdateManyWithWhereWithoutUserBenchmarkInput>
    deleteMany?: Enumerable<UserBenchmarkEntryScalarWhereInput>
  }

  export type UserBenchmarkGroupUpdateManyWithoutUserBenchmarksInput = {
    create?: XOR<Enumerable<UserBenchmarkGroupCreateWithoutUserBenchmarksInput>, Enumerable<UserBenchmarkGroupUncheckedCreateWithoutUserBenchmarksInput>>
    connectOrCreate?: Enumerable<UserBenchmarkGroupCreateOrConnectWithoutUserBenchmarksInput>
    upsert?: Enumerable<UserBenchmarkGroupUpsertWithWhereUniqueWithoutUserBenchmarksInput>
    connect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    set?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkGroupWhereUniqueInput>
    update?: Enumerable<UserBenchmarkGroupUpdateWithWhereUniqueWithoutUserBenchmarksInput>
    updateMany?: Enumerable<UserBenchmarkGroupUpdateManyWithWhereWithoutUserBenchmarksInput>
    deleteMany?: Enumerable<UserBenchmarkGroupScalarWhereInput>
  }

  export type UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput = {
    create?: XOR<Enumerable<UserBenchmarkEntryCreateWithoutUserBenchmarkInput>, Enumerable<UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>>
    connectOrCreate?: Enumerable<UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput>
    upsert?: Enumerable<UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserBenchmarkInput>
    createMany?: UserBenchmarkEntryCreateManyUserBenchmarkInputEnvelope
    connect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    set?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    disconnect?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    delete?: Enumerable<UserBenchmarkEntryWhereUniqueInput>
    update?: Enumerable<UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserBenchmarkInput>
    updateMany?: Enumerable<UserBenchmarkEntryUpdateManyWithWhereWithoutUserBenchmarkInput>
    deleteMany?: Enumerable<UserBenchmarkEntryScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutUserBenchmarkEntriesInput = {
    create?: XOR<UserCreateWithoutUserBenchmarkEntriesInput, UserUncheckedCreateWithoutUserBenchmarkEntriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarkEntriesInput
    connect?: UserWhereUniqueInput
  }

  export type UserBenchmarkCreateNestedOneWithoutUserBenchmarkEntriesInput = {
    create?: XOR<UserBenchmarkCreateWithoutUserBenchmarkEntriesInput, UserBenchmarkUncheckedCreateWithoutUserBenchmarkEntriesInput>
    connectOrCreate?: UserBenchmarkCreateOrConnectWithoutUserBenchmarkEntriesInput
    connect?: UserBenchmarkWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutUserBenchmarkEntriesInput = {
    create?: XOR<UserCreateWithoutUserBenchmarkEntriesInput, UserUncheckedCreateWithoutUserBenchmarkEntriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserBenchmarkEntriesInput
    upsert?: UserUpsertWithoutUserBenchmarkEntriesInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserBenchmarkEntriesInput, UserUncheckedUpdateWithoutUserBenchmarkEntriesInput>
  }

  export type UserBenchmarkUpdateOneRequiredWithoutUserBenchmarkEntriesInput = {
    create?: XOR<UserBenchmarkCreateWithoutUserBenchmarkEntriesInput, UserBenchmarkUncheckedCreateWithoutUserBenchmarkEntriesInput>
    connectOrCreate?: UserBenchmarkCreateOrConnectWithoutUserBenchmarkEntriesInput
    upsert?: UserBenchmarkUpsertWithoutUserBenchmarkEntriesInput
    connect?: UserBenchmarkWhereUniqueInput
    update?: XOR<UserBenchmarkUpdateWithoutUserBenchmarkEntriesInput, UserBenchmarkUncheckedUpdateWithoutUserBenchmarkEntriesInput>
  }

  export type UserCreateNestedOneWithoutWorkoutsInput = {
    create?: XOR<UserCreateWithoutWorkoutsInput, UserUncheckedCreateWithoutWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutSectionCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    createMany?: WorkoutSectionCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutWorkoutInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: LoggedWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type WorkoutGoalCreateNestedManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<WorkoutGoalCreateWithoutWorkoutsInput>, Enumerable<WorkoutGoalUncheckedCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<WorkoutGoalCreateOrConnectWithoutWorkoutsInput>
    connect?: Enumerable<WorkoutGoalWhereUniqueInput>
  }

  export type WorkoutTagCreateNestedManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutWorkoutsInput>, Enumerable<WorkoutTagUncheckedCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutWorkoutsInput>
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
  }

  export type WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
  }

  export type CollectionCreateNestedManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutWorkoutsInput>, Enumerable<CollectionUncheckedCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutWorkoutsInput>
    connect?: Enumerable<CollectionWhereUniqueInput>
  }

  export type DiscoverWorkoutCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutWorkoutInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: DiscoverWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
  }

  export type WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    createMany?: WorkoutSectionCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
  }

  export type LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutWorkoutInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: LoggedWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
  }

  export type DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutWorkoutInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutWorkoutInput>
    createMany?: DiscoverWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumDifficultyLevelFieldUpdateOperationsInput = {
    set?: DifficultyLevel
  }

  export type EnumContentAccessScopeFieldUpdateOperationsInput = {
    set?: ContentAccessScope
  }

  export type UserUpdateOneRequiredWithoutWorkoutsInput = {
    create?: XOR<UserCreateWithoutWorkoutsInput, UserUncheckedCreateWithoutWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutsInput
    upsert?: UserUpsertWithoutWorkoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutsInput, UserUncheckedUpdateWithoutWorkoutsInput>
  }

  export type WorkoutSectionUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: WorkoutSectionCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type LoggedWorkoutUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutWorkoutInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: LoggedWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type WorkoutGoalUpdateManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<WorkoutGoalCreateWithoutWorkoutsInput>, Enumerable<WorkoutGoalUncheckedCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<WorkoutGoalCreateOrConnectWithoutWorkoutsInput>
    upsert?: Enumerable<WorkoutGoalUpsertWithWhereUniqueWithoutWorkoutsInput>
    connect?: Enumerable<WorkoutGoalWhereUniqueInput>
    set?: Enumerable<WorkoutGoalWhereUniqueInput>
    disconnect?: Enumerable<WorkoutGoalWhereUniqueInput>
    delete?: Enumerable<WorkoutGoalWhereUniqueInput>
    update?: Enumerable<WorkoutGoalUpdateWithWhereUniqueWithoutWorkoutsInput>
    updateMany?: Enumerable<WorkoutGoalUpdateManyWithWhereWithoutWorkoutsInput>
    deleteMany?: Enumerable<WorkoutGoalScalarWhereInput>
  }

  export type WorkoutTagUpdateManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutWorkoutsInput>, Enumerable<WorkoutTagUncheckedCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutWorkoutsInput>
    upsert?: Enumerable<WorkoutTagUpsertWithWhereUniqueWithoutWorkoutsInput>
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
    set?: Enumerable<WorkoutTagWhereUniqueInput>
    disconnect?: Enumerable<WorkoutTagWhereUniqueInput>
    delete?: Enumerable<WorkoutTagWhereUniqueInput>
    update?: Enumerable<WorkoutTagUpdateWithWhereUniqueWithoutWorkoutsInput>
    updateMany?: Enumerable<WorkoutTagUpdateManyWithWhereWithoutWorkoutsInput>
    deleteMany?: Enumerable<WorkoutTagScalarWhereInput>
  }

  export type WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
  }

  export type CollectionUpdateManyWithoutWorkoutsInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutWorkoutsInput>, Enumerable<CollectionUncheckedCreateWithoutWorkoutsInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutWorkoutsInput>
    upsert?: Enumerable<CollectionUpsertWithWhereUniqueWithoutWorkoutsInput>
    connect?: Enumerable<CollectionWhereUniqueInput>
    set?: Enumerable<CollectionWhereUniqueInput>
    disconnect?: Enumerable<CollectionWhereUniqueInput>
    delete?: Enumerable<CollectionWhereUniqueInput>
    update?: Enumerable<CollectionUpdateWithWhereUniqueWithoutWorkoutsInput>
    updateMany?: Enumerable<CollectionUpdateManyWithWhereWithoutWorkoutsInput>
    deleteMany?: Enumerable<CollectionScalarWhereInput>
  }

  export type DiscoverWorkoutUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutWorkoutInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<DiscoverWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: DiscoverWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<DiscoverWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<DiscoverWorkoutScalarWhereInput>
  }

  export type WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutSectionCreateWithoutWorkoutInput>, Enumerable<WorkoutSectionUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutSectionCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: WorkoutSectionCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutSectionWhereUniqueInput>
    set?: Enumerable<WorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSectionWhereUniqueInput>
    delete?: Enumerable<WorkoutSectionWhereUniqueInput>
    update?: Enumerable<WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutSectionUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutSectionScalarWhereInput>
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutCreateWithoutWorkoutInput>, Enumerable<LoggedWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: LoggedWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
  }

  export type DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutWorkoutInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutWorkoutInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutWorkoutInput>
    upsert?: Enumerable<DiscoverWorkoutUpsertWithWhereUniqueWithoutWorkoutInput>
    createMany?: DiscoverWorkoutCreateManyWorkoutInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutUpdateWithWhereUniqueWithoutWorkoutInput>
    updateMany?: Enumerable<DiscoverWorkoutUpdateManyWithWhereWithoutWorkoutInput>
    deleteMany?: Enumerable<DiscoverWorkoutScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutTagInput = {
    create?: XOR<UserCreateWithoutWorkoutTagInput, UserUncheckedCreateWithoutWorkoutTagInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutTagInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutCreateNestedManyWithoutWorkoutTagsInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutWorkoutTagsInput>, Enumerable<WorkoutUncheckedCreateWithoutWorkoutTagsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutTagsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
  }

  export type WorkoutPlanCreateNestedManyWithoutWorkoutTagsInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutWorkoutTagsInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutWorkoutTagsInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutWorkoutTagsInput>
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutTagInput = {
    create?: XOR<UserCreateWithoutWorkoutTagInput, UserUncheckedCreateWithoutWorkoutTagInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutTagInput
    upsert?: UserUpsertWithoutWorkoutTagInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutTagInput, UserUncheckedUpdateWithoutWorkoutTagInput>
  }

  export type WorkoutUpdateManyWithoutWorkoutTagsInput = {
    create?: XOR<Enumerable<WorkoutCreateWithoutWorkoutTagsInput>, Enumerable<WorkoutUncheckedCreateWithoutWorkoutTagsInput>>
    connectOrCreate?: Enumerable<WorkoutCreateOrConnectWithoutWorkoutTagsInput>
    upsert?: Enumerable<WorkoutUpsertWithWhereUniqueWithoutWorkoutTagsInput>
    connect?: Enumerable<WorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutUpdateWithWhereUniqueWithoutWorkoutTagsInput>
    updateMany?: Enumerable<WorkoutUpdateManyWithWhereWithoutWorkoutTagsInput>
    deleteMany?: Enumerable<WorkoutScalarWhereInput>
  }

  export type WorkoutPlanUpdateManyWithoutWorkoutTagsInput = {
    create?: XOR<Enumerable<WorkoutPlanCreateWithoutWorkoutTagsInput>, Enumerable<WorkoutPlanUncheckedCreateWithoutWorkoutTagsInput>>
    connectOrCreate?: Enumerable<WorkoutPlanCreateOrConnectWithoutWorkoutTagsInput>
    upsert?: Enumerable<WorkoutPlanUpsertWithWhereUniqueWithoutWorkoutTagsInput>
    connect?: Enumerable<WorkoutPlanWhereUniqueInput>
    set?: Enumerable<WorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanWhereUniqueInput>
    update?: Enumerable<WorkoutPlanUpdateWithWhereUniqueWithoutWorkoutTagsInput>
    updateMany?: Enumerable<WorkoutPlanUpdateManyWithWhereWithoutWorkoutTagsInput>
    deleteMany?: Enumerable<WorkoutPlanScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutSectionsInput = {
    create?: XOR<UserCreateWithoutWorkoutSectionsInput, UserUncheckedCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSectionsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutCreateNestedOneWithoutWorkoutSectionsInput = {
    create?: XOR<WorkoutCreateWithoutWorkoutSectionsInput, WorkoutUncheckedCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutSectionsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type WorkoutSectionTypeCreateNestedOneWithoutWorkoutSectionsInput = {
    create?: XOR<WorkoutSectionTypeCreateWithoutWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: WorkoutSectionTypeCreateOrConnectWithoutWorkoutSectionsInput
    connect?: WorkoutSectionTypeWhereUniqueInput
  }

  export type WorkoutSetCreateNestedManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutSetUncheckedCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutWorkoutSectionInput>
    createMany?: WorkoutSetCreateManyWorkoutSectionInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
  }

  export type WorkoutSetUncheckedCreateNestedManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutSetUncheckedCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutWorkoutSectionInput>
    createMany?: WorkoutSetCreateManyWorkoutSectionInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutSectionsInput = {
    create?: XOR<UserCreateWithoutWorkoutSectionsInput, UserUncheckedCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSectionsInput
    upsert?: UserUpsertWithoutWorkoutSectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutSectionsInput, UserUncheckedUpdateWithoutWorkoutSectionsInput>
  }

  export type WorkoutUpdateOneRequiredWithoutWorkoutSectionsInput = {
    create?: XOR<WorkoutCreateWithoutWorkoutSectionsInput, WorkoutUncheckedCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutSectionsInput
    upsert?: WorkoutUpsertWithoutWorkoutSectionsInput
    connect?: WorkoutWhereUniqueInput
    update?: XOR<WorkoutUpdateWithoutWorkoutSectionsInput, WorkoutUncheckedUpdateWithoutWorkoutSectionsInput>
  }

  export type WorkoutSectionTypeUpdateOneRequiredWithoutWorkoutSectionsInput = {
    create?: XOR<WorkoutSectionTypeCreateWithoutWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutWorkoutSectionsInput>
    connectOrCreate?: WorkoutSectionTypeCreateOrConnectWithoutWorkoutSectionsInput
    upsert?: WorkoutSectionTypeUpsertWithoutWorkoutSectionsInput
    connect?: WorkoutSectionTypeWhereUniqueInput
    update?: XOR<WorkoutSectionTypeUpdateWithoutWorkoutSectionsInput, WorkoutSectionTypeUncheckedUpdateWithoutWorkoutSectionsInput>
  }

  export type WorkoutSetUpdateManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutSetUncheckedCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutWorkoutSectionInput>
    upsert?: Enumerable<WorkoutSetUpsertWithWhereUniqueWithoutWorkoutSectionInput>
    createMany?: WorkoutSetCreateManyWorkoutSectionInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
    set?: Enumerable<WorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetWhereUniqueInput>
    delete?: Enumerable<WorkoutSetWhereUniqueInput>
    update?: Enumerable<WorkoutSetUpdateWithWhereUniqueWithoutWorkoutSectionInput>
    updateMany?: Enumerable<WorkoutSetUpdateManyWithWhereWithoutWorkoutSectionInput>
    deleteMany?: Enumerable<WorkoutSetScalarWhereInput>
  }

  export type WorkoutSetUncheckedUpdateManyWithoutWorkoutSectionInput = {
    create?: XOR<Enumerable<WorkoutSetCreateWithoutWorkoutSectionInput>, Enumerable<WorkoutSetUncheckedCreateWithoutWorkoutSectionInput>>
    connectOrCreate?: Enumerable<WorkoutSetCreateOrConnectWithoutWorkoutSectionInput>
    upsert?: Enumerable<WorkoutSetUpsertWithWhereUniqueWithoutWorkoutSectionInput>
    createMany?: WorkoutSetCreateManyWorkoutSectionInputEnvelope
    connect?: Enumerable<WorkoutSetWhereUniqueInput>
    set?: Enumerable<WorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetWhereUniqueInput>
    delete?: Enumerable<WorkoutSetWhereUniqueInput>
    update?: Enumerable<WorkoutSetUpdateWithWhereUniqueWithoutWorkoutSectionInput>
    updateMany?: Enumerable<WorkoutSetUpdateManyWithWhereWithoutWorkoutSectionInput>
    deleteMany?: Enumerable<WorkoutSetScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutSetsInput = {
    create?: XOR<UserCreateWithoutWorkoutSetsInput, UserUncheckedCreateWithoutWorkoutSetsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSetsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutSetGeneratorCreateNestedManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutWorkoutSetInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutWorkoutSetInput>
    createMany?: WorkoutSetGeneratorCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
  }

  export type WorkoutSetIntervalBuyInCreateNestedOneWithoutWorkoutSetInput = {
    create?: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutSetInput>
    connectOrCreate?: WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutSetInput
    connect?: WorkoutSetIntervalBuyInWhereUniqueInput
  }

  export type WorkoutMoveCreateNestedManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutWorkoutSetInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSetInput>
    createMany?: WorkoutMoveCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type WorkoutSectionCreateNestedOneWithoutWorkoutSetsInput = {
    create?: XOR<WorkoutSectionCreateWithoutWorkoutSetsInput, WorkoutSectionUncheckedCreateWithoutWorkoutSetsInput>
    connectOrCreate?: WorkoutSectionCreateOrConnectWithoutWorkoutSetsInput
    connect?: WorkoutSectionWhereUniqueInput
  }

  export type WorkoutSetGeneratorUncheckedCreateNestedManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutWorkoutSetInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutWorkoutSetInput>
    createMany?: WorkoutSetGeneratorCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
  }

  export type WorkoutSetIntervalBuyInUncheckedCreateNestedOneWithoutWorkoutSetInput = {
    create?: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutSetInput>
    connectOrCreate?: WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutSetInput
    connect?: WorkoutSetIntervalBuyInWhereUniqueInput
  }

  export type WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutWorkoutSetInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSetInput>
    createMany?: WorkoutMoveCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutSetsInput = {
    create?: XOR<UserCreateWithoutWorkoutSetsInput, UserUncheckedCreateWithoutWorkoutSetsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSetsInput
    upsert?: UserUpsertWithoutWorkoutSetsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutSetsInput, UserUncheckedUpdateWithoutWorkoutSetsInput>
  }

  export type WorkoutSetGeneratorUpdateManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutWorkoutSetInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutWorkoutSetInput>
    upsert?: Enumerable<WorkoutSetGeneratorUpsertWithWhereUniqueWithoutWorkoutSetInput>
    createMany?: WorkoutSetGeneratorCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    set?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    delete?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    update?: Enumerable<WorkoutSetGeneratorUpdateWithWhereUniqueWithoutWorkoutSetInput>
    updateMany?: Enumerable<WorkoutSetGeneratorUpdateManyWithWhereWithoutWorkoutSetInput>
    deleteMany?: Enumerable<WorkoutSetGeneratorScalarWhereInput>
  }

  export type WorkoutSetIntervalBuyInUpdateOneWithoutWorkoutSetInput = {
    create?: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutSetInput>
    connectOrCreate?: WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutSetInput
    upsert?: WorkoutSetIntervalBuyInUpsertWithoutWorkoutSetInput
    connect?: WorkoutSetIntervalBuyInWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutSetIntervalBuyInUpdateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedUpdateWithoutWorkoutSetInput>
  }

  export type WorkoutMoveUpdateManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutWorkoutSetInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSetInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutWorkoutSetInput>
    createMany?: WorkoutMoveCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutWorkoutSetInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutWorkoutSetInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type WorkoutSectionUpdateOneRequiredWithoutWorkoutSetsInput = {
    create?: XOR<WorkoutSectionCreateWithoutWorkoutSetsInput, WorkoutSectionUncheckedCreateWithoutWorkoutSetsInput>
    connectOrCreate?: WorkoutSectionCreateOrConnectWithoutWorkoutSetsInput
    upsert?: WorkoutSectionUpsertWithoutWorkoutSetsInput
    connect?: WorkoutSectionWhereUniqueInput
    update?: XOR<WorkoutSectionUpdateWithoutWorkoutSetsInput, WorkoutSectionUncheckedUpdateWithoutWorkoutSetsInput>
  }

  export type WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutSetGeneratorCreateWithoutWorkoutSetInput>, Enumerable<WorkoutSetGeneratorUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutSetGeneratorCreateOrConnectWithoutWorkoutSetInput>
    upsert?: Enumerable<WorkoutSetGeneratorUpsertWithWhereUniqueWithoutWorkoutSetInput>
    createMany?: WorkoutSetGeneratorCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    set?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    delete?: Enumerable<WorkoutSetGeneratorWhereUniqueInput>
    update?: Enumerable<WorkoutSetGeneratorUpdateWithWhereUniqueWithoutWorkoutSetInput>
    updateMany?: Enumerable<WorkoutSetGeneratorUpdateManyWithWhereWithoutWorkoutSetInput>
    deleteMany?: Enumerable<WorkoutSetGeneratorScalarWhereInput>
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateOneWithoutWorkoutSetInput = {
    create?: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutSetInput>
    connectOrCreate?: WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutSetInput
    upsert?: WorkoutSetIntervalBuyInUpsertWithoutWorkoutSetInput
    connect?: WorkoutSetIntervalBuyInWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutSetIntervalBuyInUpdateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedUpdateWithoutWorkoutSetInput>
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutWorkoutSetInput = {
    create?: XOR<Enumerable<WorkoutMoveCreateWithoutWorkoutSetInput>, Enumerable<WorkoutMoveUncheckedCreateWithoutWorkoutSetInput>>
    connectOrCreate?: Enumerable<WorkoutMoveCreateOrConnectWithoutWorkoutSetInput>
    upsert?: Enumerable<WorkoutMoveUpsertWithWhereUniqueWithoutWorkoutSetInput>
    createMany?: WorkoutMoveCreateManyWorkoutSetInputEnvelope
    connect?: Enumerable<WorkoutMoveWhereUniqueInput>
    set?: Enumerable<WorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<WorkoutMoveWhereUniqueInput>
    delete?: Enumerable<WorkoutMoveWhereUniqueInput>
    update?: Enumerable<WorkoutMoveUpdateWithWhereUniqueWithoutWorkoutSetInput>
    updateMany?: Enumerable<WorkoutMoveUpdateManyWithWhereWithoutWorkoutSetInput>
    deleteMany?: Enumerable<WorkoutMoveScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutSetIntervalBuyInInput = {
    create?: XOR<UserCreateWithoutWorkoutSetIntervalBuyInInput, UserUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSetIntervalBuyInInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutMoveCreateNestedOneWithoutWorkoutSetIntervalBuyInInput = {
    create?: XOR<WorkoutMoveCreateWithoutWorkoutSetIntervalBuyInInput, WorkoutMoveUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
    connectOrCreate?: WorkoutMoveCreateOrConnectWithoutWorkoutSetIntervalBuyInInput
    connect?: WorkoutMoveWhereUniqueInput
  }

  export type WorkoutSetCreateNestedOneWithoutIntervalBuyInInput = {
    create?: XOR<WorkoutSetCreateWithoutIntervalBuyInInput, WorkoutSetUncheckedCreateWithoutIntervalBuyInInput>
    connectOrCreate?: WorkoutSetCreateOrConnectWithoutIntervalBuyInInput
    connect?: WorkoutSetWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput = {
    create?: XOR<UserCreateWithoutWorkoutSetIntervalBuyInInput, UserUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSetIntervalBuyInInput
    upsert?: UserUpsertWithoutWorkoutSetIntervalBuyInInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutSetIntervalBuyInInput, UserUncheckedUpdateWithoutWorkoutSetIntervalBuyInInput>
  }

  export type WorkoutMoveUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput = {
    create?: XOR<WorkoutMoveCreateWithoutWorkoutSetIntervalBuyInInput, WorkoutMoveUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
    connectOrCreate?: WorkoutMoveCreateOrConnectWithoutWorkoutSetIntervalBuyInInput
    upsert?: WorkoutMoveUpsertWithoutWorkoutSetIntervalBuyInInput
    connect?: WorkoutMoveWhereUniqueInput
    update?: XOR<WorkoutMoveUpdateWithoutWorkoutSetIntervalBuyInInput, WorkoutMoveUncheckedUpdateWithoutWorkoutSetIntervalBuyInInput>
  }

  export type WorkoutSetUpdateOneRequiredWithoutIntervalBuyInInput = {
    create?: XOR<WorkoutSetCreateWithoutIntervalBuyInInput, WorkoutSetUncheckedCreateWithoutIntervalBuyInInput>
    connectOrCreate?: WorkoutSetCreateOrConnectWithoutIntervalBuyInInput
    upsert?: WorkoutSetUpsertWithoutIntervalBuyInInput
    connect?: WorkoutSetWhereUniqueInput
    update?: XOR<WorkoutSetUpdateWithoutIntervalBuyInInput, WorkoutSetUncheckedUpdateWithoutIntervalBuyInInput>
  }

  export type UserCreateNestedOneWithoutWorkoutSetGeneratorsInput = {
    create?: XOR<UserCreateWithoutWorkoutSetGeneratorsInput, UserUncheckedCreateWithoutWorkoutSetGeneratorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSetGeneratorsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutSetCreateNestedOneWithoutGeneratorsInput = {
    create?: XOR<WorkoutSetCreateWithoutGeneratorsInput, WorkoutSetUncheckedCreateWithoutGeneratorsInput>
    connectOrCreate?: WorkoutSetCreateOrConnectWithoutGeneratorsInput
    connect?: WorkoutSetWhereUniqueInput
  }

  export type EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput = {
    set?: WorkoutSetGeneratorType
  }

  export type EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput = {
    set?: WorkoutSetGeneratorTarget
  }

  export type UserUpdateOneRequiredWithoutWorkoutSetGeneratorsInput = {
    create?: XOR<UserCreateWithoutWorkoutSetGeneratorsInput, UserUncheckedCreateWithoutWorkoutSetGeneratorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutSetGeneratorsInput
    upsert?: UserUpsertWithoutWorkoutSetGeneratorsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutSetGeneratorsInput, UserUncheckedUpdateWithoutWorkoutSetGeneratorsInput>
  }

  export type WorkoutSetUpdateOneWithoutGeneratorsInput = {
    create?: XOR<WorkoutSetCreateWithoutGeneratorsInput, WorkoutSetUncheckedCreateWithoutGeneratorsInput>
    connectOrCreate?: WorkoutSetCreateOrConnectWithoutGeneratorsInput
    upsert?: WorkoutSetUpsertWithoutGeneratorsInput
    connect?: WorkoutSetWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutSetUpdateWithoutGeneratorsInput, WorkoutSetUncheckedUpdateWithoutGeneratorsInput>
  }

  export type UserCreateNestedOneWithoutWorkoutMovesInput = {
    create?: XOR<UserCreateWithoutWorkoutMovesInput, UserUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutMovesInput
    connect?: UserWhereUniqueInput
  }

  export type MoveCreateNestedOneWithoutWorkoutMovesInput = {
    create?: XOR<MoveCreateWithoutWorkoutMovesInput, MoveUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: MoveCreateOrConnectWithoutWorkoutMovesInput
    connect?: MoveWhereUniqueInput
  }

  export type EquipmentCreateNestedOneWithoutWorkoutMovesInput = {
    create?: XOR<EquipmentCreateWithoutWorkoutMovesInput, EquipmentUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutWorkoutMovesInput
    connect?: EquipmentWhereUniqueInput
  }

  export type WorkoutSetCreateNestedOneWithoutWorkoutMovesInput = {
    create?: XOR<WorkoutSetCreateWithoutWorkoutMovesInput, WorkoutSetUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: WorkoutSetCreateOrConnectWithoutWorkoutMovesInput
    connect?: WorkoutSetWhereUniqueInput
  }

  export type WorkoutSetIntervalBuyInCreateNestedManyWithoutWorkoutMoveInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutWorkoutMoveInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutMoveInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyWorkoutMoveInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
  }

  export type WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutWorkoutMoveInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutWorkoutMoveInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutMoveInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyWorkoutMoveInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutMovesInput = {
    create?: XOR<UserCreateWithoutWorkoutMovesInput, UserUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutMovesInput
    upsert?: UserUpsertWithoutWorkoutMovesInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutMovesInput, UserUncheckedUpdateWithoutWorkoutMovesInput>
  }

  export type MoveUpdateOneRequiredWithoutWorkoutMovesInput = {
    create?: XOR<MoveCreateWithoutWorkoutMovesInput, MoveUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: MoveCreateOrConnectWithoutWorkoutMovesInput
    upsert?: MoveUpsertWithoutWorkoutMovesInput
    connect?: MoveWhereUniqueInput
    update?: XOR<MoveUpdateWithoutWorkoutMovesInput, MoveUncheckedUpdateWithoutWorkoutMovesInput>
  }

  export type EquipmentUpdateOneWithoutWorkoutMovesInput = {
    create?: XOR<EquipmentCreateWithoutWorkoutMovesInput, EquipmentUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutWorkoutMovesInput
    upsert?: EquipmentUpsertWithoutWorkoutMovesInput
    connect?: EquipmentWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<EquipmentUpdateWithoutWorkoutMovesInput, EquipmentUncheckedUpdateWithoutWorkoutMovesInput>
  }

  export type WorkoutSetUpdateOneRequiredWithoutWorkoutMovesInput = {
    create?: XOR<WorkoutSetCreateWithoutWorkoutMovesInput, WorkoutSetUncheckedCreateWithoutWorkoutMovesInput>
    connectOrCreate?: WorkoutSetCreateOrConnectWithoutWorkoutMovesInput
    upsert?: WorkoutSetUpsertWithoutWorkoutMovesInput
    connect?: WorkoutSetWhereUniqueInput
    update?: XOR<WorkoutSetUpdateWithoutWorkoutMovesInput, WorkoutSetUncheckedUpdateWithoutWorkoutMovesInput>
  }

  export type WorkoutSetIntervalBuyInUpdateManyWithoutWorkoutMoveInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutWorkoutMoveInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutMoveInput>
    upsert?: Enumerable<WorkoutSetIntervalBuyInUpsertWithWhereUniqueWithoutWorkoutMoveInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyWorkoutMoveInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    set?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    delete?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    update?: Enumerable<WorkoutSetIntervalBuyInUpdateWithWhereUniqueWithoutWorkoutMoveInput>
    updateMany?: Enumerable<WorkoutSetIntervalBuyInUpdateManyWithWhereWithoutWorkoutMoveInput>
    deleteMany?: Enumerable<WorkoutSetIntervalBuyInScalarWhereInput>
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutMoveInput = {
    create?: XOR<Enumerable<WorkoutSetIntervalBuyInCreateWithoutWorkoutMoveInput>, Enumerable<WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutMoveInput>>
    connectOrCreate?: Enumerable<WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutMoveInput>
    upsert?: Enumerable<WorkoutSetIntervalBuyInUpsertWithWhereUniqueWithoutWorkoutMoveInput>
    createMany?: WorkoutSetIntervalBuyInCreateManyWorkoutMoveInputEnvelope
    connect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    set?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    disconnect?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    delete?: Enumerable<WorkoutSetIntervalBuyInWhereUniqueInput>
    update?: Enumerable<WorkoutSetIntervalBuyInUpdateWithWhereUniqueWithoutWorkoutMoveInput>
    updateMany?: Enumerable<WorkoutSetIntervalBuyInUpdateManyWithWhereWithoutWorkoutMoveInput>
    deleteMany?: Enumerable<WorkoutSetIntervalBuyInScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutPlansInput = {
    create?: XOR<UserCreateWithoutWorkoutPlansInput, UserUncheckedCreateWithoutWorkoutPlansInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlansInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanEnrolmentCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
  }

  export type WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanReviewCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
  }

  export type WorkoutTagCreateNestedManyWithoutWorkoutPlansInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutWorkoutPlansInput>, Enumerable<WorkoutTagUncheckedCreateWithoutWorkoutPlansInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutWorkoutPlansInput>
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
  }

  export type WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanDayCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
  }

  export type CollectionCreateNestedManyWithoutWorkoutPlansInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutWorkoutPlansInput>, Enumerable<CollectionUncheckedCreateWithoutWorkoutPlansInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutWorkoutPlansInput>
    connect?: Enumerable<CollectionWhereUniqueInput>
  }

  export type DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutWorkoutPlanInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: DiscoverWorkoutPlanCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
  }

  export type WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanEnrolmentCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
  }

  export type WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanReviewCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
  }

  export type WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanDayCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
  }

  export type DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutWorkoutPlanInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutWorkoutPlanInput>
    createMany?: DiscoverWorkoutPlanCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutPlansInput = {
    create?: XOR<UserCreateWithoutWorkoutPlansInput, UserUncheckedCreateWithoutWorkoutPlansInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlansInput
    upsert?: UserUpsertWithoutWorkoutPlansInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutPlansInput, UserUncheckedUpdateWithoutWorkoutPlansInput>
  }

  export type WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<WorkoutPlanEnrolmentUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanEnrolmentCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutPlanEnrolmentUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<WorkoutPlanEnrolmentUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<WorkoutPlanEnrolmentScalarWhereInput>
  }

  export type WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<WorkoutPlanReviewUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanReviewCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    set?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    update?: Enumerable<WorkoutPlanReviewUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<WorkoutPlanReviewUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<WorkoutPlanReviewScalarWhereInput>
  }

  export type WorkoutTagUpdateManyWithoutWorkoutPlansInput = {
    create?: XOR<Enumerable<WorkoutTagCreateWithoutWorkoutPlansInput>, Enumerable<WorkoutTagUncheckedCreateWithoutWorkoutPlansInput>>
    connectOrCreate?: Enumerable<WorkoutTagCreateOrConnectWithoutWorkoutPlansInput>
    upsert?: Enumerable<WorkoutTagUpsertWithWhereUniqueWithoutWorkoutPlansInput>
    connect?: Enumerable<WorkoutTagWhereUniqueInput>
    set?: Enumerable<WorkoutTagWhereUniqueInput>
    disconnect?: Enumerable<WorkoutTagWhereUniqueInput>
    delete?: Enumerable<WorkoutTagWhereUniqueInput>
    update?: Enumerable<WorkoutTagUpdateWithWhereUniqueWithoutWorkoutPlansInput>
    updateMany?: Enumerable<WorkoutTagUpdateManyWithWhereWithoutWorkoutPlansInput>
    deleteMany?: Enumerable<WorkoutTagScalarWhereInput>
  }

  export type WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<WorkoutPlanDayUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanDayCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<WorkoutPlanDayUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<WorkoutPlanDayScalarWhereInput>
  }

  export type CollectionUpdateManyWithoutWorkoutPlansInput = {
    create?: XOR<Enumerable<CollectionCreateWithoutWorkoutPlansInput>, Enumerable<CollectionUncheckedCreateWithoutWorkoutPlansInput>>
    connectOrCreate?: Enumerable<CollectionCreateOrConnectWithoutWorkoutPlansInput>
    upsert?: Enumerable<CollectionUpsertWithWhereUniqueWithoutWorkoutPlansInput>
    connect?: Enumerable<CollectionWhereUniqueInput>
    set?: Enumerable<CollectionWhereUniqueInput>
    disconnect?: Enumerable<CollectionWhereUniqueInput>
    delete?: Enumerable<CollectionWhereUniqueInput>
    update?: Enumerable<CollectionUpdateWithWhereUniqueWithoutWorkoutPlansInput>
    updateMany?: Enumerable<CollectionUpdateManyWithWhereWithoutWorkoutPlansInput>
    deleteMany?: Enumerable<CollectionScalarWhereInput>
  }

  export type DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutWorkoutPlanInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<DiscoverWorkoutPlanUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: DiscoverWorkoutPlanCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutPlanUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<DiscoverWorkoutPlanUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<DiscoverWorkoutPlanScalarWhereInput>
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanEnrolmentCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanEnrolmentUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanEnrolmentCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<WorkoutPlanEnrolmentUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanEnrolmentCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    set?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanEnrolmentWhereUniqueInput>
    update?: Enumerable<WorkoutPlanEnrolmentUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<WorkoutPlanEnrolmentUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<WorkoutPlanEnrolmentScalarWhereInput>
  }

  export type WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanReviewCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanReviewUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanReviewCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<WorkoutPlanReviewUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanReviewCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    set?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanReviewWhereUniqueInput>
    update?: Enumerable<WorkoutPlanReviewUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<WorkoutPlanReviewUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<WorkoutPlanReviewScalarWhereInput>
  }

  export type WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<WorkoutPlanDayCreateWithoutWorkoutPlanInput>, Enumerable<WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<WorkoutPlanDayUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: WorkoutPlanDayCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<WorkoutPlanDayUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<WorkoutPlanDayScalarWhereInput>
  }

  export type DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutWorkoutPlanInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutWorkoutPlanInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutWorkoutPlanInput>
    upsert?: Enumerable<DiscoverWorkoutPlanUpsertWithWhereUniqueWithoutWorkoutPlanInput>
    createMany?: DiscoverWorkoutPlanCreateManyWorkoutPlanInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutPlanUpdateWithWhereUniqueWithoutWorkoutPlanInput>
    updateMany?: Enumerable<DiscoverWorkoutPlanUpdateManyWithWhereWithoutWorkoutPlanInput>
    deleteMany?: Enumerable<DiscoverWorkoutPlanScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutPlanDaysInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanDaysInput, UserUncheckedCreateWithoutWorkoutPlanDaysInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanDaysInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutPlanCreateNestedOneWithoutWorkoutPlanDaysInput = {
    create?: XOR<WorkoutPlanCreateWithoutWorkoutPlanDaysInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanDaysInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutWorkoutPlanDaysInput
    connect?: WorkoutPlanWhereUniqueInput
  }

  export type WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutPlanDayInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutPlanDayInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutPlanDayInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutPlanDayInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutPlanDayInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutPlanDayInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutPlanDayInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutPlanDayInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutPlanDayInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutPlanDaysInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanDaysInput, UserUncheckedCreateWithoutWorkoutPlanDaysInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanDaysInput
    upsert?: UserUpsertWithoutWorkoutPlanDaysInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutPlanDaysInput, UserUncheckedUpdateWithoutWorkoutPlanDaysInput>
  }

  export type WorkoutPlanUpdateOneRequiredWithoutWorkoutPlanDaysInput = {
    create?: XOR<WorkoutPlanCreateWithoutWorkoutPlanDaysInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanDaysInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutWorkoutPlanDaysInput
    upsert?: WorkoutPlanUpsertWithoutWorkoutPlanDaysInput
    connect?: WorkoutPlanWhereUniqueInput
    update?: XOR<WorkoutPlanUpdateWithoutWorkoutPlanDaysInput, WorkoutPlanUncheckedUpdateWithoutWorkoutPlanDaysInput>
  }

  export type WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutPlanDayInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutPlanDayInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutPlanDayInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutPlanDayInput>
    upsert?: Enumerable<WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanDayInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutPlanDayInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanDayInput>
    updateMany?: Enumerable<WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutWorkoutPlanDayInput>
    deleteMany?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayInput = {
    create?: XOR<Enumerable<WorkoutPlanDayWorkoutCreateWithoutWorkoutPlanDayInput>, Enumerable<WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutPlanDayInput>>
    connectOrCreate?: Enumerable<WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutPlanDayInput>
    upsert?: Enumerable<WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanDayInput>
    createMany?: WorkoutPlanDayWorkoutCreateManyWorkoutPlanDayInputEnvelope
    connect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    set?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    disconnect?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    delete?: Enumerable<WorkoutPlanDayWorkoutWhereUniqueInput>
    update?: Enumerable<WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanDayInput>
    updateMany?: Enumerable<WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutWorkoutPlanDayInput>
    deleteMany?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanDayWorkoutsInput, UserUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanDayWorkoutsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutCreateNestedOneWithoutWorkoutPlanDayWorkoutInput = {
    create?: XOR<WorkoutCreateWithoutWorkoutPlanDayWorkoutInput, WorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput
    connect?: WorkoutWhereUniqueInput
  }

  export type WorkoutPlanDayCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput = {
    create?: XOR<WorkoutPlanDayCreateWithoutWorkoutPlanDayWorkoutsInput, WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
    connectOrCreate?: WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanDayWorkoutsInput
    connect?: WorkoutPlanDayWhereUniqueInput
  }

  export type ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanDayWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanDayWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanDayWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanDayWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanDayWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanDayWorkoutsInput, UserUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanDayWorkoutsInput
    upsert?: UserUpsertWithoutWorkoutPlanDayWorkoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutPlanDayWorkoutsInput, UserUncheckedUpdateWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type WorkoutUpdateOneRequiredWithoutWorkoutPlanDayWorkoutInput = {
    create?: XOR<WorkoutCreateWithoutWorkoutPlanDayWorkoutInput, WorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput
    upsert?: WorkoutUpsertWithoutWorkoutPlanDayWorkoutInput
    connect?: WorkoutWhereUniqueInput
    update?: XOR<WorkoutUpdateWithoutWorkoutPlanDayWorkoutInput, WorkoutUncheckedUpdateWithoutWorkoutPlanDayWorkoutInput>
  }

  export type WorkoutPlanDayUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput = {
    create?: XOR<WorkoutPlanDayCreateWithoutWorkoutPlanDayWorkoutsInput, WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
    connectOrCreate?: WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanDayWorkoutsInput
    upsert?: WorkoutPlanDayUpsertWithoutWorkoutPlanDayWorkoutsInput
    connect?: WorkoutPlanDayWhereUniqueInput
    update?: XOR<WorkoutPlanDayUpdateWithoutWorkoutPlanDayWorkoutsInput, WorkoutPlanDayUncheckedUpdateWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutWorkoutPlanDayWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanDayWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanDayWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanDayWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanDayWorkoutInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutPlanDayWorkoutInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanDayWorkoutInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanDayWorkoutInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanDayWorkoutInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanDayWorkoutInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutPlanDayWorkoutInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput = {
    set: Enumerable<string>
  }

  export type WorkoutPlanCreateNestedOneWithoutEnrolmentsInput = {
    create?: XOR<WorkoutPlanCreateWithoutEnrolmentsInput, WorkoutPlanUncheckedCreateWithoutEnrolmentsInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutEnrolmentsInput
    connect?: WorkoutPlanWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutWorkoutPlanEnrolmentsInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanEnrolmentsInput, UserUncheckedCreateWithoutWorkoutPlanEnrolmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanEnrolmentsInput
    connect?: UserWhereUniqueInput
  }

  export type ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanEnrolmentInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanEnrolmentInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanEnrolmentInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanEnrolmentInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanEnrolmentInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanEnrolmentInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanEnrolmentInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanEnrolmentInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanEnrolmentInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanEnrolmentInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
  }

  export type WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type WorkoutPlanUpdateOneRequiredWithoutEnrolmentsInput = {
    create?: XOR<WorkoutPlanCreateWithoutEnrolmentsInput, WorkoutPlanUncheckedCreateWithoutEnrolmentsInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutEnrolmentsInput
    upsert?: WorkoutPlanUpsertWithoutEnrolmentsInput
    connect?: WorkoutPlanWhereUniqueInput
    update?: XOR<WorkoutPlanUpdateWithoutEnrolmentsInput, WorkoutPlanUncheckedUpdateWithoutEnrolmentsInput>
  }

  export type UserUpdateOneRequiredWithoutWorkoutPlanEnrolmentsInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanEnrolmentsInput, UserUncheckedCreateWithoutWorkoutPlanEnrolmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanEnrolmentsInput
    upsert?: UserUpsertWithoutWorkoutPlanEnrolmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutPlanEnrolmentsInput, UserUncheckedUpdateWithoutWorkoutPlanEnrolmentsInput>
  }

  export type ScheduledWorkoutUpdateManyWithoutWorkoutPlanEnrolmentInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanEnrolmentInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanEnrolmentInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanEnrolmentInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanEnrolmentInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanEnrolmentInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanEnrolmentInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutPlanEnrolmentInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanEnrolmentInput = {
    create?: XOR<Enumerable<ScheduledWorkoutCreateWithoutWorkoutPlanEnrolmentInput>, Enumerable<ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanEnrolmentInput>>
    connectOrCreate?: Enumerable<ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanEnrolmentInput>
    upsert?: Enumerable<ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanEnrolmentInput>
    createMany?: ScheduledWorkoutCreateManyWorkoutPlanEnrolmentInputEnvelope
    connect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    set?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    disconnect?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    delete?: Enumerable<ScheduledWorkoutWhereUniqueInput>
    update?: Enumerable<ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanEnrolmentInput>
    updateMany?: Enumerable<ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutPlanEnrolmentInput>
    deleteMany?: Enumerable<ScheduledWorkoutScalarWhereInput>
  }

  export type WorkoutPlanEnrolmentCreateManycompletedPlanDayWorkoutIdsInput = {
    set: Enumerable<string>
  }

  export type UserCreateNestedOneWithoutWorkoutPlanReviewsInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanReviewsInput, UserUncheckedCreateWithoutWorkoutPlanReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type WorkoutPlanCreateNestedOneWithoutWorkoutPlanReviewsInput = {
    create?: XOR<WorkoutPlanCreateWithoutWorkoutPlanReviewsInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanReviewsInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutWorkoutPlanReviewsInput
    connect?: WorkoutPlanWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutWorkoutPlanReviewsInput = {
    create?: XOR<UserCreateWithoutWorkoutPlanReviewsInput, UserUncheckedCreateWithoutWorkoutPlanReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutWorkoutPlanReviewsInput
    upsert?: UserUpsertWithoutWorkoutPlanReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutWorkoutPlanReviewsInput, UserUncheckedUpdateWithoutWorkoutPlanReviewsInput>
  }

  export type WorkoutPlanUpdateOneRequiredWithoutWorkoutPlanReviewsInput = {
    create?: XOR<WorkoutPlanCreateWithoutWorkoutPlanReviewsInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanReviewsInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutWorkoutPlanReviewsInput
    upsert?: WorkoutPlanUpsertWithoutWorkoutPlanReviewsInput
    connect?: WorkoutPlanWhereUniqueInput
    update?: XOR<WorkoutPlanUpdateWithoutWorkoutPlanReviewsInput, WorkoutPlanUncheckedUpdateWithoutWorkoutPlanReviewsInput>
  }

  export type UserCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutsInput, UserUncheckedCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: UserWhereUniqueInput
  }

  export type GymProfileCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<GymProfileCreateWithoutLoggedWorkoutsInput, GymProfileUncheckedCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: GymProfileWhereUniqueInput
  }

  export type LoggedWorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutLoggedWorkoutInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    createMany?: LoggedWorkoutSectionCreateManyLoggedWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
  }

  export type ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutCreateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
  }

  export type WorkoutCreateNestedOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutCreateWithoutLoggedWorkoutsInput, WorkoutUncheckedCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutLoggedWorkoutsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type LoggedWorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutLoggedWorkoutInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    createMany?: LoggedWorkoutSectionCreateManyLoggedWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
  }

  export type ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutCreateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutLoggedWorkoutsInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutsInput, UserUncheckedCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: UserUpsertWithoutLoggedWorkoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutLoggedWorkoutsInput, UserUncheckedUpdateWithoutLoggedWorkoutsInput>
  }

  export type GymProfileUpdateOneWithoutLoggedWorkoutsInput = {
    create?: XOR<GymProfileCreateWithoutLoggedWorkoutsInput, GymProfileUncheckedCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: GymProfileCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: GymProfileUpsertWithoutLoggedWorkoutsInput
    connect?: GymProfileWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<GymProfileUpdateWithoutLoggedWorkoutsInput, GymProfileUncheckedUpdateWithoutLoggedWorkoutsInput>
  }

  export type LoggedWorkoutSectionUpdateManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutLoggedWorkoutInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutSectionUpsertWithWhereUniqueWithoutLoggedWorkoutInput>
    createMany?: LoggedWorkoutSectionCreateManyLoggedWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSectionUpdateWithWhereUniqueWithoutLoggedWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutSectionUpdateManyWithWhereWithoutLoggedWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
  }

  export type ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutCreateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    upsert?: ScheduledWorkoutUpsertWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ScheduledWorkoutUpdateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput>
  }

  export type WorkoutUpdateOneWithoutLoggedWorkoutsInput = {
    create?: XOR<WorkoutCreateWithoutLoggedWorkoutsInput, WorkoutUncheckedCreateWithoutLoggedWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutLoggedWorkoutsInput
    upsert?: WorkoutUpsertWithoutLoggedWorkoutsInput
    connect?: WorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WorkoutUpdateWithoutLoggedWorkoutsInput, WorkoutUncheckedUpdateWithoutLoggedWorkoutsInput>
  }

  export type LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput = {
    create?: XOR<Enumerable<LoggedWorkoutSectionCreateWithoutLoggedWorkoutInput>, Enumerable<LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput>
    upsert?: Enumerable<LoggedWorkoutSectionUpsertWithWhereUniqueWithoutLoggedWorkoutInput>
    createMany?: LoggedWorkoutSectionCreateManyLoggedWorkoutInputEnvelope
    connect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSectionWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSectionUpdateWithWhereUniqueWithoutLoggedWorkoutInput>
    updateMany?: Enumerable<LoggedWorkoutSectionUpdateManyWithWhereWithoutLoggedWorkoutInput>
    deleteMany?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
  }

  export type ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput = {
    create?: XOR<ScheduledWorkoutCreateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput>
    connectOrCreate?: ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput
    upsert?: ScheduledWorkoutUpsertWithoutLoggedWorkoutInput
    connect?: ScheduledWorkoutWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ScheduledWorkoutUpdateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput>
  }

  export type UserCreateNestedOneWithoutLoggedWorkoutSectionsInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutSectionsInput, UserUncheckedCreateWithoutLoggedWorkoutSectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutSectionsInput
    connect?: UserWhereUniqueInput
  }

  export type LoggedWorkoutSetCreateNestedManyWithoutLoggedWorkoutSectionInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutLoggedWorkoutSectionInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutSectionInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutSectionInput>
    createMany?: LoggedWorkoutSetCreateManyLoggedWorkoutSectionInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
  }

  export type LoggedWorkoutCreateNestedOneWithoutLoggedWorkoutSectionsInput = {
    create?: XOR<LoggedWorkoutCreateWithoutLoggedWorkoutSectionsInput, LoggedWorkoutUncheckedCreateWithoutLoggedWorkoutSectionsInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutLoggedWorkoutSectionsInput
    connect?: LoggedWorkoutWhereUniqueInput
  }

  export type WorkoutSectionTypeCreateNestedOneWithoutLoggedWorkoutSectionsInput = {
    create?: XOR<WorkoutSectionTypeCreateWithoutLoggedWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutLoggedWorkoutSectionsInput>
    connectOrCreate?: WorkoutSectionTypeCreateOrConnectWithoutLoggedWorkoutSectionsInput
    connect?: WorkoutSectionTypeWhereUniqueInput
  }

  export type LoggedWorkoutSetUncheckedCreateNestedManyWithoutLoggedWorkoutSectionInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutLoggedWorkoutSectionInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutSectionInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutSectionInput>
    createMany?: LoggedWorkoutSetCreateManyLoggedWorkoutSectionInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutLoggedWorkoutSectionsInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutSectionsInput, UserUncheckedCreateWithoutLoggedWorkoutSectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutSectionsInput
    upsert?: UserUpsertWithoutLoggedWorkoutSectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutLoggedWorkoutSectionsInput, UserUncheckedUpdateWithoutLoggedWorkoutSectionsInput>
  }

  export type LoggedWorkoutSetUpdateManyWithoutLoggedWorkoutSectionInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutLoggedWorkoutSectionInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutSectionInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutSectionInput>
    upsert?: Enumerable<LoggedWorkoutSetUpsertWithWhereUniqueWithoutLoggedWorkoutSectionInput>
    createMany?: LoggedWorkoutSetCreateManyLoggedWorkoutSectionInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSetUpdateWithWhereUniqueWithoutLoggedWorkoutSectionInput>
    updateMany?: Enumerable<LoggedWorkoutSetUpdateManyWithWhereWithoutLoggedWorkoutSectionInput>
    deleteMany?: Enumerable<LoggedWorkoutSetScalarWhereInput>
  }

  export type LoggedWorkoutUpdateOneRequiredWithoutLoggedWorkoutSectionsInput = {
    create?: XOR<LoggedWorkoutCreateWithoutLoggedWorkoutSectionsInput, LoggedWorkoutUncheckedCreateWithoutLoggedWorkoutSectionsInput>
    connectOrCreate?: LoggedWorkoutCreateOrConnectWithoutLoggedWorkoutSectionsInput
    upsert?: LoggedWorkoutUpsertWithoutLoggedWorkoutSectionsInput
    connect?: LoggedWorkoutWhereUniqueInput
    update?: XOR<LoggedWorkoutUpdateWithoutLoggedWorkoutSectionsInput, LoggedWorkoutUncheckedUpdateWithoutLoggedWorkoutSectionsInput>
  }

  export type WorkoutSectionTypeUpdateOneRequiredWithoutLoggedWorkoutSectionsInput = {
    create?: XOR<WorkoutSectionTypeCreateWithoutLoggedWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutLoggedWorkoutSectionsInput>
    connectOrCreate?: WorkoutSectionTypeCreateOrConnectWithoutLoggedWorkoutSectionsInput
    upsert?: WorkoutSectionTypeUpsertWithoutLoggedWorkoutSectionsInput
    connect?: WorkoutSectionTypeWhereUniqueInput
    update?: XOR<WorkoutSectionTypeUpdateWithoutLoggedWorkoutSectionsInput, WorkoutSectionTypeUncheckedUpdateWithoutLoggedWorkoutSectionsInput>
  }

  export type LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSectionInput = {
    create?: XOR<Enumerable<LoggedWorkoutSetCreateWithoutLoggedWorkoutSectionInput>, Enumerable<LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutSectionInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutSectionInput>
    upsert?: Enumerable<LoggedWorkoutSetUpsertWithWhereUniqueWithoutLoggedWorkoutSectionInput>
    createMany?: LoggedWorkoutSetCreateManyLoggedWorkoutSectionInputEnvelope
    connect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutSetWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutSetUpdateWithWhereUniqueWithoutLoggedWorkoutSectionInput>
    updateMany?: Enumerable<LoggedWorkoutSetUpdateManyWithWhereWithoutLoggedWorkoutSectionInput>
    deleteMany?: Enumerable<LoggedWorkoutSetScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutLoggedWorkoutSetsInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutSetsInput, UserUncheckedCreateWithoutLoggedWorkoutSetsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutSetsInput
    connect?: UserWhereUniqueInput
  }

  export type LoggedWorkoutMoveCreateNestedManyWithoutLoggedWorkoutSetInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutLoggedWorkoutSetInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutLoggedWorkoutSetInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutLoggedWorkoutSetInput>
    createMany?: LoggedWorkoutMoveCreateManyLoggedWorkoutSetInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type LoggedWorkoutSectionCreateNestedOneWithoutLoggedWorkoutSetsInput = {
    create?: XOR<LoggedWorkoutSectionCreateWithoutLoggedWorkoutSetsInput, LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutSetsInput>
    connectOrCreate?: LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutSetsInput
    connect?: LoggedWorkoutSectionWhereUniqueInput
  }

  export type LoggedWorkoutMoveUncheckedCreateNestedManyWithoutLoggedWorkoutSetInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutLoggedWorkoutSetInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutLoggedWorkoutSetInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutLoggedWorkoutSetInput>
    createMany?: LoggedWorkoutMoveCreateManyLoggedWorkoutSetInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutLoggedWorkoutSetsInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutSetsInput, UserUncheckedCreateWithoutLoggedWorkoutSetsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutSetsInput
    upsert?: UserUpsertWithoutLoggedWorkoutSetsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutLoggedWorkoutSetsInput, UserUncheckedUpdateWithoutLoggedWorkoutSetsInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithoutLoggedWorkoutSetInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutLoggedWorkoutSetInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutLoggedWorkoutSetInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutLoggedWorkoutSetInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutLoggedWorkoutSetInput>
    createMany?: LoggedWorkoutMoveCreateManyLoggedWorkoutSetInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutLoggedWorkoutSetInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutLoggedWorkoutSetInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type LoggedWorkoutSectionUpdateOneRequiredWithoutLoggedWorkoutSetsInput = {
    create?: XOR<LoggedWorkoutSectionCreateWithoutLoggedWorkoutSetsInput, LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutSetsInput>
    connectOrCreate?: LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutSetsInput
    upsert?: LoggedWorkoutSectionUpsertWithoutLoggedWorkoutSetsInput
    connect?: LoggedWorkoutSectionWhereUniqueInput
    update?: XOR<LoggedWorkoutSectionUpdateWithoutLoggedWorkoutSetsInput, LoggedWorkoutSectionUncheckedUpdateWithoutLoggedWorkoutSetsInput>
  }

  export type LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutSetInput = {
    create?: XOR<Enumerable<LoggedWorkoutMoveCreateWithoutLoggedWorkoutSetInput>, Enumerable<LoggedWorkoutMoveUncheckedCreateWithoutLoggedWorkoutSetInput>>
    connectOrCreate?: Enumerable<LoggedWorkoutMoveCreateOrConnectWithoutLoggedWorkoutSetInput>
    upsert?: Enumerable<LoggedWorkoutMoveUpsertWithWhereUniqueWithoutLoggedWorkoutSetInput>
    createMany?: LoggedWorkoutMoveCreateManyLoggedWorkoutSetInputEnvelope
    connect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    set?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    disconnect?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    delete?: Enumerable<LoggedWorkoutMoveWhereUniqueInput>
    update?: Enumerable<LoggedWorkoutMoveUpdateWithWhereUniqueWithoutLoggedWorkoutSetInput>
    updateMany?: Enumerable<LoggedWorkoutMoveUpdateManyWithWhereWithoutLoggedWorkoutSetInput>
    deleteMany?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutLoggedWorkoutMovesInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutMovesInput, UserUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutMovesInput
    connect?: UserWhereUniqueInput
  }

  export type MoveCreateNestedOneWithoutLoggedWorkoutMovesInput = {
    create?: XOR<MoveCreateWithoutLoggedWorkoutMovesInput, MoveUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: MoveCreateOrConnectWithoutLoggedWorkoutMovesInput
    connect?: MoveWhereUniqueInput
  }

  export type EquipmentCreateNestedOneWithoutLoggedWorkoutMovesInput = {
    create?: XOR<EquipmentCreateWithoutLoggedWorkoutMovesInput, EquipmentUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutLoggedWorkoutMovesInput
    connect?: EquipmentWhereUniqueInput
  }

  export type LoggedWorkoutSetCreateNestedOneWithoutLoggedWorkoutMovesInput = {
    create?: XOR<LoggedWorkoutSetCreateWithoutLoggedWorkoutMovesInput, LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutMovesInput
    connect?: LoggedWorkoutSetWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutLoggedWorkoutMovesInput = {
    create?: XOR<UserCreateWithoutLoggedWorkoutMovesInput, UserUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLoggedWorkoutMovesInput
    upsert?: UserUpsertWithoutLoggedWorkoutMovesInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutLoggedWorkoutMovesInput, UserUncheckedUpdateWithoutLoggedWorkoutMovesInput>
  }

  export type MoveUpdateOneRequiredWithoutLoggedWorkoutMovesInput = {
    create?: XOR<MoveCreateWithoutLoggedWorkoutMovesInput, MoveUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: MoveCreateOrConnectWithoutLoggedWorkoutMovesInput
    upsert?: MoveUpsertWithoutLoggedWorkoutMovesInput
    connect?: MoveWhereUniqueInput
    update?: XOR<MoveUpdateWithoutLoggedWorkoutMovesInput, MoveUncheckedUpdateWithoutLoggedWorkoutMovesInput>
  }

  export type EquipmentUpdateOneWithoutLoggedWorkoutMovesInput = {
    create?: XOR<EquipmentCreateWithoutLoggedWorkoutMovesInput, EquipmentUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutLoggedWorkoutMovesInput
    upsert?: EquipmentUpsertWithoutLoggedWorkoutMovesInput
    connect?: EquipmentWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<EquipmentUpdateWithoutLoggedWorkoutMovesInput, EquipmentUncheckedUpdateWithoutLoggedWorkoutMovesInput>
  }

  export type LoggedWorkoutSetUpdateOneRequiredWithoutLoggedWorkoutMovesInput = {
    create?: XOR<LoggedWorkoutSetCreateWithoutLoggedWorkoutMovesInput, LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutMovesInput>
    connectOrCreate?: LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutMovesInput
    upsert?: LoggedWorkoutSetUpsertWithoutLoggedWorkoutMovesInput
    connect?: LoggedWorkoutSetWhereUniqueInput
    update?: XOR<LoggedWorkoutSetUpdateWithoutLoggedWorkoutMovesInput, LoggedWorkoutSetUncheckedUpdateWithoutLoggedWorkoutMovesInput>
  }

  export type UserCreateNestedOneWithoutProgressJournalsInput = {
    create?: XOR<UserCreateWithoutProgressJournalsInput, UserUncheckedCreateWithoutProgressJournalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalsInput
    connect?: UserWhereUniqueInput
  }

  export type ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    createMany?: ProgressJournalEntryCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
  }

  export type ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    createMany?: ProgressJournalGoalCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    createMany?: ProgressJournalEntryCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
  }

  export type ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    createMany?: ProgressJournalGoalCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutProgressJournalsInput = {
    create?: XOR<UserCreateWithoutProgressJournalsInput, UserUncheckedCreateWithoutProgressJournalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalsInput
    upsert?: UserUpsertWithoutProgressJournalsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutProgressJournalsInput, UserUncheckedUpdateWithoutProgressJournalsInput>
  }

  export type ProgressJournalEntryUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalEntryUpsertWithWhereUniqueWithoutProgressJournalInput>
    createMany?: ProgressJournalEntryCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    set?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    delete?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    update?: Enumerable<ProgressJournalEntryUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalEntryUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalEntryScalarWhereInput>
  }

  export type ProgressJournalGoalUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalInput>
    createMany?: ProgressJournalGoalCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalEntryCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalEntryUpsertWithWhereUniqueWithoutProgressJournalInput>
    createMany?: ProgressJournalEntryCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    set?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    delete?: Enumerable<ProgressJournalEntryWhereUniqueInput>
    update?: Enumerable<ProgressJournalEntryUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalEntryUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalEntryScalarWhereInput>
  }

  export type ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutProgressJournalInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalInput>
    createMany?: ProgressJournalGoalCreateManyProgressJournalInputEnvelope
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type ProgressJournalEntryCreateprogressPhotoUrisInput = {
    set: Enumerable<string>
  }

  export type UserCreateNestedOneWithoutProgressJournalEntrysInput = {
    create?: XOR<UserCreateWithoutProgressJournalEntrysInput, UserUncheckedCreateWithoutProgressJournalEntrysInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalEntrysInput
    connect?: UserWhereUniqueInput
  }

  export type ProgressJournalCreateNestedOneWithoutProgressJournalEntriesInput = {
    create?: XOR<ProgressJournalCreateWithoutProgressJournalEntriesInput, ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalEntriesInput
    connect?: ProgressJournalWhereUniqueInput
  }

  export type EnumBodyweightUnitFieldUpdateOperationsInput = {
    set?: BodyweightUnit
  }

  export type ProgressJournalEntryUpdateprogressPhotoUrisInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type UserUpdateOneRequiredWithoutProgressJournalEntrysInput = {
    create?: XOR<UserCreateWithoutProgressJournalEntrysInput, UserUncheckedCreateWithoutProgressJournalEntrysInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalEntrysInput
    upsert?: UserUpsertWithoutProgressJournalEntrysInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutProgressJournalEntrysInput, UserUncheckedUpdateWithoutProgressJournalEntrysInput>
  }

  export type ProgressJournalUpdateOneRequiredWithoutProgressJournalEntriesInput = {
    create?: XOR<ProgressJournalCreateWithoutProgressJournalEntriesInput, ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalEntriesInput
    upsert?: ProgressJournalUpsertWithoutProgressJournalEntriesInput
    connect?: ProgressJournalWhereUniqueInput
    update?: XOR<ProgressJournalUpdateWithoutProgressJournalEntriesInput, ProgressJournalUncheckedUpdateWithoutProgressJournalEntriesInput>
  }

  export type ProgressJournalEntryCreateManyprogressPhotoUrisInput = {
    set: Enumerable<string>
  }

  export type UserCreateNestedOneWithoutProgressJournalGoalsInput = {
    create?: XOR<UserCreateWithoutProgressJournalGoalsInput, UserUncheckedCreateWithoutProgressJournalGoalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalGoalsInput
    connect?: UserWhereUniqueInput
  }

  export type ProgressJournalGoalTagCreateNestedManyWithoutProgressJournalGoalsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput>, Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutProgressJournalGoalsInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
  }

  export type ProgressJournalCreateNestedOneWithoutProgressJournalGoalsInput = {
    create?: XOR<ProgressJournalCreateWithoutProgressJournalGoalsInput, ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalGoalsInput
    connect?: ProgressJournalWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutProgressJournalGoalsInput = {
    create?: XOR<UserCreateWithoutProgressJournalGoalsInput, UserUncheckedCreateWithoutProgressJournalGoalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalGoalsInput
    upsert?: UserUpsertWithoutProgressJournalGoalsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutProgressJournalGoalsInput, UserUncheckedUpdateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalTagUpdateManyWithoutProgressJournalGoalsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput>, Enumerable<ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalTagCreateOrConnectWithoutProgressJournalGoalsInput>
    upsert?: Enumerable<ProgressJournalGoalTagUpsertWithWhereUniqueWithoutProgressJournalGoalsInput>
    connect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalTagWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalTagUpdateWithWhereUniqueWithoutProgressJournalGoalsInput>
    updateMany?: Enumerable<ProgressJournalGoalTagUpdateManyWithWhereWithoutProgressJournalGoalsInput>
    deleteMany?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
  }

  export type ProgressJournalUpdateOneRequiredWithoutProgressJournalGoalsInput = {
    create?: XOR<ProgressJournalCreateWithoutProgressJournalGoalsInput, ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput>
    connectOrCreate?: ProgressJournalCreateOrConnectWithoutProgressJournalGoalsInput
    upsert?: ProgressJournalUpsertWithoutProgressJournalGoalsInput
    connect?: ProgressJournalWhereUniqueInput
    update?: XOR<ProgressJournalUpdateWithoutProgressJournalGoalsInput, ProgressJournalUncheckedUpdateWithoutProgressJournalGoalsInput>
  }

  export type UserCreateNestedOneWithoutProgressJournalGoalTagsInput = {
    create?: XOR<UserCreateWithoutProgressJournalGoalTagsInput, UserUncheckedCreateWithoutProgressJournalGoalTagsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalGoalTagsInput
    connect?: UserWhereUniqueInput
  }

  export type ProgressJournalGoalCreateNestedManyWithoutProgressJournalGoalTagsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalGoalTagsInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutProgressJournalGoalTagsInput = {
    create?: XOR<UserCreateWithoutProgressJournalGoalTagsInput, UserUncheckedCreateWithoutProgressJournalGoalTagsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProgressJournalGoalTagsInput
    upsert?: UserUpsertWithoutProgressJournalGoalTagsInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutProgressJournalGoalTagsInput, UserUncheckedUpdateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalUpdateManyWithoutProgressJournalGoalTagsInput = {
    create?: XOR<Enumerable<ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput>, Enumerable<ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput>>
    connectOrCreate?: Enumerable<ProgressJournalGoalCreateOrConnectWithoutProgressJournalGoalTagsInput>
    upsert?: Enumerable<ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalGoalTagsInput>
    connect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    set?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    disconnect?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    delete?: Enumerable<ProgressJournalGoalWhereUniqueInput>
    update?: Enumerable<ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalGoalTagsInput>
    updateMany?: Enumerable<ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalGoalTagsInput>
    deleteMany?: Enumerable<ProgressJournalGoalScalarWhereInput>
  }

  export type DiscoverWorkoutCreateNestedManyWithoutDiscoverWorkoutCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutDiscoverWorkoutCategoryInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutDiscoverWorkoutCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutDiscoverWorkoutCategoryInput>
    createMany?: DiscoverWorkoutCreateManyDiscoverWorkoutCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
  }

  export type DiscoverWorkoutUncheckedCreateNestedManyWithoutDiscoverWorkoutCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutDiscoverWorkoutCategoryInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutDiscoverWorkoutCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutDiscoverWorkoutCategoryInput>
    createMany?: DiscoverWorkoutCreateManyDiscoverWorkoutCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
  }

  export type DiscoverWorkoutUpdateManyWithoutDiscoverWorkoutCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutDiscoverWorkoutCategoryInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutDiscoverWorkoutCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutDiscoverWorkoutCategoryInput>
    upsert?: Enumerable<DiscoverWorkoutUpsertWithWhereUniqueWithoutDiscoverWorkoutCategoryInput>
    createMany?: DiscoverWorkoutCreateManyDiscoverWorkoutCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutUpdateWithWhereUniqueWithoutDiscoverWorkoutCategoryInput>
    updateMany?: Enumerable<DiscoverWorkoutUpdateManyWithWhereWithoutDiscoverWorkoutCategoryInput>
    deleteMany?: Enumerable<DiscoverWorkoutScalarWhereInput>
  }

  export type DiscoverWorkoutUncheckedUpdateManyWithoutDiscoverWorkoutCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutCreateWithoutDiscoverWorkoutCategoryInput>, Enumerable<DiscoverWorkoutUncheckedCreateWithoutDiscoverWorkoutCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutCreateOrConnectWithoutDiscoverWorkoutCategoryInput>
    upsert?: Enumerable<DiscoverWorkoutUpsertWithWhereUniqueWithoutDiscoverWorkoutCategoryInput>
    createMany?: DiscoverWorkoutCreateManyDiscoverWorkoutCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutUpdateWithWhereUniqueWithoutDiscoverWorkoutCategoryInput>
    updateMany?: Enumerable<DiscoverWorkoutUpdateManyWithWhereWithoutDiscoverWorkoutCategoryInput>
    deleteMany?: Enumerable<DiscoverWorkoutScalarWhereInput>
  }

  export type WorkoutCreateNestedOneWithoutDiscoverWorkoutsInput = {
    create?: XOR<WorkoutCreateWithoutDiscoverWorkoutsInput, WorkoutUncheckedCreateWithoutDiscoverWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutDiscoverWorkoutsInput
    connect?: WorkoutWhereUniqueInput
  }

  export type DiscoverWorkoutCategoryCreateNestedOneWithoutDiscoverWorkoutsInput = {
    create?: XOR<DiscoverWorkoutCategoryCreateWithoutDiscoverWorkoutsInput, DiscoverWorkoutCategoryUncheckedCreateWithoutDiscoverWorkoutsInput>
    connectOrCreate?: DiscoverWorkoutCategoryCreateOrConnectWithoutDiscoverWorkoutsInput
    connect?: DiscoverWorkoutCategoryWhereUniqueInput
  }

  export type WorkoutUpdateOneRequiredWithoutDiscoverWorkoutsInput = {
    create?: XOR<WorkoutCreateWithoutDiscoverWorkoutsInput, WorkoutUncheckedCreateWithoutDiscoverWorkoutsInput>
    connectOrCreate?: WorkoutCreateOrConnectWithoutDiscoverWorkoutsInput
    upsert?: WorkoutUpsertWithoutDiscoverWorkoutsInput
    connect?: WorkoutWhereUniqueInput
    update?: XOR<WorkoutUpdateWithoutDiscoverWorkoutsInput, WorkoutUncheckedUpdateWithoutDiscoverWorkoutsInput>
  }

  export type DiscoverWorkoutCategoryUpdateOneRequiredWithoutDiscoverWorkoutsInput = {
    create?: XOR<DiscoverWorkoutCategoryCreateWithoutDiscoverWorkoutsInput, DiscoverWorkoutCategoryUncheckedCreateWithoutDiscoverWorkoutsInput>
    connectOrCreate?: DiscoverWorkoutCategoryCreateOrConnectWithoutDiscoverWorkoutsInput
    upsert?: DiscoverWorkoutCategoryUpsertWithoutDiscoverWorkoutsInput
    connect?: DiscoverWorkoutCategoryWhereUniqueInput
    update?: XOR<DiscoverWorkoutCategoryUpdateWithoutDiscoverWorkoutsInput, DiscoverWorkoutCategoryUncheckedUpdateWithoutDiscoverWorkoutsInput>
  }

  export type DiscoverWorkoutPlanCreateNestedManyWithoutDiscoverWorkoutPlanCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutDiscoverWorkoutPlanCategoryInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlanCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlanCategoryInput>
    createMany?: DiscoverWorkoutPlanCreateManyDiscoverWorkoutPlanCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
  }

  export type DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutDiscoverWorkoutPlanCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutDiscoverWorkoutPlanCategoryInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlanCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlanCategoryInput>
    createMany?: DiscoverWorkoutPlanCreateManyDiscoverWorkoutPlanCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
  }

  export type DiscoverWorkoutPlanUpdateManyWithoutDiscoverWorkoutPlanCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutDiscoverWorkoutPlanCategoryInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlanCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlanCategoryInput>
    upsert?: Enumerable<DiscoverWorkoutPlanUpsertWithWhereUniqueWithoutDiscoverWorkoutPlanCategoryInput>
    createMany?: DiscoverWorkoutPlanCreateManyDiscoverWorkoutPlanCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutPlanUpdateWithWhereUniqueWithoutDiscoverWorkoutPlanCategoryInput>
    updateMany?: Enumerable<DiscoverWorkoutPlanUpdateManyWithWhereWithoutDiscoverWorkoutPlanCategoryInput>
    deleteMany?: Enumerable<DiscoverWorkoutPlanScalarWhereInput>
  }

  export type DiscoverWorkoutPlanUncheckedUpdateManyWithoutDiscoverWorkoutPlanCategoryInput = {
    create?: XOR<Enumerable<DiscoverWorkoutPlanCreateWithoutDiscoverWorkoutPlanCategoryInput>, Enumerable<DiscoverWorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlanCategoryInput>>
    connectOrCreate?: Enumerable<DiscoverWorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlanCategoryInput>
    upsert?: Enumerable<DiscoverWorkoutPlanUpsertWithWhereUniqueWithoutDiscoverWorkoutPlanCategoryInput>
    createMany?: DiscoverWorkoutPlanCreateManyDiscoverWorkoutPlanCategoryInputEnvelope
    connect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    set?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    disconnect?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    delete?: Enumerable<DiscoverWorkoutPlanWhereUniqueInput>
    update?: Enumerable<DiscoverWorkoutPlanUpdateWithWhereUniqueWithoutDiscoverWorkoutPlanCategoryInput>
    updateMany?: Enumerable<DiscoverWorkoutPlanUpdateManyWithWhereWithoutDiscoverWorkoutPlanCategoryInput>
    deleteMany?: Enumerable<DiscoverWorkoutPlanScalarWhereInput>
  }

  export type WorkoutPlanCreateNestedOneWithoutDiscoverWorkoutPlansInput = {
    create?: XOR<WorkoutPlanCreateWithoutDiscoverWorkoutPlansInput, WorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlansInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlansInput
    connect?: WorkoutPlanWhereUniqueInput
  }

  export type DiscoverWorkoutPlanCategoryCreateNestedOneWithoutDiscoverWorkoutPlansInput = {
    create?: XOR<DiscoverWorkoutPlanCategoryCreateWithoutDiscoverWorkoutPlansInput, DiscoverWorkoutPlanCategoryUncheckedCreateWithoutDiscoverWorkoutPlansInput>
    connectOrCreate?: DiscoverWorkoutPlanCategoryCreateOrConnectWithoutDiscoverWorkoutPlansInput
    connect?: DiscoverWorkoutPlanCategoryWhereUniqueInput
  }

  export type WorkoutPlanUpdateOneRequiredWithoutDiscoverWorkoutPlansInput = {
    create?: XOR<WorkoutPlanCreateWithoutDiscoverWorkoutPlansInput, WorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlansInput>
    connectOrCreate?: WorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlansInput
    upsert?: WorkoutPlanUpsertWithoutDiscoverWorkoutPlansInput
    connect?: WorkoutPlanWhereUniqueInput
    update?: XOR<WorkoutPlanUpdateWithoutDiscoverWorkoutPlansInput, WorkoutPlanUncheckedUpdateWithoutDiscoverWorkoutPlansInput>
  }

  export type DiscoverWorkoutPlanCategoryUpdateOneRequiredWithoutDiscoverWorkoutPlansInput = {
    create?: XOR<DiscoverWorkoutPlanCategoryCreateWithoutDiscoverWorkoutPlansInput, DiscoverWorkoutPlanCategoryUncheckedCreateWithoutDiscoverWorkoutPlansInput>
    connectOrCreate?: DiscoverWorkoutPlanCategoryCreateOrConnectWithoutDiscoverWorkoutPlansInput
    upsert?: DiscoverWorkoutPlanCategoryUpsertWithoutDiscoverWorkoutPlansInput
    connect?: DiscoverWorkoutPlanCategoryWhereUniqueInput
    update?: XOR<DiscoverWorkoutPlanCategoryUpdateWithoutDiscoverWorkoutPlansInput, DiscoverWorkoutPlanCategoryUncheckedUpdateWithoutDiscoverWorkoutPlansInput>
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedStringFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedStringFilter
    _max?: NestedStringFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedStringFilter
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedDateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedDateTimeFilter
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedEnumBodyAreaFrontBackFilter = {
    equals?: BodyAreaFrontBack
    in?: Enumerable<BodyAreaFrontBack>
    notIn?: Enumerable<BodyAreaFrontBack>
    not?: NestedEnumBodyAreaFrontBackFilter | BodyAreaFrontBack
  }

  export type NestedEnumBodyAreaUpperLowerFilter = {
    equals?: BodyAreaUpperLower
    in?: Enumerable<BodyAreaUpperLower>
    notIn?: Enumerable<BodyAreaUpperLower>
    not?: NestedEnumBodyAreaUpperLowerFilter | BodyAreaUpperLower
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedStringNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedEnumBodyAreaFrontBackWithAggregatesFilter = {
    equals?: BodyAreaFrontBack
    in?: Enumerable<BodyAreaFrontBack>
    notIn?: Enumerable<BodyAreaFrontBack>
    not?: NestedEnumBodyAreaFrontBackWithAggregatesFilter | BodyAreaFrontBack
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBodyAreaFrontBackFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBodyAreaFrontBackFilter
    _max?: NestedEnumBodyAreaFrontBackFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBodyAreaFrontBackFilter
  }

  export type NestedEnumBodyAreaUpperLowerWithAggregatesFilter = {
    equals?: BodyAreaUpperLower
    in?: Enumerable<BodyAreaUpperLower>
    notIn?: Enumerable<BodyAreaUpperLower>
    not?: NestedEnumBodyAreaUpperLowerWithAggregatesFilter | BodyAreaUpperLower
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBodyAreaUpperLowerFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBodyAreaUpperLowerFilter
    _max?: NestedEnumBodyAreaUpperLowerFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBodyAreaUpperLowerFilter
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _avg?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedIntFilter
    _min?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedIntFilter
    _max?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedBoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedBoolFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedBoolFilter
    _max?: NestedBoolFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedBoolFilter
  }

  export type NestedEnumMoveScopeFilter = {
    equals?: MoveScope
    in?: Enumerable<MoveScope>
    notIn?: Enumerable<MoveScope>
    not?: NestedEnumMoveScopeFilter | MoveScope
  }

  export type NestedEnumMoveScopeWithAggregatesFilter = {
    equals?: MoveScope
    in?: Enumerable<MoveScope>
    notIn?: Enumerable<MoveScope>
    not?: NestedEnumMoveScopeWithAggregatesFilter | MoveScope
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumMoveScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumMoveScopeFilter
    _max?: NestedEnumMoveScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumMoveScopeFilter
  }

  export type NestedEnumUserProfileScopeFilter = {
    equals?: UserProfileScope
    in?: Enumerable<UserProfileScope>
    notIn?: Enumerable<UserProfileScope>
    not?: NestedEnumUserProfileScopeFilter | UserProfileScope
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedEnumGenderNullableFilter = {
    equals?: Gender | null
    in?: Enumerable<Gender> | null
    notIn?: Enumerable<Gender> | null
    not?: NestedEnumGenderNullableFilter | Gender | null
  }

  export type NestedEnumUserProfileScopeWithAggregatesFilter = {
    equals?: UserProfileScope
    in?: Enumerable<UserProfileScope>
    notIn?: Enumerable<UserProfileScope>
    not?: NestedEnumUserProfileScopeWithAggregatesFilter | UserProfileScope
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumUserProfileScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumUserProfileScopeFilter
    _max?: NestedEnumUserProfileScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumUserProfileScopeFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedDateTimeNullableFilter
  }

  export type NestedEnumGenderNullableWithAggregatesFilter = {
    equals?: Gender | null
    in?: Enumerable<Gender> | null
    notIn?: Enumerable<Gender> | null
    not?: NestedEnumGenderNullableWithAggregatesFilter | Gender | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _min?: NestedEnumGenderNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumGenderNullableFilter
    _max?: NestedEnumGenderNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumGenderNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedEnumWorkoutMoveRepTypeFilter = {
    equals?: WorkoutMoveRepType
    in?: Enumerable<WorkoutMoveRepType>
    notIn?: Enumerable<WorkoutMoveRepType>
    not?: NestedEnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
  }

  export type NestedEnumLoadUnitFilter = {
    equals?: LoadUnit
    in?: Enumerable<LoadUnit>
    notIn?: Enumerable<LoadUnit>
    not?: NestedEnumLoadUnitFilter | LoadUnit
  }

  export type NestedEnumDistanceUnitFilter = {
    equals?: DistanceUnit
    in?: Enumerable<DistanceUnit>
    notIn?: Enumerable<DistanceUnit>
    not?: NestedEnumDistanceUnitFilter | DistanceUnit
  }

  export type NestedEnumTimeUnitFilter = {
    equals?: TimeUnit
    in?: Enumerable<TimeUnit>
    notIn?: Enumerable<TimeUnit>
    not?: NestedEnumTimeUnitFilter | TimeUnit
  }

  export type NestedEnumBenchmarkTypeFilter = {
    equals?: BenchmarkType
    in?: Enumerable<BenchmarkType>
    notIn?: Enumerable<BenchmarkType>
    not?: NestedEnumBenchmarkTypeFilter | BenchmarkType
  }

  export type NestedFloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedFloatNullableFilter
  }

  export type NestedEnumWorkoutMoveRepTypeWithAggregatesFilter = {
    equals?: WorkoutMoveRepType
    in?: Enumerable<WorkoutMoveRepType>
    notIn?: Enumerable<WorkoutMoveRepType>
    not?: NestedEnumWorkoutMoveRepTypeWithAggregatesFilter | WorkoutMoveRepType
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumWorkoutMoveRepTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumWorkoutMoveRepTypeFilter
    _max?: NestedEnumWorkoutMoveRepTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumWorkoutMoveRepTypeFilter
  }

  export type NestedEnumLoadUnitWithAggregatesFilter = {
    equals?: LoadUnit
    in?: Enumerable<LoadUnit>
    notIn?: Enumerable<LoadUnit>
    not?: NestedEnumLoadUnitWithAggregatesFilter | LoadUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumLoadUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumLoadUnitFilter
    _max?: NestedEnumLoadUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumLoadUnitFilter
  }

  export type NestedEnumDistanceUnitWithAggregatesFilter = {
    equals?: DistanceUnit
    in?: Enumerable<DistanceUnit>
    notIn?: Enumerable<DistanceUnit>
    not?: NestedEnumDistanceUnitWithAggregatesFilter | DistanceUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumDistanceUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumDistanceUnitFilter
    _max?: NestedEnumDistanceUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumDistanceUnitFilter
  }

  export type NestedEnumTimeUnitWithAggregatesFilter = {
    equals?: TimeUnit
    in?: Enumerable<TimeUnit>
    notIn?: Enumerable<TimeUnit>
    not?: NestedEnumTimeUnitWithAggregatesFilter | TimeUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumTimeUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumTimeUnitFilter
    _max?: NestedEnumTimeUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumTimeUnitFilter
  }

  export type NestedEnumBenchmarkTypeWithAggregatesFilter = {
    equals?: BenchmarkType
    in?: Enumerable<BenchmarkType>
    notIn?: Enumerable<BenchmarkType>
    not?: NestedEnumBenchmarkTypeWithAggregatesFilter | BenchmarkType
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBenchmarkTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBenchmarkTypeFilter
    _max?: NestedEnumBenchmarkTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBenchmarkTypeFilter
  }

  export type NestedFloatWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatWithAggregatesFilter | number
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _avg?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatFilter
    _sum?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedFloatFilter
    _min?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedFloatFilter
    _max?: NestedFloatFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedFloatFilter
  }

  export type NestedEnumDifficultyLevelFilter = {
    equals?: DifficultyLevel
    in?: Enumerable<DifficultyLevel>
    notIn?: Enumerable<DifficultyLevel>
    not?: NestedEnumDifficultyLevelFilter | DifficultyLevel
  }

  export type NestedEnumContentAccessScopeFilter = {
    equals?: ContentAccessScope
    in?: Enumerable<ContentAccessScope>
    notIn?: Enumerable<ContentAccessScope>
    not?: NestedEnumContentAccessScopeFilter | ContentAccessScope
  }
  export type NestedJsonNullableFilter = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase>, Exclude<keyof Required<NestedJsonNullableFilterBase>, 'path'>>,
        Required<NestedJsonNullableFilterBase>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase>, 'path'>>

  export type NestedJsonNullableFilterBase = {
    equals?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue
    array_starts_with?: InputJsonValue
    array_ends_with?: InputJsonValue
    not?: InputJsonValue | null
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedIntNullableFilter
  }

  export type NestedEnumDifficultyLevelWithAggregatesFilter = {
    equals?: DifficultyLevel
    in?: Enumerable<DifficultyLevel>
    notIn?: Enumerable<DifficultyLevel>
    not?: NestedEnumDifficultyLevelWithAggregatesFilter | DifficultyLevel
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumDifficultyLevelFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumDifficultyLevelFilter
    _max?: NestedEnumDifficultyLevelFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumDifficultyLevelFilter
  }

  export type NestedEnumContentAccessScopeWithAggregatesFilter = {
    equals?: ContentAccessScope
    in?: Enumerable<ContentAccessScope>
    notIn?: Enumerable<ContentAccessScope>
    not?: NestedEnumContentAccessScopeWithAggregatesFilter | ContentAccessScope
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumContentAccessScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumContentAccessScopeFilter
    _max?: NestedEnumContentAccessScopeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumContentAccessScopeFilter
  }

  export type NestedEnumWorkoutSetGeneratorTypeFilter = {
    equals?: WorkoutSetGeneratorType
    in?: Enumerable<WorkoutSetGeneratorType>
    notIn?: Enumerable<WorkoutSetGeneratorType>
    not?: NestedEnumWorkoutSetGeneratorTypeFilter | WorkoutSetGeneratorType
  }

  export type NestedEnumWorkoutSetGeneratorTargetFilter = {
    equals?: WorkoutSetGeneratorTarget
    in?: Enumerable<WorkoutSetGeneratorTarget>
    notIn?: Enumerable<WorkoutSetGeneratorTarget>
    not?: NestedEnumWorkoutSetGeneratorTargetFilter | WorkoutSetGeneratorTarget
  }

  export type NestedEnumWorkoutSetGeneratorTypeWithAggregatesFilter = {
    equals?: WorkoutSetGeneratorType
    in?: Enumerable<WorkoutSetGeneratorType>
    notIn?: Enumerable<WorkoutSetGeneratorType>
    not?: NestedEnumWorkoutSetGeneratorTypeWithAggregatesFilter | WorkoutSetGeneratorType
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumWorkoutSetGeneratorTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumWorkoutSetGeneratorTypeFilter
    _max?: NestedEnumWorkoutSetGeneratorTypeFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumWorkoutSetGeneratorTypeFilter
  }

  export type NestedEnumWorkoutSetGeneratorTargetWithAggregatesFilter = {
    equals?: WorkoutSetGeneratorTarget
    in?: Enumerable<WorkoutSetGeneratorTarget>
    notIn?: Enumerable<WorkoutSetGeneratorTarget>
    not?: NestedEnumWorkoutSetGeneratorTargetWithAggregatesFilter | WorkoutSetGeneratorTarget
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumWorkoutSetGeneratorTargetFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumWorkoutSetGeneratorTargetFilter
    _max?: NestedEnumWorkoutSetGeneratorTargetFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumWorkoutSetGeneratorTargetFilter
  }
  export type NestedJsonFilter = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase>, Exclude<keyof Required<NestedJsonFilterBase>, 'path'>>,
        Required<NestedJsonFilterBase>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase>, 'path'>>

  export type NestedJsonFilterBase = {
    equals?: InputJsonValue
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue
    array_starts_with?: InputJsonValue
    array_ends_with?: InputJsonValue
    not?: InputJsonValue
  }

  export type NestedEnumBodyweightUnitFilter = {
    equals?: BodyweightUnit
    in?: Enumerable<BodyweightUnit>
    notIn?: Enumerable<BodyweightUnit>
    not?: NestedEnumBodyweightUnitFilter | BodyweightUnit
  }

  export type NestedEnumBodyweightUnitWithAggregatesFilter = {
    equals?: BodyweightUnit
    in?: Enumerable<BodyweightUnit>
    notIn?: Enumerable<BodyweightUnit>
    not?: NestedEnumBodyweightUnitWithAggregatesFilter | BodyweightUnit
    _count?: NestedIntFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    count?: NestedIntFilter
    _min?: NestedEnumBodyweightUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    min?: NestedEnumBodyweightUnitFilter
    _max?: NestedEnumBodyweightUnitFilter
    /**
     * @deprecated since 2.23 because Aggregation keywords got unified to use underscore as prefix to prevent field clashes.
     * 
    **/
    max?: NestedEnumBodyweightUnitFilter
  }

  export type BodyAreaMoveScoreCreateWithoutBodyAreaInput = {
    createdAt?: Date | string
    score?: number
    Move: MoveCreateNestedOneWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput = {
    createdAt?: Date | string
    moveId: string
    score?: number
  }

  export type BodyAreaMoveScoreCreateOrConnectWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    create: XOR<BodyAreaMoveScoreCreateWithoutBodyAreaInput, BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>
  }

  export type BodyAreaMoveScoreCreateManyBodyAreaInputEnvelope = {
    data: Enumerable<BodyAreaMoveScoreCreateManyBodyAreaInput>
    skipDuplicates?: boolean
  }

  export type BodyAreaMoveScoreUpsertWithWhereUniqueWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    update: XOR<BodyAreaMoveScoreUpdateWithoutBodyAreaInput, BodyAreaMoveScoreUncheckedUpdateWithoutBodyAreaInput>
    create: XOR<BodyAreaMoveScoreCreateWithoutBodyAreaInput, BodyAreaMoveScoreUncheckedCreateWithoutBodyAreaInput>
  }

  export type BodyAreaMoveScoreUpdateWithWhereUniqueWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    data: XOR<BodyAreaMoveScoreUpdateWithoutBodyAreaInput, BodyAreaMoveScoreUncheckedUpdateWithoutBodyAreaInput>
  }

  export type BodyAreaMoveScoreUpdateManyWithWhereWithoutBodyAreaInput = {
    where: BodyAreaMoveScoreScalarWhereInput
    data: XOR<BodyAreaMoveScoreUpdateManyMutationInput, BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaMoveScoresInput>
  }

  export type BodyAreaMoveScoreScalarWhereInput = {
    AND?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
    OR?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
    NOT?: Enumerable<BodyAreaMoveScoreScalarWhereInput>
    createdAt?: DateTimeFilter | Date | string
    moveId?: StringFilter | string
    bodyAreaId?: StringFilter | string
    score?: IntFilter | number
  }

  export type MoveCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutBodyAreaMoveScoresInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutBodyAreaMoveScoresInput, MoveUncheckedCreateWithoutBodyAreaMoveScoresInput>
  }

  export type BodyAreaCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
  }

  export type BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    frontBack?: BodyAreaFrontBack
    upperLower?: BodyAreaUpperLower
  }

  export type BodyAreaCreateOrConnectWithoutBodyAreaMoveScoresInput = {
    where: BodyAreaWhereUniqueInput
    create: XOR<BodyAreaCreateWithoutBodyAreaMoveScoresInput, BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput>
  }

  export type MoveUpsertWithoutBodyAreaMoveScoresInput = {
    update: XOR<MoveUpdateWithoutBodyAreaMoveScoresInput, MoveUncheckedUpdateWithoutBodyAreaMoveScoresInput>
    create: XOR<MoveCreateWithoutBodyAreaMoveScoresInput, MoveUncheckedCreateWithoutBodyAreaMoveScoresInput>
  }

  export type MoveUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type BodyAreaUpsertWithoutBodyAreaMoveScoresInput = {
    update: XOR<BodyAreaUpdateWithoutBodyAreaMoveScoresInput, BodyAreaUncheckedUpdateWithoutBodyAreaMoveScoresInput>
    create: XOR<BodyAreaCreateWithoutBodyAreaMoveScoresInput, BodyAreaUncheckedCreateWithoutBodyAreaMoveScoresInput>
  }

  export type BodyAreaUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type BodyAreaUncheckedUpdateWithoutBodyAreaMoveScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    frontBack?: EnumBodyAreaFrontBackFieldUpdateOperationsInput | BodyAreaFrontBack
    upperLower?: EnumBodyAreaUpperLowerFieldUpdateOperationsInput | BodyAreaUpperLower
  }

  export type MoveCreateWithoutRequiredEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutRequiredEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutRequiredEquipmentsInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutRequiredEquipmentsInput, MoveUncheckedCreateWithoutRequiredEquipmentsInput>
  }

  export type MoveCreateWithoutSelectableEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutSelectableEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutSelectableEquipmentsInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutSelectableEquipmentsInput, MoveUncheckedCreateWithoutSelectableEquipmentsInput>
  }

  export type GymProfileCreateWithoutEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutEquipmentsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutEquipmentsInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileCreateWithoutEquipmentsInput, GymProfileUncheckedCreateWithoutEquipmentsInput>
  }

  export type WorkoutMoveCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    User: UserCreateNestedOneWithoutWorkoutMovesInput
    Move: MoveCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    workoutSetId: string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveCreateOrConnectWithoutEquipmentInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveCreateWithoutEquipmentInput, WorkoutMoveUncheckedCreateWithoutEquipmentInput>
  }

  export type WorkoutMoveCreateManyEquipmentInputEnvelope = {
    data: Enumerable<WorkoutMoveCreateManyEquipmentInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutMoveCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    User: UserCreateNestedOneWithoutLoggedWorkoutMovesInput
    Move: MoveCreateNestedOneWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet: LoggedWorkoutSetCreateNestedOneWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    loggedWorkoutSetId: string
  }

  export type LoggedWorkoutMoveCreateOrConnectWithoutEquipmentInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    create: XOR<LoggedWorkoutMoveCreateWithoutEquipmentInput, LoggedWorkoutMoveUncheckedCreateWithoutEquipmentInput>
  }

  export type LoggedWorkoutMoveCreateManyEquipmentInputEnvelope = {
    data: Enumerable<LoggedWorkoutMoveCreateManyEquipmentInput>
    skipDuplicates?: boolean
  }

  export type UserBenchmarkCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    benchmarkType?: BenchmarkType
    User: UserCreateNestedOneWithoutUserBenchmarksInput
    Move: MoveCreateNestedOneWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedCreateWithoutEquipmentInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    moveId: string
    benchmarkType?: BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateOrConnectWithoutEquipmentInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkCreateWithoutEquipmentInput, UserBenchmarkUncheckedCreateWithoutEquipmentInput>
  }

  export type UserBenchmarkCreateManyEquipmentInputEnvelope = {
    data: Enumerable<UserBenchmarkCreateManyEquipmentInput>
    skipDuplicates?: boolean
  }

  export type MoveUpsertWithWhereUniqueWithoutRequiredEquipmentsInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUpdateWithoutRequiredEquipmentsInput, MoveUncheckedUpdateWithoutRequiredEquipmentsInput>
    create: XOR<MoveCreateWithoutRequiredEquipmentsInput, MoveUncheckedCreateWithoutRequiredEquipmentsInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutRequiredEquipmentsInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUpdateWithoutRequiredEquipmentsInput, MoveUncheckedUpdateWithoutRequiredEquipmentsInput>
  }

  export type MoveUpdateManyWithWhereWithoutRequiredEquipmentsInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUpdateManyMutationInput, MoveUncheckedUpdateManyWithoutRequiredForMovesInput>
  }

  export type MoveScalarWhereInput = {
    AND?: Enumerable<MoveScalarWhereInput>
    OR?: Enumerable<MoveScalarWhereInput>
    NOT?: Enumerable<MoveScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    userId?: StringNullableFilter | string | null
    scope?: EnumMoveScopeFilter | MoveScope
    name?: StringFilter | string
    searchTerms?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    demoVideoUri?: StringNullableFilter | string | null
    demoVideoThumbUri?: StringNullableFilter | string | null
    validRepTypes?: EnumWorkoutMoveRepTypeNullableListFilter
    moveTypeId?: StringNullableFilter | string | null
  }

  export type MoveUpsertWithWhereUniqueWithoutSelectableEquipmentsInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUpdateWithoutSelectableEquipmentsInput, MoveUncheckedUpdateWithoutSelectableEquipmentsInput>
    create: XOR<MoveCreateWithoutSelectableEquipmentsInput, MoveUncheckedCreateWithoutSelectableEquipmentsInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutSelectableEquipmentsInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUpdateWithoutSelectableEquipmentsInput, MoveUncheckedUpdateWithoutSelectableEquipmentsInput>
  }

  export type MoveUpdateManyWithWhereWithoutSelectableEquipmentsInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUpdateManyMutationInput, MoveUncheckedUpdateManyWithoutSelectableForMovesInput>
  }

  export type GymProfileUpsertWithWhereUniqueWithoutEquipmentsInput = {
    where: GymProfileWhereUniqueInput
    update: XOR<GymProfileUpdateWithoutEquipmentsInput, GymProfileUncheckedUpdateWithoutEquipmentsInput>
    create: XOR<GymProfileCreateWithoutEquipmentsInput, GymProfileUncheckedCreateWithoutEquipmentsInput>
  }

  export type GymProfileUpdateWithWhereUniqueWithoutEquipmentsInput = {
    where: GymProfileWhereUniqueInput
    data: XOR<GymProfileUpdateWithoutEquipmentsInput, GymProfileUncheckedUpdateWithoutEquipmentsInput>
  }

  export type GymProfileUpdateManyWithWhereWithoutEquipmentsInput = {
    where: GymProfileScalarWhereInput
    data: XOR<GymProfileUpdateManyMutationInput, GymProfileUncheckedUpdateManyWithoutGymProfilesInput>
  }

  export type GymProfileScalarWhereInput = {
    AND?: Enumerable<GymProfileScalarWhereInput>
    OR?: Enumerable<GymProfileScalarWhereInput>
    NOT?: Enumerable<GymProfileScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
  }

  export type WorkoutMoveUpsertWithWhereUniqueWithoutEquipmentInput = {
    where: WorkoutMoveWhereUniqueInput
    update: XOR<WorkoutMoveUpdateWithoutEquipmentInput, WorkoutMoveUncheckedUpdateWithoutEquipmentInput>
    create: XOR<WorkoutMoveCreateWithoutEquipmentInput, WorkoutMoveUncheckedCreateWithoutEquipmentInput>
  }

  export type WorkoutMoveUpdateWithWhereUniqueWithoutEquipmentInput = {
    where: WorkoutMoveWhereUniqueInput
    data: XOR<WorkoutMoveUpdateWithoutEquipmentInput, WorkoutMoveUncheckedUpdateWithoutEquipmentInput>
  }

  export type WorkoutMoveUpdateManyWithWhereWithoutEquipmentInput = {
    where: WorkoutMoveScalarWhereInput
    data: XOR<WorkoutMoveUpdateManyMutationInput, WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput>
  }

  export type WorkoutMoveScalarWhereInput = {
    AND?: Enumerable<WorkoutMoveScalarWhereInput>
    OR?: Enumerable<WorkoutMoveScalarWhereInput>
    NOT?: Enumerable<WorkoutMoveScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    sortPosition?: IntFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    reps?: FloatFilter | number
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    timeUnit?: EnumTimeUnitFilter | TimeUnit
    loadAmount?: FloatFilter | number
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    moveId?: StringFilter | string
    equipmentId?: StringNullableFilter | string | null
    workoutSetId?: StringFilter | string
  }

  export type LoggedWorkoutMoveUpsertWithWhereUniqueWithoutEquipmentInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    update: XOR<LoggedWorkoutMoveUpdateWithoutEquipmentInput, LoggedWorkoutMoveUncheckedUpdateWithoutEquipmentInput>
    create: XOR<LoggedWorkoutMoveCreateWithoutEquipmentInput, LoggedWorkoutMoveUncheckedCreateWithoutEquipmentInput>
  }

  export type LoggedWorkoutMoveUpdateWithWhereUniqueWithoutEquipmentInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    data: XOR<LoggedWorkoutMoveUpdateWithoutEquipmentInput, LoggedWorkoutMoveUncheckedUpdateWithoutEquipmentInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithWhereWithoutEquipmentInput = {
    where: LoggedWorkoutMoveScalarWhereInput
    data: XOR<LoggedWorkoutMoveUpdateManyMutationInput, LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutMovesInput>
  }

  export type LoggedWorkoutMoveScalarWhereInput = {
    AND?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
    OR?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
    NOT?: Enumerable<LoggedWorkoutMoveScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    sortPosition?: IntFilter | number
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    reps?: FloatFilter | number
    distance?: FloatNullableFilter | number | null
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    loadAmount?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    timeUnit?: EnumTimeUnitFilter | TimeUnit
    moveId?: StringFilter | string
    equipmentId?: StringNullableFilter | string | null
    loggedWorkoutSetId?: StringFilter | string
  }

  export type UserBenchmarkUpsertWithWhereUniqueWithoutEquipmentInput = {
    where: UserBenchmarkWhereUniqueInput
    update: XOR<UserBenchmarkUpdateWithoutEquipmentInput, UserBenchmarkUncheckedUpdateWithoutEquipmentInput>
    create: XOR<UserBenchmarkCreateWithoutEquipmentInput, UserBenchmarkUncheckedCreateWithoutEquipmentInput>
  }

  export type UserBenchmarkUpdateWithWhereUniqueWithoutEquipmentInput = {
    where: UserBenchmarkWhereUniqueInput
    data: XOR<UserBenchmarkUpdateWithoutEquipmentInput, UserBenchmarkUncheckedUpdateWithoutEquipmentInput>
  }

  export type UserBenchmarkUpdateManyWithWhereWithoutEquipmentInput = {
    where: UserBenchmarkScalarWhereInput
    data: XOR<UserBenchmarkUpdateManyMutationInput, UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkScalarWhereInput = {
    AND?: Enumerable<UserBenchmarkScalarWhereInput>
    OR?: Enumerable<UserBenchmarkScalarWhereInput>
    NOT?: Enumerable<UserBenchmarkScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    lastEntryAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    reps?: FloatNullableFilter | number | null
    repType?: EnumWorkoutMoveRepTypeFilter | WorkoutMoveRepType
    load?: FloatNullableFilter | number | null
    loadUnit?: EnumLoadUnitFilter | LoadUnit
    distanceUnit?: EnumDistanceUnitFilter | DistanceUnit
    timeUnit?: EnumTimeUnitFilter | TimeUnit
    equipmentId?: StringNullableFilter | string | null
    moveId?: StringFilter | string
    benchmarkType?: EnumBenchmarkTypeFilter | BenchmarkType
  }

  export type UserCreateWithoutCustomMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCustomMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCustomMovesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomMovesInput, UserUncheckedCreateWithoutCustomMovesInput>
  }

  export type MoveTypeCreateWithoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUri?: string | null
  }

  export type MoveTypeUncheckedCreateWithoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    imageUri?: string | null
  }

  export type MoveTypeCreateOrConnectWithoutMovesInput = {
    where: MoveTypeWhereUniqueInput
    create: XOR<MoveTypeCreateWithoutMovesInput, MoveTypeUncheckedCreateWithoutMovesInput>
  }

  export type EquipmentCreateWithoutRequiredForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    SelectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileCreateNestedManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutRequiredForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutRequiredForMovesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutRequiredForMovesInput, EquipmentUncheckedCreateWithoutRequiredForMovesInput>
  }

  export type EquipmentCreateWithoutSelectableForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    RequiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    GymProfiles?: GymProfileCreateNestedManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutSelectableForMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutSelectableForMovesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutSelectableForMovesInput, EquipmentUncheckedCreateWithoutSelectableForMovesInput>
  }

  export type WorkoutMoveCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    User: UserCreateNestedOneWithoutWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    equipmentId?: string | null
    workoutSetId: string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveCreateOrConnectWithoutMoveInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveCreateWithoutMoveInput, WorkoutMoveUncheckedCreateWithoutMoveInput>
  }

  export type WorkoutMoveCreateManyMoveInputEnvelope = {
    data: Enumerable<WorkoutMoveCreateManyMoveInput>
    skipDuplicates?: boolean
  }

  export type BodyAreaMoveScoreCreateWithoutMoveInput = {
    createdAt?: Date | string
    score?: number
    BodyArea: BodyAreaCreateNestedOneWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedCreateWithoutMoveInput = {
    createdAt?: Date | string
    bodyAreaId: string
    score?: number
  }

  export type BodyAreaMoveScoreCreateOrConnectWithoutMoveInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    create: XOR<BodyAreaMoveScoreCreateWithoutMoveInput, BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>
  }

  export type BodyAreaMoveScoreCreateManyMoveInputEnvelope = {
    data: Enumerable<BodyAreaMoveScoreCreateManyMoveInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutMoveCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    User: UserCreateNestedOneWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet: LoggedWorkoutSetCreateNestedOneWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    loggedWorkoutSetId: string
  }

  export type LoggedWorkoutMoveCreateOrConnectWithoutMoveInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    create: XOR<LoggedWorkoutMoveCreateWithoutMoveInput, LoggedWorkoutMoveUncheckedCreateWithoutMoveInput>
  }

  export type LoggedWorkoutMoveCreateManyMoveInputEnvelope = {
    data: Enumerable<LoggedWorkoutMoveCreateManyMoveInput>
    skipDuplicates?: boolean
  }

  export type UserBenchmarkCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    benchmarkType?: BenchmarkType
    User: UserCreateNestedOneWithoutUserBenchmarksInput
    Equipment?: EquipmentCreateNestedOneWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedCreateWithoutMoveInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    benchmarkType?: BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateOrConnectWithoutMoveInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkCreateWithoutMoveInput, UserBenchmarkUncheckedCreateWithoutMoveInput>
  }

  export type UserBenchmarkCreateManyMoveInputEnvelope = {
    data: Enumerable<UserBenchmarkCreateManyMoveInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCustomMovesInput = {
    update: XOR<UserUpdateWithoutCustomMovesInput, UserUncheckedUpdateWithoutCustomMovesInput>
    create: XOR<UserCreateWithoutCustomMovesInput, UserUncheckedCreateWithoutCustomMovesInput>
  }

  export type UserUpdateWithoutCustomMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutCustomMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type MoveTypeUpsertWithoutMovesInput = {
    update: XOR<MoveTypeUpdateWithoutMovesInput, MoveTypeUncheckedUpdateWithoutMovesInput>
    create: XOR<MoveTypeCreateWithoutMovesInput, MoveTypeUncheckedCreateWithoutMovesInput>
  }

  export type MoveTypeUpdateWithoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUri?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveTypeUncheckedUpdateWithoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUri?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipmentUpsertWithWhereUniqueWithoutRequiredForMovesInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUpdateWithoutRequiredForMovesInput, EquipmentUncheckedUpdateWithoutRequiredForMovesInput>
    create: XOR<EquipmentCreateWithoutRequiredForMovesInput, EquipmentUncheckedCreateWithoutRequiredForMovesInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutRequiredForMovesInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUpdateWithoutRequiredForMovesInput, EquipmentUncheckedUpdateWithoutRequiredForMovesInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutRequiredForMovesInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyWithoutRequiredEquipmentsInput>
  }

  export type EquipmentScalarWhereInput = {
    AND?: Enumerable<EquipmentScalarWhereInput>
    OR?: Enumerable<EquipmentScalarWhereInput>
    NOT?: Enumerable<EquipmentScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    altNames?: StringNullableFilter | string | null
    imageUrl?: StringNullableFilter | string | null
    loadAdjustable?: BoolFilter | boolean
  }

  export type EquipmentUpsertWithWhereUniqueWithoutSelectableForMovesInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUpdateWithoutSelectableForMovesInput, EquipmentUncheckedUpdateWithoutSelectableForMovesInput>
    create: XOR<EquipmentCreateWithoutSelectableForMovesInput, EquipmentUncheckedCreateWithoutSelectableForMovesInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutSelectableForMovesInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUpdateWithoutSelectableForMovesInput, EquipmentUncheckedUpdateWithoutSelectableForMovesInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutSelectableForMovesInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyWithoutSelectableEquipmentsInput>
  }

  export type WorkoutMoveUpsertWithWhereUniqueWithoutMoveInput = {
    where: WorkoutMoveWhereUniqueInput
    update: XOR<WorkoutMoveUpdateWithoutMoveInput, WorkoutMoveUncheckedUpdateWithoutMoveInput>
    create: XOR<WorkoutMoveCreateWithoutMoveInput, WorkoutMoveUncheckedCreateWithoutMoveInput>
  }

  export type WorkoutMoveUpdateWithWhereUniqueWithoutMoveInput = {
    where: WorkoutMoveWhereUniqueInput
    data: XOR<WorkoutMoveUpdateWithoutMoveInput, WorkoutMoveUncheckedUpdateWithoutMoveInput>
  }

  export type WorkoutMoveUpdateManyWithWhereWithoutMoveInput = {
    where: WorkoutMoveScalarWhereInput
    data: XOR<WorkoutMoveUpdateManyMutationInput, WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput>
  }

  export type BodyAreaMoveScoreUpsertWithWhereUniqueWithoutMoveInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    update: XOR<BodyAreaMoveScoreUpdateWithoutMoveInput, BodyAreaMoveScoreUncheckedUpdateWithoutMoveInput>
    create: XOR<BodyAreaMoveScoreCreateWithoutMoveInput, BodyAreaMoveScoreUncheckedCreateWithoutMoveInput>
  }

  export type BodyAreaMoveScoreUpdateWithWhereUniqueWithoutMoveInput = {
    where: BodyAreaMoveScoreWhereUniqueInput
    data: XOR<BodyAreaMoveScoreUpdateWithoutMoveInput, BodyAreaMoveScoreUncheckedUpdateWithoutMoveInput>
  }

  export type BodyAreaMoveScoreUpdateManyWithWhereWithoutMoveInput = {
    where: BodyAreaMoveScoreScalarWhereInput
    data: XOR<BodyAreaMoveScoreUpdateManyMutationInput, BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaMoveScoresInput>
  }

  export type LoggedWorkoutMoveUpsertWithWhereUniqueWithoutMoveInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    update: XOR<LoggedWorkoutMoveUpdateWithoutMoveInput, LoggedWorkoutMoveUncheckedUpdateWithoutMoveInput>
    create: XOR<LoggedWorkoutMoveCreateWithoutMoveInput, LoggedWorkoutMoveUncheckedCreateWithoutMoveInput>
  }

  export type LoggedWorkoutMoveUpdateWithWhereUniqueWithoutMoveInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    data: XOR<LoggedWorkoutMoveUpdateWithoutMoveInput, LoggedWorkoutMoveUncheckedUpdateWithoutMoveInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithWhereWithoutMoveInput = {
    where: LoggedWorkoutMoveScalarWhereInput
    data: XOR<LoggedWorkoutMoveUpdateManyMutationInput, LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutMovesInput>
  }

  export type UserBenchmarkUpsertWithWhereUniqueWithoutMoveInput = {
    where: UserBenchmarkWhereUniqueInput
    update: XOR<UserBenchmarkUpdateWithoutMoveInput, UserBenchmarkUncheckedUpdateWithoutMoveInput>
    create: XOR<UserBenchmarkCreateWithoutMoveInput, UserBenchmarkUncheckedCreateWithoutMoveInput>
  }

  export type UserBenchmarkUpdateWithWhereUniqueWithoutMoveInput = {
    where: UserBenchmarkWhereUniqueInput
    data: XOR<UserBenchmarkUpdateWithoutMoveInput, UserBenchmarkUncheckedUpdateWithoutMoveInput>
  }

  export type UserBenchmarkUpdateManyWithWhereWithoutMoveInput = {
    where: UserBenchmarkScalarWhereInput
    data: XOR<UserBenchmarkUpdateManyMutationInput, UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput>
  }

  export type MoveCreateWithoutMoveTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutMoveTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutMoveTypeInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutMoveTypeInput, MoveUncheckedCreateWithoutMoveTypeInput>
  }

  export type MoveCreateManyMoveTypeInputEnvelope = {
    data: Enumerable<MoveCreateManyMoveTypeInput>
    skipDuplicates?: boolean
  }

  export type MoveUpsertWithWhereUniqueWithoutMoveTypeInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUpdateWithoutMoveTypeInput, MoveUncheckedUpdateWithoutMoveTypeInput>
    create: XOR<MoveCreateWithoutMoveTypeInput, MoveUncheckedCreateWithoutMoveTypeInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutMoveTypeInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUpdateWithoutMoveTypeInput, MoveUncheckedUpdateWithoutMoveTypeInput>
  }

  export type MoveUpdateManyWithWhereWithoutMoveTypeInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUpdateManyMutationInput, MoveUncheckedUpdateManyWithoutMovesInput>
  }

  export type WorkoutCreateWithoutWorkoutGoalsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutWorkoutGoalsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutWorkoutGoalsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutWorkoutGoalsInput, WorkoutUncheckedCreateWithoutWorkoutGoalsInput>
  }

  export type WorkoutUpsertWithWhereUniqueWithoutWorkoutGoalsInput = {
    where: WorkoutWhereUniqueInput
    update: XOR<WorkoutUpdateWithoutWorkoutGoalsInput, WorkoutUncheckedUpdateWithoutWorkoutGoalsInput>
    create: XOR<WorkoutCreateWithoutWorkoutGoalsInput, WorkoutUncheckedCreateWithoutWorkoutGoalsInput>
  }

  export type WorkoutUpdateWithWhereUniqueWithoutWorkoutGoalsInput = {
    where: WorkoutWhereUniqueInput
    data: XOR<WorkoutUpdateWithoutWorkoutGoalsInput, WorkoutUncheckedUpdateWithoutWorkoutGoalsInput>
  }

  export type WorkoutUpdateManyWithWhereWithoutWorkoutGoalsInput = {
    where: WorkoutScalarWhereInput
    data: XOR<WorkoutUpdateManyMutationInput, WorkoutUncheckedUpdateManyWithoutWorkoutsInput>
  }

  export type WorkoutScalarWhereInput = {
    AND?: Enumerable<WorkoutScalarWhereInput>
    OR?: Enumerable<WorkoutScalarWhereInput>
    NOT?: Enumerable<WorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    metaData?: JsonNullableFilter
    introVideoUri?: StringNullableFilter | string | null
    introVideoThumbUri?: StringNullableFilter | string | null
    introAudioUri?: StringNullableFilter | string | null
    coverImageUri?: StringNullableFilter | string | null
    lengthMinutes?: IntNullableFilter | number | null
    difficultyLevel?: EnumDifficultyLevelFilter | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFilter | ContentAccessScope
  }

  export type WorkoutSectionCreateWithoutWorkoutSectionTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    User: UserCreateNestedOneWithoutWorkoutSectionsInput
    Workout: WorkoutCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutId: string
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput = {
    where: WorkoutSectionWhereUniqueInput
    create: XOR<WorkoutSectionCreateWithoutWorkoutSectionTypeInput, WorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>
  }

  export type WorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope = {
    data: Enumerable<WorkoutSectionCreateManyWorkoutSectionTypeInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutSectionCreateWithoutWorkoutSectionTypeInput = {
    id?: string
    createdAt?: Date | string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    User: UserCreateNestedOneWithoutLoggedWorkoutSectionsInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutLoggedWorkoutSectionInput
    LoggedWorkout: LoggedWorkoutCreateNestedOneWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    loggedWorkoutId: string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSectionCreateOrConnectWithoutWorkoutSectionTypeInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    create: XOR<LoggedWorkoutSectionCreateWithoutWorkoutSectionTypeInput, LoggedWorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>
  }

  export type LoggedWorkoutSectionCreateManyWorkoutSectionTypeInputEnvelope = {
    data: Enumerable<LoggedWorkoutSectionCreateManyWorkoutSectionTypeInput>
    skipDuplicates?: boolean
  }

  export type WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutSectionTypeInput = {
    where: WorkoutSectionWhereUniqueInput
    update: XOR<WorkoutSectionUpdateWithoutWorkoutSectionTypeInput, WorkoutSectionUncheckedUpdateWithoutWorkoutSectionTypeInput>
    create: XOR<WorkoutSectionCreateWithoutWorkoutSectionTypeInput, WorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>
  }

  export type WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutSectionTypeInput = {
    where: WorkoutSectionWhereUniqueInput
    data: XOR<WorkoutSectionUpdateWithoutWorkoutSectionTypeInput, WorkoutSectionUncheckedUpdateWithoutWorkoutSectionTypeInput>
  }

  export type WorkoutSectionUpdateManyWithWhereWithoutWorkoutSectionTypeInput = {
    where: WorkoutSectionScalarWhereInput
    data: XOR<WorkoutSectionUpdateManyMutationInput, WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionsInput>
  }

  export type WorkoutSectionScalarWhereInput = {
    AND?: Enumerable<WorkoutSectionScalarWhereInput>
    OR?: Enumerable<WorkoutSectionScalarWhereInput>
    NOT?: Enumerable<WorkoutSectionScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    archived?: BoolFilter | boolean
    userId?: StringFilter | string
    name?: StringNullableFilter | string | null
    note?: StringNullableFilter | string | null
    rounds?: IntFilter | number
    timecap?: IntNullableFilter | number | null
    sortPosition?: IntFilter | number
    introVideoUri?: StringNullableFilter | string | null
    introVideoThumbUri?: StringNullableFilter | string | null
    introAudioUri?: StringNullableFilter | string | null
    classVideoUri?: StringNullableFilter | string | null
    classVideoThumbUri?: StringNullableFilter | string | null
    classAudioUri?: StringNullableFilter | string | null
    outroVideoUri?: StringNullableFilter | string | null
    outroVideoThumbUri?: StringNullableFilter | string | null
    outroAudioUri?: StringNullableFilter | string | null
    workoutId?: StringFilter | string
    workoutSectionTypeId?: StringFilter | string
  }

  export type LoggedWorkoutSectionUpsertWithWhereUniqueWithoutWorkoutSectionTypeInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    update: XOR<LoggedWorkoutSectionUpdateWithoutWorkoutSectionTypeInput, LoggedWorkoutSectionUncheckedUpdateWithoutWorkoutSectionTypeInput>
    create: XOR<LoggedWorkoutSectionCreateWithoutWorkoutSectionTypeInput, LoggedWorkoutSectionUncheckedCreateWithoutWorkoutSectionTypeInput>
  }

  export type LoggedWorkoutSectionUpdateWithWhereUniqueWithoutWorkoutSectionTypeInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    data: XOR<LoggedWorkoutSectionUpdateWithoutWorkoutSectionTypeInput, LoggedWorkoutSectionUncheckedUpdateWithoutWorkoutSectionTypeInput>
  }

  export type LoggedWorkoutSectionUpdateManyWithWhereWithoutWorkoutSectionTypeInput = {
    where: LoggedWorkoutSectionScalarWhereInput
    data: XOR<LoggedWorkoutSectionUpdateManyMutationInput, LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutSectionsInput>
  }

  export type LoggedWorkoutSectionScalarWhereInput = {
    AND?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
    OR?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
    NOT?: Enumerable<LoggedWorkoutSectionScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringNullableFilter | string | null
    note?: StringNullableFilter | string | null
    timecap?: IntNullableFilter | number | null
    sortPosition?: IntFilter | number
    timeTakenMs?: IntNullableFilter | number | null
    lapTimesMs?: JsonFilter
    repScore?: IntNullableFilter | number | null
    loggedWorkoutId?: StringFilter | string
    workoutSectionTypeId?: StringFilter | string
  }

  export type UserCreateWithoutCollectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCollectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCollectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
  }

  export type WorkoutCreateWithoutCollectionsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutCollectionsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutCollectionsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutCollectionsInput, WorkoutUncheckedCreateWithoutCollectionsInput>
  }

  export type WorkoutPlanCreateWithoutCollectionsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedCreateWithoutCollectionsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateOrConnectWithoutCollectionsInput = {
    where: WorkoutPlanWhereUniqueInput
    create: XOR<WorkoutPlanCreateWithoutCollectionsInput, WorkoutPlanUncheckedCreateWithoutCollectionsInput>
  }

  export type UserUpsertWithoutCollectionsInput = {
    update: XOR<UserUpdateWithoutCollectionsInput, UserUncheckedUpdateWithoutCollectionsInput>
    create: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
  }

  export type UserUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutUpsertWithWhereUniqueWithoutCollectionsInput = {
    where: WorkoutWhereUniqueInput
    update: XOR<WorkoutUpdateWithoutCollectionsInput, WorkoutUncheckedUpdateWithoutCollectionsInput>
    create: XOR<WorkoutCreateWithoutCollectionsInput, WorkoutUncheckedCreateWithoutCollectionsInput>
  }

  export type WorkoutUpdateWithWhereUniqueWithoutCollectionsInput = {
    where: WorkoutWhereUniqueInput
    data: XOR<WorkoutUpdateWithoutCollectionsInput, WorkoutUncheckedUpdateWithoutCollectionsInput>
  }

  export type WorkoutUpdateManyWithWhereWithoutCollectionsInput = {
    where: WorkoutScalarWhereInput
    data: XOR<WorkoutUpdateManyMutationInput, WorkoutUncheckedUpdateManyWithoutWorkoutsInput>
  }

  export type WorkoutPlanUpsertWithWhereUniqueWithoutCollectionsInput = {
    where: WorkoutPlanWhereUniqueInput
    update: XOR<WorkoutPlanUpdateWithoutCollectionsInput, WorkoutPlanUncheckedUpdateWithoutCollectionsInput>
    create: XOR<WorkoutPlanCreateWithoutCollectionsInput, WorkoutPlanUncheckedCreateWithoutCollectionsInput>
  }

  export type WorkoutPlanUpdateWithWhereUniqueWithoutCollectionsInput = {
    where: WorkoutPlanWhereUniqueInput
    data: XOR<WorkoutPlanUpdateWithoutCollectionsInput, WorkoutPlanUncheckedUpdateWithoutCollectionsInput>
  }

  export type WorkoutPlanUpdateManyWithWhereWithoutCollectionsInput = {
    where: WorkoutPlanScalarWhereInput
    data: XOR<WorkoutPlanUpdateManyMutationInput, WorkoutPlanUncheckedUpdateManyWithoutWorkoutPlansInput>
  }

  export type WorkoutPlanScalarWhereInput = {
    AND?: Enumerable<WorkoutPlanScalarWhereInput>
    OR?: Enumerable<WorkoutPlanScalarWhereInput>
    NOT?: Enumerable<WorkoutPlanScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    archived?: BoolFilter | boolean
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    lengthWeeks?: IntFilter | number
    daysPerWeek?: IntFilter | number
    coverImageUri?: StringNullableFilter | string | null
    introVideoUri?: StringNullableFilter | string | null
    introVideoThumbUri?: StringNullableFilter | string | null
    introAudioUri?: StringNullableFilter | string | null
    contentAccessScope?: EnumContentAccessScopeFilter | ContentAccessScope
  }

  export type UserCreateWithoutGymProfilesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutGymProfilesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutGymProfilesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutGymProfilesInput, UserUncheckedCreateWithoutGymProfilesInput>
  }

  export type EquipmentCreateWithoutGymProfilesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    RequiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutGymProfilesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutGymProfilesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutGymProfilesInput, EquipmentUncheckedCreateWithoutGymProfilesInput>
  }

  export type ScheduledWorkoutCreateWithoutGymProfileInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    User: UserCreateNestedOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutGymProfileInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutGymProfileInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutCreateWithoutGymProfileInput, ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>
  }

  export type ScheduledWorkoutCreateManyGymProfileInputEnvelope = {
    data: Enumerable<ScheduledWorkoutCreateManyGymProfileInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutCreateWithoutGymProfileInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    User: UserCreateNestedOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutGymProfileInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    workoutId?: string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutGymProfileInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutCreateWithoutGymProfileInput, LoggedWorkoutUncheckedCreateWithoutGymProfileInput>
  }

  export type LoggedWorkoutCreateManyGymProfileInputEnvelope = {
    data: Enumerable<LoggedWorkoutCreateManyGymProfileInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutGymProfilesInput = {
    update: XOR<UserUpdateWithoutGymProfilesInput, UserUncheckedUpdateWithoutGymProfilesInput>
    create: XOR<UserCreateWithoutGymProfilesInput, UserUncheckedCreateWithoutGymProfilesInput>
  }

  export type UserUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type EquipmentUpsertWithWhereUniqueWithoutGymProfilesInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUpdateWithoutGymProfilesInput, EquipmentUncheckedUpdateWithoutGymProfilesInput>
    create: XOR<EquipmentCreateWithoutGymProfilesInput, EquipmentUncheckedCreateWithoutGymProfilesInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutGymProfilesInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUpdateWithoutGymProfilesInput, EquipmentUncheckedUpdateWithoutGymProfilesInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutGymProfilesInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyWithoutEquipmentsInput>
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutGymProfileInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUpdateWithoutGymProfileInput, ScheduledWorkoutUncheckedUpdateWithoutGymProfileInput>
    create: XOR<ScheduledWorkoutCreateWithoutGymProfileInput, ScheduledWorkoutUncheckedCreateWithoutGymProfileInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutGymProfileInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUpdateWithoutGymProfileInput, ScheduledWorkoutUncheckedUpdateWithoutGymProfileInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutGymProfileInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUpdateManyMutationInput, ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput>
  }

  export type ScheduledWorkoutScalarWhereInput = {
    AND?: Enumerable<ScheduledWorkoutScalarWhereInput>
    OR?: Enumerable<ScheduledWorkoutScalarWhereInput>
    NOT?: Enumerable<ScheduledWorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    scheduledAt?: DateTimeFilter | Date | string
    gymProfileId?: StringNullableFilter | string | null
    loggedWorkoutId?: StringNullableFilter | string | null
    workoutId?: StringNullableFilter | string | null
    workoutPlanEnrolmentId?: StringNullableFilter | string | null
    workoutPlanDayWorkoutId?: StringNullableFilter | string | null
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutGymProfileInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUpdateWithoutGymProfileInput, LoggedWorkoutUncheckedUpdateWithoutGymProfileInput>
    create: XOR<LoggedWorkoutCreateWithoutGymProfileInput, LoggedWorkoutUncheckedCreateWithoutGymProfileInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutGymProfileInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUpdateWithoutGymProfileInput, LoggedWorkoutUncheckedUpdateWithoutGymProfileInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutGymProfileInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUpdateManyMutationInput, LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput>
  }

  export type LoggedWorkoutScalarWhereInput = {
    AND?: Enumerable<LoggedWorkoutScalarWhereInput>
    OR?: Enumerable<LoggedWorkoutScalarWhereInput>
    NOT?: Enumerable<LoggedWorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    completedOn?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    note?: StringNullableFilter | string | null
    gymProfileId?: StringNullableFilter | string | null
    workoutId?: StringNullableFilter | string | null
  }

  export type UserCreateWithoutScheduledWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutScheduledWorkoutsInput, UserUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type GymProfileCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutGymProfilesInput
    Equipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileCreateWithoutScheduledWorkoutsInput, GymProfileUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type LoggedWorkoutCreateWithoutScheduledWorkoutInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    User: UserCreateNestedOneWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    gymProfileId?: string | null
    workoutId?: string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutScheduledWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutCreateWithoutScheduledWorkoutInput, LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput>
  }

  export type WorkoutCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutScheduledWorkoutsInput, WorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutPlanEnrolmentCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutEnrolmentsInput
    User: UserCreateNestedOneWithoutWorkoutPlanEnrolmentsInput
  }

  export type WorkoutPlanEnrolmentUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    workoutPlanId: string
    userId: string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanEnrolmentCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: WorkoutPlanEnrolmentWhereUniqueInput
    create: XOR<WorkoutPlanEnrolmentCreateWithoutScheduledWorkoutsInput, WorkoutPlanEnrolmentUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutPlanDayWorkoutCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    sortPosition: number
    User: UserCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
    Workout: WorkoutCreateNestedOneWithoutWorkoutPlanDayWorkoutInput
    WorkoutPlanDay: WorkoutPlanDayCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateWithoutScheduledWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    sortPosition: number
    workoutId: string
    workoutPlanDayId: string
  }

  export type WorkoutPlanDayWorkoutCreateOrConnectWithoutScheduledWorkoutsInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutScheduledWorkoutsInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type UserUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<UserUpdateWithoutScheduledWorkoutsInput, UserUncheckedUpdateWithoutScheduledWorkoutsInput>
    create: XOR<UserCreateWithoutScheduledWorkoutsInput, UserUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type UserUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type GymProfileUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<GymProfileUpdateWithoutScheduledWorkoutsInput, GymProfileUncheckedUpdateWithoutScheduledWorkoutsInput>
    create: XOR<GymProfileCreateWithoutScheduledWorkoutsInput, GymProfileUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type GymProfileUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutGymProfilesInput
    Equipments?: EquipmentUpdateManyWithoutGymProfilesInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type LoggedWorkoutUpsertWithoutScheduledWorkoutInput = {
    update: XOR<LoggedWorkoutUpdateWithoutScheduledWorkoutInput, LoggedWorkoutUncheckedUpdateWithoutScheduledWorkoutInput>
    create: XOR<LoggedWorkoutCreateWithoutScheduledWorkoutInput, LoggedWorkoutUncheckedCreateWithoutScheduledWorkoutInput>
  }

  export type LoggedWorkoutUpdateWithoutScheduledWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    Workout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutScheduledWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
  }

  export type WorkoutUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<WorkoutUpdateWithoutScheduledWorkoutsInput, WorkoutUncheckedUpdateWithoutScheduledWorkoutsInput>
    create: XOR<WorkoutCreateWithoutScheduledWorkoutsInput, WorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutPlanEnrolmentUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<WorkoutPlanEnrolmentUpdateWithoutScheduledWorkoutsInput, WorkoutPlanEnrolmentUncheckedUpdateWithoutScheduledWorkoutsInput>
    create: XOR<WorkoutPlanEnrolmentCreateWithoutScheduledWorkoutsInput, WorkoutPlanEnrolmentUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutPlanEnrolmentUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutEnrolmentsInput
    User?: UserUpdateOneRequiredWithoutWorkoutPlanEnrolmentsInput
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanDayWorkoutUpsertWithoutScheduledWorkoutsInput = {
    update: XOR<WorkoutPlanDayWorkoutUpdateWithoutScheduledWorkoutsInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutScheduledWorkoutsInput>
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutScheduledWorkoutsInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutScheduledWorkoutsInput>
  }

  export type WorkoutPlanDayWorkoutUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutPlanDayWorkoutInput
    WorkoutPlanDay?: WorkoutPlanDayUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutPlanDayId?: StringFieldUpdateOperationsInput | string
  }

  export type MoveCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutUserInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutUserInput, MoveUncheckedCreateWithoutUserInput>
  }

  export type MoveCreateManyUserInputEnvelope = {
    data: Enumerable<MoveCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutUserInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutUserInput, WorkoutUncheckedCreateWithoutUserInput>
  }

  export type WorkoutCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ScheduledWorkoutCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    GymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutUserInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutCreateWithoutUserInput, ScheduledWorkoutUncheckedCreateWithoutUserInput>
  }

  export type ScheduledWorkoutCreateManyUserInputEnvelope = {
    data: Enumerable<ScheduledWorkoutCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    GymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    gymProfileId?: string | null
    workoutId?: string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutUserInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutCreateWithoutUserInput, LoggedWorkoutUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutCreateManyUserInputEnvelope = {
    data: Enumerable<LoggedWorkoutCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type GymProfileCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    Equipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutUserInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileCreateWithoutUserInput, GymProfileUncheckedCreateWithoutUserInput>
  }

  export type GymProfileCreateManyUserInputEnvelope = {
    data: Enumerable<GymProfileCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ProgressJournalCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    ProgressJournalEntries?: ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    ProgressJournalEntries?: ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalCreateOrConnectWithoutUserInput = {
    where: ProgressJournalWhereUniqueInput
    create: XOR<ProgressJournalCreateWithoutUserInput, ProgressJournalUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalCreateManyUserInputEnvelope = {
    data: Enumerable<ProgressJournalCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ProgressJournalGoalTagCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
  }

  export type ProgressJournalGoalTagCreateOrConnectWithoutUserInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    create: XOR<ProgressJournalGoalTagCreateWithoutUserInput, ProgressJournalGoalTagUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalGoalTagCreateManyUserInputEnvelope = {
    data: Enumerable<ProgressJournalGoalTagCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutSectionCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutLoggedWorkoutSectionInput
    LoggedWorkout: LoggedWorkoutCreateNestedOneWithoutLoggedWorkoutSectionsInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    loggedWorkoutId: string
    workoutSectionTypeId: string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSectionCreateOrConnectWithoutUserInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    create: XOR<LoggedWorkoutSectionCreateWithoutUserInput, LoggedWorkoutSectionUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutSectionCreateManyUserInputEnvelope = {
    data: Enumerable<LoggedWorkoutSectionCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutSetCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutLoggedWorkoutSetInput
    LoggedWorkoutSection: LoggedWorkoutSectionCreateNestedOneWithoutLoggedWorkoutSetsInput
  }

  export type LoggedWorkoutSetUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    loggedWorkoutSectionId: string
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutSetCreateOrConnectWithoutUserInput = {
    where: LoggedWorkoutSetWhereUniqueInput
    create: XOR<LoggedWorkoutSetCreateWithoutUserInput, LoggedWorkoutSetUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutSetCreateManyUserInputEnvelope = {
    data: Enumerable<LoggedWorkoutSetCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutMoveCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    Move: MoveCreateNestedOneWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet: LoggedWorkoutSetCreateNestedOneWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    equipmentId?: string | null
    loggedWorkoutSetId: string
  }

  export type LoggedWorkoutMoveCreateOrConnectWithoutUserInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    create: XOR<LoggedWorkoutMoveCreateWithoutUserInput, LoggedWorkoutMoveUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutMoveCreateManyUserInputEnvelope = {
    data: Enumerable<LoggedWorkoutMoveCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ProgressJournalGoalCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutProgressJournalGoalsInput
    ProgressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalId: string
  }

  export type ProgressJournalGoalCreateOrConnectWithoutUserInput = {
    where: ProgressJournalGoalWhereUniqueInput
    create: XOR<ProgressJournalGoalCreateWithoutUserInput, ProgressJournalGoalUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalGoalCreateManyUserInputEnvelope = {
    data: Enumerable<ProgressJournalGoalCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ProgressJournalEntryCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUris?: ProgressJournalEntryCreateprogressPhotoUrisInput | Enumerable<string>
    ProgressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalEntriesInput
  }

  export type ProgressJournalEntryUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressJournalId: string
    progressPhotoUris?: ProgressJournalEntryCreateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryCreateOrConnectWithoutUserInput = {
    where: ProgressJournalEntryWhereUniqueInput
    create: XOR<ProgressJournalEntryCreateWithoutUserInput, ProgressJournalEntryUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalEntryCreateManyUserInputEnvelope = {
    data: Enumerable<ProgressJournalEntryCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutSectionCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    Workout: WorkoutCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutId: string
    workoutSectionTypeId: string
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionCreateOrConnectWithoutUserInput = {
    where: WorkoutSectionWhereUniqueInput
    create: XOR<WorkoutSectionCreateWithoutUserInput, WorkoutSectionUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSectionCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutSectionCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutSetCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    Generators?: WorkoutSetGeneratorCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSetInput
    WorkoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    workoutSectionId: string
    Generators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSetInput
  }

  export type WorkoutSetCreateOrConnectWithoutUserInput = {
    where: WorkoutSetWhereUniqueInput
    create: XOR<WorkoutSetCreateWithoutUserInput, WorkoutSetUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSetCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutSetCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutMoveCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    Move: MoveCreateNestedOneWithoutWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    equipmentId?: string | null
    workoutSetId: string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveCreateOrConnectWithoutUserInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveCreateWithoutUserInput, WorkoutMoveUncheckedCreateWithoutUserInput>
  }

  export type WorkoutMoveCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutMoveCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutSetGeneratorCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    WorkoutSet?: WorkoutSetCreateNestedOneWithoutGeneratorsInput
  }

  export type WorkoutSetGeneratorUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    workoutSetId?: string | null
  }

  export type WorkoutSetGeneratorCreateOrConnectWithoutUserInput = {
    where: WorkoutSetGeneratorWhereUniqueInput
    create: XOR<WorkoutSetGeneratorCreateWithoutUserInput, WorkoutSetGeneratorUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSetGeneratorCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutSetGeneratorCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutSetIntervalBuyInCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    interval: number
    WorkoutMove: WorkoutMoveCreateNestedOneWithoutWorkoutSetIntervalBuyInInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    interval: number
    workoutMoveId: string
    workoutSetId: string
  }

  export type WorkoutSetIntervalBuyInCreateOrConnectWithoutUserInput = {
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    create: XOR<WorkoutSetIntervalBuyInCreateWithoutUserInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSetIntervalBuyInCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutSetIntervalBuyInCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutTagCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    Workouts?: WorkoutCreateNestedManyWithoutWorkoutTagsInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
  }

  export type WorkoutTagCreateOrConnectWithoutUserInput = {
    where: WorkoutTagWhereUniqueInput
    create: XOR<WorkoutTagCreateWithoutUserInput, WorkoutTagUncheckedCreateWithoutUserInput>
  }

  export type WorkoutTagCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutTagCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type UserBenchmarkGroupCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserBenchmarkGroupsInput
  }

  export type UserBenchmarkGroupUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type UserBenchmarkGroupCreateOrConnectWithoutUserInput = {
    where: UserBenchmarkGroupWhereUniqueInput
    create: XOR<UserBenchmarkGroupCreateWithoutUserInput, UserBenchmarkGroupUncheckedCreateWithoutUserInput>
  }

  export type UserBenchmarkGroupCreateManyUserInputEnvelope = {
    data: Enumerable<UserBenchmarkGroupCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type UserBenchmarkCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    benchmarkType?: BenchmarkType
    Equipment?: EquipmentCreateNestedOneWithoutUserBenchmarksInput
    Move: MoveCreateNestedOneWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    moveId: string
    benchmarkType?: BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateOrConnectWithoutUserInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkCreateWithoutUserInput, UserBenchmarkUncheckedCreateWithoutUserInput>
  }

  export type UserBenchmarkCreateManyUserInputEnvelope = {
    data: Enumerable<UserBenchmarkCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type UserBenchmarkEntryCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
    UserBenchmark: UserBenchmarkCreateNestedOneWithoutUserBenchmarkEntriesInput
  }

  export type UserBenchmarkEntryUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
    userBenchmarkId: string
  }

  export type UserBenchmarkEntryCreateOrConnectWithoutUserInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    create: XOR<UserBenchmarkEntryCreateWithoutUserInput, UserBenchmarkEntryUncheckedCreateWithoutUserInput>
  }

  export type UserBenchmarkEntryCreateManyUserInputEnvelope = {
    data: Enumerable<UserBenchmarkEntryCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutPlanCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateOrConnectWithoutUserInput = {
    where: WorkoutPlanWhereUniqueInput
    create: XOR<WorkoutPlanCreateWithoutUserInput, WorkoutPlanUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutPlanCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutPlanDayCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    dayNumber: number
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutWorkoutPlanDaysInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    dayNumber: number
    workoutPlanId: string
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayCreateOrConnectWithoutUserInput = {
    where: WorkoutPlanDayWhereUniqueInput
    create: XOR<WorkoutPlanDayCreateWithoutUserInput, WorkoutPlanDayUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanDayCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutPlanDayCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutPlanDayWorkoutCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    sortPosition: number
    Workout: WorkoutCreateNestedOneWithoutWorkoutPlanDayWorkoutInput
    WorkoutPlanDay: WorkoutPlanDayCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    sortPosition: number
    workoutId: string
    workoutPlanDayId: string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutCreateOrConnectWithoutUserInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutUserInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanDayWorkoutCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutPlanDayWorkoutCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutPlanEnrolmentCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutEnrolmentsInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    workoutPlanId: string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentCreateOrConnectWithoutUserInput = {
    where: WorkoutPlanEnrolmentWhereUniqueInput
    create: XOR<WorkoutPlanEnrolmentCreateWithoutUserInput, WorkoutPlanEnrolmentUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanEnrolmentCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutPlanEnrolmentCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type WorkoutPlanReviewCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutWorkoutPlanReviewsInput
  }

  export type WorkoutPlanReviewUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    workoutPlanId: string
  }

  export type WorkoutPlanReviewCreateOrConnectWithoutUserInput = {
    where: WorkoutPlanReviewWhereUniqueInput
    create: XOR<WorkoutPlanReviewCreateWithoutUserInput, WorkoutPlanReviewUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanReviewCreateManyUserInputEnvelope = {
    data: Enumerable<WorkoutPlanReviewCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type CollectionCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    Workouts?: WorkoutCreateNestedManyWithoutCollectionsInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type CollectionCreateOrConnectWithoutUserInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput>
  }

  export type CollectionCreateManyUserInputEnvelope = {
    data: Enumerable<CollectionCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type MoveUpsertWithWhereUniqueWithoutUserInput = {
    where: MoveWhereUniqueInput
    update: XOR<MoveUpdateWithoutUserInput, MoveUncheckedUpdateWithoutUserInput>
    create: XOR<MoveCreateWithoutUserInput, MoveUncheckedCreateWithoutUserInput>
  }

  export type MoveUpdateWithWhereUniqueWithoutUserInput = {
    where: MoveWhereUniqueInput
    data: XOR<MoveUpdateWithoutUserInput, MoveUncheckedUpdateWithoutUserInput>
  }

  export type MoveUpdateManyWithWhereWithoutUserInput = {
    where: MoveScalarWhereInput
    data: XOR<MoveUpdateManyMutationInput, MoveUncheckedUpdateManyWithoutCustomMovesInput>
  }

  export type WorkoutUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutWhereUniqueInput
    update: XOR<WorkoutUpdateWithoutUserInput, WorkoutUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutCreateWithoutUserInput, WorkoutUncheckedCreateWithoutUserInput>
  }

  export type WorkoutUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutWhereUniqueInput
    data: XOR<WorkoutUpdateWithoutUserInput, WorkoutUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutScalarWhereInput
    data: XOR<WorkoutUpdateManyMutationInput, WorkoutUncheckedUpdateManyWithoutWorkoutsInput>
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutUserInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUpdateWithoutUserInput, ScheduledWorkoutUncheckedUpdateWithoutUserInput>
    create: XOR<ScheduledWorkoutCreateWithoutUserInput, ScheduledWorkoutUncheckedCreateWithoutUserInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutUserInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUpdateWithoutUserInput, ScheduledWorkoutUncheckedUpdateWithoutUserInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutUserInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUpdateManyMutationInput, ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput>
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUpdateWithoutUserInput, LoggedWorkoutUncheckedUpdateWithoutUserInput>
    create: XOR<LoggedWorkoutCreateWithoutUserInput, LoggedWorkoutUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUpdateWithoutUserInput, LoggedWorkoutUncheckedUpdateWithoutUserInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutUserInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUpdateManyMutationInput, LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput>
  }

  export type GymProfileUpsertWithWhereUniqueWithoutUserInput = {
    where: GymProfileWhereUniqueInput
    update: XOR<GymProfileUpdateWithoutUserInput, GymProfileUncheckedUpdateWithoutUserInput>
    create: XOR<GymProfileCreateWithoutUserInput, GymProfileUncheckedCreateWithoutUserInput>
  }

  export type GymProfileUpdateWithWhereUniqueWithoutUserInput = {
    where: GymProfileWhereUniqueInput
    data: XOR<GymProfileUpdateWithoutUserInput, GymProfileUncheckedUpdateWithoutUserInput>
  }

  export type GymProfileUpdateManyWithWhereWithoutUserInput = {
    where: GymProfileScalarWhereInput
    data: XOR<GymProfileUpdateManyMutationInput, GymProfileUncheckedUpdateManyWithoutGymProfilesInput>
  }

  export type ProgressJournalUpsertWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalWhereUniqueInput
    update: XOR<ProgressJournalUpdateWithoutUserInput, ProgressJournalUncheckedUpdateWithoutUserInput>
    create: XOR<ProgressJournalCreateWithoutUserInput, ProgressJournalUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalUpdateWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalWhereUniqueInput
    data: XOR<ProgressJournalUpdateWithoutUserInput, ProgressJournalUncheckedUpdateWithoutUserInput>
  }

  export type ProgressJournalUpdateManyWithWhereWithoutUserInput = {
    where: ProgressJournalScalarWhereInput
    data: XOR<ProgressJournalUpdateManyMutationInput, ProgressJournalUncheckedUpdateManyWithoutProgressJournalsInput>
  }

  export type ProgressJournalScalarWhereInput = {
    AND?: Enumerable<ProgressJournalScalarWhereInput>
    OR?: Enumerable<ProgressJournalScalarWhereInput>
    NOT?: Enumerable<ProgressJournalScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
  }

  export type ProgressJournalGoalTagUpsertWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    update: XOR<ProgressJournalGoalTagUpdateWithoutUserInput, ProgressJournalGoalTagUncheckedUpdateWithoutUserInput>
    create: XOR<ProgressJournalGoalTagCreateWithoutUserInput, ProgressJournalGoalTagUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalGoalTagUpdateWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    data: XOR<ProgressJournalGoalTagUpdateWithoutUserInput, ProgressJournalGoalTagUncheckedUpdateWithoutUserInput>
  }

  export type ProgressJournalGoalTagUpdateManyWithWhereWithoutUserInput = {
    where: ProgressJournalGoalTagScalarWhereInput
    data: XOR<ProgressJournalGoalTagUpdateManyMutationInput, ProgressJournalGoalTagUncheckedUpdateManyWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalTagScalarWhereInput = {
    AND?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
    OR?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
    NOT?: Enumerable<ProgressJournalGoalTagScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    tag?: StringFilter | string
    hexColor?: StringFilter | string
    userId?: StringFilter | string
  }

  export type LoggedWorkoutSectionUpsertWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    update: XOR<LoggedWorkoutSectionUpdateWithoutUserInput, LoggedWorkoutSectionUncheckedUpdateWithoutUserInput>
    create: XOR<LoggedWorkoutSectionCreateWithoutUserInput, LoggedWorkoutSectionUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutSectionUpdateWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    data: XOR<LoggedWorkoutSectionUpdateWithoutUserInput, LoggedWorkoutSectionUncheckedUpdateWithoutUserInput>
  }

  export type LoggedWorkoutSectionUpdateManyWithWhereWithoutUserInput = {
    where: LoggedWorkoutSectionScalarWhereInput
    data: XOR<LoggedWorkoutSectionUpdateManyMutationInput, LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutSectionsInput>
  }

  export type LoggedWorkoutSetUpsertWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutSetWhereUniqueInput
    update: XOR<LoggedWorkoutSetUpdateWithoutUserInput, LoggedWorkoutSetUncheckedUpdateWithoutUserInput>
    create: XOR<LoggedWorkoutSetCreateWithoutUserInput, LoggedWorkoutSetUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutSetUpdateWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutSetWhereUniqueInput
    data: XOR<LoggedWorkoutSetUpdateWithoutUserInput, LoggedWorkoutSetUncheckedUpdateWithoutUserInput>
  }

  export type LoggedWorkoutSetUpdateManyWithWhereWithoutUserInput = {
    where: LoggedWorkoutSetScalarWhereInput
    data: XOR<LoggedWorkoutSetUpdateManyMutationInput, LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSetsInput>
  }

  export type LoggedWorkoutSetScalarWhereInput = {
    AND?: Enumerable<LoggedWorkoutSetScalarWhereInput>
    OR?: Enumerable<LoggedWorkoutSetScalarWhereInput>
    NOT?: Enumerable<LoggedWorkoutSetScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    roundNumber?: IntFilter | number
    sortPosition?: IntFilter | number
    duration?: IntNullableFilter | number | null
    roundsCompleted?: IntFilter | number
    loggedWorkoutSectionId?: StringFilter | string
  }

  export type LoggedWorkoutMoveUpsertWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    update: XOR<LoggedWorkoutMoveUpdateWithoutUserInput, LoggedWorkoutMoveUncheckedUpdateWithoutUserInput>
    create: XOR<LoggedWorkoutMoveCreateWithoutUserInput, LoggedWorkoutMoveUncheckedCreateWithoutUserInput>
  }

  export type LoggedWorkoutMoveUpdateWithWhereUniqueWithoutUserInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    data: XOR<LoggedWorkoutMoveUpdateWithoutUserInput, LoggedWorkoutMoveUncheckedUpdateWithoutUserInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithWhereWithoutUserInput = {
    where: LoggedWorkoutMoveScalarWhereInput
    data: XOR<LoggedWorkoutMoveUpdateManyMutationInput, LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutMovesInput>
  }

  export type ProgressJournalGoalUpsertWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalGoalWhereUniqueInput
    update: XOR<ProgressJournalGoalUpdateWithoutUserInput, ProgressJournalGoalUncheckedUpdateWithoutUserInput>
    create: XOR<ProgressJournalGoalCreateWithoutUserInput, ProgressJournalGoalUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalGoalUpdateWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalGoalWhereUniqueInput
    data: XOR<ProgressJournalGoalUpdateWithoutUserInput, ProgressJournalGoalUncheckedUpdateWithoutUserInput>
  }

  export type ProgressJournalGoalUpdateManyWithWhereWithoutUserInput = {
    where: ProgressJournalGoalScalarWhereInput
    data: XOR<ProgressJournalGoalUpdateManyMutationInput, ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalScalarWhereInput = {
    AND?: Enumerable<ProgressJournalGoalScalarWhereInput>
    OR?: Enumerable<ProgressJournalGoalScalarWhereInput>
    NOT?: Enumerable<ProgressJournalGoalScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    deadline?: DateTimeNullableFilter | Date | string | null
    completedDate?: DateTimeNullableFilter | Date | string | null
    progressJournalId?: StringFilter | string
  }

  export type ProgressJournalEntryUpsertWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalEntryWhereUniqueInput
    update: XOR<ProgressJournalEntryUpdateWithoutUserInput, ProgressJournalEntryUncheckedUpdateWithoutUserInput>
    create: XOR<ProgressJournalEntryCreateWithoutUserInput, ProgressJournalEntryUncheckedCreateWithoutUserInput>
  }

  export type ProgressJournalEntryUpdateWithWhereUniqueWithoutUserInput = {
    where: ProgressJournalEntryWhereUniqueInput
    data: XOR<ProgressJournalEntryUpdateWithoutUserInput, ProgressJournalEntryUncheckedUpdateWithoutUserInput>
  }

  export type ProgressJournalEntryUpdateManyWithWhereWithoutUserInput = {
    where: ProgressJournalEntryScalarWhereInput
    data: XOR<ProgressJournalEntryUpdateManyMutationInput, ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalEntrysInput>
  }

  export type ProgressJournalEntryScalarWhereInput = {
    AND?: Enumerable<ProgressJournalEntryScalarWhereInput>
    OR?: Enumerable<ProgressJournalEntryScalarWhereInput>
    NOT?: Enumerable<ProgressJournalEntryScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    voiceNoteUri?: StringNullableFilter | string | null
    bodyweight?: FloatNullableFilter | number | null
    bodyweightUnit?: EnumBodyweightUnitFilter | BodyweightUnit
    moodScore?: FloatNullableFilter | number | null
    energyScore?: FloatNullableFilter | number | null
    stressScore?: FloatNullableFilter | number | null
    motivationScore?: FloatNullableFilter | number | null
    progressPhotoUris?: StringNullableListFilter
    progressJournalId?: StringFilter | string
  }

  export type WorkoutSectionUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutSectionWhereUniqueInput
    update: XOR<WorkoutSectionUpdateWithoutUserInput, WorkoutSectionUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutSectionCreateWithoutUserInput, WorkoutSectionUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSectionUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutSectionWhereUniqueInput
    data: XOR<WorkoutSectionUpdateWithoutUserInput, WorkoutSectionUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutSectionUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutSectionScalarWhereInput
    data: XOR<WorkoutSectionUpdateManyMutationInput, WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionsInput>
  }

  export type WorkoutSetUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutSetWhereUniqueInput
    update: XOR<WorkoutSetUpdateWithoutUserInput, WorkoutSetUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutSetCreateWithoutUserInput, WorkoutSetUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSetUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutSetWhereUniqueInput
    data: XOR<WorkoutSetUpdateWithoutUserInput, WorkoutSetUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutSetUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutSetScalarWhereInput
    data: XOR<WorkoutSetUpdateManyMutationInput, WorkoutSetUncheckedUpdateManyWithoutWorkoutSetsInput>
  }

  export type WorkoutSetScalarWhereInput = {
    AND?: Enumerable<WorkoutSetScalarWhereInput>
    OR?: Enumerable<WorkoutSetScalarWhereInput>
    NOT?: Enumerable<WorkoutSetScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    sortPosition?: IntFilter | number
    rounds?: IntFilter | number
    duration?: IntNullableFilter | number | null
    workoutSectionId?: StringFilter | string
  }

  export type WorkoutMoveUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutMoveWhereUniqueInput
    update: XOR<WorkoutMoveUpdateWithoutUserInput, WorkoutMoveUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutMoveCreateWithoutUserInput, WorkoutMoveUncheckedCreateWithoutUserInput>
  }

  export type WorkoutMoveUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutMoveWhereUniqueInput
    data: XOR<WorkoutMoveUpdateWithoutUserInput, WorkoutMoveUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutMoveUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutMoveScalarWhereInput
    data: XOR<WorkoutMoveUpdateManyMutationInput, WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput>
  }

  export type WorkoutSetGeneratorUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutSetGeneratorWhereUniqueInput
    update: XOR<WorkoutSetGeneratorUpdateWithoutUserInput, WorkoutSetGeneratorUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutSetGeneratorCreateWithoutUserInput, WorkoutSetGeneratorUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSetGeneratorUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutSetGeneratorWhereUniqueInput
    data: XOR<WorkoutSetGeneratorUpdateWithoutUserInput, WorkoutSetGeneratorUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutSetGeneratorUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutSetGeneratorScalarWhereInput
    data: XOR<WorkoutSetGeneratorUpdateManyMutationInput, WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetGeneratorsInput>
  }

  export type WorkoutSetGeneratorScalarWhereInput = {
    AND?: Enumerable<WorkoutSetGeneratorScalarWhereInput>
    OR?: Enumerable<WorkoutSetGeneratorScalarWhereInput>
    NOT?: Enumerable<WorkoutSetGeneratorScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    type?: EnumWorkoutSetGeneratorTypeFilter | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFilter | number
    target?: EnumWorkoutSetGeneratorTargetFilter | WorkoutSetGeneratorTarget
    roundFrequency?: IntFilter | number
    adjustAmount?: FloatFilter | number
    workoutSetId?: StringNullableFilter | string | null
  }

  export type WorkoutSetIntervalBuyInUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    update: XOR<WorkoutSetIntervalBuyInUpdateWithoutUserInput, WorkoutSetIntervalBuyInUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutSetIntervalBuyInCreateWithoutUserInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutUserInput>
  }

  export type WorkoutSetIntervalBuyInUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    data: XOR<WorkoutSetIntervalBuyInUpdateWithoutUserInput, WorkoutSetIntervalBuyInUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutSetIntervalBuyInUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutSetIntervalBuyInScalarWhereInput
    data: XOR<WorkoutSetIntervalBuyInUpdateManyMutationInput, WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutSetIntervalBuyInInput>
  }

  export type WorkoutSetIntervalBuyInScalarWhereInput = {
    AND?: Enumerable<WorkoutSetIntervalBuyInScalarWhereInput>
    OR?: Enumerable<WorkoutSetIntervalBuyInScalarWhereInput>
    NOT?: Enumerable<WorkoutSetIntervalBuyInScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    interval?: IntFilter | number
    workoutMoveId?: StringFilter | string
    workoutSetId?: StringFilter | string
  }

  export type WorkoutTagUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutTagWhereUniqueInput
    update: XOR<WorkoutTagUpdateWithoutUserInput, WorkoutTagUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutTagCreateWithoutUserInput, WorkoutTagUncheckedCreateWithoutUserInput>
  }

  export type WorkoutTagUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutTagWhereUniqueInput
    data: XOR<WorkoutTagUpdateWithoutUserInput, WorkoutTagUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutTagUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutTagScalarWhereInput
    data: XOR<WorkoutTagUpdateManyMutationInput, WorkoutTagUncheckedUpdateManyWithoutWorkoutTagInput>
  }

  export type WorkoutTagScalarWhereInput = {
    AND?: Enumerable<WorkoutTagScalarWhereInput>
    OR?: Enumerable<WorkoutTagScalarWhereInput>
    NOT?: Enumerable<WorkoutTagScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    tag?: StringFilter | string
  }

  export type UserBenchmarkGroupUpsertWithWhereUniqueWithoutUserInput = {
    where: UserBenchmarkGroupWhereUniqueInput
    update: XOR<UserBenchmarkGroupUpdateWithoutUserInput, UserBenchmarkGroupUncheckedUpdateWithoutUserInput>
    create: XOR<UserBenchmarkGroupCreateWithoutUserInput, UserBenchmarkGroupUncheckedCreateWithoutUserInput>
  }

  export type UserBenchmarkGroupUpdateWithWhereUniqueWithoutUserInput = {
    where: UserBenchmarkGroupWhereUniqueInput
    data: XOR<UserBenchmarkGroupUpdateWithoutUserInput, UserBenchmarkGroupUncheckedUpdateWithoutUserInput>
  }

  export type UserBenchmarkGroupUpdateManyWithWhereWithoutUserInput = {
    where: UserBenchmarkGroupScalarWhereInput
    data: XOR<UserBenchmarkGroupUpdateManyMutationInput, UserBenchmarkGroupUncheckedUpdateManyWithoutUserBenchmarkGroupsInput>
  }

  export type UserBenchmarkGroupScalarWhereInput = {
    AND?: Enumerable<UserBenchmarkGroupScalarWhereInput>
    OR?: Enumerable<UserBenchmarkGroupScalarWhereInput>
    NOT?: Enumerable<UserBenchmarkGroupScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
  }

  export type UserBenchmarkUpsertWithWhereUniqueWithoutUserInput = {
    where: UserBenchmarkWhereUniqueInput
    update: XOR<UserBenchmarkUpdateWithoutUserInput, UserBenchmarkUncheckedUpdateWithoutUserInput>
    create: XOR<UserBenchmarkCreateWithoutUserInput, UserBenchmarkUncheckedCreateWithoutUserInput>
  }

  export type UserBenchmarkUpdateWithWhereUniqueWithoutUserInput = {
    where: UserBenchmarkWhereUniqueInput
    data: XOR<UserBenchmarkUpdateWithoutUserInput, UserBenchmarkUncheckedUpdateWithoutUserInput>
  }

  export type UserBenchmarkUpdateManyWithWhereWithoutUserInput = {
    where: UserBenchmarkScalarWhereInput
    data: XOR<UserBenchmarkUpdateManyMutationInput, UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    update: XOR<UserBenchmarkEntryUpdateWithoutUserInput, UserBenchmarkEntryUncheckedUpdateWithoutUserInput>
    create: XOR<UserBenchmarkEntryCreateWithoutUserInput, UserBenchmarkEntryUncheckedCreateWithoutUserInput>
  }

  export type UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    data: XOR<UserBenchmarkEntryUpdateWithoutUserInput, UserBenchmarkEntryUncheckedUpdateWithoutUserInput>
  }

  export type UserBenchmarkEntryUpdateManyWithWhereWithoutUserInput = {
    where: UserBenchmarkEntryScalarWhereInput
    data: XOR<UserBenchmarkEntryUpdateManyMutationInput, UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkEntriesInput>
  }

  export type UserBenchmarkEntryScalarWhereInput = {
    AND?: Enumerable<UserBenchmarkEntryScalarWhereInput>
    OR?: Enumerable<UserBenchmarkEntryScalarWhereInput>
    NOT?: Enumerable<UserBenchmarkEntryScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    completedOn?: DateTimeFilter | Date | string
    score?: FloatFilter | number
    note?: StringNullableFilter | string | null
    videoUri?: StringNullableFilter | string | null
    videoThumbUri?: StringNullableFilter | string | null
    userBenchmarkId?: StringFilter | string
  }

  export type WorkoutPlanUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanWhereUniqueInput
    update: XOR<WorkoutPlanUpdateWithoutUserInput, WorkoutPlanUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutPlanCreateWithoutUserInput, WorkoutPlanUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanWhereUniqueInput
    data: XOR<WorkoutPlanUpdateWithoutUserInput, WorkoutPlanUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutPlanUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutPlanScalarWhereInput
    data: XOR<WorkoutPlanUpdateManyMutationInput, WorkoutPlanUncheckedUpdateManyWithoutWorkoutPlansInput>
  }

  export type WorkoutPlanDayUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanDayWhereUniqueInput
    update: XOR<WorkoutPlanDayUpdateWithoutUserInput, WorkoutPlanDayUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutPlanDayCreateWithoutUserInput, WorkoutPlanDayUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanDayUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanDayWhereUniqueInput
    data: XOR<WorkoutPlanDayUpdateWithoutUserInput, WorkoutPlanDayUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutPlanDayUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutPlanDayScalarWhereInput
    data: XOR<WorkoutPlanDayUpdateManyMutationInput, WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanDaysInput>
  }

  export type WorkoutPlanDayScalarWhereInput = {
    AND?: Enumerable<WorkoutPlanDayScalarWhereInput>
    OR?: Enumerable<WorkoutPlanDayScalarWhereInput>
    NOT?: Enumerable<WorkoutPlanDayScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    dayNumber?: IntFilter | number
    workoutPlanId?: StringFilter | string
  }

  export type WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    update: XOR<WorkoutPlanDayWorkoutUpdateWithoutUserInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutUserInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    data: XOR<WorkoutPlanDayWorkoutUpdateWithoutUserInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutPlanDayWorkoutScalarWhereInput
    data: XOR<WorkoutPlanDayWorkoutUpdateManyMutationInput, WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type WorkoutPlanDayWorkoutScalarWhereInput = {
    AND?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
    OR?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
    NOT?: Enumerable<WorkoutPlanDayWorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    note?: StringNullableFilter | string | null
    sortPosition?: IntFilter | number
    workoutId?: StringFilter | string
    workoutPlanDayId?: StringFilter | string
  }

  export type WorkoutPlanEnrolmentUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanEnrolmentWhereUniqueInput
    update: XOR<WorkoutPlanEnrolmentUpdateWithoutUserInput, WorkoutPlanEnrolmentUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutPlanEnrolmentCreateWithoutUserInput, WorkoutPlanEnrolmentUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanEnrolmentUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanEnrolmentWhereUniqueInput
    data: XOR<WorkoutPlanEnrolmentUpdateWithoutUserInput, WorkoutPlanEnrolmentUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutPlanEnrolmentUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutPlanEnrolmentScalarWhereInput
    data: XOR<WorkoutPlanEnrolmentUpdateManyMutationInput, WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanEnrolmentsInput>
  }

  export type WorkoutPlanEnrolmentScalarWhereInput = {
    AND?: Enumerable<WorkoutPlanEnrolmentScalarWhereInput>
    OR?: Enumerable<WorkoutPlanEnrolmentScalarWhereInput>
    NOT?: Enumerable<WorkoutPlanEnrolmentScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    startDate?: DateTimeFilter | Date | string
    completedPlanDayWorkoutIds?: StringNullableListFilter
    workoutPlanId?: StringFilter | string
    userId?: StringFilter | string
  }

  export type WorkoutPlanReviewUpsertWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanReviewWhereUniqueInput
    update: XOR<WorkoutPlanReviewUpdateWithoutUserInput, WorkoutPlanReviewUncheckedUpdateWithoutUserInput>
    create: XOR<WorkoutPlanReviewCreateWithoutUserInput, WorkoutPlanReviewUncheckedCreateWithoutUserInput>
  }

  export type WorkoutPlanReviewUpdateWithWhereUniqueWithoutUserInput = {
    where: WorkoutPlanReviewWhereUniqueInput
    data: XOR<WorkoutPlanReviewUpdateWithoutUserInput, WorkoutPlanReviewUncheckedUpdateWithoutUserInput>
  }

  export type WorkoutPlanReviewUpdateManyWithWhereWithoutUserInput = {
    where: WorkoutPlanReviewScalarWhereInput
    data: XOR<WorkoutPlanReviewUpdateManyMutationInput, WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanReviewsInput>
  }

  export type WorkoutPlanReviewScalarWhereInput = {
    AND?: Enumerable<WorkoutPlanReviewScalarWhereInput>
    OR?: Enumerable<WorkoutPlanReviewScalarWhereInput>
    NOT?: Enumerable<WorkoutPlanReviewScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    score?: FloatFilter | number
    comment?: StringNullableFilter | string | null
    workoutPlanId?: StringFilter | string
  }

  export type CollectionUpsertWithWhereUniqueWithoutUserInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutUserInput, CollectionUncheckedUpdateWithoutUserInput>
    create: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutUserInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutUserInput, CollectionUncheckedUpdateWithoutUserInput>
  }

  export type CollectionUpdateManyWithWhereWithoutUserInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutCollectionsInput>
  }

  export type CollectionScalarWhereInput = {
    AND?: Enumerable<CollectionScalarWhereInput>
    OR?: Enumerable<CollectionScalarWhereInput>
    NOT?: Enumerable<CollectionScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    userId?: StringFilter | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
  }

  export type UserCreateWithoutUserBenchmarkGroupsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserBenchmarkGroupsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserBenchmarkGroupsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserBenchmarkGroupsInput, UserUncheckedCreateWithoutUserBenchmarkGroupsInput>
  }

  export type UserBenchmarkCreateWithoutUserBenchmarkGroupsInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    benchmarkType?: BenchmarkType
    User: UserCreateNestedOneWithoutUserBenchmarksInput
    Equipment?: EquipmentCreateNestedOneWithoutUserBenchmarksInput
    Move: MoveCreateNestedOneWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedCreateWithoutUserBenchmarkGroupsInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    moveId: string
    benchmarkType?: BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkCreateOrConnectWithoutUserBenchmarkGroupsInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkCreateWithoutUserBenchmarkGroupsInput, UserBenchmarkUncheckedCreateWithoutUserBenchmarkGroupsInput>
  }

  export type UserUpsertWithoutUserBenchmarkGroupsInput = {
    update: XOR<UserUpdateWithoutUserBenchmarkGroupsInput, UserUncheckedUpdateWithoutUserBenchmarkGroupsInput>
    create: XOR<UserCreateWithoutUserBenchmarkGroupsInput, UserUncheckedCreateWithoutUserBenchmarkGroupsInput>
  }

  export type UserUpdateWithoutUserBenchmarkGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutUserBenchmarkGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type UserBenchmarkUpsertWithWhereUniqueWithoutUserBenchmarkGroupsInput = {
    where: UserBenchmarkWhereUniqueInput
    update: XOR<UserBenchmarkUpdateWithoutUserBenchmarkGroupsInput, UserBenchmarkUncheckedUpdateWithoutUserBenchmarkGroupsInput>
    create: XOR<UserBenchmarkCreateWithoutUserBenchmarkGroupsInput, UserBenchmarkUncheckedCreateWithoutUserBenchmarkGroupsInput>
  }

  export type UserBenchmarkUpdateWithWhereUniqueWithoutUserBenchmarkGroupsInput = {
    where: UserBenchmarkWhereUniqueInput
    data: XOR<UserBenchmarkUpdateWithoutUserBenchmarkGroupsInput, UserBenchmarkUncheckedUpdateWithoutUserBenchmarkGroupsInput>
  }

  export type UserBenchmarkUpdateManyWithWhereWithoutUserBenchmarkGroupsInput = {
    where: UserBenchmarkScalarWhereInput
    data: XOR<UserBenchmarkUpdateManyMutationInput, UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput>
  }

  export type UserCreateWithoutUserBenchmarksInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserBenchmarksInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserBenchmarksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserBenchmarksInput, UserUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type EquipmentCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    RequiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileCreateNestedManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutUserBenchmarksInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutUserBenchmarksInput, EquipmentUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type MoveCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutUserBenchmarksInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutUserBenchmarksInput, MoveUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkEntryCreateWithoutUserBenchmarkInput = {
    id?: string
    createdAt?: Date | string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
    User: UserCreateNestedOneWithoutUserBenchmarkEntriesInput
  }

  export type UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
  }

  export type UserBenchmarkEntryCreateOrConnectWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    create: XOR<UserBenchmarkEntryCreateWithoutUserBenchmarkInput, UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>
  }

  export type UserBenchmarkEntryCreateManyUserBenchmarkInputEnvelope = {
    data: Enumerable<UserBenchmarkEntryCreateManyUserBenchmarkInput>
    skipDuplicates?: boolean
  }

  export type UserBenchmarkGroupCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutUserBenchmarkGroupsInput
  }

  export type UserBenchmarkGroupUncheckedCreateWithoutUserBenchmarksInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type UserBenchmarkGroupCreateOrConnectWithoutUserBenchmarksInput = {
    where: UserBenchmarkGroupWhereUniqueInput
    create: XOR<UserBenchmarkGroupCreateWithoutUserBenchmarksInput, UserBenchmarkGroupUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type UserUpsertWithoutUserBenchmarksInput = {
    update: XOR<UserUpdateWithoutUserBenchmarksInput, UserUncheckedUpdateWithoutUserBenchmarksInput>
    create: XOR<UserCreateWithoutUserBenchmarksInput, UserUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type UserUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type EquipmentUpsertWithoutUserBenchmarksInput = {
    update: XOR<EquipmentUpdateWithoutUserBenchmarksInput, EquipmentUncheckedUpdateWithoutUserBenchmarksInput>
    create: XOR<EquipmentCreateWithoutUserBenchmarksInput, EquipmentUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type EquipmentUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    RequiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileUpdateManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
  }

  export type MoveUpsertWithoutUserBenchmarksInput = {
    update: XOR<MoveUpdateWithoutUserBenchmarksInput, MoveUncheckedUpdateWithoutUserBenchmarksInput>
    create: XOR<MoveCreateWithoutUserBenchmarksInput, MoveUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type MoveUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
  }

  export type UserBenchmarkEntryUpsertWithWhereUniqueWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    update: XOR<UserBenchmarkEntryUpdateWithoutUserBenchmarkInput, UserBenchmarkEntryUncheckedUpdateWithoutUserBenchmarkInput>
    create: XOR<UserBenchmarkEntryCreateWithoutUserBenchmarkInput, UserBenchmarkEntryUncheckedCreateWithoutUserBenchmarkInput>
  }

  export type UserBenchmarkEntryUpdateWithWhereUniqueWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryWhereUniqueInput
    data: XOR<UserBenchmarkEntryUpdateWithoutUserBenchmarkInput, UserBenchmarkEntryUncheckedUpdateWithoutUserBenchmarkInput>
  }

  export type UserBenchmarkEntryUpdateManyWithWhereWithoutUserBenchmarkInput = {
    where: UserBenchmarkEntryScalarWhereInput
    data: XOR<UserBenchmarkEntryUpdateManyMutationInput, UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkEntriesInput>
  }

  export type UserBenchmarkGroupUpsertWithWhereUniqueWithoutUserBenchmarksInput = {
    where: UserBenchmarkGroupWhereUniqueInput
    update: XOR<UserBenchmarkGroupUpdateWithoutUserBenchmarksInput, UserBenchmarkGroupUncheckedUpdateWithoutUserBenchmarksInput>
    create: XOR<UserBenchmarkGroupCreateWithoutUserBenchmarksInput, UserBenchmarkGroupUncheckedCreateWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkGroupUpdateWithWhereUniqueWithoutUserBenchmarksInput = {
    where: UserBenchmarkGroupWhereUniqueInput
    data: XOR<UserBenchmarkGroupUpdateWithoutUserBenchmarksInput, UserBenchmarkGroupUncheckedUpdateWithoutUserBenchmarksInput>
  }

  export type UserBenchmarkGroupUpdateManyWithWhereWithoutUserBenchmarksInput = {
    where: UserBenchmarkGroupScalarWhereInput
    data: XOR<UserBenchmarkGroupUpdateManyMutationInput, UserBenchmarkGroupUncheckedUpdateManyWithoutUserBenchmarkGroupsInput>
  }

  export type UserCreateWithoutUserBenchmarkEntriesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserBenchmarkEntriesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserBenchmarkEntriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserBenchmarkEntriesInput, UserUncheckedCreateWithoutUserBenchmarkEntriesInput>
  }

  export type UserBenchmarkCreateWithoutUserBenchmarkEntriesInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    benchmarkType?: BenchmarkType
    User: UserCreateNestedOneWithoutUserBenchmarksInput
    Equipment?: EquipmentCreateNestedOneWithoutUserBenchmarksInput
    Move: MoveCreateNestedOneWithoutUserBenchmarksInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedCreateWithoutUserBenchmarkEntriesInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    moveId: string
    benchmarkType?: BenchmarkType
  }

  export type UserBenchmarkCreateOrConnectWithoutUserBenchmarkEntriesInput = {
    where: UserBenchmarkWhereUniqueInput
    create: XOR<UserBenchmarkCreateWithoutUserBenchmarkEntriesInput, UserBenchmarkUncheckedCreateWithoutUserBenchmarkEntriesInput>
  }

  export type UserUpsertWithoutUserBenchmarkEntriesInput = {
    update: XOR<UserUpdateWithoutUserBenchmarkEntriesInput, UserUncheckedUpdateWithoutUserBenchmarkEntriesInput>
    create: XOR<UserCreateWithoutUserBenchmarkEntriesInput, UserUncheckedCreateWithoutUserBenchmarkEntriesInput>
  }

  export type UserUpdateWithoutUserBenchmarkEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutUserBenchmarkEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type UserBenchmarkUpsertWithoutUserBenchmarkEntriesInput = {
    update: XOR<UserBenchmarkUpdateWithoutUserBenchmarkEntriesInput, UserBenchmarkUncheckedUpdateWithoutUserBenchmarkEntriesInput>
    create: XOR<UserBenchmarkCreateWithoutUserBenchmarkEntriesInput, UserBenchmarkUncheckedCreateWithoutUserBenchmarkEntriesInput>
  }

  export type UserBenchmarkUpdateWithoutUserBenchmarkEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    User?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    Equipment?: EquipmentUpdateOneWithoutUserBenchmarksInput
    Move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutUserBenchmarkEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
  }

  export type UserCreateWithoutWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutsInput, UserUncheckedCreateWithoutWorkoutsInput>
  }

  export type WorkoutSectionCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    User: UserCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutSectionTypeId: string
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionCreateOrConnectWithoutWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    create: XOR<WorkoutSectionCreateWithoutWorkoutInput, WorkoutSectionUncheckedCreateWithoutWorkoutInput>
  }

  export type WorkoutSectionCreateManyWorkoutInputEnvelope = {
    data: Enumerable<WorkoutSectionCreateManyWorkoutInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    User: UserCreateNestedOneWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    gymProfileId?: string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutCreateWithoutWorkoutInput, LoggedWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type LoggedWorkoutCreateManyWorkoutInputEnvelope = {
    data: Enumerable<LoggedWorkoutCreateManyWorkoutInput>
    skipDuplicates?: boolean
  }

  export type ScheduledWorkoutCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    User: UserCreateNestedOneWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutCreateWithoutWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type ScheduledWorkoutCreateManyWorkoutInputEnvelope = {
    data: Enumerable<ScheduledWorkoutCreateManyWorkoutInput>
    skipDuplicates?: boolean
  }

  export type WorkoutGoalCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    hexColor: string
  }

  export type WorkoutGoalUncheckedCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description: string
    hexColor: string
  }

  export type WorkoutGoalCreateOrConnectWithoutWorkoutsInput = {
    where: WorkoutGoalWhereUniqueInput
    create: XOR<WorkoutGoalCreateWithoutWorkoutsInput, WorkoutGoalUncheckedCreateWithoutWorkoutsInput>
  }

  export type WorkoutTagCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    User: UserCreateNestedOneWithoutWorkoutTagInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    tag: string
  }

  export type WorkoutTagCreateOrConnectWithoutWorkoutsInput = {
    where: WorkoutTagWhereUniqueInput
    create: XOR<WorkoutTagCreateWithoutWorkoutsInput, WorkoutTagUncheckedCreateWithoutWorkoutsInput>
  }

  export type WorkoutPlanDayWorkoutCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    sortPosition: number
    User: UserCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
    WorkoutPlanDay: WorkoutPlanDayCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    sortPosition: number
    workoutPlanDayId: string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutWorkoutInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type WorkoutPlanDayWorkoutCreateManyWorkoutInputEnvelope = {
    data: Enumerable<WorkoutPlanDayWorkoutCreateManyWorkoutInput>
    skipDuplicates?: boolean
  }

  export type CollectionCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutCollectionsInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type CollectionCreateOrConnectWithoutWorkoutsInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutWorkoutsInput, CollectionUncheckedCreateWithoutWorkoutsInput>
  }

  export type DiscoverWorkoutCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    DiscoverWorkoutCategory: DiscoverWorkoutCategoryCreateNestedOneWithoutDiscoverWorkoutsInput
  }

  export type DiscoverWorkoutUncheckedCreateWithoutWorkoutInput = {
    id?: string
    createdAt?: Date | string
    discoverWorkoutCategoryId: string
  }

  export type DiscoverWorkoutCreateOrConnectWithoutWorkoutInput = {
    where: DiscoverWorkoutWhereUniqueInput
    create: XOR<DiscoverWorkoutCreateWithoutWorkoutInput, DiscoverWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type DiscoverWorkoutCreateManyWorkoutInputEnvelope = {
    data: Enumerable<DiscoverWorkoutCreateManyWorkoutInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutWorkoutsInput = {
    update: XOR<UserUpdateWithoutWorkoutsInput, UserUncheckedUpdateWithoutWorkoutsInput>
    create: XOR<UserCreateWithoutWorkoutsInput, UserUncheckedCreateWithoutWorkoutsInput>
  }

  export type UserUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutSectionUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    update: XOR<WorkoutSectionUpdateWithoutWorkoutInput, WorkoutSectionUncheckedUpdateWithoutWorkoutInput>
    create: XOR<WorkoutSectionCreateWithoutWorkoutInput, WorkoutSectionUncheckedCreateWithoutWorkoutInput>
  }

  export type WorkoutSectionUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutSectionWhereUniqueInput
    data: XOR<WorkoutSectionUpdateWithoutWorkoutInput, WorkoutSectionUncheckedUpdateWithoutWorkoutInput>
  }

  export type WorkoutSectionUpdateManyWithWhereWithoutWorkoutInput = {
    where: WorkoutSectionScalarWhereInput
    data: XOR<WorkoutSectionUpdateManyMutationInput, WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionsInput>
  }

  export type LoggedWorkoutUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    update: XOR<LoggedWorkoutUpdateWithoutWorkoutInput, LoggedWorkoutUncheckedUpdateWithoutWorkoutInput>
    create: XOR<LoggedWorkoutCreateWithoutWorkoutInput, LoggedWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type LoggedWorkoutUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: LoggedWorkoutWhereUniqueInput
    data: XOR<LoggedWorkoutUpdateWithoutWorkoutInput, LoggedWorkoutUncheckedUpdateWithoutWorkoutInput>
  }

  export type LoggedWorkoutUpdateManyWithWhereWithoutWorkoutInput = {
    where: LoggedWorkoutScalarWhereInput
    data: XOR<LoggedWorkoutUpdateManyMutationInput, LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput>
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUpdateWithoutWorkoutInput, ScheduledWorkoutUncheckedUpdateWithoutWorkoutInput>
    create: XOR<ScheduledWorkoutCreateWithoutWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUpdateWithoutWorkoutInput, ScheduledWorkoutUncheckedUpdateWithoutWorkoutInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUpdateManyMutationInput, ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput>
  }

  export type WorkoutGoalUpsertWithWhereUniqueWithoutWorkoutsInput = {
    where: WorkoutGoalWhereUniqueInput
    update: XOR<WorkoutGoalUpdateWithoutWorkoutsInput, WorkoutGoalUncheckedUpdateWithoutWorkoutsInput>
    create: XOR<WorkoutGoalCreateWithoutWorkoutsInput, WorkoutGoalUncheckedCreateWithoutWorkoutsInput>
  }

  export type WorkoutGoalUpdateWithWhereUniqueWithoutWorkoutsInput = {
    where: WorkoutGoalWhereUniqueInput
    data: XOR<WorkoutGoalUpdateWithoutWorkoutsInput, WorkoutGoalUncheckedUpdateWithoutWorkoutsInput>
  }

  export type WorkoutGoalUpdateManyWithWhereWithoutWorkoutsInput = {
    where: WorkoutGoalScalarWhereInput
    data: XOR<WorkoutGoalUpdateManyMutationInput, WorkoutGoalUncheckedUpdateManyWithoutWorkoutGoalsInput>
  }

  export type WorkoutGoalScalarWhereInput = {
    AND?: Enumerable<WorkoutGoalScalarWhereInput>
    OR?: Enumerable<WorkoutGoalScalarWhereInput>
    NOT?: Enumerable<WorkoutGoalScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringFilter | string
    hexColor?: StringFilter | string
  }

  export type WorkoutTagUpsertWithWhereUniqueWithoutWorkoutsInput = {
    where: WorkoutTagWhereUniqueInput
    update: XOR<WorkoutTagUpdateWithoutWorkoutsInput, WorkoutTagUncheckedUpdateWithoutWorkoutsInput>
    create: XOR<WorkoutTagCreateWithoutWorkoutsInput, WorkoutTagUncheckedCreateWithoutWorkoutsInput>
  }

  export type WorkoutTagUpdateWithWhereUniqueWithoutWorkoutsInput = {
    where: WorkoutTagWhereUniqueInput
    data: XOR<WorkoutTagUpdateWithoutWorkoutsInput, WorkoutTagUncheckedUpdateWithoutWorkoutsInput>
  }

  export type WorkoutTagUpdateManyWithWhereWithoutWorkoutsInput = {
    where: WorkoutTagScalarWhereInput
    data: XOR<WorkoutTagUpdateManyMutationInput, WorkoutTagUncheckedUpdateManyWithoutWorkoutTagsInput>
  }

  export type WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    update: XOR<WorkoutPlanDayWorkoutUpdateWithoutWorkoutInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutWorkoutInput>
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutWorkoutInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    data: XOR<WorkoutPlanDayWorkoutUpdateWithoutWorkoutInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutWorkoutInput>
  }

  export type WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutWorkoutInput = {
    where: WorkoutPlanDayWorkoutScalarWhereInput
    data: XOR<WorkoutPlanDayWorkoutUpdateManyMutationInput, WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutInput>
  }

  export type CollectionUpsertWithWhereUniqueWithoutWorkoutsInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutWorkoutsInput, CollectionUncheckedUpdateWithoutWorkoutsInput>
    create: XOR<CollectionCreateWithoutWorkoutsInput, CollectionUncheckedCreateWithoutWorkoutsInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutWorkoutsInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutWorkoutsInput, CollectionUncheckedUpdateWithoutWorkoutsInput>
  }

  export type CollectionUpdateManyWithWhereWithoutWorkoutsInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutCollectionsInput>
  }

  export type DiscoverWorkoutUpsertWithWhereUniqueWithoutWorkoutInput = {
    where: DiscoverWorkoutWhereUniqueInput
    update: XOR<DiscoverWorkoutUpdateWithoutWorkoutInput, DiscoverWorkoutUncheckedUpdateWithoutWorkoutInput>
    create: XOR<DiscoverWorkoutCreateWithoutWorkoutInput, DiscoverWorkoutUncheckedCreateWithoutWorkoutInput>
  }

  export type DiscoverWorkoutUpdateWithWhereUniqueWithoutWorkoutInput = {
    where: DiscoverWorkoutWhereUniqueInput
    data: XOR<DiscoverWorkoutUpdateWithoutWorkoutInput, DiscoverWorkoutUncheckedUpdateWithoutWorkoutInput>
  }

  export type DiscoverWorkoutUpdateManyWithWhereWithoutWorkoutInput = {
    where: DiscoverWorkoutScalarWhereInput
    data: XOR<DiscoverWorkoutUpdateManyMutationInput, DiscoverWorkoutUncheckedUpdateManyWithoutDiscoverWorkoutsInput>
  }

  export type DiscoverWorkoutScalarWhereInput = {
    AND?: Enumerable<DiscoverWorkoutScalarWhereInput>
    OR?: Enumerable<DiscoverWorkoutScalarWhereInput>
    NOT?: Enumerable<DiscoverWorkoutScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    workoutId?: StringFilter | string
    discoverWorkoutCategoryId?: StringFilter | string
  }

  export type UserCreateWithoutWorkoutTagInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutTagInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutTagInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutTagInput, UserUncheckedCreateWithoutWorkoutTagInput>
  }

  export type WorkoutCreateWithoutWorkoutTagsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutWorkoutTagsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutWorkoutTagsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutWorkoutTagsInput, WorkoutUncheckedCreateWithoutWorkoutTagsInput>
  }

  export type WorkoutPlanCreateWithoutWorkoutTagsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedCreateWithoutWorkoutTagsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateOrConnectWithoutWorkoutTagsInput = {
    where: WorkoutPlanWhereUniqueInput
    create: XOR<WorkoutPlanCreateWithoutWorkoutTagsInput, WorkoutPlanUncheckedCreateWithoutWorkoutTagsInput>
  }

  export type UserUpsertWithoutWorkoutTagInput = {
    update: XOR<UserUpdateWithoutWorkoutTagInput, UserUncheckedUpdateWithoutWorkoutTagInput>
    create: XOR<UserCreateWithoutWorkoutTagInput, UserUncheckedCreateWithoutWorkoutTagInput>
  }

  export type UserUpdateWithoutWorkoutTagInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutTagInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutUpsertWithWhereUniqueWithoutWorkoutTagsInput = {
    where: WorkoutWhereUniqueInput
    update: XOR<WorkoutUpdateWithoutWorkoutTagsInput, WorkoutUncheckedUpdateWithoutWorkoutTagsInput>
    create: XOR<WorkoutCreateWithoutWorkoutTagsInput, WorkoutUncheckedCreateWithoutWorkoutTagsInput>
  }

  export type WorkoutUpdateWithWhereUniqueWithoutWorkoutTagsInput = {
    where: WorkoutWhereUniqueInput
    data: XOR<WorkoutUpdateWithoutWorkoutTagsInput, WorkoutUncheckedUpdateWithoutWorkoutTagsInput>
  }

  export type WorkoutUpdateManyWithWhereWithoutWorkoutTagsInput = {
    where: WorkoutScalarWhereInput
    data: XOR<WorkoutUpdateManyMutationInput, WorkoutUncheckedUpdateManyWithoutWorkoutsInput>
  }

  export type WorkoutPlanUpsertWithWhereUniqueWithoutWorkoutTagsInput = {
    where: WorkoutPlanWhereUniqueInput
    update: XOR<WorkoutPlanUpdateWithoutWorkoutTagsInput, WorkoutPlanUncheckedUpdateWithoutWorkoutTagsInput>
    create: XOR<WorkoutPlanCreateWithoutWorkoutTagsInput, WorkoutPlanUncheckedCreateWithoutWorkoutTagsInput>
  }

  export type WorkoutPlanUpdateWithWhereUniqueWithoutWorkoutTagsInput = {
    where: WorkoutPlanWhereUniqueInput
    data: XOR<WorkoutPlanUpdateWithoutWorkoutTagsInput, WorkoutPlanUncheckedUpdateWithoutWorkoutTagsInput>
  }

  export type WorkoutPlanUpdateManyWithWhereWithoutWorkoutTagsInput = {
    where: WorkoutPlanScalarWhereInput
    data: XOR<WorkoutPlanUpdateManyMutationInput, WorkoutPlanUncheckedUpdateManyWithoutWorkoutPlansInput>
  }

  export type UserCreateWithoutWorkoutSectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutSectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutSectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutSectionsInput, UserUncheckedCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutCreateWithoutWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutWorkoutSectionsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutWorkoutSectionsInput, WorkoutUncheckedCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutSectionTypeCreateWithoutWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    validRepTypes?: WorkoutSectionTypeCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeUncheckedCreateWithoutWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    validRepTypes?: WorkoutSectionTypeCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeCreateOrConnectWithoutWorkoutSectionsInput = {
    where: WorkoutSectionTypeWhereUniqueInput
    create: XOR<WorkoutSectionTypeCreateWithoutWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutSetCreateWithoutWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    User: UserCreateNestedOneWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSetInput
  }

  export type WorkoutSetUncheckedCreateWithoutWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    rounds?: number
    duration?: number | null
    Generators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSetInput
  }

  export type WorkoutSetCreateOrConnectWithoutWorkoutSectionInput = {
    where: WorkoutSetWhereUniqueInput
    create: XOR<WorkoutSetCreateWithoutWorkoutSectionInput, WorkoutSetUncheckedCreateWithoutWorkoutSectionInput>
  }

  export type WorkoutSetCreateManyWorkoutSectionInputEnvelope = {
    data: Enumerable<WorkoutSetCreateManyWorkoutSectionInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutWorkoutSectionsInput = {
    update: XOR<UserUpdateWithoutWorkoutSectionsInput, UserUncheckedUpdateWithoutWorkoutSectionsInput>
    create: XOR<UserCreateWithoutWorkoutSectionsInput, UserUncheckedCreateWithoutWorkoutSectionsInput>
  }

  export type UserUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutUpsertWithoutWorkoutSectionsInput = {
    update: XOR<WorkoutUpdateWithoutWorkoutSectionsInput, WorkoutUncheckedUpdateWithoutWorkoutSectionsInput>
    create: XOR<WorkoutCreateWithoutWorkoutSectionsInput, WorkoutUncheckedCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutSectionTypeUpsertWithoutWorkoutSectionsInput = {
    update: XOR<WorkoutSectionTypeUpdateWithoutWorkoutSectionsInput, WorkoutSectionTypeUncheckedUpdateWithoutWorkoutSectionsInput>
    create: XOR<WorkoutSectionTypeCreateWithoutWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutWorkoutSectionsInput>
  }

  export type WorkoutSectionTypeUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeUncheckedUpdateWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSetUpsertWithWhereUniqueWithoutWorkoutSectionInput = {
    where: WorkoutSetWhereUniqueInput
    update: XOR<WorkoutSetUpdateWithoutWorkoutSectionInput, WorkoutSetUncheckedUpdateWithoutWorkoutSectionInput>
    create: XOR<WorkoutSetCreateWithoutWorkoutSectionInput, WorkoutSetUncheckedCreateWithoutWorkoutSectionInput>
  }

  export type WorkoutSetUpdateWithWhereUniqueWithoutWorkoutSectionInput = {
    where: WorkoutSetWhereUniqueInput
    data: XOR<WorkoutSetUpdateWithoutWorkoutSectionInput, WorkoutSetUncheckedUpdateWithoutWorkoutSectionInput>
  }

  export type WorkoutSetUpdateManyWithWhereWithoutWorkoutSectionInput = {
    where: WorkoutSetScalarWhereInput
    data: XOR<WorkoutSetUpdateManyMutationInput, WorkoutSetUncheckedUpdateManyWithoutWorkoutSetsInput>
  }

  export type UserCreateWithoutWorkoutSetsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutSetsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutSetsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutSetsInput, UserUncheckedCreateWithoutWorkoutSetsInput>
  }

  export type WorkoutSetGeneratorCreateWithoutWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    User: UserCreateNestedOneWithoutWorkoutSetGeneratorsInput
  }

  export type WorkoutSetGeneratorUncheckedCreateWithoutWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
  }

  export type WorkoutSetGeneratorCreateOrConnectWithoutWorkoutSetInput = {
    where: WorkoutSetGeneratorWhereUniqueInput
    create: XOR<WorkoutSetGeneratorCreateWithoutWorkoutSetInput, WorkoutSetGeneratorUncheckedCreateWithoutWorkoutSetInput>
  }

  export type WorkoutSetGeneratorCreateManyWorkoutSetInputEnvelope = {
    data: Enumerable<WorkoutSetGeneratorCreateManyWorkoutSetInput>
    skipDuplicates?: boolean
  }

  export type WorkoutSetIntervalBuyInCreateWithoutWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    interval: number
    User: UserCreateNestedOneWithoutWorkoutSetIntervalBuyInInput
    WorkoutMove: WorkoutMoveCreateNestedOneWithoutWorkoutSetIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    interval: number
    workoutMoveId: string
  }

  export type WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutSetInput = {
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    create: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutSetInput>
  }

  export type WorkoutMoveCreateWithoutWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    User: UserCreateNestedOneWithoutWorkoutMovesInput
    Move: MoveCreateNestedOneWithoutWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedCreateWithoutWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    equipmentId?: string | null
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveCreateOrConnectWithoutWorkoutSetInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveCreateWithoutWorkoutSetInput, WorkoutMoveUncheckedCreateWithoutWorkoutSetInput>
  }

  export type WorkoutMoveCreateManyWorkoutSetInputEnvelope = {
    data: Enumerable<WorkoutMoveCreateManyWorkoutSetInput>
    skipDuplicates?: boolean
  }

  export type WorkoutSectionCreateWithoutWorkoutSetsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    User: UserCreateNestedOneWithoutWorkoutSectionsInput
    Workout: WorkoutCreateNestedOneWithoutWorkoutSectionsInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedCreateWithoutWorkoutSetsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutId: string
    workoutSectionTypeId: string
  }

  export type WorkoutSectionCreateOrConnectWithoutWorkoutSetsInput = {
    where: WorkoutSectionWhereUniqueInput
    create: XOR<WorkoutSectionCreateWithoutWorkoutSetsInput, WorkoutSectionUncheckedCreateWithoutWorkoutSetsInput>
  }

  export type UserUpsertWithoutWorkoutSetsInput = {
    update: XOR<UserUpdateWithoutWorkoutSetsInput, UserUncheckedUpdateWithoutWorkoutSetsInput>
    create: XOR<UserCreateWithoutWorkoutSetsInput, UserUncheckedCreateWithoutWorkoutSetsInput>
  }

  export type UserUpdateWithoutWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutSetGeneratorUpsertWithWhereUniqueWithoutWorkoutSetInput = {
    where: WorkoutSetGeneratorWhereUniqueInput
    update: XOR<WorkoutSetGeneratorUpdateWithoutWorkoutSetInput, WorkoutSetGeneratorUncheckedUpdateWithoutWorkoutSetInput>
    create: XOR<WorkoutSetGeneratorCreateWithoutWorkoutSetInput, WorkoutSetGeneratorUncheckedCreateWithoutWorkoutSetInput>
  }

  export type WorkoutSetGeneratorUpdateWithWhereUniqueWithoutWorkoutSetInput = {
    where: WorkoutSetGeneratorWhereUniqueInput
    data: XOR<WorkoutSetGeneratorUpdateWithoutWorkoutSetInput, WorkoutSetGeneratorUncheckedUpdateWithoutWorkoutSetInput>
  }

  export type WorkoutSetGeneratorUpdateManyWithWhereWithoutWorkoutSetInput = {
    where: WorkoutSetGeneratorScalarWhereInput
    data: XOR<WorkoutSetGeneratorUpdateManyMutationInput, WorkoutSetGeneratorUncheckedUpdateManyWithoutGeneratorsInput>
  }

  export type WorkoutSetIntervalBuyInUpsertWithoutWorkoutSetInput = {
    update: XOR<WorkoutSetIntervalBuyInUpdateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedUpdateWithoutWorkoutSetInput>
    create: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutSetInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutSetInput>
  }

  export type WorkoutSetIntervalBuyInUpdateWithoutWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput
    WorkoutMove?: WorkoutMoveUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateWithoutWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    interval?: IntFieldUpdateOperationsInput | number
    workoutMoveId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutMoveUpsertWithWhereUniqueWithoutWorkoutSetInput = {
    where: WorkoutMoveWhereUniqueInput
    update: XOR<WorkoutMoveUpdateWithoutWorkoutSetInput, WorkoutMoveUncheckedUpdateWithoutWorkoutSetInput>
    create: XOR<WorkoutMoveCreateWithoutWorkoutSetInput, WorkoutMoveUncheckedCreateWithoutWorkoutSetInput>
  }

  export type WorkoutMoveUpdateWithWhereUniqueWithoutWorkoutSetInput = {
    where: WorkoutMoveWhereUniqueInput
    data: XOR<WorkoutMoveUpdateWithoutWorkoutSetInput, WorkoutMoveUncheckedUpdateWithoutWorkoutSetInput>
  }

  export type WorkoutMoveUpdateManyWithWhereWithoutWorkoutSetInput = {
    where: WorkoutMoveScalarWhereInput
    data: XOR<WorkoutMoveUpdateManyMutationInput, WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput>
  }

  export type WorkoutSectionUpsertWithoutWorkoutSetsInput = {
    update: XOR<WorkoutSectionUpdateWithoutWorkoutSetsInput, WorkoutSectionUncheckedUpdateWithoutWorkoutSetsInput>
    create: XOR<WorkoutSectionCreateWithoutWorkoutSetsInput, WorkoutSectionUncheckedCreateWithoutWorkoutSetsInput>
  }

  export type WorkoutSectionUpdateWithoutWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutWorkoutSectionsInput
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutWorkoutSectionsInput
  }

  export type WorkoutSectionUncheckedUpdateWithoutWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateWithoutWorkoutSetIntervalBuyInInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutSetIntervalBuyInInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutSetIntervalBuyInInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutSetIntervalBuyInInput, UserUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
  }

  export type WorkoutMoveCreateWithoutWorkoutSetIntervalBuyInInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    User: UserCreateNestedOneWithoutWorkoutMovesInput
    Move: MoveCreateNestedOneWithoutWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutWorkoutMovesInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedCreateWithoutWorkoutSetIntervalBuyInInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    equipmentId?: string | null
    workoutSetId: string
  }

  export type WorkoutMoveCreateOrConnectWithoutWorkoutSetIntervalBuyInInput = {
    where: WorkoutMoveWhereUniqueInput
    create: XOR<WorkoutMoveCreateWithoutWorkoutSetIntervalBuyInInput, WorkoutMoveUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
  }

  export type WorkoutSetCreateWithoutIntervalBuyInInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    User: UserCreateNestedOneWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorCreateNestedManyWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSetInput
    WorkoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedCreateWithoutIntervalBuyInInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    rounds?: number
    duration?: number | null
    workoutSectionId: string
    Generators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSetInput
  }

  export type WorkoutSetCreateOrConnectWithoutIntervalBuyInInput = {
    where: WorkoutSetWhereUniqueInput
    create: XOR<WorkoutSetCreateWithoutIntervalBuyInInput, WorkoutSetUncheckedCreateWithoutIntervalBuyInInput>
  }

  export type UserUpsertWithoutWorkoutSetIntervalBuyInInput = {
    update: XOR<UserUpdateWithoutWorkoutSetIntervalBuyInInput, UserUncheckedUpdateWithoutWorkoutSetIntervalBuyInInput>
    create: XOR<UserCreateWithoutWorkoutSetIntervalBuyInInput, UserUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
  }

  export type UserUpdateWithoutWorkoutSetIntervalBuyInInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutSetIntervalBuyInInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutMoveUpsertWithoutWorkoutSetIntervalBuyInInput = {
    update: XOR<WorkoutMoveUpdateWithoutWorkoutSetIntervalBuyInInput, WorkoutMoveUncheckedUpdateWithoutWorkoutSetIntervalBuyInInput>
    create: XOR<WorkoutMoveCreateWithoutWorkoutSetIntervalBuyInInput, WorkoutMoveUncheckedCreateWithoutWorkoutSetIntervalBuyInInput>
  }

  export type WorkoutMoveUpdateWithoutWorkoutSetIntervalBuyInInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    User?: UserUpdateOneRequiredWithoutWorkoutMovesInput
    Move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutWorkoutMovesInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutWorkoutSetIntervalBuyInInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSetUpsertWithoutIntervalBuyInInput = {
    update: XOR<WorkoutSetUpdateWithoutIntervalBuyInInput, WorkoutSetUncheckedUpdateWithoutIntervalBuyInInput>
    create: XOR<WorkoutSetCreateWithoutIntervalBuyInInput, WorkoutSetUncheckedCreateWithoutIntervalBuyInInput>
  }

  export type WorkoutSetUpdateWithoutIntervalBuyInInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorUpdateManyWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSetInput
    WorkoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedUpdateWithoutIntervalBuyInInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
    Generators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSetInput
  }

  export type UserCreateWithoutWorkoutSetGeneratorsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutSetGeneratorsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutSetGeneratorsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutSetGeneratorsInput, UserUncheckedCreateWithoutWorkoutSetGeneratorsInput>
  }

  export type WorkoutSetCreateWithoutGeneratorsInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    User: UserCreateNestedOneWithoutWorkoutSetsInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutWorkoutSetInput
    WorkoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedCreateWithoutGeneratorsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    rounds?: number
    duration?: number | null
    workoutSectionId: string
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutWorkoutSetInput
  }

  export type WorkoutSetCreateOrConnectWithoutGeneratorsInput = {
    where: WorkoutSetWhereUniqueInput
    create: XOR<WorkoutSetCreateWithoutGeneratorsInput, WorkoutSetUncheckedCreateWithoutGeneratorsInput>
  }

  export type UserUpsertWithoutWorkoutSetGeneratorsInput = {
    update: XOR<UserUpdateWithoutWorkoutSetGeneratorsInput, UserUncheckedUpdateWithoutWorkoutSetGeneratorsInput>
    create: XOR<UserCreateWithoutWorkoutSetGeneratorsInput, UserUncheckedCreateWithoutWorkoutSetGeneratorsInput>
  }

  export type UserUpdateWithoutWorkoutSetGeneratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutSetGeneratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutSetUpsertWithoutGeneratorsInput = {
    update: XOR<WorkoutSetUpdateWithoutGeneratorsInput, WorkoutSetUncheckedUpdateWithoutGeneratorsInput>
    create: XOR<WorkoutSetCreateWithoutGeneratorsInput, WorkoutSetUncheckedCreateWithoutGeneratorsInput>
  }

  export type WorkoutSetUpdateWithoutGeneratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutWorkoutSetsInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSetInput
    WorkoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedUpdateWithoutGeneratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSetInput
  }

  export type UserCreateWithoutWorkoutMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutMovesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutMovesInput, UserUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type MoveCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutWorkoutMovesInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutWorkoutMovesInput, MoveUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type EquipmentCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    RequiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileCreateNestedManyWithoutEquipmentsInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutWorkoutMovesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutWorkoutMovesInput, EquipmentUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type WorkoutSetCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    User: UserCreateNestedOneWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedOneWithoutWorkoutSetInput
    WorkoutSection: WorkoutSectionCreateNestedOneWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedCreateWithoutWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    rounds?: number
    duration?: number | null
    workoutSectionId: string
    Generators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedOneWithoutWorkoutSetInput
  }

  export type WorkoutSetCreateOrConnectWithoutWorkoutMovesInput = {
    where: WorkoutSetWhereUniqueInput
    create: XOR<WorkoutSetCreateWithoutWorkoutMovesInput, WorkoutSetUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type WorkoutSetIntervalBuyInCreateWithoutWorkoutMoveInput = {
    id?: string
    createdAt?: Date | string
    interval: number
    User: UserCreateNestedOneWithoutWorkoutSetIntervalBuyInInput
    WorkoutSet: WorkoutSetCreateNestedOneWithoutIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutMoveInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    interval: number
    workoutSetId: string
  }

  export type WorkoutSetIntervalBuyInCreateOrConnectWithoutWorkoutMoveInput = {
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    create: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutMoveInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutMoveInput>
  }

  export type WorkoutSetIntervalBuyInCreateManyWorkoutMoveInputEnvelope = {
    data: Enumerable<WorkoutSetIntervalBuyInCreateManyWorkoutMoveInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutWorkoutMovesInput = {
    update: XOR<UserUpdateWithoutWorkoutMovesInput, UserUncheckedUpdateWithoutWorkoutMovesInput>
    create: XOR<UserCreateWithoutWorkoutMovesInput, UserUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type UserUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type MoveUpsertWithoutWorkoutMovesInput = {
    update: XOR<MoveUpdateWithoutWorkoutMovesInput, MoveUncheckedUpdateWithoutWorkoutMovesInput>
    create: XOR<MoveCreateWithoutWorkoutMovesInput, MoveUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type MoveUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type EquipmentUpsertWithoutWorkoutMovesInput = {
    update: XOR<EquipmentUpdateWithoutWorkoutMovesInput, EquipmentUncheckedUpdateWithoutWorkoutMovesInput>
    create: XOR<EquipmentCreateWithoutWorkoutMovesInput, EquipmentUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type EquipmentUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    RequiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileUpdateManyWithoutEquipmentsInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutEquipmentInput
  }

  export type WorkoutSetUpsertWithoutWorkoutMovesInput = {
    update: XOR<WorkoutSetUpdateWithoutWorkoutMovesInput, WorkoutSetUncheckedUpdateWithoutWorkoutMovesInput>
    create: XOR<WorkoutSetCreateWithoutWorkoutMovesInput, WorkoutSetUncheckedCreateWithoutWorkoutMovesInput>
  }

  export type WorkoutSetUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUpdateOneWithoutWorkoutSetInput
    WorkoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedUpdateWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
    Generators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateOneWithoutWorkoutSetInput
  }

  export type WorkoutSetIntervalBuyInUpsertWithWhereUniqueWithoutWorkoutMoveInput = {
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    update: XOR<WorkoutSetIntervalBuyInUpdateWithoutWorkoutMoveInput, WorkoutSetIntervalBuyInUncheckedUpdateWithoutWorkoutMoveInput>
    create: XOR<WorkoutSetIntervalBuyInCreateWithoutWorkoutMoveInput, WorkoutSetIntervalBuyInUncheckedCreateWithoutWorkoutMoveInput>
  }

  export type WorkoutSetIntervalBuyInUpdateWithWhereUniqueWithoutWorkoutMoveInput = {
    where: WorkoutSetIntervalBuyInWhereUniqueInput
    data: XOR<WorkoutSetIntervalBuyInUpdateWithoutWorkoutMoveInput, WorkoutSetIntervalBuyInUncheckedUpdateWithoutWorkoutMoveInput>
  }

  export type WorkoutSetIntervalBuyInUpdateManyWithWhereWithoutWorkoutMoveInput = {
    where: WorkoutSetIntervalBuyInScalarWhereInput
    data: XOR<WorkoutSetIntervalBuyInUpdateManyMutationInput, WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutSetIntervalBuyInInput>
  }

  export type UserCreateWithoutWorkoutPlansInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutPlansInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutPlansInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutPlansInput, UserUncheckedCreateWithoutWorkoutPlansInput>
  }

  export type WorkoutPlanEnrolmentCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    User: UserCreateNestedOneWithoutWorkoutPlanEnrolmentsInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    userId: string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentCreateOrConnectWithoutWorkoutPlanInput = {
    where: WorkoutPlanEnrolmentWhereUniqueInput
    create: XOR<WorkoutPlanEnrolmentCreateWithoutWorkoutPlanInput, WorkoutPlanEnrolmentUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanEnrolmentCreateManyWorkoutPlanInputEnvelope = {
    data: Enumerable<WorkoutPlanEnrolmentCreateManyWorkoutPlanInput>
    skipDuplicates?: boolean
  }

  export type WorkoutPlanReviewCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    User: UserCreateNestedOneWithoutWorkoutPlanReviewsInput
  }

  export type WorkoutPlanReviewUncheckedCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    score: number
    comment?: string | null
  }

  export type WorkoutPlanReviewCreateOrConnectWithoutWorkoutPlanInput = {
    where: WorkoutPlanReviewWhereUniqueInput
    create: XOR<WorkoutPlanReviewCreateWithoutWorkoutPlanInput, WorkoutPlanReviewUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanReviewCreateManyWorkoutPlanInputEnvelope = {
    data: Enumerable<WorkoutPlanReviewCreateManyWorkoutPlanInput>
    skipDuplicates?: boolean
  }

  export type WorkoutTagCreateWithoutWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    User: UserCreateNestedOneWithoutWorkoutTagInput
    Workouts?: WorkoutCreateNestedManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedCreateWithoutWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    tag: string
  }

  export type WorkoutTagCreateOrConnectWithoutWorkoutPlansInput = {
    where: WorkoutTagWhereUniqueInput
    create: XOR<WorkoutTagCreateWithoutWorkoutPlansInput, WorkoutTagUncheckedCreateWithoutWorkoutPlansInput>
  }

  export type WorkoutPlanDayCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    dayNumber: number
    User: UserCreateNestedOneWithoutWorkoutPlanDaysInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    dayNumber: number
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanInput = {
    where: WorkoutPlanDayWhereUniqueInput
    create: XOR<WorkoutPlanDayCreateWithoutWorkoutPlanInput, WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanDayCreateManyWorkoutPlanInputEnvelope = {
    data: Enumerable<WorkoutPlanDayCreateManyWorkoutPlanInput>
    skipDuplicates?: boolean
  }

  export type CollectionCreateWithoutWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutCollectionsInput
    Workouts?: WorkoutCreateNestedManyWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
  }

  export type CollectionCreateOrConnectWithoutWorkoutPlansInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutWorkoutPlansInput, CollectionUncheckedCreateWithoutWorkoutPlansInput>
  }

  export type DiscoverWorkoutPlanCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    DiscoverWorkoutPlanCategory: DiscoverWorkoutPlanCategoryCreateNestedOneWithoutDiscoverWorkoutPlansInput
  }

  export type DiscoverWorkoutPlanUncheckedCreateWithoutWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    discoverWorkoutPlanCategoryId: string
  }

  export type DiscoverWorkoutPlanCreateOrConnectWithoutWorkoutPlanInput = {
    where: DiscoverWorkoutPlanWhereUniqueInput
    create: XOR<DiscoverWorkoutPlanCreateWithoutWorkoutPlanInput, DiscoverWorkoutPlanUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type DiscoverWorkoutPlanCreateManyWorkoutPlanInputEnvelope = {
    data: Enumerable<DiscoverWorkoutPlanCreateManyWorkoutPlanInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutWorkoutPlansInput = {
    update: XOR<UserUpdateWithoutWorkoutPlansInput, UserUncheckedUpdateWithoutWorkoutPlansInput>
    create: XOR<UserCreateWithoutWorkoutPlansInput, UserUncheckedCreateWithoutWorkoutPlansInput>
  }

  export type UserUpdateWithoutWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutPlanEnrolmentUpsertWithWhereUniqueWithoutWorkoutPlanInput = {
    where: WorkoutPlanEnrolmentWhereUniqueInput
    update: XOR<WorkoutPlanEnrolmentUpdateWithoutWorkoutPlanInput, WorkoutPlanEnrolmentUncheckedUpdateWithoutWorkoutPlanInput>
    create: XOR<WorkoutPlanEnrolmentCreateWithoutWorkoutPlanInput, WorkoutPlanEnrolmentUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanEnrolmentUpdateWithWhereUniqueWithoutWorkoutPlanInput = {
    where: WorkoutPlanEnrolmentWhereUniqueInput
    data: XOR<WorkoutPlanEnrolmentUpdateWithoutWorkoutPlanInput, WorkoutPlanEnrolmentUncheckedUpdateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanEnrolmentUpdateManyWithWhereWithoutWorkoutPlanInput = {
    where: WorkoutPlanEnrolmentScalarWhereInput
    data: XOR<WorkoutPlanEnrolmentUpdateManyMutationInput, WorkoutPlanEnrolmentUncheckedUpdateManyWithoutEnrolmentsInput>
  }

  export type WorkoutPlanReviewUpsertWithWhereUniqueWithoutWorkoutPlanInput = {
    where: WorkoutPlanReviewWhereUniqueInput
    update: XOR<WorkoutPlanReviewUpdateWithoutWorkoutPlanInput, WorkoutPlanReviewUncheckedUpdateWithoutWorkoutPlanInput>
    create: XOR<WorkoutPlanReviewCreateWithoutWorkoutPlanInput, WorkoutPlanReviewUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanReviewUpdateWithWhereUniqueWithoutWorkoutPlanInput = {
    where: WorkoutPlanReviewWhereUniqueInput
    data: XOR<WorkoutPlanReviewUpdateWithoutWorkoutPlanInput, WorkoutPlanReviewUncheckedUpdateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanReviewUpdateManyWithWhereWithoutWorkoutPlanInput = {
    where: WorkoutPlanReviewScalarWhereInput
    data: XOR<WorkoutPlanReviewUpdateManyMutationInput, WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanReviewsInput>
  }

  export type WorkoutTagUpsertWithWhereUniqueWithoutWorkoutPlansInput = {
    where: WorkoutTagWhereUniqueInput
    update: XOR<WorkoutTagUpdateWithoutWorkoutPlansInput, WorkoutTagUncheckedUpdateWithoutWorkoutPlansInput>
    create: XOR<WorkoutTagCreateWithoutWorkoutPlansInput, WorkoutTagUncheckedCreateWithoutWorkoutPlansInput>
  }

  export type WorkoutTagUpdateWithWhereUniqueWithoutWorkoutPlansInput = {
    where: WorkoutTagWhereUniqueInput
    data: XOR<WorkoutTagUpdateWithoutWorkoutPlansInput, WorkoutTagUncheckedUpdateWithoutWorkoutPlansInput>
  }

  export type WorkoutTagUpdateManyWithWhereWithoutWorkoutPlansInput = {
    where: WorkoutTagScalarWhereInput
    data: XOR<WorkoutTagUpdateManyMutationInput, WorkoutTagUncheckedUpdateManyWithoutWorkoutTagsInput>
  }

  export type WorkoutPlanDayUpsertWithWhereUniqueWithoutWorkoutPlanInput = {
    where: WorkoutPlanDayWhereUniqueInput
    update: XOR<WorkoutPlanDayUpdateWithoutWorkoutPlanInput, WorkoutPlanDayUncheckedUpdateWithoutWorkoutPlanInput>
    create: XOR<WorkoutPlanDayCreateWithoutWorkoutPlanInput, WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanDayUpdateWithWhereUniqueWithoutWorkoutPlanInput = {
    where: WorkoutPlanDayWhereUniqueInput
    data: XOR<WorkoutPlanDayUpdateWithoutWorkoutPlanInput, WorkoutPlanDayUncheckedUpdateWithoutWorkoutPlanInput>
  }

  export type WorkoutPlanDayUpdateManyWithWhereWithoutWorkoutPlanInput = {
    where: WorkoutPlanDayScalarWhereInput
    data: XOR<WorkoutPlanDayUpdateManyMutationInput, WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanDaysInput>
  }

  export type CollectionUpsertWithWhereUniqueWithoutWorkoutPlansInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutWorkoutPlansInput, CollectionUncheckedUpdateWithoutWorkoutPlansInput>
    create: XOR<CollectionCreateWithoutWorkoutPlansInput, CollectionUncheckedCreateWithoutWorkoutPlansInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutWorkoutPlansInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutWorkoutPlansInput, CollectionUncheckedUpdateWithoutWorkoutPlansInput>
  }

  export type CollectionUpdateManyWithWhereWithoutWorkoutPlansInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutCollectionsInput>
  }

  export type DiscoverWorkoutPlanUpsertWithWhereUniqueWithoutWorkoutPlanInput = {
    where: DiscoverWorkoutPlanWhereUniqueInput
    update: XOR<DiscoverWorkoutPlanUpdateWithoutWorkoutPlanInput, DiscoverWorkoutPlanUncheckedUpdateWithoutWorkoutPlanInput>
    create: XOR<DiscoverWorkoutPlanCreateWithoutWorkoutPlanInput, DiscoverWorkoutPlanUncheckedCreateWithoutWorkoutPlanInput>
  }

  export type DiscoverWorkoutPlanUpdateWithWhereUniqueWithoutWorkoutPlanInput = {
    where: DiscoverWorkoutPlanWhereUniqueInput
    data: XOR<DiscoverWorkoutPlanUpdateWithoutWorkoutPlanInput, DiscoverWorkoutPlanUncheckedUpdateWithoutWorkoutPlanInput>
  }

  export type DiscoverWorkoutPlanUpdateManyWithWhereWithoutWorkoutPlanInput = {
    where: DiscoverWorkoutPlanScalarWhereInput
    data: XOR<DiscoverWorkoutPlanUpdateManyMutationInput, DiscoverWorkoutPlanUncheckedUpdateManyWithoutDiscoverWorkoutPlansInput>
  }

  export type DiscoverWorkoutPlanScalarWhereInput = {
    AND?: Enumerable<DiscoverWorkoutPlanScalarWhereInput>
    OR?: Enumerable<DiscoverWorkoutPlanScalarWhereInput>
    NOT?: Enumerable<DiscoverWorkoutPlanScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    workoutPlanId?: StringFilter | string
    discoverWorkoutPlanCategoryId?: StringFilter | string
  }

  export type UserCreateWithoutWorkoutPlanDaysInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutPlanDaysInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutPlanDaysInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutPlanDaysInput, UserUncheckedCreateWithoutWorkoutPlanDaysInput>
  }

  export type WorkoutPlanCreateWithoutWorkoutPlanDaysInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutPlansInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedCreateWithoutWorkoutPlanDaysInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateOrConnectWithoutWorkoutPlanDaysInput = {
    where: WorkoutPlanWhereUniqueInput
    create: XOR<WorkoutPlanCreateWithoutWorkoutPlanDaysInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanDaysInput>
  }

  export type WorkoutPlanDayWorkoutCreateWithoutWorkoutPlanDayInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    sortPosition: number
    User: UserCreateNestedOneWithoutWorkoutPlanDayWorkoutsInput
    Workout: WorkoutCreateNestedOneWithoutWorkoutPlanDayWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutPlanDayInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    sortPosition: number
    workoutId: string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutCreateOrConnectWithoutWorkoutPlanDayInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutWorkoutPlanDayInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutPlanDayInput>
  }

  export type WorkoutPlanDayWorkoutCreateManyWorkoutPlanDayInputEnvelope = {
    data: Enumerable<WorkoutPlanDayWorkoutCreateManyWorkoutPlanDayInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutWorkoutPlanDaysInput = {
    update: XOR<UserUpdateWithoutWorkoutPlanDaysInput, UserUncheckedUpdateWithoutWorkoutPlanDaysInput>
    create: XOR<UserCreateWithoutWorkoutPlanDaysInput, UserUncheckedCreateWithoutWorkoutPlanDaysInput>
  }

  export type UserUpdateWithoutWorkoutPlanDaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutPlanDaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutPlanUpsertWithoutWorkoutPlanDaysInput = {
    update: XOR<WorkoutPlanUpdateWithoutWorkoutPlanDaysInput, WorkoutPlanUncheckedUpdateWithoutWorkoutPlanDaysInput>
    create: XOR<WorkoutPlanCreateWithoutWorkoutPlanDaysInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanDaysInput>
  }

  export type WorkoutPlanUpdateWithoutWorkoutPlanDaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutPlansInput
    Collections?: CollectionUpdateManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateWithoutWorkoutPlanDaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanDayWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanDayInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    update: XOR<WorkoutPlanDayWorkoutUpdateWithoutWorkoutPlanDayInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutWorkoutPlanDayInput>
    create: XOR<WorkoutPlanDayWorkoutCreateWithoutWorkoutPlanDayInput, WorkoutPlanDayWorkoutUncheckedCreateWithoutWorkoutPlanDayInput>
  }

  export type WorkoutPlanDayWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanDayInput = {
    where: WorkoutPlanDayWorkoutWhereUniqueInput
    data: XOR<WorkoutPlanDayWorkoutUpdateWithoutWorkoutPlanDayInput, WorkoutPlanDayWorkoutUncheckedUpdateWithoutWorkoutPlanDayInput>
  }

  export type WorkoutPlanDayWorkoutUpdateManyWithWhereWithoutWorkoutPlanDayInput = {
    where: WorkoutPlanDayWorkoutScalarWhereInput
    data: XOR<WorkoutPlanDayWorkoutUpdateManyMutationInput, WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type UserCreateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutPlanDayWorkoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutPlanDayWorkoutsInput, UserUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type WorkoutCreateWithoutWorkoutPlanDayWorkoutInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutWorkoutPlanDayWorkoutInput, WorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>
  }

  export type WorkoutPlanDayCreateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    dayNumber: number
    User: UserCreateNestedOneWithoutWorkoutPlanDaysInput
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutWorkoutPlanDaysInput
  }

  export type WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    dayNumber: number
    workoutPlanId: string
  }

  export type WorkoutPlanDayCreateOrConnectWithoutWorkoutPlanDayWorkoutsInput = {
    where: WorkoutPlanDayWhereUniqueInput
    create: XOR<WorkoutPlanDayCreateWithoutWorkoutPlanDayWorkoutsInput, WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type ScheduledWorkoutCreateWithoutWorkoutPlanDayWorkoutInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    User: UserCreateNestedOneWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanDayWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutCreateWithoutWorkoutPlanDayWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>
  }

  export type ScheduledWorkoutCreateManyWorkoutPlanDayWorkoutInputEnvelope = {
    data: Enumerable<ScheduledWorkoutCreateManyWorkoutPlanDayWorkoutInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutWorkoutPlanDayWorkoutsInput = {
    update: XOR<UserUpdateWithoutWorkoutPlanDayWorkoutsInput, UserUncheckedUpdateWithoutWorkoutPlanDayWorkoutsInput>
    create: XOR<UserCreateWithoutWorkoutPlanDayWorkoutsInput, UserUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type UserUpdateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutUpsertWithoutWorkoutPlanDayWorkoutInput = {
    update: XOR<WorkoutUpdateWithoutWorkoutPlanDayWorkoutInput, WorkoutUncheckedUpdateWithoutWorkoutPlanDayWorkoutInput>
    create: XOR<WorkoutCreateWithoutWorkoutPlanDayWorkoutInput, WorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>
  }

  export type WorkoutUpdateWithoutWorkoutPlanDayWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutWorkoutPlanDayWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutPlanDayUpsertWithoutWorkoutPlanDayWorkoutsInput = {
    update: XOR<WorkoutPlanDayUpdateWithoutWorkoutPlanDayWorkoutsInput, WorkoutPlanDayUncheckedUpdateWithoutWorkoutPlanDayWorkoutsInput>
    create: XOR<WorkoutPlanDayCreateWithoutWorkoutPlanDayWorkoutsInput, WorkoutPlanDayUncheckedCreateWithoutWorkoutPlanDayWorkoutsInput>
  }

  export type WorkoutPlanDayUpdateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutPlanDaysInput
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutWorkoutPlanDaysInput
  }

  export type WorkoutPlanDayUncheckedUpdateWithoutWorkoutPlanDayWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanDayWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUpdateWithoutWorkoutPlanDayWorkoutInput, ScheduledWorkoutUncheckedUpdateWithoutWorkoutPlanDayWorkoutInput>
    create: XOR<ScheduledWorkoutCreateWithoutWorkoutPlanDayWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanDayWorkoutInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanDayWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUpdateWithoutWorkoutPlanDayWorkoutInput, ScheduledWorkoutUncheckedUpdateWithoutWorkoutPlanDayWorkoutInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutPlanDayWorkoutInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUpdateManyMutationInput, ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput>
  }

  export type WorkoutPlanCreateWithoutEnrolmentsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutPlansInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedCreateWithoutEnrolmentsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateOrConnectWithoutEnrolmentsInput = {
    where: WorkoutPlanWhereUniqueInput
    create: XOR<WorkoutPlanCreateWithoutEnrolmentsInput, WorkoutPlanUncheckedCreateWithoutEnrolmentsInput>
  }

  export type UserCreateWithoutWorkoutPlanEnrolmentsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutPlanEnrolmentsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutPlanEnrolmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutPlanEnrolmentsInput, UserUncheckedCreateWithoutWorkoutPlanEnrolmentsInput>
  }

  export type ScheduledWorkoutCreateWithoutWorkoutPlanEnrolmentInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    User: UserCreateNestedOneWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutCreateNestedOneWithoutScheduledWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanEnrolmentInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutWorkoutPlanEnrolmentInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutCreateWithoutWorkoutPlanEnrolmentInput, ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanEnrolmentInput>
  }

  export type ScheduledWorkoutCreateManyWorkoutPlanEnrolmentInputEnvelope = {
    data: Enumerable<ScheduledWorkoutCreateManyWorkoutPlanEnrolmentInput>
    skipDuplicates?: boolean
  }

  export type WorkoutPlanUpsertWithoutEnrolmentsInput = {
    update: XOR<WorkoutPlanUpdateWithoutEnrolmentsInput, WorkoutPlanUncheckedUpdateWithoutEnrolmentsInput>
    create: XOR<WorkoutPlanCreateWithoutEnrolmentsInput, WorkoutPlanUncheckedCreateWithoutEnrolmentsInput>
  }

  export type WorkoutPlanUpdateWithoutEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutPlansInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput
    Collections?: CollectionUpdateManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateWithoutEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type UserUpsertWithoutWorkoutPlanEnrolmentsInput = {
    update: XOR<UserUpdateWithoutWorkoutPlanEnrolmentsInput, UserUncheckedUpdateWithoutWorkoutPlanEnrolmentsInput>
    create: XOR<UserCreateWithoutWorkoutPlanEnrolmentsInput, UserUncheckedCreateWithoutWorkoutPlanEnrolmentsInput>
  }

  export type UserUpdateWithoutWorkoutPlanEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutPlanEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type ScheduledWorkoutUpsertWithWhereUniqueWithoutWorkoutPlanEnrolmentInput = {
    where: ScheduledWorkoutWhereUniqueInput
    update: XOR<ScheduledWorkoutUpdateWithoutWorkoutPlanEnrolmentInput, ScheduledWorkoutUncheckedUpdateWithoutWorkoutPlanEnrolmentInput>
    create: XOR<ScheduledWorkoutCreateWithoutWorkoutPlanEnrolmentInput, ScheduledWorkoutUncheckedCreateWithoutWorkoutPlanEnrolmentInput>
  }

  export type ScheduledWorkoutUpdateWithWhereUniqueWithoutWorkoutPlanEnrolmentInput = {
    where: ScheduledWorkoutWhereUniqueInput
    data: XOR<ScheduledWorkoutUpdateWithoutWorkoutPlanEnrolmentInput, ScheduledWorkoutUncheckedUpdateWithoutWorkoutPlanEnrolmentInput>
  }

  export type ScheduledWorkoutUpdateManyWithWhereWithoutWorkoutPlanEnrolmentInput = {
    where: ScheduledWorkoutScalarWhereInput
    data: XOR<ScheduledWorkoutUpdateManyMutationInput, ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput>
  }

  export type UserCreateWithoutWorkoutPlanReviewsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutWorkoutPlanReviewsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutWorkoutPlanReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutWorkoutPlanReviewsInput, UserUncheckedCreateWithoutWorkoutPlanReviewsInput>
  }

  export type WorkoutPlanCreateWithoutWorkoutPlanReviewsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedCreateWithoutWorkoutPlanReviewsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateOrConnectWithoutWorkoutPlanReviewsInput = {
    where: WorkoutPlanWhereUniqueInput
    create: XOR<WorkoutPlanCreateWithoutWorkoutPlanReviewsInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanReviewsInput>
  }

  export type UserUpsertWithoutWorkoutPlanReviewsInput = {
    update: XOR<UserUpdateWithoutWorkoutPlanReviewsInput, UserUncheckedUpdateWithoutWorkoutPlanReviewsInput>
    create: XOR<UserCreateWithoutWorkoutPlanReviewsInput, UserUncheckedCreateWithoutWorkoutPlanReviewsInput>
  }

  export type UserUpdateWithoutWorkoutPlanReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutWorkoutPlanReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type WorkoutPlanUpsertWithoutWorkoutPlanReviewsInput = {
    update: XOR<WorkoutPlanUpdateWithoutWorkoutPlanReviewsInput, WorkoutPlanUncheckedUpdateWithoutWorkoutPlanReviewsInput>
    create: XOR<WorkoutPlanCreateWithoutWorkoutPlanReviewsInput, WorkoutPlanUncheckedCreateWithoutWorkoutPlanReviewsInput>
  }

  export type WorkoutPlanUpdateWithoutWorkoutPlanReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput
    Collections?: CollectionUpdateManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateWithoutWorkoutPlanReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type UserCreateWithoutLoggedWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLoggedWorkoutsInput, UserUncheckedCreateWithoutLoggedWorkoutsInput>
  }

  export type GymProfileCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutGymProfilesInput
    Equipments?: EquipmentCreateNestedManyWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutGymProfileInput
  }

  export type GymProfileCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: GymProfileWhereUniqueInput
    create: XOR<GymProfileCreateWithoutLoggedWorkoutsInput, GymProfileUncheckedCreateWithoutLoggedWorkoutsInput>
  }

  export type LoggedWorkoutSectionCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    User: UserCreateNestedOneWithoutLoggedWorkoutSectionsInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutLoggedWorkoutSectionInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    workoutSectionTypeId: string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    create: XOR<LoggedWorkoutSectionCreateWithoutLoggedWorkoutInput, LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>
  }

  export type LoggedWorkoutSectionCreateManyLoggedWorkoutInputEnvelope = {
    data: Enumerable<LoggedWorkoutSectionCreateManyLoggedWorkoutInput>
    skipDuplicates?: boolean
  }

  export type ScheduledWorkoutCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    User: UserCreateNestedOneWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutScheduledWorkoutsInput
    Workout?: WorkoutCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentCreateNestedOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutCreateOrConnectWithoutLoggedWorkoutInput = {
    where: ScheduledWorkoutWhereUniqueInput
    create: XOR<ScheduledWorkoutCreateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput>
  }

  export type WorkoutCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedCreateWithoutLoggedWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutLoggedWorkoutsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutLoggedWorkoutsInput, WorkoutUncheckedCreateWithoutLoggedWorkoutsInput>
  }

  export type UserUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<UserUpdateWithoutLoggedWorkoutsInput, UserUncheckedUpdateWithoutLoggedWorkoutsInput>
    create: XOR<UserCreateWithoutLoggedWorkoutsInput, UserUncheckedCreateWithoutLoggedWorkoutsInput>
  }

  export type UserUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type GymProfileUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<GymProfileUpdateWithoutLoggedWorkoutsInput, GymProfileUncheckedUpdateWithoutLoggedWorkoutsInput>
    create: XOR<GymProfileCreateWithoutLoggedWorkoutsInput, GymProfileUncheckedCreateWithoutLoggedWorkoutsInput>
  }

  export type GymProfileUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutGymProfilesInput
    Equipments?: EquipmentUpdateManyWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type LoggedWorkoutSectionUpsertWithWhereUniqueWithoutLoggedWorkoutInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    update: XOR<LoggedWorkoutSectionUpdateWithoutLoggedWorkoutInput, LoggedWorkoutSectionUncheckedUpdateWithoutLoggedWorkoutInput>
    create: XOR<LoggedWorkoutSectionCreateWithoutLoggedWorkoutInput, LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutInput>
  }

  export type LoggedWorkoutSectionUpdateWithWhereUniqueWithoutLoggedWorkoutInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    data: XOR<LoggedWorkoutSectionUpdateWithoutLoggedWorkoutInput, LoggedWorkoutSectionUncheckedUpdateWithoutLoggedWorkoutInput>
  }

  export type LoggedWorkoutSectionUpdateManyWithWhereWithoutLoggedWorkoutInput = {
    where: LoggedWorkoutSectionScalarWhereInput
    data: XOR<LoggedWorkoutSectionUpdateManyMutationInput, LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutSectionsInput>
  }

  export type ScheduledWorkoutUpsertWithoutLoggedWorkoutInput = {
    update: XOR<ScheduledWorkoutUpdateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput>
    create: XOR<ScheduledWorkoutCreateWithoutLoggedWorkoutInput, ScheduledWorkoutUncheckedCreateWithoutLoggedWorkoutInput>
  }

  export type ScheduledWorkoutUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
    Workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutUpsertWithoutLoggedWorkoutsInput = {
    update: XOR<WorkoutUpdateWithoutLoggedWorkoutsInput, WorkoutUncheckedUpdateWithoutLoggedWorkoutsInput>
    create: XOR<WorkoutCreateWithoutLoggedWorkoutsInput, WorkoutUncheckedCreateWithoutLoggedWorkoutsInput>
  }

  export type WorkoutUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type UserCreateWithoutLoggedWorkoutSectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLoggedWorkoutSectionsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLoggedWorkoutSectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLoggedWorkoutSectionsInput, UserUncheckedCreateWithoutLoggedWorkoutSectionsInput>
  }

  export type LoggedWorkoutSetCreateWithoutLoggedWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    User: UserCreateNestedOneWithoutLoggedWorkoutSetsInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutSectionInput = {
    where: LoggedWorkoutSetWhereUniqueInput
    create: XOR<LoggedWorkoutSetCreateWithoutLoggedWorkoutSectionInput, LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutSectionInput>
  }

  export type LoggedWorkoutSetCreateManyLoggedWorkoutSectionInputEnvelope = {
    data: Enumerable<LoggedWorkoutSetCreateManyLoggedWorkoutSectionInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutCreateWithoutLoggedWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    User: UserCreateNestedOneWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileCreateNestedOneWithoutLoggedWorkoutsInput
    ScheduledWorkout?: ScheduledWorkoutCreateNestedOneWithoutLoggedWorkoutInput
    Workout?: WorkoutCreateNestedOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedCreateWithoutLoggedWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    gymProfileId?: string | null
    workoutId?: string | null
    ScheduledWorkout?: ScheduledWorkoutUncheckedCreateNestedOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutCreateOrConnectWithoutLoggedWorkoutSectionsInput = {
    where: LoggedWorkoutWhereUniqueInput
    create: XOR<LoggedWorkoutCreateWithoutLoggedWorkoutSectionsInput, LoggedWorkoutUncheckedCreateWithoutLoggedWorkoutSectionsInput>
  }

  export type WorkoutSectionTypeCreateWithoutLoggedWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    validRepTypes?: WorkoutSectionTypeCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeUncheckedCreateWithoutLoggedWorkoutSectionsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    subtitle: string
    description: string
    validRepTypes?: WorkoutSectionTypeCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeCreateOrConnectWithoutLoggedWorkoutSectionsInput = {
    where: WorkoutSectionTypeWhereUniqueInput
    create: XOR<WorkoutSectionTypeCreateWithoutLoggedWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutLoggedWorkoutSectionsInput>
  }

  export type UserUpsertWithoutLoggedWorkoutSectionsInput = {
    update: XOR<UserUpdateWithoutLoggedWorkoutSectionsInput, UserUncheckedUpdateWithoutLoggedWorkoutSectionsInput>
    create: XOR<UserCreateWithoutLoggedWorkoutSectionsInput, UserUncheckedCreateWithoutLoggedWorkoutSectionsInput>
  }

  export type UserUpdateWithoutLoggedWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutLoggedWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type LoggedWorkoutSetUpsertWithWhereUniqueWithoutLoggedWorkoutSectionInput = {
    where: LoggedWorkoutSetWhereUniqueInput
    update: XOR<LoggedWorkoutSetUpdateWithoutLoggedWorkoutSectionInput, LoggedWorkoutSetUncheckedUpdateWithoutLoggedWorkoutSectionInput>
    create: XOR<LoggedWorkoutSetCreateWithoutLoggedWorkoutSectionInput, LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutSectionInput>
  }

  export type LoggedWorkoutSetUpdateWithWhereUniqueWithoutLoggedWorkoutSectionInput = {
    where: LoggedWorkoutSetWhereUniqueInput
    data: XOR<LoggedWorkoutSetUpdateWithoutLoggedWorkoutSectionInput, LoggedWorkoutSetUncheckedUpdateWithoutLoggedWorkoutSectionInput>
  }

  export type LoggedWorkoutSetUpdateManyWithWhereWithoutLoggedWorkoutSectionInput = {
    where: LoggedWorkoutSetScalarWhereInput
    data: XOR<LoggedWorkoutSetUpdateManyMutationInput, LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSetsInput>
  }

  export type LoggedWorkoutUpsertWithoutLoggedWorkoutSectionsInput = {
    update: XOR<LoggedWorkoutUpdateWithoutLoggedWorkoutSectionsInput, LoggedWorkoutUncheckedUpdateWithoutLoggedWorkoutSectionsInput>
    create: XOR<LoggedWorkoutCreateWithoutLoggedWorkoutSectionsInput, LoggedWorkoutUncheckedCreateWithoutLoggedWorkoutSectionsInput>
  }

  export type LoggedWorkoutUpdateWithoutLoggedWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    ScheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    Workout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutLoggedWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    ScheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type WorkoutSectionTypeUpsertWithoutLoggedWorkoutSectionsInput = {
    update: XOR<WorkoutSectionTypeUpdateWithoutLoggedWorkoutSectionsInput, WorkoutSectionTypeUncheckedUpdateWithoutLoggedWorkoutSectionsInput>
    create: XOR<WorkoutSectionTypeCreateWithoutLoggedWorkoutSectionsInput, WorkoutSectionTypeUncheckedCreateWithoutLoggedWorkoutSectionsInput>
  }

  export type WorkoutSectionTypeUpdateWithoutLoggedWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutSectionTypeInput
  }

  export type WorkoutSectionTypeUncheckedUpdateWithoutLoggedWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    subtitle?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    validRepTypes?: WorkoutSectionTypeUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionTypeInput
  }

  export type UserCreateWithoutLoggedWorkoutSetsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLoggedWorkoutSetsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLoggedWorkoutSetsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLoggedWorkoutSetsInput, UserUncheckedCreateWithoutLoggedWorkoutSetsInput>
  }

  export type LoggedWorkoutMoveCreateWithoutLoggedWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    User: UserCreateNestedOneWithoutLoggedWorkoutMovesInput
    Move: MoveCreateNestedOneWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentCreateNestedOneWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedCreateWithoutLoggedWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    equipmentId?: string | null
  }

  export type LoggedWorkoutMoveCreateOrConnectWithoutLoggedWorkoutSetInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    create: XOR<LoggedWorkoutMoveCreateWithoutLoggedWorkoutSetInput, LoggedWorkoutMoveUncheckedCreateWithoutLoggedWorkoutSetInput>
  }

  export type LoggedWorkoutMoveCreateManyLoggedWorkoutSetInputEnvelope = {
    data: Enumerable<LoggedWorkoutMoveCreateManyLoggedWorkoutSetInput>
    skipDuplicates?: boolean
  }

  export type LoggedWorkoutSectionCreateWithoutLoggedWorkoutSetsInput = {
    id?: string
    createdAt?: Date | string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    User: UserCreateNestedOneWithoutLoggedWorkoutSectionsInput
    LoggedWorkout: LoggedWorkoutCreateNestedOneWithoutLoggedWorkoutSectionsInput
    WorkoutSectionType: WorkoutSectionTypeCreateNestedOneWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutSetsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    loggedWorkoutId: string
    workoutSectionTypeId: string
  }

  export type LoggedWorkoutSectionCreateOrConnectWithoutLoggedWorkoutSetsInput = {
    where: LoggedWorkoutSectionWhereUniqueInput
    create: XOR<LoggedWorkoutSectionCreateWithoutLoggedWorkoutSetsInput, LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutSetsInput>
  }

  export type UserUpsertWithoutLoggedWorkoutSetsInput = {
    update: XOR<UserUpdateWithoutLoggedWorkoutSetsInput, UserUncheckedUpdateWithoutLoggedWorkoutSetsInput>
    create: XOR<UserCreateWithoutLoggedWorkoutSetsInput, UserUncheckedCreateWithoutLoggedWorkoutSetsInput>
  }

  export type UserUpdateWithoutLoggedWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutLoggedWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type LoggedWorkoutMoveUpsertWithWhereUniqueWithoutLoggedWorkoutSetInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    update: XOR<LoggedWorkoutMoveUpdateWithoutLoggedWorkoutSetInput, LoggedWorkoutMoveUncheckedUpdateWithoutLoggedWorkoutSetInput>
    create: XOR<LoggedWorkoutMoveCreateWithoutLoggedWorkoutSetInput, LoggedWorkoutMoveUncheckedCreateWithoutLoggedWorkoutSetInput>
  }

  export type LoggedWorkoutMoveUpdateWithWhereUniqueWithoutLoggedWorkoutSetInput = {
    where: LoggedWorkoutMoveWhereUniqueInput
    data: XOR<LoggedWorkoutMoveUpdateWithoutLoggedWorkoutSetInput, LoggedWorkoutMoveUncheckedUpdateWithoutLoggedWorkoutSetInput>
  }

  export type LoggedWorkoutMoveUpdateManyWithWhereWithoutLoggedWorkoutSetInput = {
    where: LoggedWorkoutMoveScalarWhereInput
    data: XOR<LoggedWorkoutMoveUpdateManyMutationInput, LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutMovesInput>
  }

  export type LoggedWorkoutSectionUpsertWithoutLoggedWorkoutSetsInput = {
    update: XOR<LoggedWorkoutSectionUpdateWithoutLoggedWorkoutSetsInput, LoggedWorkoutSectionUncheckedUpdateWithoutLoggedWorkoutSetsInput>
    create: XOR<LoggedWorkoutSectionCreateWithoutLoggedWorkoutSetsInput, LoggedWorkoutSectionUncheckedCreateWithoutLoggedWorkoutSetsInput>
  }

  export type LoggedWorkoutSectionUpdateWithoutLoggedWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
    LoggedWorkout?: LoggedWorkoutUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedUpdateWithoutLoggedWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    loggedWorkoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLoggedWorkoutMovesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLoggedWorkoutMovesInput, UserUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type MoveCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserCreateNestedOneWithoutCustomMovesInput
    MoveType?: MoveTypeCreateNestedOneWithoutMovesInput
    RequiredEquipments?: EquipmentCreateNestedManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentCreateNestedManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutMoveInput
  }

  export type MoveUncheckedCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedCreateNestedManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutMoveInput
  }

  export type MoveCreateOrConnectWithoutLoggedWorkoutMovesInput = {
    where: MoveWhereUniqueInput
    create: XOR<MoveCreateWithoutLoggedWorkoutMovesInput, MoveUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type EquipmentCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    RequiredForMoves?: MoveCreateNestedManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveCreateNestedManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileCreateNestedManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    altNames?: string | null
    imageUrl?: string | null
    loadAdjustable?: boolean
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutLoggedWorkoutMovesInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutLoggedWorkoutMovesInput, EquipmentUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type LoggedWorkoutSetCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    User: UserCreateNestedOneWithoutLoggedWorkoutSetsInput
    LoggedWorkoutSection: LoggedWorkoutSectionCreateNestedOneWithoutLoggedWorkoutSetsInput
  }

  export type LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutMovesInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    loggedWorkoutSectionId: string
  }

  export type LoggedWorkoutSetCreateOrConnectWithoutLoggedWorkoutMovesInput = {
    where: LoggedWorkoutSetWhereUniqueInput
    create: XOR<LoggedWorkoutSetCreateWithoutLoggedWorkoutMovesInput, LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type UserUpsertWithoutLoggedWorkoutMovesInput = {
    update: XOR<UserUpdateWithoutLoggedWorkoutMovesInput, UserUncheckedUpdateWithoutLoggedWorkoutMovesInput>
    create: XOR<UserCreateWithoutLoggedWorkoutMovesInput, UserUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type UserUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type MoveUpsertWithoutLoggedWorkoutMovesInput = {
    update: XOR<MoveUpdateWithoutLoggedWorkoutMovesInput, MoveUncheckedUpdateWithoutLoggedWorkoutMovesInput>
    create: XOR<MoveCreateWithoutLoggedWorkoutMovesInput, MoveUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type MoveUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type EquipmentUpsertWithoutLoggedWorkoutMovesInput = {
    update: XOR<EquipmentUpdateWithoutLoggedWorkoutMovesInput, EquipmentUncheckedUpdateWithoutLoggedWorkoutMovesInput>
    create: XOR<EquipmentCreateWithoutLoggedWorkoutMovesInput, EquipmentUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type EquipmentUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    RequiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileUpdateManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutEquipmentInput
  }

  export type LoggedWorkoutSetUpsertWithoutLoggedWorkoutMovesInput = {
    update: XOR<LoggedWorkoutSetUpdateWithoutLoggedWorkoutMovesInput, LoggedWorkoutSetUncheckedUpdateWithoutLoggedWorkoutMovesInput>
    create: XOR<LoggedWorkoutSetCreateWithoutLoggedWorkoutMovesInput, LoggedWorkoutSetUncheckedCreateWithoutLoggedWorkoutMovesInput>
  }

  export type LoggedWorkoutSetUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutSetsInput
    LoggedWorkoutSection?: LoggedWorkoutSectionUpdateOneRequiredWithoutLoggedWorkoutSetsInput
  }

  export type LoggedWorkoutSetUncheckedUpdateWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    loggedWorkoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateWithoutProgressJournalsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProgressJournalsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProgressJournalsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProgressJournalsInput, UserUncheckedCreateWithoutProgressJournalsInput>
  }

  export type ProgressJournalEntryCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUris?: ProgressJournalEntryCreateprogressPhotoUrisInput | Enumerable<string>
    User: UserCreateNestedOneWithoutProgressJournalEntrysInput
  }

  export type ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUris?: ProgressJournalEntryCreateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryCreateOrConnectWithoutProgressJournalInput = {
    where: ProgressJournalEntryWhereUniqueInput
    create: XOR<ProgressJournalEntryCreateWithoutProgressJournalInput, ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>
  }

  export type ProgressJournalEntryCreateManyProgressJournalInputEnvelope = {
    data: Enumerable<ProgressJournalEntryCreateManyProgressJournalInput>
    skipDuplicates?: boolean
  }

  export type ProgressJournalGoalCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    User: UserCreateNestedOneWithoutProgressJournalGoalsInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
  }

  export type ProgressJournalGoalCreateOrConnectWithoutProgressJournalInput = {
    where: ProgressJournalGoalWhereUniqueInput
    create: XOR<ProgressJournalGoalCreateWithoutProgressJournalInput, ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>
  }

  export type ProgressJournalGoalCreateManyProgressJournalInputEnvelope = {
    data: Enumerable<ProgressJournalGoalCreateManyProgressJournalInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutProgressJournalsInput = {
    update: XOR<UserUpdateWithoutProgressJournalsInput, UserUncheckedUpdateWithoutProgressJournalsInput>
    create: XOR<UserCreateWithoutProgressJournalsInput, UserUncheckedCreateWithoutProgressJournalsInput>
  }

  export type UserUpdateWithoutProgressJournalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutProgressJournalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type ProgressJournalEntryUpsertWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalEntryWhereUniqueInput
    update: XOR<ProgressJournalEntryUpdateWithoutProgressJournalInput, ProgressJournalEntryUncheckedUpdateWithoutProgressJournalInput>
    create: XOR<ProgressJournalEntryCreateWithoutProgressJournalInput, ProgressJournalEntryUncheckedCreateWithoutProgressJournalInput>
  }

  export type ProgressJournalEntryUpdateWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalEntryWhereUniqueInput
    data: XOR<ProgressJournalEntryUpdateWithoutProgressJournalInput, ProgressJournalEntryUncheckedUpdateWithoutProgressJournalInput>
  }

  export type ProgressJournalEntryUpdateManyWithWhereWithoutProgressJournalInput = {
    where: ProgressJournalEntryScalarWhereInput
    data: XOR<ProgressJournalEntryUpdateManyMutationInput, ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalEntriesInput>
  }

  export type ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalGoalWhereUniqueInput
    update: XOR<ProgressJournalGoalUpdateWithoutProgressJournalInput, ProgressJournalGoalUncheckedUpdateWithoutProgressJournalInput>
    create: XOR<ProgressJournalGoalCreateWithoutProgressJournalInput, ProgressJournalGoalUncheckedCreateWithoutProgressJournalInput>
  }

  export type ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalInput = {
    where: ProgressJournalGoalWhereUniqueInput
    data: XOR<ProgressJournalGoalUpdateWithoutProgressJournalInput, ProgressJournalGoalUncheckedUpdateWithoutProgressJournalInput>
  }

  export type ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalInput = {
    where: ProgressJournalGoalScalarWhereInput
    data: XOR<ProgressJournalGoalUpdateManyMutationInput, ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalGoalsInput>
  }

  export type UserCreateWithoutProgressJournalEntrysInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProgressJournalEntrysInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProgressJournalEntrysInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProgressJournalEntrysInput, UserUncheckedCreateWithoutProgressJournalEntrysInput>
  }

  export type ProgressJournalCreateWithoutProgressJournalEntriesInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutProgressJournalsInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalCreateOrConnectWithoutProgressJournalEntriesInput = {
    where: ProgressJournalWhereUniqueInput
    create: XOR<ProgressJournalCreateWithoutProgressJournalEntriesInput, ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput>
  }

  export type UserUpsertWithoutProgressJournalEntrysInput = {
    update: XOR<UserUpdateWithoutProgressJournalEntrysInput, UserUncheckedUpdateWithoutProgressJournalEntrysInput>
    create: XOR<UserCreateWithoutProgressJournalEntrysInput, UserUncheckedCreateWithoutProgressJournalEntrysInput>
  }

  export type UserUpdateWithoutProgressJournalEntrysInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutProgressJournalEntrysInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type ProgressJournalUpsertWithoutProgressJournalEntriesInput = {
    update: XOR<ProgressJournalUpdateWithoutProgressJournalEntriesInput, ProgressJournalUncheckedUpdateWithoutProgressJournalEntriesInput>
    create: XOR<ProgressJournalCreateWithoutProgressJournalEntriesInput, ProgressJournalUncheckedCreateWithoutProgressJournalEntriesInput>
  }

  export type ProgressJournalUpdateWithoutProgressJournalEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutProgressJournalsInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateWithoutProgressJournalEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type UserCreateWithoutProgressJournalGoalsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProgressJournalGoalsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProgressJournalGoalsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProgressJournalGoalsInput, UserUncheckedCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    User: UserCreateNestedOneWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
    userId: string
  }

  export type ProgressJournalGoalTagCreateOrConnectWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    create: XOR<ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    User: UserCreateNestedOneWithoutProgressJournalsInput
    ProgressJournalEntries?: ProgressJournalEntryCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    ProgressJournalEntries?: ProgressJournalEntryUncheckedCreateNestedManyWithoutProgressJournalInput
  }

  export type ProgressJournalCreateOrConnectWithoutProgressJournalGoalsInput = {
    where: ProgressJournalWhereUniqueInput
    create: XOR<ProgressJournalCreateWithoutProgressJournalGoalsInput, ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput>
  }

  export type UserUpsertWithoutProgressJournalGoalsInput = {
    update: XOR<UserUpdateWithoutProgressJournalGoalsInput, UserUncheckedUpdateWithoutProgressJournalGoalsInput>
    create: XOR<UserCreateWithoutProgressJournalGoalsInput, UserUncheckedCreateWithoutProgressJournalGoalsInput>
  }

  export type UserUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type ProgressJournalGoalTagUpsertWithWhereUniqueWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    update: XOR<ProgressJournalGoalTagUpdateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagUncheckedUpdateWithoutProgressJournalGoalsInput>
    create: XOR<ProgressJournalGoalTagCreateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagUncheckedCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalTagUpdateWithWhereUniqueWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagWhereUniqueInput
    data: XOR<ProgressJournalGoalTagUpdateWithoutProgressJournalGoalsInput, ProgressJournalGoalTagUncheckedUpdateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalGoalTagUpdateManyWithWhereWithoutProgressJournalGoalsInput = {
    where: ProgressJournalGoalTagScalarWhereInput
    data: XOR<ProgressJournalGoalTagUpdateManyMutationInput, ProgressJournalGoalTagUncheckedUpdateManyWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalUpsertWithoutProgressJournalGoalsInput = {
    update: XOR<ProgressJournalUpdateWithoutProgressJournalGoalsInput, ProgressJournalUncheckedUpdateWithoutProgressJournalGoalsInput>
    create: XOR<ProgressJournalCreateWithoutProgressJournalGoalsInput, ProgressJournalUncheckedCreateWithoutProgressJournalGoalsInput>
  }

  export type ProgressJournalUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutProgressJournalsInput
    ProgressJournalEntries?: ProgressJournalEntryUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ProgressJournalEntries?: ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type UserCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveCreateNestedManyWithoutUserInput
    Workouts?: WorkoutCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutUserInput
    Collections?: CollectionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    firebaseUid: string
    createdAt?: Date | string
    hasOnboarded?: boolean
    userProfileScope?: UserProfileScope
    avatarUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    displayName?: string | null
    firstname?: string | null
    lastname?: string | null
    bio?: string | null
    tagline?: string | null
    birthdate?: Date | string | null
    gender?: Gender | null
    townCity?: string | null
    countryCode?: string | null
    instagramUrl?: string | null
    tiktokUrl?: string | null
    youtubeUrl?: string | null
    snapUrl?: string | null
    linkedinUrl?: string | null
    CustomMoves?: MoveUncheckedCreateNestedManyWithoutUserInput
    Workouts?: WorkoutUncheckedCreateNestedManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedCreateNestedManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedCreateNestedManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedCreateNestedManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedCreateNestedManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedCreateNestedManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedCreateNestedManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedCreateNestedManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutUserInput
    Collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProgressJournalGoalTagsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProgressJournalGoalTagsInput, UserUncheckedCreateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    User: UserCreateNestedOneWithoutProgressJournalGoalsInput
    ProgressJournal: ProgressJournalCreateNestedOneWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalId: string
  }

  export type ProgressJournalGoalCreateOrConnectWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalWhereUniqueInput
    create: XOR<ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput>
  }

  export type UserUpsertWithoutProgressJournalGoalTagsInput = {
    update: XOR<UserUpdateWithoutProgressJournalGoalTagsInput, UserUncheckedUpdateWithoutProgressJournalGoalTagsInput>
    create: XOR<UserCreateWithoutProgressJournalGoalTagsInput, UserUncheckedCreateWithoutProgressJournalGoalTagsInput>
  }

  export type UserUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUpdateManyWithoutUserInput
    Workouts?: WorkoutUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutUserInput
    Collections?: CollectionUpdateManyWithoutUserInput
  }

  export type UserUncheckedUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseUid?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hasOnboarded?: BoolFieldUpdateOperationsInput | boolean
    userProfileScope?: EnumUserProfileScopeFieldUpdateOperationsInput | UserProfileScope
    avatarUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    tagline?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | Gender | null
    townCity?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    instagramUrl?: NullableStringFieldUpdateOperationsInput | string | null
    tiktokUrl?: NullableStringFieldUpdateOperationsInput | string | null
    youtubeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    snapUrl?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CustomMoves?: MoveUncheckedUpdateManyWithoutUserInput
    Workouts?: WorkoutUncheckedUpdateManyWithoutUserInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutUserInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutUserInput
    GymProfiles?: GymProfileUncheckedUpdateManyWithoutUserInput
    ProgressJournals?: ProgressJournalUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutUserInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutUserInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutUserInput
    ProgressJournalEntrys?: ProgressJournalEntryUncheckedUpdateManyWithoutUserInput
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutUserInput
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutUserInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutUserInput
    WorkoutSetGenerators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutUserInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutUserInput
    WorkoutTag?: WorkoutTagUncheckedUpdateManyWithoutUserInput
    UserBenchmarkGroups?: UserBenchmarkGroupUncheckedUpdateManyWithoutUserInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutUserInput
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserInput
    WorkoutPlans?: WorkoutPlanUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutUserInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutUserInput
    WorkoutPlanEnrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutUserInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutUserInput
    Collections?: CollectionUncheckedUpdateManyWithoutUserInput
  }

  export type ProgressJournalGoalUpsertWithWhereUniqueWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalWhereUniqueInput
    update: XOR<ProgressJournalGoalUpdateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalUncheckedUpdateWithoutProgressJournalGoalTagsInput>
    create: XOR<ProgressJournalGoalCreateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalUncheckedCreateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalUpdateWithWhereUniqueWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalWhereUniqueInput
    data: XOR<ProgressJournalGoalUpdateWithoutProgressJournalGoalTagsInput, ProgressJournalGoalUncheckedUpdateWithoutProgressJournalGoalTagsInput>
  }

  export type ProgressJournalGoalUpdateManyWithWhereWithoutProgressJournalGoalTagsInput = {
    where: ProgressJournalGoalScalarWhereInput
    data: XOR<ProgressJournalGoalUpdateManyMutationInput, ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalGoalsInput>
  }

  export type DiscoverWorkoutCreateWithoutDiscoverWorkoutCategoryInput = {
    id?: string
    createdAt?: Date | string
    Workout: WorkoutCreateNestedOneWithoutDiscoverWorkoutsInput
  }

  export type DiscoverWorkoutUncheckedCreateWithoutDiscoverWorkoutCategoryInput = {
    id?: string
    createdAt?: Date | string
    workoutId: string
  }

  export type DiscoverWorkoutCreateOrConnectWithoutDiscoverWorkoutCategoryInput = {
    where: DiscoverWorkoutWhereUniqueInput
    create: XOR<DiscoverWorkoutCreateWithoutDiscoverWorkoutCategoryInput, DiscoverWorkoutUncheckedCreateWithoutDiscoverWorkoutCategoryInput>
  }

  export type DiscoverWorkoutCreateManyDiscoverWorkoutCategoryInputEnvelope = {
    data: Enumerable<DiscoverWorkoutCreateManyDiscoverWorkoutCategoryInput>
    skipDuplicates?: boolean
  }

  export type DiscoverWorkoutUpsertWithWhereUniqueWithoutDiscoverWorkoutCategoryInput = {
    where: DiscoverWorkoutWhereUniqueInput
    update: XOR<DiscoverWorkoutUpdateWithoutDiscoverWorkoutCategoryInput, DiscoverWorkoutUncheckedUpdateWithoutDiscoverWorkoutCategoryInput>
    create: XOR<DiscoverWorkoutCreateWithoutDiscoverWorkoutCategoryInput, DiscoverWorkoutUncheckedCreateWithoutDiscoverWorkoutCategoryInput>
  }

  export type DiscoverWorkoutUpdateWithWhereUniqueWithoutDiscoverWorkoutCategoryInput = {
    where: DiscoverWorkoutWhereUniqueInput
    data: XOR<DiscoverWorkoutUpdateWithoutDiscoverWorkoutCategoryInput, DiscoverWorkoutUncheckedUpdateWithoutDiscoverWorkoutCategoryInput>
  }

  export type DiscoverWorkoutUpdateManyWithWhereWithoutDiscoverWorkoutCategoryInput = {
    where: DiscoverWorkoutScalarWhereInput
    data: XOR<DiscoverWorkoutUpdateManyMutationInput, DiscoverWorkoutUncheckedUpdateManyWithoutDiscoverWorkoutsInput>
  }

  export type WorkoutCreateWithoutDiscoverWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutCreateNestedManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalCreateNestedManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutCreateNestedManyWithoutWorkoutInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedCreateWithoutDiscoverWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedCreateNestedManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedCreateNestedManyWithoutWorkoutInput
  }

  export type WorkoutCreateOrConnectWithoutDiscoverWorkoutsInput = {
    where: WorkoutWhereUniqueInput
    create: XOR<WorkoutCreateWithoutDiscoverWorkoutsInput, WorkoutUncheckedCreateWithoutDiscoverWorkoutsInput>
  }

  export type DiscoverWorkoutCategoryCreateWithoutDiscoverWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverWorkoutCategoryUncheckedCreateWithoutDiscoverWorkoutsInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverWorkoutCategoryCreateOrConnectWithoutDiscoverWorkoutsInput = {
    where: DiscoverWorkoutCategoryWhereUniqueInput
    create: XOR<DiscoverWorkoutCategoryCreateWithoutDiscoverWorkoutsInput, DiscoverWorkoutCategoryUncheckedCreateWithoutDiscoverWorkoutsInput>
  }

  export type WorkoutUpsertWithoutDiscoverWorkoutsInput = {
    update: XOR<WorkoutUpdateWithoutDiscoverWorkoutsInput, WorkoutUncheckedUpdateWithoutDiscoverWorkoutsInput>
    create: XOR<WorkoutCreateWithoutDiscoverWorkoutsInput, WorkoutUncheckedCreateWithoutDiscoverWorkoutsInput>
  }

  export type WorkoutUpdateWithoutDiscoverWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
  }

  export type WorkoutUncheckedUpdateWithoutDiscoverWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type DiscoverWorkoutCategoryUpsertWithoutDiscoverWorkoutsInput = {
    update: XOR<DiscoverWorkoutCategoryUpdateWithoutDiscoverWorkoutsInput, DiscoverWorkoutCategoryUncheckedUpdateWithoutDiscoverWorkoutsInput>
    create: XOR<DiscoverWorkoutCategoryCreateWithoutDiscoverWorkoutsInput, DiscoverWorkoutCategoryUncheckedCreateWithoutDiscoverWorkoutsInput>
  }

  export type DiscoverWorkoutCategoryUpdateWithoutDiscoverWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutCategoryUncheckedUpdateWithoutDiscoverWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanCreateWithoutDiscoverWorkoutPlanCategoryInput = {
    id?: string
    createdAt?: Date | string
    WorkoutPlan: WorkoutPlanCreateNestedOneWithoutDiscoverWorkoutPlansInput
  }

  export type DiscoverWorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlanCategoryInput = {
    id?: string
    createdAt?: Date | string
    workoutPlanId: string
  }

  export type DiscoverWorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlanCategoryInput = {
    where: DiscoverWorkoutPlanWhereUniqueInput
    create: XOR<DiscoverWorkoutPlanCreateWithoutDiscoverWorkoutPlanCategoryInput, DiscoverWorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlanCategoryInput>
  }

  export type DiscoverWorkoutPlanCreateManyDiscoverWorkoutPlanCategoryInputEnvelope = {
    data: Enumerable<DiscoverWorkoutPlanCreateManyDiscoverWorkoutPlanCategoryInput>
    skipDuplicates?: boolean
  }

  export type DiscoverWorkoutPlanUpsertWithWhereUniqueWithoutDiscoverWorkoutPlanCategoryInput = {
    where: DiscoverWorkoutPlanWhereUniqueInput
    update: XOR<DiscoverWorkoutPlanUpdateWithoutDiscoverWorkoutPlanCategoryInput, DiscoverWorkoutPlanUncheckedUpdateWithoutDiscoverWorkoutPlanCategoryInput>
    create: XOR<DiscoverWorkoutPlanCreateWithoutDiscoverWorkoutPlanCategoryInput, DiscoverWorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlanCategoryInput>
  }

  export type DiscoverWorkoutPlanUpdateWithWhereUniqueWithoutDiscoverWorkoutPlanCategoryInput = {
    where: DiscoverWorkoutPlanWhereUniqueInput
    data: XOR<DiscoverWorkoutPlanUpdateWithoutDiscoverWorkoutPlanCategoryInput, DiscoverWorkoutPlanUncheckedUpdateWithoutDiscoverWorkoutPlanCategoryInput>
  }

  export type DiscoverWorkoutPlanUpdateManyWithWhereWithoutDiscoverWorkoutPlanCategoryInput = {
    where: DiscoverWorkoutPlanScalarWhereInput
    data: XOR<DiscoverWorkoutPlanUpdateManyMutationInput, DiscoverWorkoutPlanUncheckedUpdateManyWithoutDiscoverWorkoutPlansInput>
  }

  export type WorkoutPlanCreateWithoutDiscoverWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    User: UserCreateNestedOneWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewCreateNestedManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagCreateNestedManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayCreateNestedManyWithoutWorkoutPlanInput
    Collections?: CollectionCreateNestedManyWithoutWorkoutPlansInput
  }

  export type WorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedCreateNestedManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedCreateNestedManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanCreateOrConnectWithoutDiscoverWorkoutPlansInput = {
    where: WorkoutPlanWhereUniqueInput
    create: XOR<WorkoutPlanCreateWithoutDiscoverWorkoutPlansInput, WorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlansInput>
  }

  export type DiscoverWorkoutPlanCategoryCreateWithoutDiscoverWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverWorkoutPlanCategoryUncheckedCreateWithoutDiscoverWorkoutPlansInput = {
    id?: string
    createdAt?: Date | string
    active: boolean
    name: string
    tagline: string
    description: string
    coverImageUri: string
  }

  export type DiscoverWorkoutPlanCategoryCreateOrConnectWithoutDiscoverWorkoutPlansInput = {
    where: DiscoverWorkoutPlanCategoryWhereUniqueInput
    create: XOR<DiscoverWorkoutPlanCategoryCreateWithoutDiscoverWorkoutPlansInput, DiscoverWorkoutPlanCategoryUncheckedCreateWithoutDiscoverWorkoutPlansInput>
  }

  export type WorkoutPlanUpsertWithoutDiscoverWorkoutPlansInput = {
    update: XOR<WorkoutPlanUpdateWithoutDiscoverWorkoutPlansInput, WorkoutPlanUncheckedUpdateWithoutDiscoverWorkoutPlansInput>
    create: XOR<WorkoutPlanCreateWithoutDiscoverWorkoutPlansInput, WorkoutPlanUncheckedCreateWithoutDiscoverWorkoutPlansInput>
  }

  export type WorkoutPlanUpdateWithoutDiscoverWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput
    Collections?: CollectionUpdateManyWithoutWorkoutPlansInput
  }

  export type WorkoutPlanUncheckedUpdateWithoutDiscoverWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type DiscoverWorkoutPlanCategoryUpsertWithoutDiscoverWorkoutPlansInput = {
    update: XOR<DiscoverWorkoutPlanCategoryUpdateWithoutDiscoverWorkoutPlansInput, DiscoverWorkoutPlanCategoryUncheckedUpdateWithoutDiscoverWorkoutPlansInput>
    create: XOR<DiscoverWorkoutPlanCategoryCreateWithoutDiscoverWorkoutPlansInput, DiscoverWorkoutPlanCategoryUncheckedCreateWithoutDiscoverWorkoutPlansInput>
  }

  export type DiscoverWorkoutPlanCategoryUpdateWithoutDiscoverWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanCategoryUncheckedUpdateWithoutDiscoverWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    coverImageUri?: StringFieldUpdateOperationsInput | string
  }

  export type BodyAreaMoveScoreCreateManyBodyAreaInput = {
    createdAt?: Date | string
    moveId: string
    score?: number
  }

  export type BodyAreaMoveScoreUpdateWithoutBodyAreaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
    Move?: MoveUpdateOneRequiredWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedUpdateWithoutBodyAreaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type BodyAreaMoveScoreUncheckedUpdateManyWithoutBodyAreaMoveScoresInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moveId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type WorkoutMoveCreateManyEquipmentInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    workoutSetId: string
  }

  export type LoggedWorkoutMoveCreateManyEquipmentInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    loggedWorkoutSetId: string
  }

  export type UserBenchmarkCreateManyEquipmentInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    moveId: string
    benchmarkType?: BenchmarkType
  }

  export type MoveUpdateWithoutRequiredEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutRequiredEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutRequiredForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUpdateWithoutSelectableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutSelectableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutSelectableForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type GymProfileUpdateWithoutEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateManyWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutMoveUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    User?: UserUpdateOneRequiredWithoutWorkoutMovesInput
    Move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    moveId?: StringFieldUpdateOperationsInput | string
    workoutSetId?: StringFieldUpdateOperationsInput | string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedUpdateManyWithoutWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    moveId?: StringFieldUpdateOperationsInput | string
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutMoveUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    Move?: MoveUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet?: LoggedWorkoutSetUpdateOneRequiredWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    loggedWorkoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    loggedWorkoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    User?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    Move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedUpdateManyWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
  }

  export type WorkoutMoveCreateManyMoveInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    equipmentId?: string | null
    workoutSetId: string
  }

  export type BodyAreaMoveScoreCreateManyMoveInput = {
    createdAt?: Date | string
    bodyAreaId: string
    score?: number
  }

  export type LoggedWorkoutMoveCreateManyMoveInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    loggedWorkoutSetId: string
  }

  export type UserBenchmarkCreateManyMoveInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    userId: string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    benchmarkType?: BenchmarkType
  }

  export type EquipmentUpdateWithoutRequiredForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    SelectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    GymProfiles?: GymProfileUpdateManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutRequiredForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateManyWithoutRequiredEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EquipmentUpdateWithoutSelectableForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    RequiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    GymProfiles?: GymProfileUpdateManyWithoutEquipmentsInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutSelectableForMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateManyWithoutSelectableEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type WorkoutMoveUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    User?: UserUpdateOneRequiredWithoutWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSetId?: StringFieldUpdateOperationsInput | string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutMoveInput
  }

  export type BodyAreaMoveScoreUpdateWithoutMoveInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: IntFieldUpdateOperationsInput | number
    BodyArea?: BodyAreaUpdateOneRequiredWithoutBodyAreaMoveScoresInput
  }

  export type BodyAreaMoveScoreUncheckedUpdateWithoutMoveInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    bodyAreaId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
  }

  export type LoggedWorkoutMoveUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet?: LoggedWorkoutSetUpdateOneRequiredWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    User?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    Equipment?: EquipmentUpdateOneWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type MoveCreateManyMoveTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId?: string | null
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    validRepTypes?: MoveCreateManyvalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type MoveUpdateWithoutMoveTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    User?: UserUpdateOneWithoutCustomMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutMoveTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutUpdateWithoutWorkoutGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutWorkoutGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateManyWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type WorkoutSectionCreateManyWorkoutSectionTypeInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutId: string
  }

  export type LoggedWorkoutSectionCreateManyWorkoutSectionTypeInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    loggedWorkoutId: string
  }

  export type WorkoutSectionUpdateWithoutWorkoutSectionTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutWorkoutSectionsInput
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedUpdateWithoutWorkoutSectionTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: StringFieldUpdateOperationsInput | string
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedUpdateManyWithoutWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutSectionUpdateWithoutWorkoutSectionTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutLoggedWorkoutSectionInput
    LoggedWorkout?: LoggedWorkoutUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedUpdateWithoutWorkoutSectionTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    loggedWorkoutId?: StringFieldUpdateOperationsInput | string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    loggedWorkoutId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutPlanUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateManyWithoutWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
  }

  export type ScheduledWorkoutCreateManyGymProfileInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type LoggedWorkoutCreateManyGymProfileInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    workoutId?: string | null
  }

  export type EquipmentUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    RequiredForMoves?: MoveUpdateManyWithoutRequiredEquipmentsInput
    SelectableForMoves?: MoveUpdateManyWithoutSelectableEquipmentsInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateWithoutGymProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutEquipmentInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedUpdateManyWithoutEquipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    altNames?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    loadAdjustable?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ScheduledWorkoutUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    Workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduledWorkoutUncheckedUpdateManyWithoutScheduledWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    Workout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutGymProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUncheckedUpdateManyWithoutLoggedWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MoveCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    scope?: MoveScope
    name: string
    searchTerms?: string | null
    description?: string | null
    demoVideoUri?: string | null
    demoVideoThumbUri?: string | null
    moveTypeId?: string | null
    validRepTypes?: MoveCreateManyvalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    metaData?: InputJsonValue | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    coverImageUri?: string | null
    lengthMinutes?: number | null
    difficultyLevel?: DifficultyLevel
    contentAccessScope?: ContentAccessScope
  }

  export type ScheduledWorkoutCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type LoggedWorkoutCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    name: string
    note?: string | null
    gymProfileId?: string | null
    workoutId?: string | null
  }

  export type GymProfileCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type ProgressJournalCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type ProgressJournalGoalTagCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
    hexColor: string
  }

  export type LoggedWorkoutSectionCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    loggedWorkoutId: string
    workoutSectionTypeId: string
  }

  export type LoggedWorkoutSetCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
    loggedWorkoutSectionId: string
  }

  export type LoggedWorkoutMoveCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    equipmentId?: string | null
    loggedWorkoutSetId: string
  }

  export type ProgressJournalGoalCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
    progressJournalId: string
  }

  export type ProgressJournalEntryCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressJournalId: string
    progressPhotoUris?: ProgressJournalEntryCreateManyprogressPhotoUrisInput | Enumerable<string>
  }

  export type WorkoutSectionCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutId: string
    workoutSectionTypeId: string
  }

  export type WorkoutSetCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    rounds?: number
    duration?: number | null
    workoutSectionId: string
  }

  export type WorkoutMoveCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    equipmentId?: string | null
    workoutSetId: string
  }

  export type WorkoutSetGeneratorCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
    workoutSetId?: string | null
  }

  export type WorkoutSetIntervalBuyInCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    interval: number
    workoutMoveId: string
    workoutSetId: string
  }

  export type WorkoutTagCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    tag: string
  }

  export type UserBenchmarkGroupCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type UserBenchmarkCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    lastEntryAt?: Date | string
    name: string
    description?: string | null
    reps?: number | null
    repType?: WorkoutMoveRepType
    load?: number | null
    loadUnit?: LoadUnit
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    equipmentId?: string | null
    moveId: string
    benchmarkType?: BenchmarkType
  }

  export type UserBenchmarkEntryCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
    userBenchmarkId: string
  }

  export type WorkoutPlanCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    name: string
    description?: string | null
    lengthWeeks?: number
    daysPerWeek?: number
    coverImageUri?: string | null
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    contentAccessScope?: ContentAccessScope
  }

  export type WorkoutPlanDayCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    dayNumber: number
    workoutPlanId: string
  }

  export type WorkoutPlanDayWorkoutCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    note?: string | null
    sortPosition: number
    workoutId: string
    workoutPlanDayId: string
  }

  export type WorkoutPlanEnrolmentCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    workoutPlanId: string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreateManycompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanReviewCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    score: number
    comment?: string | null
    workoutPlanId: string
  }

  export type CollectionCreateManyUserInput = {
    id?: string
    createdAt?: Date | string
    name: string
    description?: string | null
  }

  export type MoveUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    MoveType?: MoveTypeUpdateOneWithoutMovesInput
    RequiredEquipments?: EquipmentUpdateManyWithoutRequiredForMovesInput
    SelectableEquipments?: EquipmentUpdateManyWithoutSelectableForMovesInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutMoveInput
    BodyAreaMoveScores?: BodyAreaMoveScoreUncheckedUpdateManyWithoutMoveInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutMoveInput
    UserBenchmarks?: UserBenchmarkUncheckedUpdateManyWithoutMoveInput
  }

  export type MoveUncheckedUpdateManyWithoutCustomMovesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    scope?: EnumMoveScopeFieldUpdateOperationsInput | MoveScope
    name?: StringFieldUpdateOperationsInput | string
    searchTerms?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    demoVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    moveTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    validRepTypes?: MoveUpdatevalidRepTypesInput | Enumerable<WorkoutMoveRepType>
  }

  export type WorkoutUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type ScheduledWorkoutUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    GymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    Workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    GymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
    Workout?: WorkoutUpdateOneWithoutLoggedWorkoutsInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type GymProfileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    Equipments?: EquipmentUpdateManyWithoutGymProfilesInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutGymProfileInput
  }

  export type GymProfileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutGymProfileInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutGymProfileInput
  }

  export type ProgressJournalUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ProgressJournalEntries?: ProgressJournalEntryUpdateManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ProgressJournalEntries?: ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalInput
    ProgressJournalGoals?: ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalInput
  }

  export type ProgressJournalUncheckedUpdateManyWithoutProgressJournalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalGoalTagUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    ProgressJournalGoals?: ProgressJournalGoalUpdateManyWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalTagUncheckedUpdateManyWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutSectionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutLoggedWorkoutSectionInput
    LoggedWorkout?: LoggedWorkoutUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    loggedWorkoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSetUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutLoggedWorkoutSetInput
    LoggedWorkoutSection?: LoggedWorkoutSectionUpdateOneRequiredWithoutLoggedWorkoutSetsInput
  }

  export type LoggedWorkoutSetUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    loggedWorkoutSectionId?: StringFieldUpdateOperationsInput | string
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    loggedWorkoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type LoggedWorkoutMoveUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    Move?: MoveUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutLoggedWorkoutMovesInput
    LoggedWorkoutSet?: LoggedWorkoutSetUpdateOneRequiredWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutProgressJournalGoalsInput
    ProgressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalUncheckedUpdateManyWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalEntryUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
    ProgressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalEntriesInput
  }

  export type ProgressJournalEntryUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalEntrysInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
  }

  export type WorkoutSectionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSetUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    Generators?: WorkoutSetGeneratorUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSetInput
    WorkoutSection?: WorkoutSectionUpdateOneRequiredWithoutWorkoutSetsInput
  }

  export type WorkoutSetUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
    Generators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSetInput
  }

  export type WorkoutSetUncheckedUpdateManyWithoutWorkoutSetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutMoveUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    Move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSetId?: StringFieldUpdateOperationsInput | string
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutSetGeneratorUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
    WorkoutSet?: WorkoutSetUpdateOneWithoutGeneratorsInput
  }

  export type WorkoutSetGeneratorUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
    workoutSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetGeneratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
    workoutSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutSetIntervalBuyInUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    WorkoutMove?: WorkoutMoveUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    workoutMoveId?: StringFieldUpdateOperationsInput | string
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutSetIntervalBuyInInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    workoutMoveId?: StringFieldUpdateOperationsInput | string
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutTagUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    Workouts?: WorkoutUpdateManyWithoutWorkoutTagsInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutTagUncheckedUpdateManyWithoutWorkoutTagInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkGroupUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    UserBenchmarks?: UserBenchmarkUpdateManyWithoutUserBenchmarkGroupsInput
  }

  export type UserBenchmarkGroupUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkGroupUncheckedUpdateManyWithoutUserBenchmarkGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    Equipment?: EquipmentUpdateOneWithoutUserBenchmarksInput
    Move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
    UserBenchmarkGroups?: UserBenchmarkGroupUpdateManyWithoutUserBenchmarksInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkEntryUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    UserBenchmark?: UserBenchmarkUpdateOneRequiredWithoutUserBenchmarkEntriesInput
  }

  export type UserBenchmarkEntryUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    userBenchmarkId?: StringFieldUpdateOperationsInput | string
  }

  export type UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    userBenchmarkId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput
    WorkoutTags?: WorkoutTagUpdateManyWithoutWorkoutPlansInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput
    Collections?: CollectionUpdateManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanDayUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutWorkoutPlanDaysInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanDaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanDayWorkoutUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutPlanDayWorkoutInput
    WorkoutPlanDay?: WorkoutPlanDayUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutPlanDayId?: StringFieldUpdateOperationsInput | string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutId?: StringFieldUpdateOperationsInput | string
    workoutPlanDayId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanEnrolmentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutEnrolmentsInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanReviewUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutWorkoutPlanReviewsInput
  }

  export type WorkoutPlanReviewUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }

  export type CollectionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    Workouts?: WorkoutUpdateManyWithoutCollectionsInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutCollectionsInput
  }

  export type CollectionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionUncheckedUpdateManyWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkUpdateWithoutUserBenchmarkGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    User?: UserUpdateOneRequiredWithoutUserBenchmarksInput
    Equipment?: EquipmentUpdateOneWithoutUserBenchmarksInput
    Move?: MoveUpdateOneRequiredWithoutUserBenchmarksInput
    UserBenchmarkEntries?: UserBenchmarkEntryUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkUncheckedUpdateWithoutUserBenchmarkGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEntryAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reps?: NullableFloatFieldUpdateOperationsInput | number | null
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    load?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    moveId?: StringFieldUpdateOperationsInput | string
    benchmarkType?: EnumBenchmarkTypeFieldUpdateOperationsInput | BenchmarkType
    UserBenchmarkEntries?: UserBenchmarkEntryUncheckedUpdateManyWithoutUserBenchmarkInput
  }

  export type UserBenchmarkEntryCreateManyUserBenchmarkInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    completedOn?: Date | string
    score: number
    note?: string | null
    videoUri?: string | null
    videoThumbUri?: string | null
  }

  export type UserBenchmarkEntryUpdateWithoutUserBenchmarkInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutUserBenchmarkEntriesInput
  }

  export type UserBenchmarkEntryUncheckedUpdateWithoutUserBenchmarkInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    videoUri?: NullableStringFieldUpdateOperationsInput | string | null
    videoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserBenchmarkGroupUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutUserBenchmarkGroupsInput
  }

  export type UserBenchmarkGroupUncheckedUpdateWithoutUserBenchmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutSectionCreateManyWorkoutInput = {
    id?: string
    createdAt?: Date | string
    archived?: boolean
    userId: string
    name?: string | null
    note?: string | null
    rounds?: number
    timecap?: number | null
    sortPosition: number
    introVideoUri?: string | null
    introVideoThumbUri?: string | null
    introAudioUri?: string | null
    classVideoUri?: string | null
    classVideoThumbUri?: string | null
    classAudioUri?: string | null
    outroVideoUri?: string | null
    outroVideoThumbUri?: string | null
    outroAudioUri?: string | null
    workoutSectionTypeId: string
  }

  export type LoggedWorkoutCreateManyWorkoutInput = {
    id?: string
    createdAt?: Date | string
    completedOn: Date | string
    userId: string
    name: string
    note?: string | null
    gymProfileId?: string | null
  }

  export type ScheduledWorkoutCreateManyWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutPlanEnrolmentId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type WorkoutPlanDayWorkoutCreateManyWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    sortPosition: number
    workoutPlanDayId: string
  }

  export type DiscoverWorkoutCreateManyWorkoutInput = {
    id?: string
    createdAt?: Date | string
    discoverWorkoutCategoryId: string
  }

  export type WorkoutSectionUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutWorkoutSectionsInput
    WorkoutSets?: WorkoutSetUpdateManyWithoutWorkoutSectionInput
  }

  export type WorkoutSectionUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    rounds?: IntFieldUpdateOperationsInput | number
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    classVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    classAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    outroAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
    WorkoutSets?: WorkoutSetUncheckedUpdateManyWithoutWorkoutSectionInput
  }

  export type LoggedWorkoutUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutLoggedWorkoutsInput
    LoggedWorkoutSections?: LoggedWorkoutSectionUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUpdateOneWithoutLoggedWorkoutInput
  }

  export type LoggedWorkoutUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    LoggedWorkoutSections?: LoggedWorkoutSectionUncheckedUpdateManyWithoutLoggedWorkoutInput
    ScheduledWorkout?: ScheduledWorkoutUncheckedUpdateOneWithoutLoggedWorkoutInput
  }

  export type ScheduledWorkoutUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutGoalUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutGoalUncheckedUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutGoalUncheckedUpdateManyWithoutWorkoutGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutTagUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutWorkoutTagInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutTagUncheckedUpdateManyWithoutWorkoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanDayWorkoutUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
    WorkoutPlanDay?: WorkoutPlanDayUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutPlanDayId?: StringFieldUpdateOperationsInput | string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutPlanDayId?: StringFieldUpdateOperationsInput | string
  }

  export type CollectionUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutCollectionsInput
    WorkoutPlans?: WorkoutPlanUpdateManyWithoutCollectionsInput
  }

  export type CollectionUncheckedUpdateWithoutWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DiscoverWorkoutUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscoverWorkoutCategory?: DiscoverWorkoutCategoryUpdateOneRequiredWithoutDiscoverWorkoutsInput
  }

  export type DiscoverWorkoutUncheckedUpdateWithoutWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    discoverWorkoutCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutUncheckedUpdateManyWithoutDiscoverWorkoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    discoverWorkoutCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutUpdateWithoutWorkoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutsInput
    WorkoutSections?: WorkoutSectionUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutInput
    WorkoutGoals?: WorkoutGoalUpdateManyWithoutWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutInput
    Collections?: CollectionUpdateManyWithoutWorkoutsInput
    DiscoverWorkouts?: DiscoverWorkoutUpdateManyWithoutWorkoutInput
  }

  export type WorkoutUncheckedUpdateWithoutWorkoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metaData?: InputJsonValue | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    lengthMinutes?: NullableIntFieldUpdateOperationsInput | number | null
    difficultyLevel?: EnumDifficultyLevelFieldUpdateOperationsInput | DifficultyLevel
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    WorkoutSections?: WorkoutSectionUncheckedUpdateManyWithoutWorkoutInput
    LoggedWorkouts?: LoggedWorkoutUncheckedUpdateManyWithoutWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutInput
    DiscoverWorkouts?: DiscoverWorkoutUncheckedUpdateManyWithoutWorkoutInput
  }

  export type WorkoutPlanUpdateWithoutWorkoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    User?: UserUpdateOneRequiredWithoutWorkoutPlansInput
    Enrolments?: WorkoutPlanEnrolmentUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUpdateManyWithoutWorkoutPlanInput
    Collections?: CollectionUpdateManyWithoutWorkoutPlansInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutPlanUncheckedUpdateWithoutWorkoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    archived?: BoolFieldUpdateOperationsInput | boolean
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lengthWeeks?: IntFieldUpdateOperationsInput | number
    daysPerWeek?: IntFieldUpdateOperationsInput | number
    coverImageUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoUri?: NullableStringFieldUpdateOperationsInput | string | null
    introVideoThumbUri?: NullableStringFieldUpdateOperationsInput | string | null
    introAudioUri?: NullableStringFieldUpdateOperationsInput | string | null
    contentAccessScope?: EnumContentAccessScopeFieldUpdateOperationsInput | ContentAccessScope
    Enrolments?: WorkoutPlanEnrolmentUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanReviews?: WorkoutPlanReviewUncheckedUpdateManyWithoutWorkoutPlanInput
    WorkoutPlanDays?: WorkoutPlanDayUncheckedUpdateManyWithoutWorkoutPlanInput
    DiscoverWorkoutPlans?: DiscoverWorkoutPlanUncheckedUpdateManyWithoutWorkoutPlanInput
  }

  export type WorkoutSetCreateManyWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    rounds?: number
    duration?: number | null
  }

  export type WorkoutSetUpdateWithoutWorkoutSectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutWorkoutSetsInput
    Generators?: WorkoutSetGeneratorUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUpdateManyWithoutWorkoutSetInput
  }

  export type WorkoutSetUncheckedUpdateWithoutWorkoutSectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    rounds?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    Generators?: WorkoutSetGeneratorUncheckedUpdateManyWithoutWorkoutSetInput
    IntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateOneWithoutWorkoutSetInput
    WorkoutMoves?: WorkoutMoveUncheckedUpdateManyWithoutWorkoutSetInput
  }

  export type WorkoutSetGeneratorCreateManyWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    type: WorkoutSetGeneratorType
    workoutMoveIndex: number
    target: WorkoutSetGeneratorTarget
    roundFrequency: number
    adjustAmount: number
  }

  export type WorkoutMoveCreateManyWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distanceUnit?: DistanceUnit
    timeUnit?: TimeUnit
    loadAmount?: number
    loadUnit?: LoadUnit
    moveId: string
    equipmentId?: string | null
  }

  export type WorkoutSetGeneratorUpdateWithoutWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutSetGeneratorsInput
  }

  export type WorkoutSetGeneratorUncheckedUpdateWithoutWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
  }

  export type WorkoutSetGeneratorUncheckedUpdateManyWithoutGeneratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkoutSetGeneratorTypeFieldUpdateOperationsInput | WorkoutSetGeneratorType
    workoutMoveIndex?: IntFieldUpdateOperationsInput | number
    target?: EnumWorkoutSetGeneratorTargetFieldUpdateOperationsInput | WorkoutSetGeneratorTarget
    roundFrequency?: IntFieldUpdateOperationsInput | number
    adjustAmount?: FloatFieldUpdateOperationsInput | number
  }

  export type WorkoutMoveUpdateWithoutWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    User?: UserUpdateOneRequiredWithoutWorkoutMovesInput
    Move?: MoveUpdateOneRequiredWithoutWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutWorkoutMovesInput
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutMoveUncheckedUpdateWithoutWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    loadAmount?: FloatFieldUpdateOperationsInput | number
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    WorkoutSetIntervalBuyIn?: WorkoutSetIntervalBuyInUncheckedUpdateManyWithoutWorkoutMoveInput
  }

  export type WorkoutSetIntervalBuyInCreateManyWorkoutMoveInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    interval: number
    workoutSetId: string
  }

  export type WorkoutSetIntervalBuyInUpdateWithoutWorkoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutSetIntervalBuyInInput
    WorkoutSet?: WorkoutSetUpdateOneRequiredWithoutIntervalBuyInInput
  }

  export type WorkoutSetIntervalBuyInUncheckedUpdateWithoutWorkoutMoveInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    interval?: IntFieldUpdateOperationsInput | number
    workoutSetId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanEnrolmentCreateManyWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    startDate?: Date | string
    userId: string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentCreateManycompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanReviewCreateManyWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    score: number
    comment?: string | null
  }

  export type WorkoutPlanDayCreateManyWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    dayNumber: number
  }

  export type DiscoverWorkoutPlanCreateManyWorkoutPlanInput = {
    id?: string
    createdAt?: Date | string
    discoverWorkoutPlanCategoryId: string
  }

  export type WorkoutPlanEnrolmentUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    User?: UserUpdateOneRequiredWithoutWorkoutPlanEnrolmentsInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanEnrolmentInput
  }

  export type WorkoutPlanEnrolmentUncheckedUpdateManyWithoutEnrolmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    completedPlanDayWorkoutIds?: WorkoutPlanEnrolmentUpdatecompletedPlanDayWorkoutIdsInput | Enumerable<string>
  }

  export type WorkoutPlanReviewUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutWorkoutPlanReviewsInput
  }

  export type WorkoutPlanReviewUncheckedUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkoutTagUpdateWithoutWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutWorkoutTagInput
    Workouts?: WorkoutUpdateManyWithoutWorkoutTagsInput
  }

  export type WorkoutTagUncheckedUpdateWithoutWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    tag?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanDayUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutPlanDaysInput
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUpdateManyWithoutWorkoutPlanDayInput
  }

  export type WorkoutPlanDayUncheckedUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dayNumber?: IntFieldUpdateOperationsInput | number
    WorkoutPlanDayWorkouts?: WorkoutPlanDayWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayInput
  }

  export type CollectionUpdateWithoutWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUpdateOneRequiredWithoutCollectionsInput
    Workouts?: WorkoutUpdateManyWithoutCollectionsInput
  }

  export type CollectionUncheckedUpdateWithoutWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DiscoverWorkoutPlanUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscoverWorkoutPlanCategory?: DiscoverWorkoutPlanCategoryUpdateOneRequiredWithoutDiscoverWorkoutPlansInput
  }

  export type DiscoverWorkoutPlanUncheckedUpdateWithoutWorkoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    discoverWorkoutPlanCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanUncheckedUpdateManyWithoutDiscoverWorkoutPlansInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    discoverWorkoutPlanCategoryId?: StringFieldUpdateOperationsInput | string
  }

  export type WorkoutPlanDayWorkoutCreateManyWorkoutPlanDayInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    sortPosition: number
    workoutId: string
  }

  export type WorkoutPlanDayWorkoutUpdateWithoutWorkoutPlanDayInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutWorkoutPlanDayWorkoutsInput
    Workout?: WorkoutUpdateOneRequiredWithoutWorkoutPlanDayWorkoutInput
    ScheduledWorkouts?: ScheduledWorkoutUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type WorkoutPlanDayWorkoutUncheckedUpdateWithoutWorkoutPlanDayInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    workoutId?: StringFieldUpdateOperationsInput | string
    ScheduledWorkouts?: ScheduledWorkoutUncheckedUpdateManyWithoutWorkoutPlanDayWorkoutInput
  }

  export type ScheduledWorkoutCreateManyWorkoutPlanDayWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanEnrolmentId?: string | null
  }

  export type ScheduledWorkoutUpdateWithoutWorkoutPlanDayWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    Workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanEnrolment?: WorkoutPlanEnrolmentUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutWorkoutPlanDayWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanEnrolmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduledWorkoutCreateManyWorkoutPlanEnrolmentInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    scheduledAt?: Date | string
    gymProfileId?: string | null
    loggedWorkoutId?: string | null
    workoutId?: string | null
    workoutPlanDayWorkoutId?: string | null
  }

  export type ScheduledWorkoutUpdateWithoutWorkoutPlanEnrolmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutScheduledWorkoutsInput
    GymProfile?: GymProfileUpdateOneWithoutScheduledWorkoutsInput
    LoggedWorkout?: LoggedWorkoutUpdateOneWithoutScheduledWorkoutInput
    Workout?: WorkoutUpdateOneWithoutScheduledWorkoutsInput
    WorkoutPlanDayWorkout?: WorkoutPlanDayWorkoutUpdateOneWithoutScheduledWorkoutsInput
  }

  export type ScheduledWorkoutUncheckedUpdateWithoutWorkoutPlanEnrolmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gymProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    loggedWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutId?: NullableStringFieldUpdateOperationsInput | string | null
    workoutPlanDayWorkoutId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoggedWorkoutSectionCreateManyLoggedWorkoutInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name?: string | null
    note?: string | null
    timecap?: number | null
    sortPosition: number
    timeTakenMs?: number | null
    lapTimesMs?: InputJsonValue
    repScore?: number | null
    workoutSectionTypeId: string
  }

  export type LoggedWorkoutSectionUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
    LoggedWorkoutSets?: LoggedWorkoutSetUpdateManyWithoutLoggedWorkoutSectionInput
    WorkoutSectionType?: WorkoutSectionTypeUpdateOneRequiredWithoutLoggedWorkoutSectionsInput
  }

  export type LoggedWorkoutSectionUncheckedUpdateWithoutLoggedWorkoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    timecap?: NullableIntFieldUpdateOperationsInput | number | null
    sortPosition?: IntFieldUpdateOperationsInput | number
    timeTakenMs?: NullableIntFieldUpdateOperationsInput | number | null
    lapTimesMs?: InputJsonValue
    repScore?: NullableIntFieldUpdateOperationsInput | number | null
    workoutSectionTypeId?: StringFieldUpdateOperationsInput | string
    LoggedWorkoutSets?: LoggedWorkoutSetUncheckedUpdateManyWithoutLoggedWorkoutSectionInput
  }

  export type LoggedWorkoutSetCreateManyLoggedWorkoutSectionInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    roundNumber: number
    sortPosition: number
    duration?: number | null
    roundsCompleted?: number
  }

  export type LoggedWorkoutSetUpdateWithoutLoggedWorkoutSectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutSetsInput
    LoggedWorkoutMoves?: LoggedWorkoutMoveUpdateManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutSetUncheckedUpdateWithoutLoggedWorkoutSectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    roundNumber?: IntFieldUpdateOperationsInput | number
    sortPosition?: IntFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    roundsCompleted?: IntFieldUpdateOperationsInput | number
    LoggedWorkoutMoves?: LoggedWorkoutMoveUncheckedUpdateManyWithoutLoggedWorkoutSetInput
  }

  export type LoggedWorkoutMoveCreateManyLoggedWorkoutSetInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    sortPosition: number
    repType: WorkoutMoveRepType
    reps: number
    distance?: number | null
    distanceUnit?: DistanceUnit
    loadAmount?: number | null
    loadUnit?: LoadUnit
    timeUnit?: TimeUnit
    moveId: string
    equipmentId?: string | null
  }

  export type LoggedWorkoutMoveUpdateWithoutLoggedWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    User?: UserUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    Move?: MoveUpdateOneRequiredWithoutLoggedWorkoutMovesInput
    Equipment?: EquipmentUpdateOneWithoutLoggedWorkoutMovesInput
  }

  export type LoggedWorkoutMoveUncheckedUpdateWithoutLoggedWorkoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    sortPosition?: IntFieldUpdateOperationsInput | number
    repType?: EnumWorkoutMoveRepTypeFieldUpdateOperationsInput | WorkoutMoveRepType
    reps?: FloatFieldUpdateOperationsInput | number
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | DistanceUnit
    loadAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    loadUnit?: EnumLoadUnitFieldUpdateOperationsInput | LoadUnit
    timeUnit?: EnumTimeUnitFieldUpdateOperationsInput | TimeUnit
    moveId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgressJournalEntryCreateManyProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    note?: string | null
    voiceNoteUri?: string | null
    bodyweight?: number | null
    bodyweightUnit?: BodyweightUnit
    moodScore?: number | null
    energyScore?: number | null
    stressScore?: number | null
    motivationScore?: number | null
    progressPhotoUris?: ProgressJournalEntryCreateManyprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalGoalCreateManyProgressJournalInput = {
    id?: string
    createdAt?: Date | string
    userId: string
    name: string
    description?: string | null
    deadline?: Date | string | null
    completedDate?: Date | string | null
  }

  export type ProgressJournalEntryUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
    User?: UserUpdateOneRequiredWithoutProgressJournalEntrysInput
  }

  export type ProgressJournalEntryUncheckedUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalEntryUncheckedUpdateManyWithoutProgressJournalEntriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    voiceNoteUri?: NullableStringFieldUpdateOperationsInput | string | null
    bodyweight?: NullableFloatFieldUpdateOperationsInput | number | null
    bodyweightUnit?: EnumBodyweightUnitFieldUpdateOperationsInput | BodyweightUnit
    moodScore?: NullableFloatFieldUpdateOperationsInput | number | null
    energyScore?: NullableFloatFieldUpdateOperationsInput | number | null
    stressScore?: NullableFloatFieldUpdateOperationsInput | number | null
    motivationScore?: NullableFloatFieldUpdateOperationsInput | number | null
    progressPhotoUris?: ProgressJournalEntryUpdateprogressPhotoUrisInput | Enumerable<string>
  }

  export type ProgressJournalGoalUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutProgressJournalGoalsInput
    ProgressJournalGoalTags?: ProgressJournalGoalTagUpdateManyWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedUpdateWithoutProgressJournalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgressJournalGoalTagUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutProgressJournalGoalTagsInput
  }

  export type ProgressJournalGoalTagUncheckedUpdateWithoutProgressJournalGoalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProgressJournalGoalUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutProgressJournalGoalsInput
    ProgressJournal?: ProgressJournalUpdateOneRequiredWithoutProgressJournalGoalsInput
  }

  export type ProgressJournalGoalUncheckedUpdateWithoutProgressJournalGoalTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progressJournalId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutCreateManyDiscoverWorkoutCategoryInput = {
    id?: string
    createdAt?: Date | string
    workoutId: string
  }

  export type DiscoverWorkoutUpdateWithoutDiscoverWorkoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Workout?: WorkoutUpdateOneRequiredWithoutDiscoverWorkoutsInput
  }

  export type DiscoverWorkoutUncheckedUpdateWithoutDiscoverWorkoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscoverWorkoutPlanCreateManyDiscoverWorkoutPlanCategoryInput = {
    id?: string
    createdAt?: Date | string
    workoutPlanId: string
  }

  export type DiscoverWorkoutPlanUpdateWithoutDiscoverWorkoutPlanCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    WorkoutPlan?: WorkoutPlanUpdateOneRequiredWithoutDiscoverWorkoutPlansInput
  }

  export type DiscoverWorkoutPlanUncheckedUpdateWithoutDiscoverWorkoutPlanCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workoutPlanId?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.DMMF.Document;
}