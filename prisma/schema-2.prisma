model WorkoutType {
    id            String          @default(uuid()) @id
    name          String
    description   String?
    //   scoreType     WorkoutScoreType
    Workout       Workout[]
    LoggedWorkout LoggedWorkout[]
}

model Workout {
    id                String      @default(uuid()) @id
    createdAt         DateTime    @default(now())
    //   createdBy         User?              @relation(fields: [createdById], references: [id])
    createdById       String?
    name              String
    summary           String?
    description       String?
    demoVideoUrl      String?
    demoVideoThumbUrl String?
    youtubeVideoUrl   String?
    spotifyAudio      String?
    imageUrl          String?
    timecap           Int?
    //   difficultyLevel   DifficultyLevel    @default(ONE)
    //   scope             AccessScopeType    @default(PRIVATE)
    workoutType       WorkoutType @relation(fields: [workoutTypeId], references: [id])
    workoutTypeId     String

    //   scheduledWorkouts ScheduledWorkout[]
    workoutLogs   LoggedWorkout[]
    //   tags              WorkoutTag[]
    //   likes             LikedWorkout[]
    HiitCircuit   HiitCircuit?    @relation(fields: [hiitCircuitId], references: [id])
    Amrap         AMRAP?          @relation(fields: [aMRAPId], references: [id])
    hiitCircuitId String?
    aMRAPId       String?
}

model WorkoutStructure {
    id              String           @default(uuid()) @id
    workoutSections WorkoutSection[]
    dataType        String // Will be an enum (HiitCircuit / AMRAP etc)
    dataId          String
    HiitCircuit     HiitCircuit[]
}

model HiitCircuit {
    id                 String           @default(uuid()) @id
    WorkoutStructure   WorkoutStructure @relation(fields: [workoutStructureId], references: [id])
    Workout            Workout[]
    workoutStructureId String
}

model AMRAP {
    id      String    @default(uuid()) @id
    Workout Workout[]
}

model WorkoutSection {
    id                 String            @default(uuid()) @id
    WorkoutStructure   WorkoutStructure? @relation(fields: [workoutStructureId], references: [id])
    workoutStructureId String?
}

model WorkoutMove {
    id String @default(uuid()) @id
}

model LoggedWorkout {
    id            String       @default(uuid()) @id
    Workout       Workout?     @relation(fields: [workoutId], references: [id])
    workoutId     String?
    WorkoutType   WorkoutType? @relation(fields: [workoutTypeId], references: [id])
    workoutTypeId String?
}

model LoggedWorkoutSection {
    id String @default(uuid()) @id
}

model LoggedWorkoutMove {
    id String @default(uuid()) @id
}
